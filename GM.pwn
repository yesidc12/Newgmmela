

/*
GM OFICIAL DE WESTZONE


Tutorial en ingles como usar y sincroizar el discord con tu sv https://github.com/maddinat0r/samp-discord-connector

Tutorial en ingles como activar chat de voz https://github.com/CyberMor/sampvoice


GM PROGRAMADA POR ROBERTH SOTO Y ABDUL OMAR

/dameadmin para ser admin

LA GM DA PROBLEMAS EN WINDOWS, Si vas a programarla o textearla usa un host linux para probar

RECORDAR QUE ALGUNAS VERSIONES DE PLUGIN NO SON COMPATIBLES CON TODO LOS HOST, BUSCAR LA ADECUADA PARA TU HOST, O PEDIR AYUDA A ADMINS DEL HOST

*/





#pragma option -d3
#pragma compat 1
#pragma dynamic 12000
#define YSI_NO_HEAP_MALLOC
#include <crashdetect>
#include <a_samp>
#undef		MAX_PLAYERS
#define		MAX_PLAYERS 		(314)
#define 	FOREACH_NO_LOCALS
#define 	FOREACH_NO_ACTORS
#define 	FOREACH_NO_LOCALS

#include <YSI_Data/y_foreach>
#include <YSI_Coding\y_timers>
#include <YSI_Coding\y_va>
#include <izcmd>
#include <streamer>
#include <sscanf2>
#include <a_mysql>
#include <a_zones>
#include <a_json>
#include <a_http>
#include <youtube>
#include <Pawn.RakNet>
#pragma warning disable 239
#include <rakcheat>
#pragma warning enable 239
#include <mobile>
#define TDN_MODE_DEFAULT
#include <notificaciones>
#include <command-guess>

//#define UsarDiscordConnector qyuitar // para usar sistema de chat de voz (si activa recordar activar plugin)
#define UsarFakeOnline //Sistema Bots comando /fp cantidad de bots (comentar para desactivar) (si desactiva recordar desactivar plugin)
//#define ChatDeVoz // quitar // para usar sistema de chat (si activa recordar activar plugin)
//#define UsarForo  // quitar // para habilitar registro al foro

#if defined UsarFakeOnline
#include <FakeOnline>
new FAKEPLAYERS = 0;
#endif

#if defined ChatDeVoz
#include <sampvoicee>
new SV_GSTREAM:gstream;
new SV_LSTREAM:lstream[MAX_PLAYERS] = { SV_NULL, ... };
#endif
new MySQL: Conecction;
#if defined UsarDiscordConnector
#include <discord-connector>
#include <discord-cmd>
#endif
#if defined UsarDiscordConnector
new DCC_Guild:ServidorDiscord, DCC_Role:RolStaffDiscord, DCC_Channel:g_CanalVerificacion;
#endif
new TimerReinicio,TiempoReinicio;
#if !defined isnull
#define isnull(%1) ((!(%1[0])) || (((%1[0]) == '\1') && (!(%1[1]))))
#endif
#define User:%1(%2) PlayerInfo[%2][%1]
#include <mSelection>
#define WEBHOOK_ACTIVIDAD_STAFF 1
#define WEBHOOK_ACTIVIDAD_SAPD 2
#define WEBHOOK_REGISTRO_MAPEOS 3

//CONFIG SERVER

#define     FUNDADOR1   "Matito"
#define     FUNDADOR2   "Abdul"
#define     FUNDADOR3   "Name"

#define 	CR 					"{DBED15}" //color representativo en el chat
#define     COLOR_SERVER        0xDBED15FF // color representativo en el chat
#define     COLOR_BARRA_REP     0x0086CC7A //color barra abajo de XP

#define 	MAX_BANDA_NAME		20
#define		AUTOS    			235
#define		MAX_PORTONES		20
#define		URL            		"sonidos.imgtemporal.club"
#define     NameServer          "WestZone"
#define     Moneda1             "WZ"
#define     Moneda2             "wz"
#define     Moneda3             "Coins"
#define     Moneda4             "coins"
#define     NameHost 			"[ES] "NameServer" Roleplay | [Stats activados]"
#define     WebName 			"rol.westzone.net"
#define     RconPass 			"@$8yGxBu!xsG%Kj2"

#define     IPBD                "127.0.0.1"
#define     UserBD              "root"
#define     PassBD              ""
#define     NameBD              "westzone"


new bool:NecesitaCodigo[MAX_PLAYERS], PlayerAvisos[MAX_PLAYERS];
new TimerLogeo[MAX_PLAYERS];
//Define de precios
#define		PRECIO_VEH_COINS_E		100
#define		PRECIO_VEH_COINS		40
#define		PRECIO_SKINS_COINS		10
#define		PRECIO_PRENDAS_COINS	20
#define		PRECIO_VEH_WZ			100
#define		PRECIO_SKINS_WZ			50
#define		PRECIO_PRENDAS_WZ		50
#define		PRECIO_VIP1				35
#define		PRECIO_VIP2				60
#define		PRECIO_VIP3				35
#define		SKIN_INICIO_HOMBRE		250
#define		SKIN_INICIO_MUJER		169
#define 	MAX_SLOTS_BANDA			80
#define		PRECIO_FIANZA			25
#define 	MAX_TRABAJOS_VIP 2
#define 	MAX_TRABAJOS_VIP3 3
//Fin Config

#define		Mensaje				SendClientMessage
#define		MensajeAll			SendClientMessageToAll
#define		EstaEn    			IsPlayerInRangeOfPoint
#define 	GetVehicleName(%0) 	NombreAuto[GetVehicleModel(%0)-400]

#undef      MAX_ACTORS
#define		MAX_ACTORS      	(200)

#define     SPEED_CONTROLS      000.1
#define 	INVALID_REPORT_ID 	-1

#define		DEBUG_GM            0

#define		MEDICO				1
#define		TAXISTA				2
#define		GUARDAESPALDAS  	3
#define		BUSCARCOCHE   		3
#define     HORA    			3
#define		GPS     			4
#define		CAMIONERO			4
#define		INVENTARIO			5
#define		ARMERO				6
#define		SEXO				6
#define		GPS2				7
#define		MECANICO   			7
#define		BASURERO			8
#define		PRODUCTOS			8
#define		TRANSPORTISTA		9
#define 	TRABAJOS			9
#define		MAX_IPS_USER		10
#define		INFOMEDICO			10
#define		MINERO         		10
#define		PESCADOR   			11
#define		INFOARMERO			11
#define		INFOARMERO2			12
#define		CAMIOND				13
#define		CRIMINAL         	14
#define		PROSTITUTA         	15
#define		BANCO				16
#define		BANCO1				17
#define		BANCO2				18
#define		BANCO3				19
#define		BANCO4    			20
#define		VENDERAUTO			21
#define		BUSCARCOCHE2		22
#define		GPS4				23
#define		BUSCARCOCHE3		24
#define		BUSCARCOCHE4		25
#define		VENDERCASA			26
#define		VENDERCASA1			27
#define		ESTANTE				28
#define		VENDERAUTO2			29
#define		GPS5				30
#define		REGLAS				31
#define		REGLAS2				32
#define		REGLAS3				33
#define		REGLAS4				34
#define		GPS6				35
#define		GPS7				36
#define		GRUA    			39
#define		GRUA2				40
#define		AYUDAVEHICULOS		41
#define		INFOTRANSPORTISTA	42
#define		GPS8				43
#define		GRUA5				44
#define		GRUA3				45
#define		INFOPOLICIA			46
#define		INFOCOSE			47
#define		mapa				48
#define		CREPUESTOS			49
#define		DIALOG_INFO			50
#define		INFOLADRON			51
#define		DHOSPITAL			66
#define		BOTIQUIN			67
#define     VENDERWZ            68
#define		DAYUDA				69
#define     CONFIG              79
#define		DRECARGA			81
#define		GRUA6				86
#define 	COMPRARCAMELLO      91
#define 	VENDERCAMELLO       92
#define		HERRAMIENTAS  		93
#define		INFOBASU			94
#define 	COMPRARMEDICAMENTOS 95
#define		JUGUETES			96
#define		PRODUCTOS2			97
#define		MAX_BARRICADES      100
#define 	COMPRARCAMELLO2     193
#define 	COMPRARCRACK        194
#define 	VENDERCRACK         197
#define 	VENDERMEDICAMENTOS  196
#define		MAX_MARIHUANA       200
#define		OBJETOS1 		    233
#define     DIALOG_SALON		252
#define 	SERVICIOGRUA1 		253
#define 	SERVICIOGRUA2 		254
#define 	SERVICIOGRUA3 		255
#define     DIALOG_PIZZA		256
#define     COMPRARLICENCIA     257
#define     COMPRARRADIO        261
#define		LOCALIZARAMIGO		262
#define     LOCALIZARCASA		263
#define 	AlquilarSalon1 	 	270
#define 	AlquilarSalon2  	271
#define 	AlquilarSalon3  	272
#define 	AlquilarSalon4  	273
#define 	AlquilarSalon5  	274
#define 	AlquilarSalon6  	275
#define 	AlquilarSalon7  	276
#define 	REPORTSMENU  		277
#define     CONTROLES           279
#define     TRABAV              280
#define		ENTREGARSE			301
#define		LORO	    	    353
#define		LORO2	    	    354
#define		ELEVADOR1	        355
#define		ELEVADOR2	        356
#define		ELEVADOR3	        357
#define		ELEVADOR4	        358
#define		ELEVADOR5	        359
#define		ELEVADOR6	        360
#define     MISION              361
#define     MISION2             362
#define		ASCENSOR_E			368
#define     LLAMAGRUA           369
#define     LLAMAGRUA2          370
#define     LLAMAGRUA3          371
#define		LOGIN				411
#define		REGISTRO			422
#define		DEMAIL              433
#define 	COMPRARMARIHUANA    454
#define 	VENDERMARIHUANA     455
#define		ELEVADOR7	        456
#define		ELEVADOR8			457
#define		FRECUENCIAS	        458
#define		ELEVADOR9			459
#define		ELEVADOR10			460
#define     TRABAA              461
#define     DOMICILIO           462
#define     ELEVADOR30			466
#define     ELEVADOR31			467
#define     ELEVADOR32			468
#define     CVEHICULO           469
#define     DGUIA               470
#define     DCLUB 		        471
#define     UNIFORMEHOMBRE      473
#define     UNIFORMEMUJER       474
#define		GPS3    			475
#define 	DSEXOO              476
#define     ACTIVIDAD 	        477
#define     ADMINISTRACION      478
#define     C_EMPLEADOS        	479
#define     C_EMPLEADOS2        480
#define     C_EMPLEADOS3        481
#define     REG_AFABRICA        482
#define     C_ARMASF            483
#define     COMPRACHALE         484
#define     FMEDICO             485
#define     F_SACARMA           486
#define		MMEDICO             487
#define     P_FIANZA            488
#define 	TRABAJO_MEDICO   	490
#define 	TRABAJO_MEDICO2 	491
#define  	INVITARCRI          492
#define		COMPRAR_PRENDA  	493
#define 	TUNING_MENU       	494
#define 	TUNING_MENUPAIS     495
#define 	TUNING_MENUOBJ      496
#define 	TUNING_MENUOBJ2     497
#define 	TUNING_MENUTEXTO    498
#define  	TUNING_BORRAR    	499
#define 	TUNING_BORRARALL    500
#define     TUNING_MENUCOLORHEX 501
#define     TUNING_TYPE         503
#define     TUNING_COLOR        504
#define     COMPRAPRENDAS       505
#define     DIALOG_AYUDA        506
#define     VENDERCR            507
#define     PRENDA_COLOR        508
#define     TUNINGSHOP    		510
#define     TIENDA_DP           511
#define     TIENDA_CVIP         514
#define     BANDATIPO           515
#define     CREARBANDA          516
#define     INVITAR             517
#define     TALLER              518
#define     TALLER2             519
#define     GPS9                523
#define     PRODUCTOS_FARMACIA  988
#define     CONFIG_CUENTA       524
#define		CONFIG_CUENTA2      525
#define     CONFIG_NOMBRE       526
#define     CONTRASENA          527
#define     CONFIRMAS_PASS      528
#define     LASERCONFIG         529
#define		D_CONFIG1    		530
#define		D_CONFIGS   		531
#define		D_CONFIGC    		532
#define		D_CONFIGC2    		533
#define		D_CONFIGN    		534
#define		D_CONFIGNU    		535
#define		D_CONFIGNU2    		536
#define 	CONFIG_BANDA 		537
#define 	CONFIG_BANDA2 		538
#define 	CHANGE_CREW_NAME 	539
#define 	VIEW_RANK_NAME 		540
#define 	CHANGE_PROP_RANK 	541
#define 	CHANGE_RANK_NAME 	542
#define 	CREW_RANK_INV 		543
#define 	CREW_RANK_EXP 		544
#define 	CREW_RANK_EDI 		545
#define 	DIALOG_ACENTO 		546
#define 	DIALOG_CAMINAR 		547
#define     LASERCONFIG2   		548
#define     DIALOG_ESTADO1 		549
#define		COLOR_ESTADO 		550
#define		DIALOG_ESTADO2 		551
#define		DIALOG_ESTADO3 		552
#define 	DIALOG_VEH_WZ 		553
#define 	DIALOG_VEH_C 		554
#define 	EnviarTwAd			555
#define 	EnviarTweet			556
#define		EnviarTweet2		557
#define		Twiiter				558
#define 	DIALOG_PRENDAS		559
#define		MEJORA_MOTOR		560
#define 	PRENDAS_POS			561
#define		DIALOG_REFERIDO		562
#define 	DIALOG_REFERIDO2	563
#define 	DIALOG_SREFERIDOS	564
#define     DIALOG_CREARARMA    565
#define     D_BAULSAPD          566
#define     L_IMPORTANTES       567
#define     C_GPS               568
#define		ACENTO_PERSONALIZADO 569
#define		D_COLOR				570
#define		D_COLOR1			571
#define		D_VEHICLES			572
#define		D_IDPLAYER			573
#define		D_PRICEVEH			574
#define		D_ACEPTARCOCHE		575
#define     COMPRAR_VEHICULO    576
#define		DIALOG_CONFIRMAR	577
#define		DIALOG_CONFIRMARC	578
#define 	SELECT_JUGADOR		579
#define 	SELECT_PRECIO		580
#define 	SELECT_VEH			581
#define     MENU_ADMIN          582
#define     MENU_ADMIN2         583
#define     MENU_ADMIN3         584
#define     CANTIDAD_ITEM       585
#define		DIALOG_AQUIEN		586
#define		SELECT_MONEDA		587
#define		DIALOG_AQUIENC		588
#define		SELECT_CASA			589
#define		SELECT_PRECIOC		590
#define		SELECT_MONEDAC		591
#define		SELECT_JUGADORC		592
#define		CONFIRMAR_CASA		593
#define		CONFIRMARC_CASA		594
#define		DIALOG_BUSCAR_ADMIN	595
#define		DIALOG_ACCION_USER 	596
#define		municipalidad		597
#define 	NMusica				598
#define		COMPRARHONGOS		599
#define		COMPRARCOCAINA		600
#define		DIALOG_BOOMBOX		601
#define		DIALOG_CONSUMIR		602
#define		DIALOG_TOP			603
#define		DIALOG_BAUL			604
#define		COMPRAR_ROPA		605
#define		Aumento_Slots		606
#define		QUE_LOCALIZAR		607
#define		PREGUNTAR_CARCEL_VIP3	608
#define	 	CONFIG_EVENTO 609
#define	 	DAR_ARMA_EVENTO 610
#define	 	DAR_ESTILO_EVENTO 611
#define	 	DAR_AUTO_EVENTO 612
#define	 	SEGUNDOS_CONTEO 613
#define	 	PONER_MUSICA_EVENTO 614
#define	 	MENU_INTERIORES 615


#define	DIALOG_VOBJECT_TEXT_MENU 616
#define	DIALOG_VOBJECT_TEXT_TEXT  617
#define	DIALOG_VOBJECT_TEXT_FONT    618
#define	DIALOG_VOBJECT_TEXT_FONT_SIZE 619
#define	DIALOG_VOBJECT_TEXT_FONT_COLOR 620
#define	DIALOG_VOBJECT_COUNTRY 621
#define 	DIALOG_VOBJECT_CATEGORY 622
#define 	DIALOG_YOUTUBE 623
#define	DIALOG_PARLANTE 624
#define BUSQUEDA_YOUTUBE 625
#define DIALOG_SELECT_QUE 626
#define REPRO_ENLACE 627
#define     AutosSAPDLSPD       628
#define	    VIDA_AUTOS_EVENTO 629

#define DIALOGO_DUELO1      	630
#define DIALOGO_DUELO2          631
#define DIALOGO_DUELO3          632
#define DIALOGO_DUELO4       	633



#define     INVALID_TOY_ID      19382
#define 	WALK_DEFAULT    0
#define	 	WALK_NORMAL     1
#define 	WALK_PED        2
#define 	WALK_GANGSTA    3
#define 	WALK_GANGSTA2   4
#define 	WALK_OLD        5
#define 	WALK_FAT_OLD    6
#define 	WALK_FAT        7
#define 	WALK_LADY      	8
#define 	WALK_LADY2      9
#define 	WALK_WHORE      10
#define 	WALK_WHORE2     11
#define 	WALK_DRUNK     	12
#define 	WALK_BLIND     	13

#define 	MAX_INTEGRANTES 95
#define 	MAX_VEHICLE_OBJECTS_INDEXS	5

#define     MAX_PCASAS          4
#define     MAX_PAUTOS          6
#define		MAX_ESTACIONA       7
#define 	MAX_FABRICAS        18
#define     MAX_FDINERO         75000000
#define 	MAX_ENCARGOS      	5
#define 	MAX_DOORS      		100
#define 	MAX_ICONS           150
#define		MAX_REPORTS 		50
#define		MAX_PROPIEDADES		3500
#define		MAX_BANDAS   		5500
#define		MAX_TERRITORIOS     40
#define 	MAX_TOBJETOS     	20

#define		AREA_CHEAT			6969

#define 	DH_TIPO_HOSPITAL    (1)
#define 	DH_TIPO_COMISARIA   (2)
#define 	DH_TIPO_PIZZERIA    (3)
#define 	DH_TIPO_TIENDA      (4)
#define 	DH_TIPO_BANCO       (5)
#define 	DH_TIPO_24/7        (6)
#define 	DH_TIPO_NORMAL      (7)
#define 	DH_TIPO_MINA        (8)
#define 	DH_TIPO_ESTADIO     (9)
#define     DH_TIPO_LOVE        (10)
#define     DH_TIPO_SPRAY	    (11)



#define     Rojo                "{FF0000}"
#define 	CB 					"{FFFFFF}"
#define     COLOR_CHEAT         0xFF227A69
#define 	COLOR_WHITE         0xFFFFFF00
#define 	ColorChatNormal1    0xC8C8C8FF
#define 	ColorChatNormal2    0xAAAAAAFF
#define 	ColorChatNormal3    0x8C8C8CFF
#define 	ColorChatNormal4    0x6E6E6EFF
#define 	COLORCARGO0         0xFFFFFF00
#define 	COLORCARGO1         0xFFFDBAFF
#define 	COLORCARGO2         0xFFC600FF
#define 	COLORCARGO3         0xFFA200FF
#define 	COLORCARGO4         0xFF8400FF
#define 	COLORCARGO5         0xFF5A00FF
#define 	COLORCARGO6         0xFF1E00FF
#define 	COLORCARGO7         0x00FF00FF
#define 	COLORABATIDO        0x00FF3BFF
#define 	COLOR_DORADO		0xFFCC00FF
#define		COLOR_EMISORA       0xFFD46EFF
#define     COLOR_COMBATE       0x8F6B3CC2
#define 	COLOR_AMARILLO2     0xF4FA58FF
#define 	COLOR_ORANGE 		0xFF7F00FF
#define 	COLOR_BLANCO        0xFFFFFFAA
#define 	COLOR_YELLOW        0xDBED15FF
#define 	COLOR_ROJO 			0xEB0000FF
#define 	COLOR_GRAD2         0xBFC0C2FF
#define 	COLOR_GRAD3 		0xCBCCCEFF
#define 	COLOR_GRAD4 		0xD8D8D8FF
#define 	COLOR_GRAD5 		0xE3E3E3FF
#define 	TEAM_BLUE_COLOR 	0x3399FF00
#define 	COLOR_MILITAR 		0xA9887300
#define 	COLOR_GRAD6 		0xF0F0F0FF
#define 	COLOR_GREEN2        0x9EC73DFF
#define 	COLOR_GREEN			0x9EC73D00
#define 	COLOR_VERDE         0x9EC73DAA
#define 	COLOR_GREY          0xAFAFAFAA
#define 	COLOR_BLUE          0x33CCFFAA
#define 	COLOR_ACCIONES    	0x33CC99FF
#define 	COLOR_ADMIN         0xAA323200
#define 	COLOR_MODERADOR     0x24D80000
#define 	COLOR_MUTE	        0xAA3333AA
#define		COLOR_AMARILLO      0xFFFF00FF
#define		COLOR_AZUL          0x00FAFFFF
#define 	TCOLOR_BEIGE 		0xA5937000
#define 	COLOR_SACBLUE 		0x0086B300
#define 	COLOR_AMARILLOBAJO 	0xF5E7AD96
#define		COLOR_SMS 			0xDABB3EFF
#define 	CHAT                0xE6E6E6E6
#define 	CHAT2               0xC8C8C8C8
#define 	CHAT3               0xAAAAAAAA
#define 	CHAT4               0x8C8C8C8C
#define 	CHAT5               0x6E6E6E6E
#define		segundos(%0) 		(1000 * %0)
#define		minutos(%0) 		(1000 * %0 * 60)
#define		horas(%0) 			(1000 * %0 * 60 * 60)
#define		Funcion:%0(%1)		forward %0(%1); public %0(%1)
#define 	isAcceptedDBWeapon(%1) ((%1 >= 29 && %1 <= 31) || %1 == 22 || %1 == 25)

#if !defined IsValidVehicle
    native IsValidVehicle(vehicleid);
#endif
new bool:SeguroBanear[MAX_PLAYERS], TiempoSpecJugador[MAX_PLAYERS], SeguroBanearID[MAX_PLAYERS];
new bool:ac_destroy = true;
new RateLimit[MAX_PLAYERS];
new bool:EventoOperacionesActivo = false, SumaEventoOperaciones;
new bool:CheatSpeedDetectado[MAX_PLAYERS], AC_SP = true, AvisosSpeed[MAX_PLAYERS], bool:CheatDelete[MAX_PLAYERS];
new bool:AC_TP = true, bool:AntiVPN = false, bool:AntiBypass = true, bool:TestLaser = true, bool:UsarAntiClones = true, bool:UsarRaknet = true, bool:NivelArmeroRequerido = false;
new bool:ActorizacionActiva = true, PayDayDoble = true;
new Iterator:Propiedades<MAX_PROPIEDADES>;
new Iterator:Puertas<MAX_DOORS>;
new Iterator:Fabricas<MAX_FABRICAS>;
new Iterator:Actores<MAX_ACTORS>;
new Iterator:Territorios<MAX_TERRITORIOS>;
new Iterator:Admin<MAX_PLAYERS>;


#define Speed(%0,%1,%2,%3,%4) floatround(floatsqroot(%4?(%0*%0+%1*%1+%2*%2):(%0*%0+%1*%1))*%3*1.6)
#define	Loop(%0,%1)  for(new %0 = 0; %0 < %1; %0++)
#define	Loop2(%0,%1) for(new %0 = 0; %0 <= %1; %0++)
#define pb_percent(%1,%2,%3,%4) ((%1 - 6.0) + ((((%1 + 6.0 + %2 - 2.0) - %1) / %3) * %4))
#define PRESSED(%0) (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
static UltimoDialogID[MAX_PLAYERS] = { -1, ... };
new gettimeVariable;
new bool:UsandoVPN[MAX_PLAYERS],bool:EnCarro[MAX_PLAYERS], BajandoCarro[MAX_PLAYERS], bool:TieneVC[MAX_PLAYERS];
new t_ISP[MAX_PLAYERS][64];
new UltimaBanda = 0;
new bool:EVENTO_DM=true;
new C4PJ[MAX_PLAYERS];
new TempPrendaSlot[MAX_PLAYERS];
new Globo;
new TimerEncerrar[MAX_PLAYERS];
//new PortonesM[10];
new bool:DesbugPJ[MAX_PLAYERS] = false, TiempoDesbug[MAX_PLAYERS];
new EnVehTemporal[MAX_PLAYERS];

new bool:Apuntando[MAX_PLAYERS], TimerAFK[MAX_PLAYERS];

new Text:TextVelocimetro[3];
new PlayerText:TextVelocimetroP[MAX_PLAYERS][4];

new VehiculoMarcado[MAX_PLAYERS] = 0;
new TipoItem[MAX_PLAYERS];
new TipoJugador[MAX_PLAYERS];
const VEHICLE_SYNC = 200;
new MandoAvisoCheat;
new bool:AntiVidas[MAX_PLAYERS];
new EditandoPorton[MAX_PLAYERS], PartePorton[MAX_PLAYERS];

new TiempoRevisar[MAX_PLAYERS];
static const NoDisparen[] =
{
	425,
	432,
	520,
	476,
	447,
	407,
	601
};


new FloodAlerts[MAX_PLAYERS];
new FloodTimer[MAX_PLAYERS];
#define TimerFlood 500
#define AlertFlood 10
new Text:SafeZoneText[3];



#define 	MAX_ARENAS          5
new ArmasSeleccionada[MAX_PLAYERS];
new ArenaSeleccionada[MAX_PLAYERS];
new JugadorDesafiado[MAX_PLAYERS];

enum PlayerDueloInfo
{
	Noduelo,
	Estaenduelo,
	Contrincante,
	ArenaID,
	Viendo,
	Float:Posa[3]
}
new PlayerDuelo[MAX_PLAYERS][PlayerDueloInfo];

enum DueloArena
{
	DesocupadaLK,
	DesafiadorLK,
	DesafiadoLK,
	ArmasLK,
	IniciarLK,
	ConteoLK,
	InteriorLK
}
new DueloInfo[MAX_ARENAS][DueloArena];

enum E_TEMP_INFOo
{
	jSelectRango,
	jOpcionBanda,
	bool:pt_PLAYER_EVENTODM,
 	pt_EVENTO_INT,
    pt_EVENTO_VW,
    Float:pt_EVENTO_POS[3],
	Float:EstadoPlayerEvento[2],
	VehSelect,
	PrecioSelect,
	MonedaSelect,
	PlayerSelect,
	PlayerVendedor,
	CasaSelect,
	Cercanos[30],
	CodigoDiscord,
	DiscordID[20+1]

}
new User_Temp[MAX_PLAYERS][E_TEMP_INFOo];


new walktime[MAX_PLAYERS];
new WalkStyle[MAX_PLAYERS];

enum
{
	ADMIN_LVL_USER = 0,
	ADMIN_LVL_AYUDANTE,
	ADMIN_LVL_DUDAS,
	ADMIN_LVL_JUEGO1,
	ADMIN_LVL_JUEGO2,
	ADMIN_LVL_GLOBAL1,
	ADMIN_LVL_GLOBAL2,
	ADMIN_LVL_SUBDUE,
	ADMIN_LVL_ADM,
}
new Float:EVENTO_POS[3];
new EVENTO_INT;
new EVENTO_VW;
new EventoActivo = 0;
new NotificaEvento = 0;
new EstaEnEvento[MAX_PLAYERS] = 0;
new TiempoBaulSapd[MAX_PLAYERS];
new g_MysqlRaceCheck[MAX_PLAYERS];
new SiendoCurado[MAX_PLAYERS];
new AndaCurando[MAX_PLAYERS];
new PlayerText:NotiConnect[MAX_PLAYERS][4],NotificacionConectado[MAX_PLAYERS];
new TimerRC[MAX_PLAYERS];
new TimerMejora[MAX_PLAYERS];
new Float:PlayerVida[MAX_PLAYERS],Float:PlayerChaleco[MAX_PLAYERS];
new Float:VidaJugador[MAX_PLAYERS] = 100.0,Float:ChalecoJugador[MAX_PLAYERS];
new TiempoChaleco[MAX_PLAYERS],TiempoVida[MAX_PLAYERS];
new TiempoCarSpam[MAX_PLAYERS],IDcarSpam[MAX_PLAYERS],CountCarSpam[MAX_PLAYERS],Cheater[MAX_PLAYERS];
new Float:VidaVehiculo[MAX_VEHICLES] = 1000.0,Float:VehicleVida[MAX_VEHICLES] = 1000.0;
new Float:PosJugador[MAX_PLAYERS][3],TimerTP[MAX_PLAYERS], TimerWeapons[MAX_PLAYERS]/*, UltimoCheck[MAX_PLAYERS]*/;
new CarWarpTime[MAX_PLAYERS],CarWarpID[MAX_PLAYERS];
new Text3D:estado1[MAX_PLAYERS];
new PlayerText3D:bienvenida[MAX_PLAYERS],bool:PlayerBienvenida[MAX_PLAYERS] = false;
new PrimerosPasos[MAX_PLAYERS];
new PlayerText:pjnivel[MAX_PLAYERS];
new Text:Textdraw0;
new Text:Textdraw1;
new Text:Textdraw2;
new Text:Textdraw3;



enum Times
{
	Tiempo_Traba
};
new Tiempos_User[MAX_PLAYERS][Times];

enum
{
	TuningObjeto_Objeto,
	TuningObjeto_Texto,
	TuningObjeto_Bandera,
	TuningObjeto_Panel
};
enum e_VEHICLE_OBJECTS
{
	bool:vobject_VALID,
	vobject_TYPE,
	vobject_autoslot,
	vobject_ID,
	vobject_OBJECT_ID,
	vobject_MODELID,
	Float:vobject_OFFSET[3],
	Float:vobject_ROT[3],
	vobject_ATTACHED,
	vobject_COLORS[MAX_VEHICLE_OBJECTS_INDEXS],
	vobject_NAME[32],
	vobject_text_TEXT[32],
	vobject_text_FONT[24],
	vobject_text_FONT_SIZE,
	vobject_text_BOLD,
	vobject_text_FONT_COLOR
};
new TuningObjetos[MAX_PLAYERS][MAX_PAUTOS][MAX_TOBJETOS][e_VEHICLE_OBJECTS];

enum E_INTERNAL_VEHICLE_INFO
{
	E_IVI_Color1,
	E_IVI_Color2,
	E_IVI_Interior
}
new InternalVehicleInfo[MAX_VEHICLES][E_INTERNAL_VEHICLE_INFO];

enum PORTONESINFO
{
	Float:pXc,
	Float:pYc,
	Float:pZc,
	Float:pRXc,
	Float:pRYc,
	Float:pRZc,
	Float:pXa,
	Float:pYa,
	Float:pZa,
	Float:pRXa,
	Float:pRYa,
	Float:pRZa,
	PortonModelo,
	PortonId,
	PortonFacc,
	PortonAbierto,
	PortonObjetoID,
	Text3D:PortonLabel
}
new PortonInfo[MAX_PORTONES][PORTONESINFO];


enum E_TROLL_PLAYER_DATA
{
	bool:playerFalseDetection,
	playerActualCar,
	playerStateTimer,
	playerStateVehicle,
	playerInVehicleFix,
	resetVehicleOwner
};

enum E_TROLL_VEHICLE_DATA
{
	broadVehicleOwner,
	specificVehicleOwner,
	bool:enterVehicleFix
};
static CarTroll[MAX_PLAYERS][E_TROLL_PLAYER_DATA], vehicleData[MAX_VEHICLES][E_TROLL_VEHICLE_DATA];



Create_Vehicle(vehicletype, Float:x, Float:y, Float:z, Float:rotation, color1, color2, respawn_delay, bool:addsiren=false)
{
	new vehicleid = CreateVehicle(vehicletype, Float:x, Float:y, Float:z, Float:rotation, color1, color2, respawn_delay, addsiren);
	if(vehicleid != INVALID_VEHICLE_ID)
	{
		//CallLocalFunction("OnVehicleCreated", "iii", vehicleid, color1, color2);
		InternalVehicleInfo[vehicleid][E_IVI_Color1] = color1;
		InternalVehicleInfo[vehicleid][E_IVI_Color2] = color2;
		return vehicleid;
	}
	else return 0;
}

#if defined _ALS_CreateVehicle
	#undef CreateVehicle
#else
	#define _ALS_CreateVehicle
#endif
#define CreateVehicle Create_Vehicle

Destroy_Vehicle(vehicleid)
{
	if(DestroyVehicle(vehicleid))
	{
		new temp_InternalVehicleInfo[E_INTERNAL_VEHICLE_INFO];
		InternalVehicleInfo[vehicleid] = temp_InternalVehicleInfo;
		return 1;
	}
	else return 0;
}

#if defined _ALS_DestroyVehicle
	#undef DestroyVehicle
#else
	#define _ALS_DestroyVehicle
#endif
#define DestroyVehicle Destroy_Vehicle
#define SetPlayerPosAC Set_Player_Pos
#define SetVehiclePosAC Set_Vehicle_Pos
#define SetVehicleHealthAC Set_Vehicle_Health
#define PutPlayerInVehicleAC Put_Player_In_Vehicle
#define ChangeVehicleColorAC Change_Vehicle_Color
#define LinkVehicleToInteriorAC Link_Vehicle_To_Interior


GetVehicleInterior(vehicleid)
	if(vehicleid > 0 && vehicleid < MAX_VEHICLES)
	{
		return InternalVehicleInfo[vehicleid][E_IVI_Interior];
	}
	else return 0;

Put_Player_In_Vehicle(playerid,vehicleid,seatid)
{
	if(playerid > MAX_PLAYERS || playerid < 0 || vehicleid < 0 || vehicleid > MAX_VEHICLES) return 0;
	TimerTP[playerid] = gettimeVariable + 5;
	CarTroll[playerid][playerFalseDetection] = true;
	if(seatid == 0) CarTroll[playerid][playerActualCar] = vehicleid;
	GetVehiclePos(vehicleid, PosJugador[playerid][0], PosJugador[playerid][1], PosJugador[playerid][2]);
	new estado = GetPlayerState(playerid);
	if(estado == 2 || estado == 3)
	{
		KillTimer(CarTroll[playerid][playerInVehicleFix]);
		CarTroll[playerid][playerInVehicleFix] = SetTimerEx("FixPlayerPutInVehicle", 1000 , false, "iii", playerid, vehicleid, seatid);
	}
	else PutPlayerInVehicle(playerid, vehicleid, seatid);
	return 1;
}

Set_Player_Pos(playerid,Float:X,Float:Y,Float:Z)
{
	TimerTP[playerid] = gettimeVariable + 5;
	PosJugador[playerid][0] = X;
	PosJugador[playerid][1] = Y;
	PosJugador[playerid][2] = Z;
	return SetPlayerPos(playerid,X,Y,Z);
}

Set_Vehicle_Pos(vehicleid,Float:X,Float:Y,Float:Z)
{
	new vehconductor = ConductorVehiculo(vehicleid);
	if(vehconductor != INVALID_PLAYER_ID)
	{
		PosJugador[vehconductor][0] = X;
		PosJugador[vehconductor][1] = Y;
		PosJugador[vehconductor][2] = Z;
	    TimerTP[vehconductor] = gettimeVariable + 5;
	}
    new v = SetVehiclePos(vehicleid,X,Y,Z);
	return v;
}

Set_Vehicle_Health(vehicleid,Float:Vida)
{
    VidaVehiculo[vehicleid] = Vida;
    SetVehicleHealth(vehicleid,Vida);
	return true;
}

Change_Vehicle_Color(vehicleid, color1, color2)
{
	if(ChangeVehicleColor(vehicleid, color1, color2))
	{
		InternalVehicleInfo[vehicleid][E_IVI_Color1] = color1;
		InternalVehicleInfo[vehicleid][E_IVI_Color2] = color2;
		return 1;
	}
	else return 0;
}

Link_Vehicle_To_Interior(vehicleid, interiorid)
{
	if(LinkVehicleToInterior(vehicleid, interiorid))
	{
		InternalVehicleInfo[vehicleid][E_IVI_Interior] = interiorid;
		return 1;
	}
	else return 0;
}
new RopaHombre = mS_INVALID_LISTID;
new RopaMujer = mS_INVALID_LISTID;
new RopaHombreCoin = mS_INVALID_LISTID;
new RopaMujerCoin = mS_INVALID_LISTID;
new motosespeciales = mS_INVALID_LISTID, motorp = mS_INVALID_LISTID,vehrp = mS_INVALID_LISTID, botesespecial = mS_INVALID_LISTID, helicopterosespecial = mS_INVALID_LISTID,helicopterostienda = mS_INVALID_LISTID,barp = mS_INVALID_LISTID,vehiculosespecial = mS_INVALID_LISTID;
new bool:EnPrueba[MAX_PLAYERS];
new bool:EnConteo;
static controls[11];
new Float:TeleportDest[MAX_PLAYERS][4], TeleportDesti[MAX_PLAYERS][2];
new Text3D:dynamicgift3DText, Text3D:CabinasTextos[5], Text3D:TextoSalon, Text3D:TextoSalon2, Text3D:TextoCarrera;
new Text3D:TextBot[9];
new BarreraTren[10], PasoTrenBarrera[5][10];
new CamionCargado[MAX_VEHICLES] = 0;
new Chofer[MAX_VEHICLES] = INVALID_PLAYER_ID;
new Balde[MAX_VEHICLES];
new bloqueado[MAX_VEHICLES];
new Transferir[MAX_PLAYERS],TiempoCompu[MAX_PLAYERS], TiempoExpulsar[MAX_PLAYERS];
new averiado[MAX_VEHICLES];
new VehicleFuel[MAX_VEHICLES];
new EmisoraEscuchando[MAX_VEHICLES],MP3Escuchando[MAX_PLAYERS], ParlanteEscuchando[MAX_PLAYERS];
new pweapon[MAX_PLAYERS] = 0,TimerCambio[MAX_PLAYERS];
//new NombreRandom[MAX_PLAYERS][128];
new ContraVacia[MAX_PLAYERS] = 0;
new MotorAuto[MAX_VEHICLES];
new Baul[MAX_VEHICLES],llenado[MAX_VEHICLES],Capo[MAX_VEHICLES],SinGaso[MAX_VEHICLES],Luces[MAX_VEHICLES];
new alarma[MAX_VEHICLES], alarmaon[MAX_VEHICLES];
new TimerLuces[MAX_VEHICLES], TimerLuces2[MAX_VEHICLES];
new Text:EsperarT[2];
new PlayerText:IndicacionesT[MAX_PLAYERS],Text:MisionT[10],Text:MisionT2[7],Text:MinutoAsalto[3];
new PlayerText:BarraTrabajo[MAX_PLAYERS][3];
new PlayerText:aTiempoCriminal[MAX_PLAYERS];
new TimerCamionero[MAX_PLAYERS], TimerBasurero[MAX_PLAYERS];
new AguaBalde[MAX_PLAYERS],TiempoMarihuana[MAX_PLAYERS];
new TiempoConsumir[MAX_PLAYERS], TiempoArmas[MAX_PLAYERS];
new LogeoCorrecto[MAX_PLAYERS], SpawnCorrecto[MAX_PLAYERS] = 0;
new avion[3], ViajeAvion[MAX_PLAYERS], contadoravion = 0;
new EntrandoAV[MAX_PLAYERS],TimerSiEntro[MAX_PLAYERS],Baneados[MAX_PLAYERS],Kickeados[MAX_PLAYERS],vemapa[MAX_PLAYERS] = 0;
new Float:VidaSpec[MAX_PLAYERS],Float:ChalecoSpec[MAX_PLAYERS],VerAdmin[MAX_PLAYERS];
new Text:RefuerzosT[5];
new EnCarreras[MAX_PLAYERS],lugarcarrera,EmpezoCarrera = 0,HabilitarCarreras = 0,ParticipantesCarrera,ParticipantesCarrera2,ConteoCarrera,TipoConteo;
new VueltasCarrera[MAX_PLAYERS],bool:EntradaCarrera[MAX_PLAYERS],VehiculoCarrera[14], SlotGanador,TiempoCarrera[MAX_PLAYERS],TiempoCarrera2[MAX_PLAYERS],Text:CarreraT[8],Text:CarreraT2[MAX_PLAYERS][8],InfoCP[4][6];
new TiempoAcademia[MAX_PLAYERS], frecuencias[9], Frecuencia[MAX_PLAYERS];
new IntentoDeLogear[MAX_PLAYERS], suicidio[MAX_PLAYERS], ZonaSegura[MAX_PLAYERS];
new TiempoMotor[MAX_PLAYERS],TiempoEntrarH[MAX_PLAYERS],TiempoEntrarF[MAX_PLAYERS];
new IntentoDeCorreo[MAX_PLAYERS];
new JetPack[MAX_PLAYERS], TiempoConectado[MAX_PLAYERS],NoSpec[MAX_PLAYERS];
new antifakekill[MAX_PLAYERS];
new EnLlamada911[MAX_PLAYERS];
new LoginTimer[MAX_PLAYERS];
new IDReporte[MAX_PLAYERS], IDReporteMensaje[MAX_PLAYERS][150];
new CLlamada[MAX_PLAYERS];
new ListItemReportId[MAX_PLAYERS][40];
new CancelReport[MAX_PLAYERS];
new ViendoPantalla[MAX_PLAYERS], ViendoGPS[MAX_PLAYERS] = 0;
new AutoBuscado[MAX_PLAYERS], JugadorBuscado[MAX_PLAYERS], PatenteBuscada[MAX_PLAYERS][10], PaydayDado;
new QFA[MAX_PLAYERS][35],JustReported[MAX_PLAYERS];
new DineroCamello, CrackCamello, MedicamentosCamello, MarihuanaCamello, Camello, PuertoSalon, CocainaCamello, HongosCamello;
new TrenUno, TrenTres, TrenCuatro, TrenDos;
new ObjExp[19], ObjBox[34], ObjCon[5], ObjHumo1[3], ObjHumo2[3];
new ExpObj, BoxObj, ConObj, Humo1Ojb, Humo2Ojb;
new PuertasFC[6];
new PuertasLVPD[3];
new EnCabina[MAX_PLAYERS] = 0;
new AyudaActiva[MAX_PLAYERS];
new PuertaAcademia,PuertasACA[7];
new PuertaRobo[12], Forzada[12], CasaAbierta[12];
new Advertido[MAX_PLAYERS],GolpesAdv[MAX_PLAYERS],Objeto[MAX_PLAYERS],VerBaul[MAX_PLAYERS],BaulVar[MAX_PLAYERS],Avisos[MAX_PLAYERS];
new CuentaDinero[MAX_PLAYERS],EnPatrulla[MAX_PLAYERS],RecorridoBasu[MAX_PLAYERS],CargandoC[MAX_PLAYERS];
new AvisosAuto[MAX_PLAYERS],TiempoPD[MAX_PLAYERS] = 0,Mecanico[MAX_PLAYERS],AceptoRepara[MAX_PLAYERS],MConductor[MAX_PLAYERS];
new EnAuto[MAX_PLAYERS],RopaMeca[MAX_PLAYERS],RopaMine[MAX_PLAYERS],Bidon[MAX_PLAYERS],llenadobarra[MAX_PLAYERS],Muriendo[MAX_PLAYERS],LlamadaTaxi[MAX_PLAYERS],EnTaxi[MAX_PLAYERS];
new Oficial[MAX_PLAYERS],RopaMedi[MAX_PLAYERS],RopaBasu[MAX_PLAYERS],bool:Localizando[MAX_PLAYERS],Monto[MAX_PLAYERS],Ficha[MAX_PLAYERS];
new BajandoV[MAX_PLAYERS],Bajando[MAX_PLAYERS],MRepuestos[MAX_PLAYERS],PBasura[MAX_PLAYERS],Companero[MAX_PLAYERS] = -1,recogiendo[MAX_PLAYERS],TM[MAX_PLAYERS];
new TipoCosecha[MAX_PLAYERS],Cosechando[MAX_PLAYERS],PCosechar[MAX_PLAYERS],Taxista[MAX_PLAYERS],Pasajero[MAX_PLAYERS],LlamadaMeca[MAX_PLAYERS],ResponderMeca[MAX_PLAYERS],ResponderTaxi[MAX_PLAYERS];
new ResponderMedi[MAX_PLAYERS],TimerReinicio2,tviaje[MAX_PLAYERS],Viaje[MAX_PLAYERS];
new ObjetoRobo[86];
new rocajugador[MAX_PLAYERS], pescador[MAX_PLAYERS], pesca[MAX_PLAYERS], RecorridoPescador[MAX_PLAYERS], objetostatus[MAX_PLAYERS], objetox1[MAX_PLAYERS], objetox2[MAX_PLAYERS];
new TelefonoEstado[MAX_PLAYERS],Hora, Minuto, Segundo, TiempoDuda[MAX_PLAYERS];
new objetost[5][MAX_PLAYERS];
new TimerCombate[MAX_PLAYERS],EnCombate[MAX_PLAYERS],TiempoCombate[MAX_PLAYERS],CColocado[MAX_PLAYERS],CagoSeguro[MAX_PLAYERS];
new HCalculo[MAX_PLAYERS];
new Text:TAXIMET,Text:TAXIMET2[MAX_PLAYERS];
new HCurando[MAX_PLAYERS];
new FabCurando[MAX_PLAYERS];
new DudaTexto[MAX_PLAYERS][128];
new Camas[12][4];
new EnLlamada[MAX_PLAYERS],DudaEstado,ReporteEstado,ComandoEstado,AdEstado;
new TiempoAgresor[MAX_PLAYERS],Agresor[MAX_PLAYERS];
new RobadoReciente[MAX_PLAYERS];
new NombreEvento[100],DescriEvento[150],TipoEvento;
new Deposito[MAX_PLAYERS],NPrendas[MAX_PLAYERS], SlotP2[4][MAX_PLAYERS], UsandoP[MAX_PLAYERS];
new UsandoObj[4][MAX_PLAYERS];
new Barricade[MAX_BARRICADES];
new TiempoCrack[MAX_PLAYERS],TiempoMedicamentos[MAX_PLAYERS], TiempoCaramelos[MAX_PLAYERS],TiempoCocaina[MAX_PLAYERS],TiempoHongos[MAX_PLAYERS];
new Carga[MAX_PLAYERS];
new CamionID[MAX_PLAYERS];
new Paciente[MAX_PLAYERS];
new Mats1[MAX_PLAYERS], Mats2[MAX_PLAYERS], Mats3[MAX_PLAYERS];
new MedicoCP2[MAX_PLAYERS];
new EstadoRadio[MAX_PLAYERS];
new Curando[MAX_PLAYERS];
#if defined UsarForo
new MySQL: Conecction2;
#endif
new PacienteAmbu[MAX_PLAYERS];
new Reanimado[MAX_PLAYERS];
new MarcadoMedicos[MAX_PLAYERS];
new LlamadaMedicos[MAX_PLAYERS];
new dynamicgift[19];
new StatsStatus, ArbolStatus, ArmasEstado, DisableStatus;
new PrimerSpawn[MAX_PLAYERS];
new Jail[MAX_PLAYERS],San[MAX_PLAYERS];
new barrera, porton, puerta_1, puerta_2, puerta_3;
new barsfpd1, barsfpd2, barlvpd, portonsf1, portonlv1, portonlv2;
new reja1, reja2, reja3, reja4, reja5, reja6;
new Manejando[MAX_PLAYERS];
new iVehicle[MAX_PLAYERS];
new Float:DeathX[MAX_PLAYERS],Float:DeathY[MAX_PLAYERS], Float:DeathZ[MAX_PLAYERS], Float:DeathXC[MAX_PLAYERS], Float:DeathYC[MAX_PLAYERS], Float:DeathZC[MAX_PLAYERS], Float:PuntoBaX[MAX_PLAYERS], Float:PuntoBaY[MAX_PLAYERS];
new Float:PuntoBaZ[MAX_PLAYERS], Float:PuntoBaA[MAX_PLAYERS];
new Float:PuntoTraX[MAX_PLAYERS], Float:PuntoTraY[MAX_PLAYERS], Float:PuntoTraZ[MAX_PLAYERS];
new CabinasOcupadasEmisoras[5][2];
new TieneMicrofono[MAX_PLAYERS];
new AreaCabinas[5], AreaFabrica;
new YaEstaAbierta[40],PuertasDeBotones[11],Puerta[5];
new PuertasDePD[4];
new Alquilador[MAX_PLAYER_NAME],bool:Alquilado,HorasSalon,bool:PermisoSalon[MAX_PLAYERS],bool:Boleto[MAX_PLAYERS],Personas,PrecioSalon,NivelSalon;
new bool:Escuchando[MAX_PLAYERS];
new Esposando[MAX_PLAYERS], TimerEsposar[MAX_PLAYERS];
new autos[MAX_PAUTOS][MAX_PLAYERS];
new Patente[MAX_PLAYERS][MAX_PAUTOS][10];
new JugadorLogeado[MAX_PLAYERS];
new /*Text:TDLogin[11],*/Text:DMTD2;
static door1, door2, door3, door4, engine, lights, alarm, doors, bonnet, boot, objective;
new YaEncendiendo[MAX_PLAYERS];
new ModoCombate;
new Contador[MAX_PLAYERS], permisopesca[MAX_PLAYERS], Boletos[MAX_PLAYERS], VWTemporal[MAX_PLAYERS], llamadasonido1[MAX_PLAYERS];
new llamadasonido2[MAX_PLAYERS];
new NPC_Tren[7];
new npctoggle = 0;
new mares;
new MapaIsla[32];
new EstaEnBus[MAX_PLAYERS], tipogrua[MAX_PLAYERS], tipogruallama[MAX_PLAYERS];
new PlayerText:tren[MAX_PLAYERS][MAX_PLAYERS];
new ZonaTuning, ZonaFC, ZonaLS, ZonaBB, ZonaSalon;
new StatusFC[MAX_PLAYERS] = 0;
new Float:SpecX[MAX_PLAYERS], Float:SpecY[MAX_PLAYERS], Float:SpecZ[MAX_PLAYERS], SpecVW[MAX_PLAYERS], SpecInt[MAX_PLAYERS];
new SpecJugador[MAX_PLAYERS];
new MensajeLoro[MAX_PLAYERS], TextoLoro[MAX_PLAYERS][71];
new ShowMutes[MAX_PLAYERS],ShowSound[MAX_PLAYERS],ShowVelo[MAX_PLAYERS],CanalDudas[MAX_PLAYERS];
new ShowCone[MAX_PLAYERS],ShowGuia[MAX_PLAYERS],SedOculta[MAX_PLAYERS],AvisoTerritorio[MAX_PLAYERS],ShowTerritorio[MAX_PLAYERS],MostrarTwitter[MAX_PLAYERS];
new AreaCheat[MAX_PLAYERS];
new TimerTxtMarcelo;
new PlayerText:CerrarPrenda[MAX_PLAYERS];
new MarcadoMenu[MAX_PLAYERS];
new PrendaMarcada[MAX_PLAYERS];
new TipoPrenda[MAX_PLAYERS];
new TipoRopa[MAX_PLAYERS];
new TipoVehiculo[MAX_PLAYERS];
new ActorP[9], BaileP[7], AfinidadTotal, TiempoCLUB[MAX_PLAYERS];
new ClientesPizza[13], ClienteActor[9][13];
new Text:Cuadroputi, Text:Cuadroputi1, PlayerText:AfinidadconX[MAX_PLAYERS], PlayerText:LineasPutiNivel[MAX_PLAYERS], Text:PuticlubMedia,Text:PuticlubAlta;
new Text:FlechasArribaPuti, Text:FlechasArribaPuti2, PlayerText:Radly[MAX_PLAYERS];
new TimerDineroP[MAX_PLAYERS];
new Bailarina[7] = 0;
new EnClub[MAX_PLAYERS] = 0;
new TimerBailando[MAX_PLAYERS];
new PlayerText:LogroNumero[MAX_PLAYERS],PlayerText:LogroTitulo[MAX_PLAYERS],PlayerText:LogroTexto1[MAX_PLAYERS],PlayerText:LogroRueda[MAX_PLAYERS], PlayerText:LogroLinea[MAX_PLAYERS];
new HornoUsarP[MAX_PLAYERS];
new unkbox[MAX_FABRICAS][5];
new Float:BarraProgreso[MAX_PLAYERS][2];
new TieneBarril[MAX_PLAYERS] = 0;
new TieneCajaMeta[MAX_PLAYERS] = 0;
new BarrilMeta[MAX_FABRICAS][5];
new CajaMeta[MAX_FABRICAS][5];
new VehiculoConBarril[MAX_VEHICLES] = 0;
new VehiculoConCajas[MAX_VEHICLES] = 0;
new AutoDeFabrica[MAX_VEHICLES];
new QuimicosActivo[MAX_FABRICAS] = 0;
new MetanfetaminaEnVenta[MAX_FABRICAS] = 0;
new MetanfetaminaEnSlot[MAX_FABRICAS] = 0;
new VendiendoMeta[MAX_FABRICAS] = 0;
new AdquiriendoQuimicosF[MAX_FABRICAS] = 0;
new PuertaAbiertaFabrica[MAX_FABRICAS] = 0;
new Float:PuntoQMCX[MAX_FABRICAS],Float:PuntoQMCY[MAX_FABRICAS],Float:PuntoQMCZ[MAX_FABRICAS];
new HornoEncendido[3][MAX_FABRICAS];
new DANOF[MAX_PLAYERS];
new Quimicos[9];
new Text3D:MetaCompraText[30],MetaCompra[30]; //aqu� hab�a Text3D: en metacompratext
new TiempoFianza[MAX_PLAYERS];
new Criminal[MAX_PLAYERS],Colega[MAX_PLAYERS],Invito[MAX_PLAYERS],Invitador[MAX_PLAYERS];
new Text3D:DineroTiendas[13][22], ObjetoDinero[13][22], TRobada[13][22],DineroRobo[13][22], ActorPolicia[13][22];
new Text3D:EscaparLabel[12];
new Float:PosTienda[MAX_PLAYERS][3];
new Text:MapaLateral[6];
new TiempoPick[MAX_PLAYERS], IconoRopa[6], IconoAutosPoli[4];
new TiempoCaida[MAX_PLAYERS], TiempoApuntar[MAX_PLAYERS];
new EntrandoVehicle[MAX_PLAYERS];
new precioofertax[MAX_PLAYERS], ESPROSTI[MAX_PLAYERS] = -1, SexoOral[MAX_PLAYERS] = -1;
new PlayerText:SelectionTD[MAX_PLAYERS][4];
new PlayerText:TextoMenu[MAX_PLAYERS], Text:BoxMenu;
new CasaRobo[MAX_PLAYERS][4], PescaM[MAX_PLAYERS][4], RocasM[MAX_PLAYERS][4], UniformeM[MAX_PLAYERS][4];
new DialogFormatColores[3621], DialogFormatColoresV[4001];
new PlayerText:tuningobj[MAX_PLAYERS],bool:EnTuning[MAX_PLAYERS], bool:EnTuningShop[MAX_PLAYERS],TuningVehiculo[MAX_PLAYERS];
new Float:TuningObjetoPos[MAX_PLAYERS][6],TuningPivotObjeto[MAX_PLAYERS],TuningSlot[MAX_PLAYERS];
new TuningVslot[MAX_PLAYERS],EspacioBaul[MAX_PLAYERS][MAX_PAUTOS][11],Componentes[MAX_PLAYERS][14][MAX_PAUTOS];
new TimerForzado[MAX_PLAYERS];
new Text:Sangre,Text:Sangre2;
new Afinidad[6][MAX_PLAYERS];
new dineropedido[MAX_PLAYERS], GuardaEspalda[MAX_PLAYERS],ofertador[MAX_PLAYERS];
new EVOfrecidos[MAX_PLAYERS],TiempoVenta[MAX_PLAYERS],TiempoMoney[MAX_PLAYERS],LeOfreci[MAX_PLAYERS];
new PiezasOfrecidas[MAX_PLAYERS],armaofertada[MAX_PLAYERS];
new CrackOfrecidos[MAX_PLAYERS],TipoOferta[MAX_PLAYERS],MedicamentosOfrecidos[MAX_PLAYERS];
new MarihuanaOfrecida[MAX_PLAYERS],CROfrecidos[MAX_PLAYERS],TiempoOferta[MAX_PLAYERS],HongosOfrecidos[MAX_PLAYERS],CocainaOfrecida[MAX_PLAYERS];
new CubrirPrecio[MAX_PLAYERS],TiempoCubrir[MAX_PLAYERS];
new TDGPSCreadoS,TDGPSCreado[MAX_ICONS],Text:TextDGPS[MAX_ICONS];
new TDPGPSCreado[MAX_PLAYERS][MAX_PLAYERS];
new PlayerText:TextDPGPS[MAX_PLAYERS][MAX_PLAYERS];
new PlayerText:TextDPGPS2[MAX_PLAYERS][MAX_PLAYERS];
new PlayerText:PlayerGPS[MAX_PLAYERS],PlayerPoint[MAX_PLAYERS];
new ColorTuning[MAX_PLAYERS] = -1;
new BRango[8][MAX_BANDAS][32];
new BandaOfertada[MAX_PLAYERS], OfertadorBanda[MAX_PLAYERS];

enum E_TEXTDRAW
{
    Text:textdraw_HUD[6]
};
new Textdraws[E_TEXTDRAW];

enum E_PLAYER_TEXTDRAW
{
    PlayerText:ptextdraw_HUD[3],
};
new PlayerTextdraws[MAX_PLAYERS][E_PLAYER_TEXTDRAW];

enum eInfo
{
	IdMision,
	IdCriminal,
	IdColega,
	NumeroMision,
	Actor1,
	Objetivo,
	Actor2,
	SegundosMision,
	ObjetivoTake,
	Bajas,
	Tiene9mm,
	TieneColega,
	MisionActiva
}
new Encargo[MAX_ENCARGOS][eInfo];





enum pAnticheat
{
    bool:paSpawneado,
    Float:paZ
}
new PlayerAnticheat[MAX_PLAYERS][pAnticheat];

enum pCheckpoint
{
    bool:cpvalido,
	Float:cpX,
	Float:cpY,
	Float:cpZ,
	Float:cpA,
	cptrabajo
}
new PlayerCheckPoint[MAX_PLAYERS][pCheckpoint];

enum estaInfo
{
	estID,
	estEnUso,
	EstPickup,
	Text3D:EstLabel,
	estDuenoID,
	estDuenoN[40],
	estValor,
	estNivel,
	Float:estX,
	Float:estY,
	Float:estZ,
	Float:estA,
	estVirW,
	estInt,
	estVIP
};
new InfoEst[MAX_ESTACIONA][estaInfo];

enum dDATA
{
	dID,
	dType,
	dPickup,
	dNombre[120],
	Float:dX,
	Float:dY,
	Float:dZ,
	dint,
	dvw,
	Float:dsX,
	Float:dsY,
	Float:dsZ,
	dtienda,
	drobo,
	darma,
	dcargos,
	dPropietario[MAX_PLAYER_NAME+1],
	dPickup1
};
new DoorData[MAX_DOORS][dDATA];

enum tInfo
{
	tID,
	tCreate,
	tValid,
	tzone,
	tBanda,
	tactiva,
    tsegundos,
	ttime,
	tColor,
	Float:minX,
	Float:minY,
	Float:maxX,
	Float:maxY
};
new Tdata[MAX_TERRITORIOS][tInfo];

enum aDATA
{
	ValidActor,
	aID,
	ActorSkin,
	VW,
	Repite,
	Float:aX,
	Float:aY,
	Float:aZ,
	Float:aA,
	Actor_AnimLib[30],
	Actor_AnimName[30],
	RoboEstado,
	Robable,
	ActorPlayer
};
new ActorData[MAX_ACTORS][aDATA];

/*
enum MI
{
	Creado,
	IDMaria,
	Seg,
	Min,
	Hor,
	Float:pX,
	Float:pY,
	Float:pZ,
	Plantador[24],
	Estado,
	Text3D:Label,
	TimerMaria,
	ObjetoID
};
new MariInfo[MAX_MARIHUANA][MI];
*/
enum FabricasMeta
{
    pMapIcon,
	pID,
	pPropietario[128],
	Float:pEntradaX,
	Float:pEntradaY,
	Float:pEntradaZ,
	Float:pSalidaX,
	Float:pSalidaY,
	Float:pSalidaZ,
	Float:pEntradaA,
	Float:pEntradaGX,
	Float:pEntradaGY,
	Float:pEntradaGZ,
	Float:pEntradaGA,
	pTanque[9],
	Float:pSalidaGX,
	Float:pSalidaGY,
	Float:pSalidaGZ,
	Almacen[10],
	Meta[20],
	pCantidadDinero,
	pCantidadBolsas,
	pRecortada,
	pSniper,
	pUzi,
	pTec9,
	TiempoSoborno,
	RojoPick,
	pBanda,
	pVW,
	pInt,
	pChalecos,
	pEnVenta,
	Text3D:pLabel,
	Text3D:pLabel2,
	Text3D:pLabel3,
	Text3D:pLabel4,
	Text3D:pLabel5,
	Text3D:Cocinero[5],
	pEnVentaPor,
	pRecorrido,
	pPickup,
	pValor,
	pEnUso,
	Text3D:LTanque[9],
	Text3D:olla[3],
	pPuerta,
	tMoney,
	humo[3],
	Crisol[3],
	Porcentaje[3],
	CargoCamionetas,
	Auto1F,
	Auto2F,
	Bolso[75],
	Chalecos[32],
	bolsospagados,
	EscoObjetos[10],
	SniperObjetos[10],
	Tec9Objetos[10],
	UziObjetos[10],
	PorcentajeCocinero[5],
	StatoCuoco[5],
	Bloque[5],
	Termino[5],
	ActorFabrica[11],
	TieneActor[11],
	EstadoActor[11]
};
new Fabricas[MAX_FABRICAS][FabricasMeta];

enum Propiedades
{
	pID,
	pIDPropietario,
	pGanancias,
	pVW,
	pEnVenta,
	pEnVentaPor,
	pPrecio,
	pNivel,
	Float:pPosX,
	Float:pPosY,
	Float:pPosZ,
	Float:pPosXS,
	Float:pPosYS,
	Float:pPosZS,
	Float:pPosA,
	Float:pPosAS,
	pEnUso,
	pTipo,
	propiedad_ID,
	Float:pRoperoX,
	Float:pRoperoY,
	Float:pRoperoZ,
	pRoperoAbierto,
	pAK47,
	pM4,
	pEscopetaNormal,
	pEscopetaDeCombate,
	pMP5,
	p9mm,
	p9mmSilenciada,
	pDesertEagle,
	pRifle,
	Sniper,
	pGranada,
	pManopla,
    pPaloDeBillar,
    pCuchillo,
	pKatana,
    pPaloDeGolf,
	pBateDeBeisbol,
	pConsoladorRosa,
	pVibradorBlanco,
	pGranVibradorBlanco,
	pVibradorPlateado,
	pBaston,
	pPala,
	pFlores,
	pCamara,
	pMotosierra,
	pTec9,
	pUzi,
	pSniper,
	pLanzacohetes,
	pBazooka,
	pLanzallamas,
	pMinigun,
	pParacaidas,
	pMedicamentos,
	pCrack,
	pLugarRopero,
	Float:pGX,
	Float:pGY,
	Float:pGZ,
	Float:pGA,
	Text3D:pLabel,
	Text3D:pLabel2,
	Text3D:pLabel3,
	Text3D:pLabel4,
	Text3D:pLabel5,
	pPickup,
	pPropietario[40],
	pInterior,
	pInteriorID,
	pAbierta,
	pLugarHeladera,
	pSprunk,
	pCerveza,
	pAquarius,
	pPizzas,
	pVino,
	Float:pHeladeraX,
	Float:pHeladeraY,
	Float:pHeladeraZ,
	pCobro,
	pEmisora,
	pHongos,
	pCocaina,
	pLocalizacion[80]
};
new PropInfo[MAX_PROPIEDADES][Propiedades];
/*
enum AQ
{
	qID,
	qfaccj,
	quser_ses[24],
	qjugname[24],
	qparams[24],
	Razon[50],
	TiempoJailW,
	qstatus,
};
new ActionQueue[50][AQ];*/

enum GPSInfo
{
	Float:GPSIconPos_X,	Float:GPSIconPos_Y,	GPSIconTipo
}
new MapIconPos[][GPSInfo]=
{
	{2227.411376,-1718.254028,1},
	{2123.630126,-2274.889648,1},
	{1174.8502,-1361.3514,1},
	{-1716.7922,-62.7255,1},
	{1377.0605,1152.7566,1},
	{-172.498428,-1542.868408,1},
	{1743.017211,-1864.421386,1},
	{2789.3672,-2574.6675,1},
	{2014.8400,1150.4700,1},
	{-2177.0659,690.9559,1},
	{-384.8185,2206.1106,1}
};
new Float:GPSPOS[MAX_ICONS][2];

enum EmiInfo
{
	TieneEmisora,
	EmisoraID,
	NombreEmisora[90],
	URLEmisora[128],
	TransEmisora,
	CabinaOcupada,
}
new Emisoras[MAX_PLAYERS][EmiInfo];

enum reportinfo
{
	HasBeenUsed,
	Report[128],
	ReportFrom,
	CheckingReport,
	BeingUsed,
	ReportadoID,
	TiempoReport
}

new Reports[MAX_REPORTS][reportinfo];

enum Spikes
{
	Float:sX,
	Float:sY,
	Float:sZ,
	sObjectID,
	sDeployedBy[MAX_PLAYER_NAME],
	sDeployedAt[MAX_ZONE_NAME]
}
new SpikeStrips[20][Spikes];

new VariableCaido[MAX_PLAYERS];

enum VI
{
	vpropietario,
	vprecio,
	vmodelo,
	Float:vx,
	Float:vy,
	Float:vz,
	Float:va,
	vmoneda,
	vcolor1,
	vcolor2,
	vcomprable,
	vfaccion,
	vtrabajo,
	vVida,
	vInterior,
	vVirtualWorld,
	vCapo,
	vPuertas,
	vAmbu,
	vID,
	SpawnManual
};
new VehiculosInfo[MAX_VEHICLES][VI];

enum BI
{
	bID,
	BIntegrantes,
	ctime,
	BNombre[21],
	BLider[25],
	BColor[20],
	BColor2[20],
	territorio[15],
	tipobanda[15],
	RANK_EXP[7],
	RANK_EDIT[7],
	RANK_INV[7],
	MaxIntegrantes,
};
new BandasInfo[MAX_BANDAS][BI];
new TimerCCaja[MAX_PLAYERS];
new CajaFuerte,CajaAbierta = 0,Text3D:CajaFuerteTX,Robado[4] = 0,RobadaTM = 0;

new CajaFuerte2,CajaAbierta2 = 0,Text3D:CajaFuerteTX2,Robado2[4] = 0,RobadaTM2 = 0;

new CajaFuerte3,CajaAbierta3 = 0,Text3D:CajaFuerteTX3,Robado3[4] = 0,RobadaTM3 = 0;
new tAbrirCaja,tAbrirCaja2,tAbrirCaja3, RoboCaja[MAX_PLAYERS];

enum Users
{
	User,
	Cantidad
};
new Usuarios[Users];

enum jInfo
{
	p_DBID,
	NombreTemporal[MAX_PLAYER_NAME+1],
	pNombre,
    pPuntosCarrera,
	pObj[4],
	pBone[4],
	Float:pfOffsetX[4],
	Float:pfOffsetY[4],
	Float:pfOffsetZ[4],
	Float:pfRotX[4],
	Float:pfRotY[4],
	Float:pfRotZ[4],
	Float:pfScaleX[4],
	Float:pfScaleY[4],
	Float:pfScaleZ[4],
	pObjColor[4],
	pLogro[17],
	pWP0,
	pWP1,
	pWP2,
	pWP3,
	pWP4,
	pWP5,
	pWP6,
	pWP7,
	pWP8,
	pWP9,
	pWP10,
	pWP11,
	pWP12,
	TiendaInt,
	TiendaVw,
	Float:TiendasX,
	Float:TiendasY,
	pNivelMecanico,
	pExpPiloto,
	pNivelLadron,
	pExpLadron,
	pNivelBasurero,
	pExpBasurero,
	pNivelCamionero,
	pExpCamionero,
	pNivelTransportista,
	pExpTransportista,
	pNivelArmero,
	pExpArmero,
	pNivelPescador,
	pExpPescador,
	pExpMinero,
	pNivelMinero,
	pExpMedico,
	pNivelMedico,
	Float:hx,
	Float:hy,
	Float:hz,
	Float:jVida,
	Float:jArmadura,
	Float:jPos_x,
	Float:jPos_y,
	Float:jPos_z,
	pTemppass[129],
	pPassword[129],
	Cache: Cache_ID,
	pStats,
	CorreoVerificado,
	pCama,
	pVwCama,
	pAtendido,
	pMedicina,
	pEnfermedad,
	pBanco,
	pRango,
	pMedicamentos,
	pCaramelos,
	pCrack,
	pMateriales,
	pSemillas,
	pMarihuana,
	pKitm,
	tempName[50],
	tempNum,
    tempPassword,
	pAgenda,
	pNumero,
	pOnline,
	pPatines,
	pGPS,
	pRadio,
	pDuty,
	pAcento,
	pModelo,
	pSocioHP,
	pTipoCarcel,
	pTiempoCarcel,
	pTiempoJail,
	pCargos,
	pBan,
	pRazon[32],
	pInterior,
	pMundoVirtual,
	QuienC[MAX_PLAYER_NAME+1],
	IP[16],
	PrecioNivel,
	NivelExp,
	Repuestos,
	MobileSub,
	CasaID[4],
	Moneda,
	Credits,
	pRazonSan[50],
	Totem[32],
	arrestado,
	sancionado,
	horasjugadas,
	suspendido,
	suspenciones,
	VIP,
    jTiempoVip,
    TimeOn,
	piezas,
	Agonizando,
	pAdmin,
	pMaper,
	jSexo,
	Trabajo[MAX_TRABAJOS_VIP3],
	jEdad,
	jRopa,
	jMiembro,
	jNivel,
	jDinero,
	jExperiencia,
	jRegistrado,
	jConexion,
	pSed,
	pLicencia,
	pHambre,
	jMartillo,
	jDestornillador,
	jBarreta,
	jBalde,
	jRegalo,
	pEmail[90],
	pPais[32],
	pCiudad[32],
	pEstadoLaser,
	pColorLaser,
	pTieneEstado,
	pFraseEstado[64],
	AcentoP[64],
	pCocaina,
	pHongos,
	pDutyM,
	pC4,
	pAsesinatos,
	AutoLogin,
	pCuentaForo,
}
new PlayerInfo[MAX_PLAYERS][jInfo];

enum vInfo
{
	v_DBID,
	Float:pOX,
	Float:pOY,
	Float:pOZ,
	Float:pOA,
	v0_interior,
	v0_vw,
	vPrecio,
	Float:pVidaVE,
	VE1,
	VE2,
	VE3,
	VE4,
	vMonedaa,
	vModelo,
	vGas,
	vinterior,
 	vvw,
	vColor1,
	vColor2,
	Float:pVidaV,
	vPJ,
	vTraba,
	Float:vX,
	Float:vY,
	Float:vZ,
	Float:vA,
	vSeguro,
	vAlarma,
	vAlarm,
	Aceleracion,
	AceleracionActiva,
}
new VehicleInfo[MAX_PLAYERS][MAX_PAUTOS][vInfo];

enum E_TEMP_INFO
{
	pt_Antiflood,
	bool:pt_Congelado,
	pt_NumeroSMS,
	bool:pt_TempName,
	pt_NombreTemp[25],
	bool:pt_Camionero,
	bool:pt_Transportista,
	pt_RolBasurero,
	pt_CarTime,
	pt_CarID,
	pt_CarSpam,
	CJ,
	CurandoFab,
	CurandoHosp,
	AnimSexo,
	Float:PuntoCX,
	Float:PuntoCY,
	Float:PuntoCZ,
	StatusLoro,
	Refuerzos,
	TraeDinero,
	RoboConJob,
	ArrestadoTienda,
	CheatDetectado,
    TuningSelect,
	VidaDetectado[2],
	reanimamedico,
	TiempoBolso,
	TienePorro,
	CargosRobo,
	TieneCrisol,
	CriminalAceptado,
	TieneEncargo,
	TomoEncargo,
	TieneSprunk,
	TienePizza,
	TieneCerveza,
	TieneVino,
	TieneAquari,
	Specteando,
	Float:CaidaTaxi[3],
	TiempoTwitter,
	TimeSex,
	BailePlayer,
	BailarinaPlayer,
	TimerRevisar,
	TimerReparar,
	TimerPicando,
	GangType,
	pt_LAST_VEHICLE_DESTROY
}
new PlayerTemp[MAX_PLAYERS][E_TEMP_INFO];

enum Door
{
	DOOR_HOOD,
	DOOR_TRUNK,
	DOOR_DRIVER,
	DOOR_PASSENGER
}

enum DoorState(<<= 1)
{
	IS_OPENED = 1,
	IS_DAMAGED,
	IS_REMOVED
}


//#pragma warning push
#pragma warning disable 213
static GetDoorState(doorStates, Door:door, DoorState:doorState) return (doorStates >>> (8 * door)) & doorState;
#pragma warning enable 213
//#pragma warning pop

static NombreCheat(code)
{
	new reason[25];
	switch (code)
	{
		case 0: format(reason, sizeof(reason), "Airbreak");
		case 1: format(reason, sizeof(reason), "Airbreak (En veh�culo)");
		case 2: format(reason, sizeof(reason), "Teleport (Solo)");
		case 3: format(reason, sizeof(reason), "Teleport (A Pie)");
		case 4: format(reason, sizeof(reason), "Teleport (Pie/Veh)");
		case 5: format(reason, sizeof(reason), "Teleport (PJ/VEH)");
		case 6: format(reason, sizeof(reason), "Teleport (pickups)");
		case 7: format(reason, sizeof(reason), "Volando (Solo)");
		case 8: format(reason, sizeof(reason), "Volando (En veh�culo)");
		case 9: format(reason, sizeof(reason), "Speedhack (Solo)");
		case 10: format(reason, sizeof(reason), "Speedhack (En veh�culo)");
		case 11: format(reason, sizeof(reason), "Vida (Veh�culo)");
		case 12: format(reason, sizeof(reason), "Vida (Solo)");
		case 13: format(reason, sizeof(reason), "Armour");
		case 14: format(reason, sizeof(reason), "Money");
		case 15: format(reason, sizeof(reason), "Weapon");
		case 16: format(reason, sizeof(reason), "Ammo (add)");
		case 17: format(reason, sizeof(reason), "No reload");
		case 18: format(reason, sizeof(reason), "Special actions");
		case 19: format(reason, sizeof(reason), "Bullet proof (onfoot)");
		case 20: format(reason, sizeof(reason), "Bullet proof (vehicle)");
		case 21: format(reason, sizeof(reason), "Invisible");
		case 22: format(reason, sizeof(reason), "Lagcomp spoof");
		case 23: format(reason, sizeof(reason), "Tuning");
		case 24: format(reason, sizeof(reason), "Parkour");
		case 25: format(reason, sizeof(reason), "Rotaci�n r�pida");
		case 26: format(reason, sizeof(reason), "Rapid fire");
		case 27: format(reason, sizeof(reason), "Fake Spawn");
		case 28: format(reason, sizeof(reason), "Fake Kill");
		case 29: format(reason, sizeof(reason), "Pro Aim");
		case 30: format(reason, sizeof(reason), "CJ Run");
		case 31: format(reason, sizeof(reason), "CarShoot");
		case 32: format(reason, sizeof(reason), "CarJack");
		case 33: format(reason, sizeof(reason), "Unfreeze");
		case 34: format(reason, sizeof(reason), "AFK Ghost");
		case 35: format(reason, sizeof(reason), "Full aiming");
		case 36: format(reason, sizeof(reason), "Fake NPC");
		case 37: format(reason, sizeof(reason), "Reconnect");
		case 38: format(reason, sizeof(reason), "High ping");
		case 39: format(reason, sizeof(reason), "Dialog hack");
		case 40: format(reason, sizeof(reason), "Sandbox Prot.");
		case 41: format(reason, sizeof(reason), "Invalid ver.");
		case 42: format(reason, sizeof(reason), "RCON Hack");
		case 43: format(reason, sizeof(reason), "Tuning Crasher");
		case 44: format(reason, sizeof(reason), "Invalid seat Crasher");
		case 45: format(reason, sizeof(reason), "Dialog crasher");
		case 46: format(reason, sizeof(reason), "Attach Crasher");
		case 47: format(reason, sizeof(reason), "Weapon Crasher");
		case 48: format(reason, sizeof(reason), "Conn. flood");
		case 49: format(reason, sizeof(reason), "Callback flood");
		case 50: format(reason, sizeof(reason), "Seat flood");
		case 51: format(reason, sizeof(reason), "DDoS");
		case 52: format(reason, sizeof(reason), "NOP");
		case 53: format(reason, sizeof(reason), "Anti-Fast Movement");
		default: format(reason, sizeof(reason), "Unknown");
	}
	return reason;
}
new NombreHerramienta[5][] =
{
	"",
	""CR"Martillo"CB" | ",
	""CR"Destornillador"CB" | ",
	""CR"Barreta"CB" | ",
	""CR"Balde"CB" | "
};

new Float:DueloPos[MAX_ARENAS][8] =
{
	{1558.7419,-1353.2338,329.4609,89.9042,1533.1566,-1353.7421,329.4535,270.6758},
	{-1641.390258,1016.321777,69.827957,358.746948,-1641.079345,1061.848388,69.827957,179.832138},
	{-1967.517822,1206.827026,75.179687,92.120841,-2000.925781,1205.314331,75.179687,267.879150},
	{-2031.725952,-275.021331,35.327392,0.019782,-2031.892456,-216.899246,35.320312,178.601699},
	{1416.2,-18.9,1000.9,93.4,1361.1,-20.0,1000.9,271.4}
};

new Float:CamioneroPos[9][3] =
{
	{1832.3918,-1832.4200,13.1546},
	{1338.6766,-912.8005,35.6672},
	{455.0953,-1502.9357,30.8655},
	{810.9319,-1391.0319,13.8416},
	{488.1939,-1277.0747,15.9604},
	{2169.3521,-2275.2957,13.1360},
	{2480.9316,-2115.3042,13.2740},
	{2169.3521,-2275.2957,13.1360},
	{2169.3521,-2275.2957,13.1360}
};

new Float:QuimicosSpawn[30][3] = {
	//Reco 1
	{-1857.837891, 111.288147, 14.591300},
	{-1860.744751, 110.884758, 14.591300},
	{-1863.086792, 111.258713, 14.591300},
	{-1859.877441, 113.126198, 14.591300},
	{-1862.731934, 113.749191, 14.591300},
	//Reco 2
	{-1043.100586, 1554.120361, 32.809502},
	{-1045.420166, 1554.128418, 32.809502},
	{-1044.323853, 1551.946411, 32.869499},
	{-1047.568237, 1552.777954, 32.809502},
	{-1044.697388, 1549.801025, 32.809502},
	//Reco 3
	{-30.697500, 2346.327148, 23.615999},
	{-33.349918, 2346.823730, 23.615999},
	{-28.303591, 2348.099854, 23.615999},
	{-30.848129, 2349.221680, 23.775999},
	{-33.489899, 2349.594238, 23.775999},
	//Reco 4
	{-2179.781738, 1219.510498, 33.389678},
	{-2176.4248,1218.0623,33.389678},
	{-2177.363769, 1219.780273, 33.389678},
	{-2178.619873, 1217.734863, 33.389678},
	{-2181.638183, 1218.225341, 33.389678},
	//Reco 5
	{-94.854942, 1164.948364, 19.182197},
	{-95.807075, 1162.775756, 19.182197},
	{-92.635757, 1164.888305, 19.182197},
	{-93.769378, 1163.335205, 19.182197},
	{-94.636360, 1161.473632, 19.182197},
	//Reco 6
	{1201.853393, -979.365905, 42.946552},
	{1202.385131, -977.405883, 42.946552},
	{1204.257934, -975.843750, 42.946552},
	{1204.454345, -978.107971, 42.946552},
	{1201.264892, -976.040588, 42.946552}
};

new Float:ClientesPizzaPos[27][4] = {
	{368.1588,-121.2111,1001.4922,178.5300},
	{374.8390,-123.0999,1001.4995,86.4092},
	{380.0110,-121.3152,1001.4922,176.6967},
	{379.0313,-130.5728,1001.4922,179.5401},
	{374.8392,-122.0296,1001.4995,86.7225},
	{367.4007,-121.2136,1001.4922,182.9401},
	{379.0701,-121.3152,1001.4922,178.8901},
	{373.1400,-122.1358,1001.4922,267.8309},
	{379.9969,-132.5264,1001.4922,356.5750},
	{367.4405,-124.2917,1001.4922,178.6983},
	{373.1407,-123.2160,1001.4922,265.3242},
	{379.9199,-124.4087,1001.4922,175.1300},
	{379.1933,-132.5263,1001.4922,357.2017},
	{373.1407,-129.0824,1001.4922,269.4210},
	{368.2176,-124.2887,1001.4922,179.0117},
	{379.0289,-124.4087,1001.4922,178.2634},
	{374.8391,-128.9815,1001.4922,92.3859},
	{367.3884,-126.4910,1001.4922,358.0717},
	{380.0550,-126.3621,1001.4922,0.3118},
	{373.1403,-126.7959,1001.4995,270.6509},
	{368.4168,-126.4901,1001.4922,359.9518},
	{379.1277,-126.3626,1001.4922,0.6251},
	{367.3326,-130.4516,1001.4995,177.7584},
	{380.0140,-130.5729,1001.4922,177.9734},
	{368.2003,-130.4510,1001.4995,179.8066},
	{367.3877,-132.6801,1001.4922,357.1316},
	{368.4225,-132.6568,1001.4922,359.3250}
};

new Float:MunicipioSpawn[][4] = {
	{-69.8886,-376.9973,5.3624,359.6458},
	{-63.1836,-376.9377,5.3618,359.9703},
	{-56.5133,-376.7501,5.3587,358.9810},
	{-49.7067,-376.9010,5.3573,359.6844},
	{-43.1391,-377.2799,5.3622,359.9459},
	{-36.3385,-377.2273,5.3649,359.2189},
	{-29.7386,-376.9615,5.3641,359.2311},
	{-22.9762,-377.1791,5.3579,359.5513},
	{-16.3978,-377.2925,5.3616,359.0818},
	{-9.6178,-377.1138,5.3645,359.1987},
	{-3.0206,-376.7334,5.3657,358.9720},
	{-1.8930,-364.4931,5.3670,88.8586},
	{-2.2735,-357.4389,5.3614,89.5407},
	{-1.8702,-350.3465,5.3599,89.6636},
	{-1.3883,-343.3989,5.3642,88.8626},
	{-1.3787,-336.4987,5.3628,89.6434},
	{-2.1797,-329.2359,5.3594,89.3031},
	{-1.2328,-322.2815,5.3629,88.6127},
	{-1.3583,-315.2017,5.3544,89.6427},
	{-1.7984,-308.2969,5.3581,89.1719},
	{-1.8312,-301.1761,5.3533,89.9832},
	{-30.3675,-276.7559,5.3561,269.8952},
	{-30.8930,-283.4798,5.3581,268.9135},
	{-30.1059,-290.2865,5.3649,269.2405},
	{-30.3592,-297.0647,5.3611,269.4287},
	{-60.1917,-324.9174,5.3606,268.8273},
	{-62.0183,-317.8376,5.3690,269.1671},
	{-61.2118,-310.9119,5.3625,270.1884},
	{-61.0825,-303.8538,5.3670,270.4165}
};

new Float:TiendaSpawn[13][3] = {
	{373.7276,-118.139,1001.5815},
	{-30.7663,-185.6644,1007.6372},
	{-28.0220,-90.6780,1003.6069},
	{-1072.0608,355.1601,1180.5737},
	{161.3754,-82.2710,1001.8751},
	{499.7372,-76.7541,998.9347},
	{-224.0527,1404.2229,27.7670},
	{206.9619,-128.4579,1003.5167},
	{204.3025,-158.6201,1000.6491},
	{205.6496,-7.1512,1001.3479},
	{207.5762,-99.5911,1005.3755},
	{203.8595,-42.5291,1001.9111},
	{-103.9781,-23.4072,1000.8127}
};

new Float:ArrestoPlayer[13][4] = {
	{371.4119,-125.6517,1001.4995,176.9535},
	{-29.5868,-184.0306,1007.7300,210.4233},
	{-28.2049,-88.5598,1003.5469,129.2469},
	{-1073.4072,351.5343,1180.5259,176.2505},
	{161.3017,-85.3965,1001.8047,177.7994},
	{501.8282,-74.1327,998.7651,356.6331},
	{-223.1378,1400.3865,27.7656,85.1582},
	{208.5497,-134.4030,1002.8672,148.1734},
	{204.3800,-161.1452,1000.5234,1.0567},
	{207.2576,-5.2545,1001.2109,234.9676},
	{206.0417,-105.7682,1005.1328,209.0776},
	{206.9745,-44.9442,1001.8047,136.1332},
	{-105.3483,-21.8113,1000.7188,245.4882}
};

new Float:ActorPolice[13][4] = {
	{371.4698,-130.4463,1001.4922,359.2724},
	{-27.2578,-186.9272,1007.7300,35.3061},
	{-30.6049,-90.8768,1003.5469,309.4987},
	{-1073.4751,343.6124,1180.5259,0.2358},
	{161.4543,-92.5476,1001.8047,359.9225},
	{501.9413,-69.1864,998.7578,182.1566},
	{-227.1336,1400.4722,27.7656,269.4151},
	{207.3061,-138.5299,1003.5078,336.7824},
	{204.4492,-166.6883,1000.5234,359.6326},
	{211.6536,-9.2133,1001.2109,41.9565},
	{208.5943,-108.7422,1005.1328,40.0530},
	{204.6467,-48.5070,1001.8047,323.5989},
	{-99.5681,-23.8354,1000.7188,68.5666}
};

new Float:ArrestoCamaras[13][6] = {
	{368.629272, -133.083389, 1003.765319,371.259216, -129.624114, 1001.292053,},
	{-31.830387, -180.065200, 1009.786743,-29.616111, -183.966979, 1007.579223,},
	{-37.421806, -91.378845, 1006.045104,-32.977092, -89.964462, 1004.243957},
	{-1067.026977, 354.484313, 1182.926147,-1070.221191, 350.950103, 1181.407592},
	{161.215789, -76.693878, 1004.051147, 161.188919, -81.495925, 1002.658447},
	{513.622619, -70.683204, 1001.156616, 508.783599, -71.487762, 1000.188903},
	{-222.557174, 1406.088256, 29.345586, -225.184326, 1402.322021, 27.367275},
	{216.196975, -126.459320, 1005.258911,212.111236, -128.971389, 1003.846069},
	{198.659957, -167.768859, 1003.337829, 202.241333, -164.831680, 1001.454589},
	{209.147720, -6.017868, 1001.247802,204.448379, -4.317483, 1001.405639},
	{200.069580, -105.168289, 1006.871520,204.638442, -106.417686, 1005.270141},
	{210.234207, -40.910587, 1004.052856,206.272994, -43.211719, 1002.049438},
	{-106.966796, -16.796775, 1003.381835,-103.972023, -20.407512, 1001.651550}
};

new Float:PosicionesCoc[5][3] = {
	{-2017.67334, 227.02380, 1035.15454},
	{-2013.86060, 227.05284, 1035.15454},
	{-2009.98157, 227.00481, 1035.15454},
	{-2006.16040, 226.99612, 1035.15454},
	{-2002.34033, 227.01234, 1035.15454}
};

new Float:PosicionesCoc2[5][4] = {
	{-2016.4310,227.9705,1035.8162,180.0000},
	{-2012.5667,226.0623,1035.8225,0.0000},
	{-2008.7354,227.9745,1035.8162,180.0000},
	{-2004.8615,226.0628,1035.8162,0.0000},
	{-2001.0369,227.9719,1035.8162,180.0000}
};

new Float:PosicionesGuardias[5][5] = {
	{-1983.3815,207.0429,1040.0468,76.4343},
	{-2010.1060,208.9797,1035.8162,272.1400},
	{-2016.1063,233.2106,1035.8162,229.3722},
	{-2022.6560,243.8168,1035.8162,145.2300},
	{-2023.5002,244.8579,1035.8389,1.5771}
};

new Float:FortCarsonSpawn[30][3] = {
	{172.0682,1438.3047,1084.8462},{175.9516,1438.9554,1084.8462},{179.7587,1438.0883,1084.8462},{183.7799,1438.3221,1084.8462},{187.7992,1437.8352,1084.8462},{191.7423,1437.8417,1084.8462},
	{195.5862,1438.1899,1084.8462},{199.4962,1438.1758,1084.8462},{199.1098,1460.8811,1084.8462},{195.6922,1460.6552,1084.8462},{191.7911,1460.3043,1084.8462},{187.8092,1460.7742,1084.8462},
	{184.1076,1460.0978,1084.8462},{180.1715,1460.2877,1084.8462},{176.3600,1460.4807,1084.8462},{172.5534,1460.7180,1084.8462},{176.1593,1459.1552,1089.1055},{179.9729,1459.4087,1089.1055},
	{183.8501,1459.5066,1089.1055},{187.5735,1459.2120,1089.1055},{191.6875,1460.0719,1089.1055},{195.4530,1459.6787,1089.1055},{199.5654,1459.7024,1089.1055},{199.6154,1438.9169,1089.1055},
	{195.7357,1439.0088,1089.1055},{191.8590,1439.1483,1089.1055},{188.0030,1438.9355,1089.1055},{184.1357,1439.2328,1089.1055},{180.1986,1438.7174,1089.1055},{176.3905,1439.0450,1089.1055}
};

new PrecioTransfender[] =
{
	400, 550, 200, 250, 100, 150, 80, 500, 500, 200, 1000, 220, 250, 100, 400,
	500, 200, 500, 350, 300, 250, 200, 150, 350, 50, 1000, 480, 480, 770, 680, 370,
	370, 170, 120, 790, 150, 500, 690, 190, 390, 500, 390, 1000, 500, 500, 510, 710,
	670, 530, 810, 620, 670, 530, 130, 210, 230, 520, 430, 620, 720, 530, 180, 550, 430,
	830, 850, 750, 250, 200, 550, 450, 550, 450, 1100, 1030, 980, 1560, 1620, 1200,
	1030, 900, 1230, 820, 1560, 1350, 770, 100, 1500, 150, 650, 450, 100, 750,
	350, 450, 350, 1000, 620, 1140, 1000, 940, 780, 830, 3250, 1610, 1540, 780, 780, 780,
	1610, 1540, 0, 0, 3340, 3250, 2130, 2050, 2040, 780, 940, 780, 940, 780, 860,
	780, 1120, 3340, 3250, 3340, 1650, 3380, 3290, 1590, 830, 800, 1500, 1000, 800,
	580, 470, 870, 980, 150, 150, 100, 100, 490, 600, 890, 1000, 1090, 840, 910,
	1200, 1030, 1030, 920, 930, 550, 1050, 1050, 950, 650, 450, 550, 850, 950,
	850, 950, 970, 880, 990, 900, 950, 1000, 900, 1000, 900, 2050, 2150, 2130,
	2050, 2130, 2040, 2150, 2040, 2095, 2175, 2080, 2200, 1200, 1040, 940, 1100
};

new ComponentesCheck[] =
{
	0x033C2700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x021A27FA, 0x00000000, 0x00FFFE00,
	0x00000007, 0x0003C000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x023B2785, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02BC4703, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x03BA278A, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x028E078A, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02310744, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x0228073A, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02BD4701, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x023A2780, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x0228077A, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x027A27CA, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x0282278A, 0x00000000, 0x00FFFE00, 0x00000007, 0x0003C000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x023E07C0, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x03703730, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x031D2775, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02BE4788, 0x00000000, 0x00FFFE00,
	0x00000007, 0x0003C000, 0x00000000, 0x02010771, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x029A0FCE, 0x00000000, 0x00FFFE00, 0x00000007, 0x0000C000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x03382700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x023F8795, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x029F078C, 0x00000000, 0x00FFFE00, 0x00000007, 0x0003C000, 0x00000000, 0x029627EA, 0x00000000, 0x00FFFE00,
	0x00000007, 0x0003C000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x0236C782, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x029E1FCA, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0xFC000437, 0x00000000, 0x021C0000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x03FE6007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00001B87, 0x00000001, 0x01E00000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x039E07D2, 0x00000000, 0x00FFFE00, 0x00000007, 0x0003C000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x023CC700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00030000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x038E07D6, 0x00000000, 0x00FFFE00, 0x00000007, 0x0003C000, 0x00000000,
	0x023D0709, 0x00000000, 0x00FFFE00, 0x00000007, 0x0000C000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x029E1F8A, 0x00000000, 0x00FFFE00, 0x00000007, 0x0003C000, 0x00000000,
	0x029C077A, 0x00000000, 0x00FFFE00, 0x00000007, 0x0003C000, 0x00000000, 0x02BD076C, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0xFFFFFE00, 0x00000007, 0x00000000, 0x000001F8,
	0x02000700, 0x00000000, 0x00FFFFFE, 0x00000007, 0xC0000000, 0x00002007, 0xFE000700, 0x00000003, 0x00FFFE00,
	0x00000007, 0x00003C00, 0x00000600, 0xCE000700, 0xFF800000, 0x00FFFE01, 0x00000007, 0x3C000000, 0x00000000,
	0x02000700, 0x000003FC, 0x00FFFE00, 0x00000007, 0x003C0000, 0x00001800, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x007FE000, 0x00FFFE00, 0x00000007, 0x03C00000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000047, 0x0000003E, 0x3C000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00001C00, 0x00FFFE00,
	0x0000000F, 0x00000000, 0x0003C000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x000003C0, 0xC0000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x029607C2, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x03FFE7CF, 0x00000000, 0x00FFFE00, 0x00000007, 0x0003C000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x031727F1, 0x00000000, 0x00FFFE00, 0x00000007, 0x00030000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x025627F0, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x039E07C2, 0x00000000, 0x00FFFE00, 0x00000007, 0x0003C000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000
};

new Float:DineroSpawn1[7][3] = {
	{1219.4506, -6.7681, 1000.3845},
	{1219.7976, -6.8836, 1000.3845},
	{1219.9985, -7.0584, 1000.3845},
	{1219.6404, -7.0946, 1000.3845},
	{1219.4285, -6.9823, 1000.3845},
	{1219.3450, -7.1265, 1000.3845},
	{1219.5104, -7.2973, 1000.3845}
};

new TimerAudio[MAX_PLAYERS];
new Float:DineroSpawn2[12][3] =
{
	{1214.65063, -4.69790, 1000.38452},
	{1214.14819, -4.23293, 1000.38452},
	{1214.53308, -4.04349, 1000.38452},
	{1214.60669, -4.41849, 1000.38452},
	{1214.12769, -4.46524, 1000.38452},
	{1214.36548, -4.61390, 1000.38452},
	{1214.47095, -4.19637, 1000.38452},
	{1214.20825, -3.98005, 1000.38452},
	{1213.84241, -4.38125, 1000.38452},
	{1213.93042, -4.66804, 1000.38452},
	{1214.29126, -4.78296, 1000.38452},
	{1214.34155, -4.37421, 1000.38452}
};

new Float:DineroSpawn3[17][3] = {
	{1202.96399, 8.28210, 999.92468},
	{1202.75500, 8.12750, 999.92468},
	{1202.69250, 8.37438, 999.92468},
	{1202.84998, 8.55979, 999.92468},
	{1203.11084, 8.45035, 999.92468},
	{1203.26245, 8.19671, 999.92468},
	{1203.00867, 8.04549, 999.92468},
	{1202.72449, 7.95939, 999.92468},
	{1203.16357, 7.83645, 999.92468},
	{1202.79993, 7.77427, 999.92468},
	{1202.38135, 7.93154, 999.92468},
	{1203.31152, 8.00469, 999.92468},
	{1203.44116, 8.41645, 999.92468},
	{1203.38232, 8.70793, 999.92468},
	{1203.12512, 8.74535, 999.92468},
	{1202.73047, 8.74830, 999.92468},
	{1202.73047, 8.74830, 999.92468}
};

new Float:DineroSpawn4[17][3] =
{
	{1221.45471, 8.70950, 1000.38733},
	{1221.18079, 8.95026, 1000.38733},
	{1221.64392, 9.20410, 1000.38733},
	{1221.03357, 8.71232, 1000.38733},
	{1220.81445, 8.96599, 1000.38733},
	{1220.77930, 8.68179, 1000.38733},
	{1220.98523, 9.16584, 1000.38733},
	{1221.35608, 9.19465, 1000.38733},
	{1221.58569, 8.95798, 1000.38733},
	{1221.34583, 8.49501, 1000.38733},
	{1221.00684, 8.51719, 1000.38733},
	{1221.30237, 8.80439, 1000.38733},
	{1221.68201, 8.54490, 1000.38733},
	{1221.73621, 8.74649, 1000.38733},
	{1221.88123, 9.05650, 1000.38733},
	{1221.11169, 8.30978, 1000.38733},
	{1221.55042, 8.29642, 1000.38733}
};

new Float:DineroSpawn5[14][3] =
{
	{1207.96570, -6.90310,1000.38733},
	{1208.19617, -6.73263,1000.38733},
	{1207.97278, -6.56259,1000.38733},
	{1208.36243, -6.45283,1000.38733},
	{1208.52686, -6.81083,1000.38733},
	{1208.20422, -7.08637,1000.38733},
	{1208.58374, -6.59465,1000.38733},
	{1208.57703, -6.26913,1000.38733},
	{1208.25940, -6.17592,1000.38733},
	{1207.94446, -6.35177,1000.38733},
	{1207.91321, -6.08451,1000.38733},
	{1208.63062, -5.99649,1000.38733},
	{1208.85559, -6.40737,1000.38733},
	{1208.88074, -6.13652, 1000.38733}
};

new Float:DineroSpawn6[11][3] =
{
	{1203.41333, -8.66540, 1001.10388},
	{1203.19043, -8.34746, 1001.10388},
	{1203.29358, -8.47133, 1001.10388},
	{1203.10022, -8.61934, 1001.10388},
	{1202.93945, -8.46910, 1001.10388},
	{1202.90540, -8.30045, 1001.10388},
	{1203.38538, -8.25599, 1001.10388},
	{1203.04211, -8.15435, 1001.10388},
	{1202.86487, -8.78291, 1001.10388},
	{1202.84534, -8.62792, 1001.10388},
	{1203.17700, -8.80070, 1001.10388}
};

enum IntFijoInfo
{
	Float:int_Pickup_X,	Float:int_Pickup_Y,	Float:int_Pickup_Z,	int_Tipo,	int_InteriorID,	int_Nombre[128]
}
new DynamicHousesInfo[][IntFijoInfo] =
{
	{0.0,0.0,0.0, 0, 0, ""},
	{1172.0809,-1323.3261,15.4029, DH_TIPO_HOSPITAL, 2, "All Saints General Hospital"},
	{2034.1003,-1401.6727,17.2941, DH_TIPO_HOSPITAL, 1, "County General Hospital"},
	{1607.4504,1815.2471,10.8203, DH_TIPO_HOSPITAL, 1, "Las Venturas Hospital"},
	{-2661.7305,599.8032,14.4531, DH_TIPO_HOSPITAL, 1, "San Fierro Hospital"},
	{1555.3919,-1675.5589,16.1953, DH_TIPO_COMISARIA, 18, "Departamento de polic�a"},
	{2287.1091,2432.3657,10.8203, DH_TIPO_COMISARIA, 19, "Departamento de polic�a"},
	{-1605.5440,711.4725,13.8671, DH_TIPO_COMISARIA, 18, "Departamento de polic�a"},
	{-1808.7142,945.9161,24.8906, DH_TIPO_PIZZERIA, 25, "The Well Stacked Pizza"},
	{-1720.9456,1359.7822,7.1853, DH_TIPO_PIZZERIA, 25, "The Well Stacked Pizza"},
	{2083.3376,2224.7012,11.0234, DH_TIPO_PIZZERIA, 25, "The Well Stacked Pizza"},
	{2756.7642,2477.3533,11.0625, DH_TIPO_PIZZERIA, 25, "The Well Stacked Pizza"},
	{2638.7839,1849.7867,11.0234, DH_TIPO_PIZZERIA, 25, "The Well Stacked Pizza"},
	{2331.8098,75.0506,26.6210, DH_TIPO_PIZZERIA, 25, "The Well Stacked Pizza"},
	{1367.5475,248.2522,19.5669, DH_TIPO_PIZZERIA, 25, "The Well Stacked Pizza"},
	{203.3945,-201.9418,1.5781, DH_TIPO_PIZZERIA, 25, "The Well Stacked Pizza"},
	{2105.4844,-1806.4695,13.5547, DH_TIPO_PIZZERIA, 25, "The Well Stacked Pizza"},
	{2351.8242,2533.6289,10.8203, DH_TIPO_PIZZERIA, 25, "The Well Stacked Pizza"},
	{2330.6023,2533.6121,10.8203, DH_TIPO_PIZZERIA, 25, "The Well Stacked Pizza"},
	{2309.5044,2533.6143,10.8203, DH_TIPO_PIZZERIA, 25, "The Well Stacked Pizza"},
	{1094.0945,1597.0083,12.5469, DH_TIPO_ESTADIO, 32, "Estadio Las Venturas"},
	{1833.7745,-1842.4498,13.5781, DH_TIPO_24/7, 5, "24/7"},
	{1000.5937,-919.9277,42.3281, DH_TIPO_24/7, 6, "24/7"},
	{2247.6574,2396.1682,10.8203, DH_TIPO_24/7, 6, "24/7"},
	{1112.0471,-1370.0366,13.9843, DH_TIPO_24/7, 6, "24/7"},
	{1315.5830, -897.7324, 39.5781, DH_TIPO_24/7, 5, "24/7"},
	{2424.2266, -1742.7798, 13.5457, DH_TIPO_24/7, 5, "24/7"},
	{2194.9385, 1991.0005, 12.2969, DH_TIPO_24/7, 6, "24/7"},
	{2097.6768, 2224.6963, 11.0234, DH_TIPO_24/7, 5, "24/7"},
	{1937.8212, 2307.2593, 10.8203, DH_TIPO_24/7, 5, "24/7"},
	{1565.6444,-1171.1234,24.0931, DH_TIPO_24/7, 6, "24/7"},
	{1928.5809,-1776.2848,13.5469, DH_TIPO_NORMAL, 31, "Tienda de autoservicio"},
	{1000.5939,-919.9257,42.3281, DH_TIPO_NORMAL, 31, "Tienda de autoservicio"},
	{-78.3736,-1169.9005,2.1355, DH_TIPO_NORMAL, 31, "Tienda de autoservicio"},
	{-1676.1718,432.1964,7.1797, DH_TIPO_NORMAL, 31, "Tienda de autoservicio"},
	{-2420.1506,969.8429,45.2969, DH_TIPO_NORMAL, 31, "Tienda de autoservicio"},
	{-1320.4795,2698.6536,50.2663, DH_TIPO_NORMAL, 31, "Tienda de autoservicio"},
	{639.0652,1683.3542,7.1875, DH_TIPO_NORMAL, 31, "Tienda de autoservicio"},
	{1599.0673,2221.8108,11.0625, DH_TIPO_NORMAL, 31, "Tienda de autoservicio"},
	{2637.2786,1129.6777,11.1797, DH_TIPO_NORMAL, 31, "Tienda de autoservicio"},
	{2117.5002,896.7776,11.1797, DH_TIPO_NORMAL, 31, "Tienda de autoservicio"},
	{2344.0371,583.3854,11.2078, DH_TIPO_NORMAL, 31, "Tienda de autoservicio"},
	{2187.7114,2469.6384,11.2422, DH_TIPO_NORMAL, 31, "Tienda de autoservicio"},
	{2310.0407,-1643.4899,14.8270, DH_TIPO_NORMAL, 8, "Bar"},
	{824.6143,860.6437,12.2336, DH_TIPO_NORMAL, 7, "Bar"},
	{-1821.9484,-125.7622,5.6484, DH_TIPO_NORMAL, 7, "Bar"},
	{1137.9938,-1365.5095,13.9843, DH_TIPO_NORMAL, 3, "Sex Shop"},
	{2085.1201,2074.0693,11.0546, DH_TIPO_NORMAL, 3, "Sex Shop"},
	{2515.3167, 2297.3269, 10.8203, DH_TIPO_NORMAL, 3, "Sex Shop"},
	{1498.3905,-1581.2242,13.5498, DH_TIPO_BANCO, 23, "Banco Plaza"},
	{-1581.3144,867.9341,7.6953, DH_TIPO_BANCO, 17, "Banco central de San Fierro"},
	{1466.3624,-1009.9306,26.8437, DH_TIPO_BANCO, 27, "Banco central de Los Santos"},
	{2449.4663, 2290.2431, 10.8203, DH_TIPO_BANCO, 27, "Banco central de Las Venturas"},
	{1456.4036,-1137.6667,23.9483, DH_TIPO_TIENDA, 16, "ZIP"},
	{454.2059,-1478.0029,30.8145, DH_TIPO_TIENDA, 13, "Didder Sachs"},
	{461.6936,-1500.8106,31.0455, DH_TIPO_TIENDA, 12, "Victim"},
	{499.5280,-1360.6315,16.3689, DH_TIPO_TIENDA, 14, "Pro Laps"},
	{2244.3674,-1665.5603,15.4765, DH_TIPO_TIENDA, 11, "Binco"},
	{2112.8615,-1211.4549,23.9628, DH_TIPO_TIENDA, 15, "Sub Urban"},
	{-1480.9353,2591.6696,55.8359, DH_TIPO_NORMAL, 9, "Ferreter�a"},
	{2107.7407,2165.6501,10.8203, DH_TIPO_NORMAL, 9, "Ferreter�a"},
	{2861.2902,2430.7707,11.0689, DH_TIPO_NORMAL, 9, "Ferreter�a"},
	{1836.9897,-1682.4479,13.3248, DH_TIPO_NORMAL, 10, "Alhambra"},
	{1707.3498,950.1061,10.8203, DH_TIPO_NORMAL, 22, "HS Haul"},
	{224.2623,1443.8137,10.8052, DH_TIPO_NORMAL, 4, "Penitenciar�a de Fort Carson"},
	{-611.3183, 2325.3333, 79.5786, DH_TIPO_MINA, 28, "Mina Castillo del Diablo"},
	{1742.9369, -1864.4482, 13.5738, DH_TIPO_BANCO, 20, "Unity Station"},
	{2229.9121, -1721.2922, 13.5616, DH_TIPO_NORMAL, 24, "GYM Ganton"},
	{-550.2115,2347.3640,76.3864, DH_TIPO_NORMAL, 29, "Empleados solamente"},
	{-384.8158, 2206.0991, 42.4235, DH_TIPO_NORMAL, 30, "Bone Country Minera S.A."},
	{2362.7698,2306.3025,8.1406, DH_TIPO_NORMAL, 33, "Academia de polic�a"},
	{2014.8101,1107.0100,10.9203, DH_TIPO_LOVE, 33, "Club de striptease"},
	{-2425.9731,1034.6635,50.3906, DH_TIPO_SPRAY, 33, "Paint's Spray"},
	{488.8548,-1729.9846,11.1288, DH_TIPO_SPRAY, 33, "Paint's Spray"},
	{-1904.6188,272.1454,41.0469, DH_TIPO_SPRAY, 33, "Paint's Spray"},
	{2076.4985,-1831.2183,13.5545, DH_TIPO_SPRAY, 33, "Paint's Spray"},
	{-99.8633,1104.8828,19.7422, DH_TIPO_SPRAY, 33, "Paint's Spray"},
	{1961.2501,2162.3440,10.8203, DH_TIPO_SPRAY, 33, "Paint's Spray"},
	{1025.1273,-1033.7855,31.7578, DH_TIPO_SPRAY, 33, "Paint's Spray"},
	{720.2676,-466.9585,16.3437, DH_TIPO_SPRAY, 33, "Paint's Spray"},
	{-1420.9324,2595.5127,55.7080, DH_TIPO_SPRAY, 33, "Paint's Spray"}
};


/*
new const Float:portones[][] =
{
	// 0 = id objeto, 1-6 = Porton cerrado,       							//desde aqui empieza el abierto								//Facci�n ID
	{980, 1025.187622, -365.760131, 75.695007, 0.000000, 0.000000, 0.000000, 1025.18762, -365.76010, 70.07100, 0.00000, 0.00000, 0.00000, 5},
	{}
};*/

new const Float:paynspray[][] =
{
	{1025.05, -1024.23, 32.1},	// LS Temple
	{487.68, -1740.87, 11.13},	// LS Santa Maria
	{-1420.73, 2583.37, 55.56},	// El Quebrados
	{-1904.39, 284.97, 40.75},	// Wang Cars
	{-2425.91, 1022.33, 50.10},	// Juniper Hill
	{1975.60, 2162.16, 10.77},	// LV Redsands
	{2065.38, -1831.51, 13.25},	// Idlewood
	{-99.55, 1118.36, 19.44},	// t Carson
	{721.07, -455.94, 16.04}	// Dillimore
	//{2393.74, 1493.01, 10.52}	// LV Unused (Pyramid)
};


new const Float:hospitales[][] =
{
	{1191.43,-1326.39,13.40}, //hp central
	{2030.36,-1419.79,16.99}, //hp groove
	{1605.58,1830.17,10.82}, // hp lv
	{-2662.87,631.44,14.45} // hp sf
	
};

new Float:ConceSpawn[7][4] =
{
	{1594.9730,-1010.2951,24.6063,187.5361},{1648.3289,-1089.2202,23.6109,90.7212},{1700.3760,-1070.1266,23.6113,180.0457},{1752.6080,-1014.8112,23.6657,167.1269},{1740.2095,-1084.4073,23.6660,359.0909},
	{1677.0603,-1106.6633,23.6120,91.0374},{1558.2231,-1012.6805,23.6114,180.1122}
};

new Float:ConceHeliSpawn[6][4] =
{
	{1981.8584,-2371.3872,14.0095,90.0000},{1986.6873,-2392.7295,14.0095,90.0000},{1987.0623,-2327.1477,14.0095,90.0000},{1986.8376,-2304.5823,14.0095,90.0000},{1986.8013,-2260.5063,14.0095,90.0000},
	{2012.8467,-2441.5562,14.0095,90.0000}
};

new Float:ConceBSpawn[3][4] = { {720.7311,-1631.8506,-0.3845,177.5780},{731.7709,-1672.6738,-0.3929,181.6829},{720.1028,-1697.5327,-0.6295,180.0758} };

new Float:EstacionamientoSpawn[87][4] =
{
	{1700.9434,-1893.0575,-49.5459,359.1727},{1692.1959,-1892.3928,-49.5500,358.5018},{1687.4604,-1892.0718,-49.5457,359.5341},{1683.2198,-1891.9866,-49.5437,359.3870},{1678.6841,-1891.8391,-49.5452,359.3071},
	{1674.3474,-1891.7332,-49.5457,358.7783},{1670.0671,-1891.9661,-49.5439,358.9673},{1661.3129,-1891.8578,-49.5450,357.9927},{1652.4753,-1892.2537,-49.5214,359.0848},{1648.3402,-1892.2540,-49.5463,359.1805},
	{1643.7401,-1892.3600,-49.5437,358.9878},{1635.0544,-1892.2921,-49.5446,359.0557},{1630.7037,-1891.9773,-49.5178,359.3072},{1624.9020,-1885.8916,-49.5503,269.3125},{1624.9250,-1881.2821,-49.5458,270.2203},
	{1624.6895,-1876.6132,-49.5436,269.3907},{1624.7087,-1871.7465,-49.5199,270.7915},{1624.8037,-1866.7968,-49.5450,268.8862},{1624.8608,-1862.1732,-49.5446,269.6339},{1625.0593,-1857.2717,-49.5470,267.8584},
	{1624.9291,-1852.4271,-49.5458,269.1884},{1624.5190,-1847.6683,-49.5460,269.2230},{1643.8900,-1848.1674,-49.5444,356.9514},{1661.1975,-1848.7606,-49.5454,359.7119},{1682.9938,-1859.1254,-49.5460,270.7711},
	{1683.1062,-1863.2749,-49.5530,268.7698},{1682.7625,-1867.3658,-49.5182,269.2705},{1682.2968,-1872.0295,-49.5421,268.7775},{1692.0452,-1892.4513,-60.2719,359.0346},{1687.5537,-1891.8564,-60.2702,359.4271},
	{1678.9497,-1892.2196,-60.2717,358.1399},{1648.4669,-1891.5432,-60.2703,359.9407},{1643.8351,-1892.3015,-60.2711,359.1833},{1634.9308,-1892.0286,-60.2469,359.3054},{1624.5059,-1886.2368,-60.2436,270.3784},
	{1624.8840,-1881.0900,-60.2731,269.9742},{1625.0099,-1876.4462,-60.2453,272.3181},{1624.8190,-1852.7928,-60.2807,268.3029},{1624.3732,-1847.9072,-60.2442,271.4542},{1648.2174,-1849.0896,-60.2706,358.6554},
	{1661.0142,-1849.0599,-60.2452,359.5746},{1669.9652,-1848.4615,-60.2729,359.4380},{1682.5824,-1858.9597,-60.2738,269.5594},{1682.1111,-1863.0200,-60.2724,271.0364},{1682.3948,-1867.2174,-60.2725,269.7123},
	{1682.8677,-1871.9066,-60.2774,270.5558},{1698.5054,-1868.1997,-49.5449,90.5219},{1698.6495,-1863.1975,-49.5454,89.9168},{1698.7686,-1858.2522,-49.5480,91.1162},{1699.0171,-1853.0203,-49.5453,91.0152},
	{1698.3234,-1848.2490,-49.5494,91.2853},{1698.7477,-1843.3202,-49.5452,90.9259},{1698.1277,-1838.2383,-49.5191,89.5903},{1699.2198,-1833.3199,-49.5450,89.8076},{1699.1166,-1828.4044,-49.5181,92.6670},
	{1698.2000,-1823.2429,-49.5463,90.9048},{1698.7080,-1823.0408,-60.2779,89.5352},{1699.1685,-1828.2711,-60.2722,89.1948},{1698.3683,-1833.1237,-60.2443,88.8886},{1698.5221,-1838.2834,-60.2743,90.4589},
	{1699.1111,-1843.2233,-60.2729,90.1863},{1698.2303,-1848.1890,-60.2713,89.2910},{1698.6639,-1853.1273,-60.2731,89.2623},{1698.7783,-1858.1204,-60.2726,89.9146},{1698.5807,-1863.0490,-60.2723,90.2713},
	{1698.5999,-1867.9010,-60.2711,89.7022},{1696.6182,-1893.3223,-49.5174,2.0531},{1656.8086,-1892.0720,-49.5456,0.2596},{1639.4436,-1891.7799,-49.5199,0.0611},{1647.8235,-1848.3661,-49.5179,0.5933},
	{1652.1539,-1848.6429,-49.5468,0.6608},{1656.4976,-1848.3142,-49.5185,1.1586},{1665.6100,-1848.9293,-49.5456,0.2534},{1670.0616,-1848.5620,-49.5184,1.0163},{1700.9070,-1891.7345,-60.2478,0.7216},
	{1696.3022,-1891.9620,-60.2723,0.0890},{1683.2422,-1891.8271,-60.2709,0.1301},{1674.4420,-1891.9174,-60.2717,1.0014},{1670.2343,-1892.0488,-60.2461,0.0316},{1661.3765,-1891.9287,-60.2478,0.8051},
	{1656.9729,-1892.1548,-60.2722,0.3159},{1652.5803,-1891.8945,-60.2742,1.0098},{1639.4609,-1892.2233,-60.2710,0.4207},{1630.4873,-1892.0220,-60.2705,1.2220},{1652.2684,-1848.9530,-60.2729,0.5955},
	{1656.7208,-1849.1294,-60.2712,0.2793},{1665.4950,-1848.5863,-60.2708,0.8123}
};

new Float:EstaCamioneroSpawn[62][4] =
{
	{2104.4485,2390.0676,49.2689,269.8196},{2095.9016,2390.0808,49.2691,90.0670},{2087.4851,2390.2275,49.2699,270.3415},{2078.4429,2390.0786,49.2684,89.4055},{2069.0103,2389.9731,49.2767,269.3798},
	{2104.6672,2393.1169,49.2704,269.5019},{2086.5923,2393.2185,49.2723,270.6473},{2069.0996,2393.2791,49.2759,269.5746},{2078.5334,2393.0308,49.2708,90.3388},{2095.9771,2393.1357,49.2716,90.3515},
	{2103.9331,2395.9124,49.2723,89.4101},{2096.1953,2395.9697,49.2686,89.7997},{2078.2498,2395.8445,49.2672,89.7818},{2068.4170,2396.0566,49.2778,270.0175},{2086.7498,2395.8750,49.2696,269.3711},
	{2104.3464,2395.7209,49.2691,271.0328},{2096.3794,2398.7234,49.2686,91.8802},{2078.7310,2398.9067,49.2696,92.2019},{2068.2334,2398.9910,49.2740,270.2336},{2086.7903,2398.9355,49.2682,269.1744},
	{2104.0142,2398.8359,49.2700,269.2859},{2096.2671,2401.7603,49.2709,90.5706},{2078.9373,2401.7722,49.2676,90.3665},{2068.5457,2401.8694,49.2727,270.1749},{2086.5354,2401.7717,49.2401,269.3631},
	{2104.1035,2401.5620,49.2317,269.0568},{2095.7788,2404.7146,49.2685,90.1448},{2078.6479,2404.7773,49.2680,89.3325},{2068.5981,2404.7163,49.2752,269.4642},{2086.0574,2404.6450,49.2699,269.8890},
	{2104.3508,2404.6577,49.2707,270.3029},{2104.1741,2407.7463,49.2719,270.8269},{2096.0005,2407.7451,49.2701,90.2388},{2086.8169,2407.8008,49.2680,269.9085},{2068.5454,2407.6768,49.2710,269.5096},
	{2078.7329,2407.8667,49.2701,92.8579},{2068.5596,2410.6064,49.2703,270.2290},{2086.0896,2410.8528,49.2690,269.7829},{2104.4482,2410.7561,49.2606,269.4773},{2095.8125,2410.6287,49.2698,89.2761},
	{2078.9907,2410.7915,49.2699,89.9857},{2068.6025,2413.5139,49.2687,270.4378},{2086.4604,2413.4768,49.2696,269.0421},{2104.1460,2413.5000,49.2691,269.2056},{2096.7556,2413.6497,49.2703,89.2792},
	{2078.9519,2413.6746,49.2709,88.7196},{2068.8647,2416.5208,49.2685,270.1808},{2086.1582,2416.5872,49.2698,270.3999},{2104.3599,2416.7141,49.2330,270.4021},{2104.1560,2416.4204,49.2698,90.9522},
	{2096.5613,2416.3013,49.2705,90.9149},{2079.4004,2416.4243,49.2753,90.9552},{2068.0676,2419.5271,49.2534,270.2991},{2086.5000,2419.4636,49.2687,270.7836},{2103.7559,2419.6887,49.2344,270.6432},
	{2096.4480,2419.5171,49.2713,90.1726},{2078.3994,2419.4612,49.2699,90.1744},{2078.2666,2422.6069,49.2694,89.3344},{2069.0742,2422.4348,49.2702,269.7243},{2086.3013,2422.4807,49.2714,270.9625},
	{2096.1174,2422.5132,49.2696,88.9966},{2104.5493,2422.2927,49.2669,268.3216}
};

static const Float:EnTunning[][6] =
{
	{1106.7002,1334.7562,10.5626,91.0238, 0.000000, 0.000000},
	{1106.4918,1343.2115,10.5623,90.4121, 0.000000, 0.000000},
	{1105.9816,1351.5953,10.5622,90.1994, 0.000000, 0.000000},
	{1163.6406,1289.4219,10.5474,271.686, 0.0000000, 0.000000},
	{1163.9597,1274.7152,10.5474,272.0914, 0.000000, 0.000000}
};
static const Float:EnMejoraM[][6] =
{
	{1105.0314,1311.0266,10.5623,88.9432, 0.000000, 0.000000},
	{1106.4525,1302.7540,10.5623,91.6740, 0.000000, 0.000000},
	{1105.1276,1293.6375,10.5623,91.7387, 0.000000, 0.000000},
	{1108.9133,1277.0665,10.5623,91.2716, 0.000000, 0.000000}
};

static const Float:ZonasSeguras[][4] =
{
	{1440.428, -1737.13, 1573.528, -1591.064},
	{1984.234, -1456.841, 2102.122, -1354.199},
	{1143.807, -1437.102, 1326.343, -1259.454},
	{998.1006, 1225.698, 1173.819, 1388.157},
	{628.0, -1629.5, 748.0, -1552.5},
	{926.0, -1708.0, 981.0, -1609.0},
	{-672.0, 2297.5, -480.0, 2419.5},
	{-2752.54, 578.59, -2652.54, 678.59},
	{1556.43, 1777.61, 1656.43, 1877.61}
};




new Zonasegura[sizeof(ZonasSeguras)], GangzoneSeguras[sizeof(ZonasSeguras)];

static const Float:PintarVeh[][6] =
{
	{1104.9016,1261.6063,10.6213,90.8781, 0.000000, 0.000000},
	{1107.4186,1248.6707,10.6214,144.4310, 0.000000, 0.000000},
	{1119.3706,1247.7039,10.6213,182.3737, 0.000000, 0.000000},
	{1132.5007,1252.9148,17.2071,180.9227, 0.000000, 0.000000}
};

static const s_TopSpeed[212] = {
	159, 148, 188, 111, 134, 165, 111, 150, 101, 159, 131, 223, 170, 111, 107, 194, 155, 143, 116, 150,
	146, 155, 141, 100, 137, 214, 175, 167, 158, 203, 184, 131, 95, 112, 169, 0, 150, 159, 144, 170,
	137, 76, 140, 127, 111, 165, 240, 145, 190, 185, 0, 195, 183, 57, 130, 159, 107, 96, 159, 137,
	135, 207, 190, 210, 45, 50, 148, 142, 186, 145, 158, 111, 125, 107, 150, 175, 220, 188, 119, 141,
	186, 97, 158, 124, 64, 100, 65, 181, 170, 141, 158, 150, 142, 183, 217, 178, 164, 190, 109, 124,
	142, 30, 217, 217, 175, 141, 181, 167, 109, 105, 130, 133, 115, 151, 122, 144, 159, 159, 166, 272,
	272, 209, 209, 197, 131, 162, 159, 150, 178, 150, 61, 71, 111, 169, 170, 160, 175, 0, 0, 101,
	150, 205, 166, 152, 150, 148, 150, 144, 158, 155, 146, 159, 122, 193, 145, 160, 111, 111, 157, 179,
	171, 155, 179, 160, 89, 166, 161, 175, 148, 0, 0, 94, 61, 111, 61, 159, 159, 250, 131, 159,
	154, 200, 137, 86, 0, 154, 211, 166, 109, 164, 0, 0, 266, 135, 62, 118, 177, 177, 177, 159,
	152, 111, 171, 173, 148, 152, 0, 0, 0, 109, 0, 0
};

static const Float:CajasMetaEstante[][3] =
{
    {-1995.44226, 220.87140, 1036.28809},{-1995.43774, 220.88451, 1035.22485},{-1999.65063, 220.83051, 1036.28809},{-1999.66272, 220.86720, 1035.21875},{-2003.90698, 220.84540, 1036.28809},
    {-2003.91345, 220.83290, 1035.21521},{-2008.23206, 220.82809, 1036.28809},{-2008.19434, 220.78900, 1035.22705},{-2012.24988, 220.80341, 1036.28809},{-2012.22876, 220.87730, 1035.21497},
    {-2016.73218, 220.91370, 1036.28809},{-2016.68604, 220.89410, 1035.21497},{-2020.99927, 220.85710, 1036.28809},{-2020.97791, 220.85620, 1035.21497},{-2025.99988, 223.90810, 1036.35596},
    {-2026.01501, 223.92320, 1035.28625},{-2026.00830, 227.28999, 1036.35596},{-2025.99390, 227.31190, 1035.28625},{-2018.13245, 233.20580, 1036.29602},{-2018.12109, 233.21930, 1035.21436}
};

static const Float:VerMapasPositions[][3] =
{
	{2420.76001, 2280.39990, 10.62000},
	{1451.27002, -1022.17999, 23.63000},
	{1454.43005, -1151.70996, 23.78000},
	{126.28000, -173.91000, 1.38000},
	{1802.40332, -1273.24597, 13.43750},
	{-180.20000, -1621.78003, 3.33000},
	{1489.26001, -1740.81006, 13.44000},
	{-1724.21997, -51.25000, 3.36000},
	{-1996.27002, 278.20001, 33.27000},
	{1181.17004, -1318.19995, 13.39000},
	{1714.96509, -1878.15393, 13.37510},
	{1546.18628, -1670.81445, 13.35750},
	{1996.75977, -1454.49341, 13.35210},
	{504.81653, -1357.64771, 15.93860},
	{453.70230, -1488.36462, 30.91780},
	{1677.59058, 946.69189, 10.71030},
	{2708.74512, -2511.59521, 13.46700},
	{2227.07495, -1719.28418, 13.32480},
	{1827.77209, -1837.93835, 13.37754},
	{643.65540, -1347.24133, 13.34620},
	{2230.81, -2206.13, 13.35},
	{1636.0040,-1878.2776,13.5469}

};

static const Float:OperacionesPositions[][3]=
{
	{833.6001,3.1724,1004.1797},
	{830.6400,-0.2800,1004.1797},
	{822.0131,4.0536,1004.1797},
	{822.0087,-0.3000,1004.1797},
	{2316.6121,-15.1184,26.7422},
	{2316.6074,-9.9517,26.7422},
	{1086.9856,-148.6115,1001.1160},
	{1084.9305,-148.6101,1001.1160},
	{1091.8477,-135.6460,1001.1160}
};
/*
static const Float:BaldePosx[][3]=
{
	{1433.4581,579.3332,1000.9890},
	{244.8680,1190.6820,1080.2578},
	{2312.9253,-1009.5733,1050.2109},
	{2337.7578,-1067.5862,1049.0310},
	{2182.2815,-1204.3622,1049.0234},
	{2320.4236,-1209.7737,1049.0234},
	{2373.8518,-1132.4492,1050.8750},
	{2278.4917,-1135.3693,1050.8984},
	{2500.0159,-1709.5164,1014.7422},
	{233.5460,1245.6899,1082.1406},
	{218.4530,1292.0750,1082.1406},
	{239.0929,1018.1394,1084.0269},
	{302.3906,1480.1575,1080.2578},
	{320.3834,1480.2020,1084.4397},
	{378.4297,1455.1542,1080.1875},
	{364.4794,1430.4307,1081.3359},
	{500.7811,1402.5516,1080.2578},
	{436.4938,1409.2488,1084.3047},
	{267.2367,1292.5245,1080.2578},
	{228.0013,1159.1628,1082.6094},
	{19.1089,1349.6238,1084.3812},
	{-265.2579,1448.8892,1084.3672},
	{31.5561,1405.4673,1084.4297},
	{147.5067,1385.1327,1083.8594},
	{226.8329,1085.1465,1084.2318},
	{-57.5718,1362.7324,1080.2109},
	{-284.1021,1477.6215,1084.3812},
	{-48.3742,1397.8483,1084.4297},
	{78.1610,1337.4381,1083.8672},
	{264.3888,1246.8066,1084.2578},
	{2447.9614,-1690.4133,1013.5078},
	{2815.8037,-1165.7493,1025.5778},
	{333.6933,1122.8322,1083.8903},
	{2336.7617,-1139.1494,1050.7031},
	{2268.3152,-1138.5952,1050.6328},
	{-2160.8486,637.8749,1057.5861},
	{414.3022,2535.4270,10.0000},
	{1280.3312,-808.9499,1085.6328},
	{2556.2932,-1300.8298,1060.9844},
	{1468.3174,563.2430,1000.9959},
	{-791.9695,504.4907,1367.3672},
	{2248.1138,-1209.9308,1049.0234},
	{1100.5056,-837.8195,107.5134},
	{-1085.9417,-1233.3748,129.2188},
	{-1111.4513,-1624.9111,76.3739}
};*/

static const Float:GasoPos[][3] =
{
	{1944.0856,-1774.6237,13.3906},
	{-2024.5480,156.5128,28.8359},
	{2144.7043,2747.7385,10.8203},
	{1002.5995,-938.9977,41.7164},
	{-90.9733,-1169.9698,1.9307},
	{654.7282,-565.5597,15.7458},
	{-1677.1003,414.2072,7.0904},
	{-2410.9700,974.6269,45.4609},
	{-1327.8411,2677.0786,49.8695},
	{615.9312,1689.9292,6.7035},
	{1595.3818,2198.0535,10.5985},
	{2202.4304,2476.8889,10.6556},
	{1614.6639,-2170.9976,13.6738},
	{-1606.3857,-2713.6877,48.5335},
	{2638.5161,1106.4025,10.8203},
	{2114.2771,919.8243,10.8203},
	{2320.7969,581.6008,10.8554},
	{1381.5182,457.6106,19.9479},
	{2291.7817,521.9423,1.9425},
	{-736.8832,2742.4609,47.2266},
	{-1471.2997,1862.6671,32.6328},
	{-2244.5076,-2561.5610,31.9219},
	{70.0209,1216.6819,18.8127},
	{2751.7844,-2595.2117,2.2000},
	{1968.6451,-2638.5715,13.5469},
	{-1116.7944,-174.9563,14.1440},
	{1332.6748,1540.4779,10.8203},
	{2970.1274,-1480.7200,-0.2967},
	{1165.2675,1306.3528,10.8203},
	{-1647.6870,154.2647,-0.6669},
	{2549.8328,2713.1863,11.8130},
	{-746.1635,354.5089,2.5561}
};

static const Float:RadioPos[][3] =
{
    {1434.3252,589.3580,1000.9779},
	{225.3002,1187.7854,1080.2578},
	{2327.0132,-1018.0557,1050.2178},
	{2331.0811,-1068.4113,1049.0234},
	{2194.8037,-1201.2301,1049.0234},
	{2311.1023,-1207.4109,1049.0234},
	{2360.8394,-1130.8195,1050.8750},
	{2282.0415,-1135.8741,1050.8984},
	{2491.3289,-1697.8755,1014.7490},
	{224.4195,1241.0884,1082.1406},
	{232.9977,1289.9427,1082.1406},
	{236.3799,1048.3400,1084.0067},
	{292.4060,1472.9526,1080.2642},
	{320.25391, 1490.39087, 1083.43884},
	{379.02029, 1469.72083, 1079.17688},
	{366.4335,1425.3593,1081.3359},
	{482.1933,1399.6086,1080.2578},
	{450.5942,1414.1479,1084.3080},
	{263.4377,1288.6233,1080.2578},
	{229.50169, 1151.12305, 1081.60596},
	{23.2901,1347.0875,1088.8750},
	{-270.6304,1447.6964,1088.8672},
	{17.9222,1407.9509,1084.4297},
	{147.5579,1373.5997,1083.8594},
	{236.7255,1082.3959,1084.2415},
	{-70.99350, 1359.27661, 1079.21289},
	{-287.9925,1478.1453,1088.8823},
	{-47.8563,1411.1011,1084.4297},
	{95.8903,1337.5476,1088.3672},
	{265.88324, 1242.81116, 1083.25623},
	{2451.8186,-1705.9608,1013.5078},
	{2806.3760,-1165.6929,1025.5703},
	{321.8526,1117.1307,1083.8828},
	{2319.1746,-1142.2817,1050.4922},
	{2267.0566,-1136.5151,1050.6403},
	{-2166.1284,641.7698,1057.5875},
	{417.8647,2535.4861,10.0000},
	{1273.2833,-785.8144,1089.9303},
	{2549.2622,-1280.6965,1060.9844},
	{1475.0764,548.1407,1000.9959},
	{-786.8574,488.8219,1376.1953},
	{2261.9563,-1208.6964,1049.0308},
	{1099.4520,-817.2785,107.4822}
};

new VehicleColoursTableRGBA[256] = {
0x000000FF, 0xF5F5F5FF, 0x2A77A1FF, 0x840410FF, 0x263739FF, 0x86446EFF, 0xD78E10FF, 0x4C75B7FF, 0xBDBEC6FF, 0x5E7072FF,
0x46597AFF, 0x656A79FF, 0x5D7E8DFF, 0x58595AFF, 0xD6DAD6FF, 0x9CA1A3FF, 0x335F3FFF, 0x730E1AFF, 0x7B0A2AFF, 0x9F9D94FF,
0x3B4E78FF, 0x732E3EFF, 0x691E3BFF, 0x96918CFF, 0x515459FF, 0x3F3E45FF, 0xA5A9A7FF, 0x635C5AFF, 0x3D4A68FF, 0x979592FF,
0x421F21FF, 0x5F272BFF, 0x8494ABFF, 0x767B7CFF, 0x646464FF, 0x5A5752FF, 0x252527FF, 0x2D3A35FF, 0x93A396FF, 0x6D7A88FF,
0x221918FF, 0x6F675FFF, 0x7C1C2AFF, 0x5F0A15FF, 0x193826FF, 0x5D1B20FF, 0x9D9872FF, 0x7A7560FF, 0x989586FF, 0xADB0B0FF,
0x848988FF, 0x304F45FF, 0x4D6268FF, 0x162248FF, 0x272F4BFF, 0x7D6256FF, 0x9EA4ABFF, 0x9C8D71FF, 0x6D1822FF, 0x4E6881FF,
0x9C9C98FF, 0x917347FF, 0x661C26FF, 0x949D9FFF, 0xA4A7A5FF, 0x8E8C46FF, 0x341A1EFF, 0x6A7A8CFF, 0xAAAD8EFF, 0xAB988FFF,
0x851F2EFF, 0x6F8297FF, 0x585853FF, 0x9AA790FF, 0x601A23FF, 0x20202CFF, 0xA4A096FF, 0xAA9D84FF, 0x78222BFF, 0x0E316DFF,
0x722A3FFF, 0x7B715EFF, 0x741D28FF, 0x1E2E32FF, 0x4D322FFF, 0x7C1B44FF, 0x2E5B20FF, 0x395A83FF, 0x6D2837FF, 0xA7A28FFF,
0xAFB1B1FF, 0x364155FF, 0x6D6C6EFF, 0x0F6A89FF, 0x204B6BFF, 0x2B3E57FF, 0x9B9F9DFF, 0x6C8495FF, 0x4D8495FF, 0xAE9B7FFF,
0x406C8FFF, 0x1F253BFF, 0xAB9276FF, 0x134573FF, 0x96816CFF, 0x64686AFF, 0x105082FF, 0xA19983FF, 0x385694FF, 0x525661FF,
0x7F6956FF, 0x8C929AFF, 0x596E87FF, 0x473532FF, 0x44624FFF, 0x730A27FF, 0x223457FF, 0x640D1BFF, 0xA3ADC6FF, 0x695853FF,
0x9B8B80FF, 0x620B1CFF, 0x5B5D5EFF, 0x624428FF, 0x731827FF, 0x1B376DFF, 0xEC6AAEFF, 0x000000FF,
0x177517FF, 0x210606FF, 0x125478FF, 0x452A0DFF, 0x571E1EFF, 0x010701FF, 0x25225AFF, 0x2C89AAFF, 0x8A4DBDFF, 0x35963AFF,
0xB7B7B7FF, 0x464C8DFF, 0x84888CFF, 0x817867FF, 0x817A26FF, 0x6A506FFF, 0x583E6FFF, 0x8CB972FF, 0x824F78FF, 0x6D276AFF,
0x1E1D13FF, 0x1E1306FF, 0x1F2518FF, 0x2C4531FF, 0x1E4C99FF, 0x2E5F43FF, 0x1E9948FF, 0x1E9999FF, 0x999976FF, 0x7C8499FF,
0x992E1EFF, 0x2C1E08FF, 0x142407FF, 0x993E4DFF, 0x1E4C99FF, 0x198181FF, 0x1A292AFF, 0x16616FFF, 0x1B6687FF, 0x6C3F99FF,
0x481A0EFF, 0x7A7399FF, 0x746D99FF, 0x53387EFF, 0x222407FF, 0x3E190CFF, 0x46210EFF, 0x991E1EFF, 0x8D4C8DFF, 0x805B80FF,
0x7B3E7EFF, 0x3C1737FF, 0x733517FF, 0x781818FF, 0x83341AFF, 0x8E2F1CFF, 0x7E3E53FF, 0x7C6D7CFF, 0x020C02FF, 0x072407FF,
0x163012FF, 0x16301BFF, 0x642B4FFF, 0x368452FF, 0x999590FF, 0x818D96FF, 0x99991EFF, 0x7F994CFF, 0x839292FF, 0x788222FF,
0x2B3C99FF, 0x3A3A0BFF, 0x8A794EFF, 0x0E1F49FF, 0x15371CFF, 0x15273AFF, 0x375775FF, 0x060820FF, 0x071326FF, 0x20394BFF,
0x2C5089FF, 0x15426CFF, 0x103250FF, 0x241663FF, 0x692015FF, 0x8C8D94FF, 0x516013FF, 0x090F02FF, 0x8C573AFF, 0x52888EFF,
0x995C52FF, 0x99581EFF, 0x993A63FF, 0x998F4EFF, 0x99311EFF, 0x0D1842FF, 0x521E1EFF, 0x42420DFF, 0x4C991EFF, 0x082A1DFF,
0x96821DFF, 0x197F19FF, 0x3B141FFF, 0x745217FF, 0x893F8DFF, 0x7E1A6CFF, 0x0B370BFF, 0x27450DFF, 0x071F24FF, 0x784573FF,
0x8A653AFF, 0x732617FF, 0x319490FF, 0x56941DFF, 0x59163DFF, 0x1B8A2FFF, 0x38160BFF, 0x041804FF, 0x355D8EFF, 0x2E3F5BFF,
0x561A28FF, 0x4E0E27FF, 0x706C67FF, 0x3B3E42FF, 0x2E2D33FF, 0x7B7E7DFF, 0x4A4442FF, 0x28344EFF
};

new RandomColors[] =
{
	0xFFFFFFFF, 0x000000FF, 0x99CC00FF, 0xFF9900FF, 0x6699CCFF, 0x0099FFFF, 0xCCCC99FF, 0xFF8C13FF,	0xC715FFFF,
	0x20B2AAFF,	0xDC143CFF,	0x6495EDFF,	0xf0e68cFF,	0x778899FF,	0xFF1493FF,	0xF4A460FF, 0xEE82EEFF,	0xFFD720FF,
	0x8b4513FF,	0x4949A0FF,	0x148b8bFF,	0x14ff7fFF,	0x556b2fFF,	0x0FD9FAFF,	0x10DC29FF, 0x534081FF,	0x0495CDFF,
	0xEF6CE8FF,	0xBD34DAFF,	0x247C1BFF,	0x0C8E5DFF,	0x635B03FF,	0xCB7ED3FF,	0x65ADEBFF, 0x5C1ACCFF,	0xF2F853FF,
	0x11F891FF,	0x7B39AAFF,	0x53EB10FF,	0x54137DFF,	0x275222FF,	0xF09F5BFF,	0x3D0A4FFF, 0x22F767FF,	0xD63034FF,
	0x9A6980FF,	0xDFB935FF,	0x3793FAFF,	0x90239DFF,	0xE9AB2FFF,	0xAF2FF3FF,	0x057F94FF, 0xB98519FF,	0x388EEAFF,
	0x028151FF,	0xA55043FF,	0x0DE018FF,	0x93AB1CFF,	0x95BAF0FF,	0x369976FF,	0x18F71FFF, 0x4B8987FF,	0x491B9EFF,
	0x829DC7FF,	0xBCE635FF,	0xCEA6DFFF,	0x20D4ADFF,	0x2D74FDFF,	0x3C1C0DFF,	0x12D6D4FF, 0x48C000FF,	0x2A51E2FF,
	0xE3AC12FF,	0xFC42A8FF,	0x2FC827FF,	0x1A30BFFF,	0xB740C2FF,	0x42ACF5FF,	0x2FD9DEFF, 0xFAFB71FF,	0x05D1CDFF,
	0xC471BDFF,	0x94436EFF,	0xC1F7ECFF,	0xCE79EEFF,	0xBD1EF2FF,	0x93B7E4FF,	0x3214AAFF, 0x184D3BFF,	0xAE4B99FF,
	0x7E49D7FF,	0x4C436EFF,	0xFA24CCFF,	0xCE76BEFF,	0xA04E0AFF,	0x9F945CFF,	0xDCDE3DFF, 0x10C9C5FF,	0x70524DFF,
	0x0BE472FF,	0x8A2CD7FF,	0x6152C2FF,	0xCF72A9FF,	0xE59338FF,	0xEEDC2DFF,	0xD8C762FF, 0xD8C762FF,	0xFF8C13FF,
	0xC715FFFF,	0x20B2AAFF,	0xDC143CFF,	0x6495EDFF,	0xf0e68cFF,	0x778899FF,	0xFF1493FF, 0xF4A460FF,	0xEE82EEFF,
	0xFFD720FF,	0x8b4513FF,	0x4949A0FF,	0x148b8bFF,	0x14ff7fFF,	0x556b2fFF,	0x0FD9FAFF, 0x10DC29FF,	0x534081FF,
	0x0495CDFF,	0xEF6CE8FF,	0xBD34DAFF,	0x247C1BFF,	0x0C8E5DFF,	0x635B03FF,	0xCB7ED3FF, 0x65ADEBFF,	0x5C1ACCFF,
	0xF2F853FF,	0x11F891FF,	0x7B39AAFF,	0x53EB10FF,	0x54137DFF,	0x275222FF,	0xF09F5BFF, 0x3D0A4FFF,	0x22F767FF,
	0xD63034FF,	0x9A6980FF,	0xDFB935FF,	0x3793FAFF,	0x90239DFF,	0xE9AB2FFF,	0xAF2FF3FF, 0x057F94FF,	0xB98519FF,
	0x388EEAFF,	0x028151FF,	0xA55043FF,	0x0DE018FF,	0x93AB1CFF,	0x95BAF0FF,	0x369976FF, 0x18F71FFF,	0x4B8987FF,
	0x491B9EFF,	0x829DC7FF,	0xBCE635FF,	0xCEA6DFFF,	0x20D4ADFF,	0x2D74FDFF,	0x3C1C0DFF, 0x12D6D4FF,	0x48C000FF,
	0x2A51E2FF,	0xE3AC12FF,	0xFC42A8FF,	0x2FC827FF,	0x1A30BFFF,	0xB740C2FF,	0x42ACF5FF, 0x2FD9DEFF,	0xFAFB71FF,
	0x05D1CDFF,	0xC471BDFF,	0x94436EFF,	0xC1F7ECFF,	0xCE79EEFF,	0xBD1EF2FF,	0x93B7E4FF, 0x3214AAFF,	0x184D3BFF,
	0xAE4B99FF,	0x7E49D7FF,	0x4C436EFF,	0xFA24CCFF,	0xCE76BEFF,	0xA04E0AFF,	0x9F945CFF, 0xDCDE3DFF,	0x10C9C5FF,
	0x70524DFF,	0x0BE472FF,	0x8A2CD7FF,	0x6152C2FF,	0xCF72A9FF,	0xE59338FF,	0xEEDC2DFF, 0xD8C762FF,	0xD8C762FF
};

new NombreArma[47][] =
{
	"",""CR"Manopla"CB" | ",""CR"Palo de golf"CB" | ",""CR"Palo de policia"CB" | ",""CR"Cuchillo"CB" | ",""CR"Bate de beisbol"CB" | ",""CR"Pala"CB" | ",
	""CR"Palo de billar"CB" | ",""CR"Katana"CB" | ",""CR"Motosierra"CB" | ",""CR"Consolador rosa"CB" | ",""CR"Vibrador blanco"CB" | ",""CR"Gran vibrador blanco"CB" | ",
	""CR"Vibrador plateado"CB" | ",""CR"Ramo de flores"CB" | ",""CR"Baston"CB" | ",""CR"Granada"CB" | ",""CR"Gas lacrimogeno"CB" | ",""CR"Molotov"CB" | ",
	""CR"Jetpack"CB" | ","","",""CR"9mm"CB" | ",""CR"9mm silenciada"CB" | ",""CR"Desert eagle"CB" | ",""CR"Escopeta"CB" | ",""CR"Sawn off"CB" | ",
	""CR"Escopeta de combate"CB" | ",""CR"Uzi"CB" | ",""CR"MP5"CB" | ",""CR"AK 47"CB" | ",""CR"M4"CB" | ",""CR"Tec 9"CB" | ",""CR"Rifle"CB" | ",
	""CR"Sniper"CB" | ",""CR"Lanzacohetes"CB" | ",""CR"Bazooka"CB" | ",""CR"Lanzallamas"CB" | ",""CR"Minigun"CB" | ",""CR"Bomba"CB" | ",""CR"Detonador"CB" | ",
	""CR"Spray"CB" | ",""CR"Extintor de incendios"CB" | ",""CR"Camara"CB" | ",""CR"Lentes de visi�n nocturna"CB" | ",""CR"Gafas termicas"CB" | ",""CR"Paracaidas"
};

new Float:ChalecoSpawn[23][6] = {
    {-2018.02710, 238.33360, 1035.69897, -26.67480, -56.53550, 96.00000},
    {-2018.02710, 238.33360, 1036.35901, -26.67480, -56.53550, 96.00000},
    {-2018.54712, 238.33360, 1037.05896, -26.67480, -56.53550, 96.00000},
    {-2020.52710, 238.33360, 1037.05896, -26.67480, -56.53550, 96.00000},
    {-2018.02710, 238.33360, 1037.05896, -26.67480, -56.53550, 96.00000},
    {-2019.56714, 238.33360, 1035.69897, -26.67480, -56.53550, 96.00000},
    {-2021.50708, 238.33360, 1036.35901, -26.67480, -56.53550, 96.00000},
    {-2020.52710, 238.33360, 1035.69897, -26.67480, -56.53550, 96.00000},
    {-2019.06714, 238.33360, 1036.35901, -26.67480, -56.53550, 96.00000},
    {-2018.54712, 238.33360, 1035.69897, -26.67480, -56.53550, 96.00000},
    {-2019.56714, 238.33360, 1037.05896, -26.67480, -56.53550, 96.00000},
    {-2020.52710, 238.33360, 1036.35901, -26.67480, -56.53550, 96.00000},
    {-2018.54712, 238.33360, 1036.35901, -26.67480, -56.53550, 96.00000},
    {-2021.50708, 238.33360, 1035.69897, -26.67480, -56.53550, 96.00000},
    {-2021.00708, 238.33360, 1036.35901, -26.67480, -56.53550, 96.00000},
    {-2021.50708, 238.33360, 1037.05896, -26.67480, -56.53550, 96.00000},
    {-2021.00708, 238.33360, 1035.69897, -26.67480, -56.53550, 96.00000},
    {-2019.06714, 238.33360, 1035.69897, -26.67480, -56.53550, 96.00000},
    {-2020.04712, 238.33360, 1036.35901, -26.67480, -56.53550, 96.00000},
    {-2020.04712, 238.33360, 1037.05896, -26.67480, -56.53550, 96.00000},
    {-2019.06714, 238.33360, 1037.05896, -26.67480, -56.53550, 96.00000},
    {-2021.00708, 238.33360, 1037.05896, -26.67480, -56.53550, 96.00000},
    {-2019.56714, 238.33360, 1036.35901, -26.67480, -56.53550, 96.00000}
};
new Float:EscopetasRecortadas[10][6] = {
	{-2021.98181, 244.37700, 1035.66382,   0.00000, 0.00000, 0.00000},
	{-2021.86084, 244.04727, 1035.22876,   90.00000, 7.00000, 0.00000},
	{-2021.35913, 244.18207, 1035.22888,   90.00000, 7.00000, 180.00000},
	{-2021.08179, 244.37700, 1035.30383,   0.00000, 0.00000, 0.00000},
	{-2021.98181, 244.37700, 1035.30383,   0.00000, 0.00000, 0.00000},
	{-2021.04321, 244.38640, 1035.50781,   0.00000, 0.00000, 180.00000},
	{-2021.09961, 244.04617, 1035.22876,   90.00000, 7.00000, 0.00000},
	{-2020.49866, 244.19951, 1035.22888,   90.00000, 7.00000, 180.00000},
	{-2021.07385, 244.37820, 1035.66382,   0.00000, 0.00000, 0.00000},
	{-2020.22290, 244.40649, 1035.50781,   0.00000, 0.00000, 180.00000}
};
new Float:PTec[10][6] = {
	{-2019.88318, 244.41052, 1037.08557,   0.00000, 0.00000, 180.00000},
	{-2021.94531, 244.36340, 1036.84961,   0.00000, 0.00000, 0.00000},
	{-2019.89148, 244.23950, 1036.58472,   90.00000, 0.00000, 180.00000},
	{-2021.05835, 244.38280, 1037.08557,   0.00000, 0.00000, 180.00000},
	{-2021.07922, 244.22166, 1036.58472,   90.00000, 0.00000, 180.00000},
	{-2020.84509, 244.35448, 1036.84961,   0.00000, 0.00000, 0.00000},
	{-2018.65576, 244.27119, 1036.58472,   90.00000, 0.00000, 180.00000},
	{-2018.41455, 244.34410, 1036.84961,   0.00000, 0.00000, 0.00000},
	{-2019.59436, 244.36140, 1036.84961,   0.00000, 0.00000, 0.00000},
	{-2018.63733, 244.43520, 1037.08557,   0.00000, 0.00000, 180.00000}
};
new Float:PUzis[10][6] = {
	{-2018.87012, 244.21410, 1035.22949,   90.00000, 7.00000, 222.00000},
	{-2019.57410, 244.23192, 1035.22949,   90.00000, 7.00000, 160.00000},
	{-2018.89648, 244.43968, 1035.64746,   0.00000, 0.00000, 185.00000},
	{-2018.54041, 244.43912, 1035.64746,   0.00000, 25.00000, 185.00000},
	{-2019.23901, 244.14301, 1035.22949,   90.00000, 7.00000, 127.00000},
	{-2019.25305, 244.44669, 1035.64746,   0.00000, 25.00000, 185.00000},
	{-2018.13232, 244.43910, 1035.64746,   0.00000, 0.00000, 185.00000},
	{-2018.18652, 244.01750, 1035.22949,   90.00000, 7.00000, 77.00000},
	{-2019.61877, 244.43066, 1035.64746,   0.00000, 0.00000, 185.00000},
	{-2018.60645, 244.13139, 1035.22949,   90.00000, 7.00000, -18.00000}

};
new Float:PSnipers[10][6] = {

	{-2019.85730, 244.38020, 1035.99414,   0.00000, 0.00000, 5.00000},
	{-2021.63086, 244.38510, 1036.28320,   0.00000, 0.00000, 5.00000},
	{-2019.33923, 244.45490, 1036.28320,   0.00000, 0.00000, 187.00000},
	{-2021.60779, 244.37869, 1036.01819,   0.00000, 0.00000, 5.00000},
	{-2019.56970, 244.15793, 1035.87146,   60.00000, 0.00000, 180.00000},
	{-2018.33521, 244.45239, 1036.02905,   0.00000, 0.00000, 187.00000},
	{-2021.14893, 244.14674, 1035.87146,   60.00000, 0.00000, 180.00000},
	{-2018.38452, 244.44810, 1036.29419,   0.00000, 0.00000, 187.00000},
 	{-2020.17102, 244.44839, 1036.24646,   0.00000, 0.00000, 187.00000},
	{-2018.12842, 244.14818, 1035.87146,   60.00000, 0.00000, 180.00000}
};

static const Float:BolsoSpawn[][6] =
{
    {-2026.58020, 252.79230, 1035.23083,   0.00000, 0.00000, 0.00000},
    {-2026.58020, 253.31230, 1035.23083,   0.00000, 0.00000, 0.00000},
    {-2026.58020, 253.83231, 1035.23083,   0.00000, 0.00000, 0.00000},
    {-2026.58020, 254.35229, 1035.23083,   0.00000, 0.00000, 0.00000},
    {-2026.19019, 254.61230, 1035.23083,   0.00000, 0.00000, -27.00000},
    {-2026.19019, 254.09230, 1035.23083,   0.00000, 0.00000, 0.00000},
    {-2026.19019, 253.57230, 1035.23083,   0.00000, 0.00000, -25.00000},
    {-2026.19019, 253.05231, 1035.23083,   0.00000, 0.00000, -36.00000},
    {-2026.53955, 252.86160, 1035.88074,   0.00000, 0.00000, 0.00000},
    {-2026.53381, 253.33681, 1035.88074,   2.38000, -9.18000, -20.00000},
    {-2026.61340, 253.84840, 1035.88074,   2.38000, -9.18000, 120.00000},
    {-2026.63403, 254.31171, 1035.88074,   2.38000, -9.18000, -85.00000},
    {-2026.17932, 254.61470, 1035.88074,   2.38000, -9.18000, -150.00000},
    {-2025.62952, 252.93880, 1035.23071,   2.38000, -9.18000, -15.00000},
    {-2025.59924, 253.38499, 1035.23071,   2.38000, -9.18000, -45.00000},
    {-2025.70667, 254.39180, 1035.23071,   2.38000, -9.18000, 3.74000},
    {-2025.60461, 253.85100, 1035.23071,   2.38000, -9.18000, 70.00000},
    {-2025.18616, 252.77049, 1035.23071,   2.38000, -9.18000, 3.74000},
    {-2026.03931, 252.85800, 1035.88074,   0.00000, 0.00000, 20.00000},
    {-2026.22620, 253.29050, 1035.77673,   2.38000, -9.18000, 50.00000},
    {-2025.36023, 254.68050, 1035.23071,   2.38000, -9.18000, 3.74000},
    {-2025.43982, 254.15170, 1035.23071,   2.38000, -9.18000, 54.00000},
    {-2026.13220, 254.13200, 1035.92676,   2.38000, -9.18000, -90.00000},
    {-2024.91785, 254.67371, 1035.23071,   2.38000, -9.18000, 3.74000},
    {-2025.26575, 253.17970, 1035.23071,   2.38000, -9.18000, 3.74000},
    {-2024.84375, 252.86169, 1035.23071,   2.38000, -10.20000, -90.00000},
    {-2025.26978, 253.69000, 1035.23071,   2.38000, -9.18000, 45.00000},
    {-2024.90613, 253.24771, 1035.23071,   2.38000, -9.18000, 350.00000},
    {-2025.86121, 253.76210, 1035.85474,   2.38000, -9.18000, 310.00000},
    {-2025.52466, 252.91641, 1035.85474,   2.38000, -9.18000, 210.00000},
    {-2025.77075, 254.65410, 1035.85474,   2.38000, -9.18000, 210.00000},
    {-2024.49731, 252.76083, 1035.12671,   2.38000, -9.18000, 350.00000},
    {-2024.10168, 252.74883, 1035.23071,   2.38000, 0.18000, 120.00000},
    {-2025.18225, 254.32144, 1035.12671,   2.38000, -9.18000, 310.00000},
    {-2024.60583, 254.67371, 1035.23071,   2.38000, -9.18000, 3.74000},
    {-2024.74219, 254.32739, 1035.23071,   2.38000, -9.18000, 350.00000},
    {-2024.31677, 254.70735, 1035.23071,   2.38000, -9.18000, 350.00000},
    {-2024.89404, 253.91789, 1035.23071,   2.38000, -9.18000, 350.00000},
    {-2024.49182, 253.18443, 1035.23071,   2.38000, -9.18000, 350.00000},
    {-2025.12781, 252.81340, 1035.86670,   2.38000, -9.18000, 350.00000},
    {-2025.33984, 254.66840, 1035.86670,   2.38000, -9.18000, 120.00000},
    {-2024.64124, 253.59700, 1035.23071,   2.38000, -9.18000, 350.00000},
    {-2025.62219, 253.32001, 1035.86670,   2.38000, -9.18000, 350.00000},
    {-2025.72925, 254.19934, 1035.86670,   2.38000, -9.18000, 350.00000},
    {-2024.95740, 254.71675, 1035.86670,   2.38000, -9.18000, 350.00000},
    {-2024.75146, 252.86664, 1035.86670,   2.38000, -9.18000, 350.00000},
    {-2025.51233, 253.78070, 1035.86670,   2.38000, -9.18000, 350.00000},
    {-2025.24255, 253.23218, 1035.86670,   2.38000, -9.18000, 350.00000},
    {-2025.33643, 254.28336, 1035.86670,   2.38000, -9.18000, 350.00000},
    {-2023.95386, 254.70200, 1035.12476,   2.38000, -9.18000, 350.00000},
    {-2023.56494, 254.71741, 1035.12476,   2.38000, -9.18000, 20.00000},
    {-2024.52332, 253.96718, 1035.12476,   2.38000, -9.18000, 20.00000},
    {-2024.32544, 254.29866, 1035.12476,   2.38000, -9.18000, 20.00000},
    {-2023.72717, 252.68954, 1035.12476,   2.38000, -9.18000, 20.00000},
    {-2023.30518, 252.67848, 1035.12476,   2.38000, -9.18000, 20.00000},
    {-2024.16150, 253.08507, 1035.12476,   2.38000, -9.18000, 20.00000},
    {-2023.79639, 253.01392, 1035.12476,   2.38000, -9.18000, 20.00000},
    {-2024.02478, 254.31758, 1035.12476,   2.38000, -9.18000, 20.00000},
    {-2024.28687, 253.50793, 1035.12476,   2.38000, -9.18000, 20.00000},
    {-2024.15186, 253.90599, 1035.12476,   2.38000, -9.18000, 20.00000},
    {-2025.19592, 253.60400, 1035.90979,   2.38000, -9.18000, 20.00000},
    {-2024.80396, 253.31000, 1035.81177,   2.38000, -9.18000, -45.00000},
    {-2024.42578, 252.90352, 1035.90979,   2.38000, -9.18000, -45.00000},
    {-2024.03381, 252.90350, 1035.90979,   2.38000, -9.18000, -45.00000},
    {-2025.09534, 254.02451, 1035.90979,   2.38000, -9.18000, -45.00000},
    {-2024.60229, 254.70320, 1035.81177,   2.38000, -9.18000, -45.00000},
    {-2024.89624, 254.21320, 1035.81177,   2.38000, -9.18000, -45.00000},
    {-2024.89624, 253.72321, 1035.81177,   2.38000, -9.18000, -45.00000},
    {-2024.62415, 253.62160, 1035.81177,   2.38000, -9.18000, 195.00000},
    {-2023.92542, 253.39293, 1035.12476,   2.38000, -9.18000, 20.00000},
    {-2024.70227, 253.97980, 1035.81177,   2.38000, -9.18000, 115.00000},
    {-2024.55359, 254.33417, 1035.81177,   2.38000, -9.18000, -45.00000},
    {-2024.29236, 254.68680, 1035.81177,   2.38000, -9.18000, 115.00000},
    {-2024.48645, 253.29166, 1035.81177,   2.38000, -9.18000, 195.00000},
    {-2023.84692, 254.78632, 1035.81177,   2.38000, -9.18000, 195.00000}
};

new Float:PosTanque[9][2] = {
	{-2025.3972, 209.3350},
	{-2025.3972, 212.2440},
	{-2025.3972, 215.3320},
	{-2025.3972, 194.5190},
	{-2025.3972, 197.5950},
	{-2025.3972, 200.4760},
	{-1976.9731, 200.2980},
	{-1976.9731, 197.4360},
	{-1976.9731, 194.3620}
};
  
new const NombreAuto[212][] =
{
	"Landstalker",
	"Bravura",
	"Buffalo",
	"Linerunner",
	"Pereniel",
	"Sentinel",
	"Dumper",
	"Firetruck",
	"Trashmaster",
	"Stretch",
	"Manana",
	"Infernus",
	"Voodoo",
	"Pony",
	"Mule",
	"Cheetah",
	"Ambulance",
	"Leviathan",
	"Moonbeam",
	"Esperanto",
	"Taxi",
	"Washington",
	"Bobcat",
	"Mr Whoopee",
	"BF Injection",
	"Hunter",
	"Premier",
	"Enforcer",
	"Securicar",
	"Banshee",
	"Predator",
	"Bus",
	"Rhino",
	"Barracks",
	"Hotknife",
	"Trailer",
	"Previon",
	"Coach",
	"Cabbie",
	"Stallion",
	"Rumpo",
	"RC Bandit",
	"Romero",
	"Packer",
	"Monster",
	"Admiral",
	"Squalo",
	"Seasparrow",
	"Pizzaboy",
	"Tram",
	"Trailer",
	"Turismo",
	"Speeder",
	"Reefer",
	"Tropic",
	"Flatbed",
	"Yankee",
	"Caddy",
	"Solair",
	"Berkley's RC Van",
	"Skimmer",
	"PCJ-600",
	"Faggio",
	"Freeway",
	"RC Baron",
	"RC Raider",
	"Glendale",
	"Oceanic",
	"Sanchez",
	"Sparrow",
	"Patriot",
	"Quad",
	"Coastguard",
	"Dinghy",
	"Hermes",
	"Sabre",
	"Rustler",
	"ZR-350",
	"Walton",
	"Regina",
	"Comet",
	"BMX",
	"Burrito",
	"Camper",
	"Marquis",
	"Baggage",
	"Dozer",
	"Maverick",
	"News Chopper",
	"Rancher",
	"FBI Rancher",
	"Virgo",
	"Greenwood",
	"Jetmax",
	"Hotring",
	"Sandking",
	"Blista",
	"Police Maverick",
	"Boxville",
	"Benson",
	"Mesa",
	"RC Goblin",
	"Hotring-Racer",
	"Hotring-Racer",
	"Bloodring-Banger",
	"Rancher",
	"Super-GT",
	"Elegant",
	"Journey",
	"Bike",
	"Mountain Bike",
	"Beagle",
	"Cropdust",
	"Stunt",
	"Tanker",
	"RoadTrain",
	"Nebula",
	"Majestic",
	"Buccaneer",
	"Shamal",
	"Hydra",
	"FCR-900",
	"NRG-500",
	"HPV1000",
	"Cement Truck",
	"Tow Truck",
	"Fortune",
	"Cadrona",
	"FBI Truck",
	"Willard",
	"Forklift",
	"Tractor",
	"Combine",
	"Feltzer",
	"Remington",
	"Slamvan",
	"Blade",
	"Freight",
	"Streak",
	"Vortex",
	"Vincent",
	"Bullet",
	"Clover",
	"Sadler",
	"Firetruck",
	"Hustler",
	"Intruder",
	"Primo",
	"Cargobob",
	"Tampa",
	"Sunrise",
	"Merit",
	"Utility",
	"Nevada",
	"Yosemite",
	"Windsor",
	"Monster Truck A",
	"Monster Truck B",
	"Uranus",
	"Jester",
	"Sultan",
	"Stratum",
	"Elegy",
	"Raindance",
	"RC Tiger",
	"Flash",
	"Tahoma",
	"Savanna",
	"Bandito",
	"Freight",
	"Trailer",
	"Kart",
	"Mower",
	"Duneride",
	"Sweeper",
	"Broadway",
	"Tornado",
	"AT-400",
	"DFT-30",
	"Huntley",
	"Stafford",
	"BF-400",
	"Newsvan",
	"Tug",
	"Trailer",
	"Emperor",
	"Wayfarer",
	"Euros",
	"Hotdog",
	"Club",
	"Trailer",
	"Trailer",
	"Andromada",
	"Dodo",
	"RC Cam",
	"Launch",
	"Police Car",
	"Police Car",
	"Police Car",
	"Police Ranger",
	"Picador",
	"S.W.A.T. Van",
	"Alpha",
	"Phoenix",
	"Glendale",
	"Sadler",
	"Luggage Trailer",
	"Luggage Trailer",
	"Stair Trailer",
	"Boxville",
	"Farm Plow",
	"Utility Trailer"
};

new const spam[][] =
{
	"deluxzone","zone","omegazone","superdanova","super danova","danova","delux zone","alphazone","alpha zone","omegazone","legendzone","viper","sobeit","sobiet","s0beit","s0b31t","s0b3it","s0b1et","s0b13t","dox","bright",
	"discordapp.com","discord.gg","invite.gg","/dox/","delux","discord","discord.com",".gg","whatsapp"
};


//#include "../../gamemodes/includes/funciones.west"



ConductorVehiculo(vehicleid)
{
	foreach(new i : Player)
    {
        if(IsPlayerInVehicle(i,vehicleid) && GetPlayerState(i) == PLAYER_STATE_DRIVER) return i;
    }
	return INVALID_PLAYER_ID;
}

static AutoOcupado(vid)
{
	foreach(new i : Player)
 	{
  		if(GetPlayerVehicleID(i) == vid && GetPlayerState(i) == PLAYER_STATE_DRIVER) return 1;
   	}
   	return 0;
}

static DarNivelEstacionamiento(nivel)
{
	new Float:alturaxd;
	switch(nivel)
	{
		case 1: alturaxd = 10.8428;
		case 2:	alturaxd = 15.1228;
		case 3:	alturaxd = 19.4428;
		case 4:	alturaxd = 23.7228;
		case 5:	alturaxd = 28.0428;
		case 6:	alturaxd = 32.3428;
		case 7:	alturaxd = 36.6228;
		case 8:	alturaxd = 40.9428;
		case 9:	alturaxd = 45.2228;
		case 10: alturaxd = 49.5428;
	}
	return floatround(alturaxd);
}

static ObtenerNivelEsta(Float:z)
{
    new floor = 0;
    if(z > 0.0000 && z < 12.027) floor = 1;
    if(z > 12.026 && z < 16.476) floor = 2;
    if(z > 16.475 && z < 21.041) floor = 3;
    if(z > 21.040 && z < 25.442) floor = 4;
    if(z > 25.441 && z < 29.523) floor = 5;
    if(z > 29.522 && z < 33.957) floor = 6;
    if(z > 33.956 && z < 38.106) floor = 7;
    if(z > 38.105 && z < 42.733) floor = 8;
    if(z > 42.732 && z < 46.774) floor = 9;
    if(z > 46.773) floor = 10;
    return floor;
}

static ObtenerCocinero(i)
{
	new skin;
	switch(i)
	{
 		case 1: skin = 146;
   		case 2: skin = 145;
		default: skin = 146;
	}
	return skin;
}

static ObtenerMedico(i)
{
    new uniforme;
   	switch(i)
    {
        case 1: uniforme = 276;
        case 2: uniforme = 275;
        case 3: uniforme = 274;
	}
 	return uniforme;
}
		
static ObtenerGuardia(i)
{
	new skin;
	switch(i)
	{
		case 0: skin = 66;
		case 1: skin = 163;
		case 2: skin = 223;
		case 3: skin = 166;
		case 4: skin = 124;
	}
	return skin;
}
static MoveDynamicObjectEx(STREAMER_TAG_OBJECT:objectid, Float:x, Float:y, Float:z, Float:speed, Float:rx = -1000.0, Float:ry = -1000.0, Float:rz = -1000.0)
{
	if(IsValidDynamicObject(objectid)) MoveDynamicObject(objectid, x, y, z, speed, rx, ry, rz);
	return 1;
}

static ObtenerCocina(i)
{
    new cocina;
    switch(i)
    {
        case 0..2: cocina = 1;
        case 3..5: cocina = 2;
        case 6..8: cocina = 3;
    }
    return cocina;
}
static DarPosEvento(playerid, Float:X, Float:Y, Float:Z, Float:A, interiorid, worldid, c = 0)
{
	EVENTO_INT = interiorid,EVENTO_VW = worldid,EVENTO_POS[0] = X,EVENTO_POS[1] = Y,EVENTO_POS[2] = Z;
	PlayerInfo[playerid][pMundoVirtual] = worldid;
	if(c == 0) SetTimerEx("DarMundo", 1500, false, "ii", playerid, worldid);
	else SetPlayerVirtualWorld(playerid,worldid);
	CargandoEx(playerid);
	SetPlayerPosAC(playerid, X, Y, Z+0.1);
	SetPlayerFacingAngle(playerid, A);
	SetPlayerInterior(playerid, interiorid);
	TiempoEntrarF[playerid] = gettimeVariable + 3;
	if(EventoActivo == 1 && NotificaEvento == 0)
	{
        Mensaje(playerid, -1, "La recuerdo que los usuarios no han sido avisados del evento activo");
	}
	if(EventoActivo == 1 && NotificaEvento == 1)
	{
		Mensaje(playerid, -1, "Has cambiado el interior del evento tendr�s que traer a todos los usuarios.");
	}
	return 1;
}
static SetPosVeh(vehicleid, Float:X, Float:Y, Float:Z, Float:A, interiorid, worldid)
{
	SetVehiclePosAC(vehicleid, X, Y, Z);
	SetVehicleZAngle(vehicleid, A);
	SetVehiclePassengersInteriorEx(vehicleid, interiorid);
	SetVehiclePassengersVWEx(vehicleid, worldid);
}

static SetVehicleP(playerid, vehicleid, Float:X, Float:Y, Float:Z, Float:A, interiorid, worldid)
{
	CargandoEx(playerid);
	TiempoEntrarH[playerid] = gettimeVariable + 3;
	SetPosVeh(vehicleid, X, Y, Z, A, interiorid, worldid);
	return 1;
}

static SetPosEx(playerid, Float:X, Float:Y, Float:Z, Float:A, interiorid, worldid, c = 0)
{
	PlayerInfo[playerid][pMundoVirtual] = worldid;
	if(c == 0) SetTimerEx("DarMundo", 1500, false, "ii", playerid, worldid);
	else SetPlayerVirtualWorld(playerid,worldid);
	CargandoEx(playerid);
	SetPlayerPosAC(playerid, X, Y, Z+0.1);
	SetPlayerFacingAngle(playerid, A);
	SetPlayerInterior(playerid, interiorid);
	TiempoEntrarF[playerid] = gettimeVariable + 3;
	return 1;
}

Funcion:DarMundo(playerid,vw) return SetPlayerVirtualWorld(playerid, vw);

static LoopingAnim(playerid, const animlib[], const animname[], Float:Speed, looping, lockx, locky, lockz, lp) ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp);

static ReportCrimen(playerid,report)
{
	foreach(new i : Player) { if(FaccLegal2(i) && ShowSound[i] == 1) PlayCrimeReportForPlayer(i,playerid,report); }
	return 1;
}

static MensajeJob(playerid)
{
	ShowTDN(playerid, "~p~Felicidades~w~, has conseguido un nuevo trabajo.");
	//PlayerPlaySound(playerid,1055,0.0,0.0,0.0);
	return 1;
}

static MarcarJugador(playerid,color,banda)
{
	foreach(new i : Player)
	{
		
		if(banda == 1 || banda == 2)
		{
			if(PlayerInfo[i][jMiembro] == 1 && FaccLegal(i) || PlayerInfo[i][jMiembro] == 2 && FaccLegal(i)) SetPlayerMarkerForPlayer(i,playerid,color);
		}
		else if(PlayerInfo[i][jMiembro] == banda) SetPlayerMarkerForPlayer(i,playerid,color);
		
	}
	return 1;
}

static LimpiarMarker(playerid)
{
	foreach(new i : Player)
	{
		SetPlayerMarkerForPlayer(playerid,i,COLORCARGO0);
	}
	return 1;
}

static AbrirPuertasCamionero(playerid)
{
	new vid = GetPlayerVehicleID(playerid);
	switch(GetVehicleModel(vid))
	{
		case 456: GetVehicleParamsEx(vid, engine, lights, alarm, doors, bonnet, boot, objective),SetVehicleParamsEx(vid, engine, lights, alarm, doors, bonnet, 1, objective);
		case 498,609: GetVehicleParamsCarDoors(vid, door1, door2, door3, door4),SetVehicleParamsCarDoors(vid, door1, door2, 1, 1);
	}
	return 1;
}

static CerrarPuertasCamionero(playerid)
{
	new vid = GetPlayerVehicleID(playerid);
	switch(GetVehicleModel(vid))
	{
		case 456: GetVehicleParamsEx(vid, engine, lights, alarm, doors, bonnet, boot, objective),SetVehicleParamsEx(vid, engine, lights, alarm, doors, bonnet, 0, objective);
		case 498,609: GetVehicleParamsCarDoors(vid, door1, door2, door3, door4),SetVehicleParamsCarDoors(vid, door1, door2, 0, 0);
	}
	return 1;
}

static NombreJugador(playerid)
{
    new nombre[MAX_PLAYER_NAME];
    GetPlayerName(playerid, nombre, sizeof(nombre));
    return nombre;
}
static CargandoEx(playerid)
{
	CongelarEx(playerid);
	GameTextForPlayer(playerid, "~n~~r~Cargando..~n~~w~Espera por favor", 1000, 4);
	SetTimerEx("DescongelarEx", 1000, false, "i", playerid);
	return 1;
}
static EnviarBus(playerid, bus)
{
	Mensaje(playerid,-1,"Estas siendo trasladado a la penitenciaria de Fort Carson.");
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid, 0);
	StatusFC[playerid] = 0;
	CongelarEx(playerid);
	new asiento = random(8);
	switch(bus)
	{
		case 1: PutPlayerInVehicleAC(playerid, NPC_Tren[4], asiento+1);
		case 2: PutPlayerInVehicleAC(playerid, NPC_Tren[5], asiento+1);
		case 3: PutPlayerInVehicleAC(playerid, NPC_Tren[6], asiento+1);
	}
	EstaEnBus[playerid] = bus;
	return 1;
}

static SetVehiclePassengersInteriorEx(vehicleid, interior_id)
{
	foreach(new i : Player)
    {
        
		if(IsPlayerInVehicle(i, vehicleid)) SetPlayerInterior(i, interior_id);
		
    }
    return LinkVehicleToInteriorAC(vehicleid, interior_id);
}

static SetVehiclePassengersVWEx(vehicleid, vw_id)
{
    foreach(new i : Player)
    {
        
		if(IsPlayerInVehicle(i, vehicleid))
		{
			PlayerInfo[i][pMundoVirtual] = vw_id;
			SetPlayerVirtualWorld(i, vw_id);
		}
		
    }
    return SetVehicleVirtualWorld(vehicleid, vw_id);
}

static DarArma(playerid, weaponid)
{
	TimerWeapons[playerid] = gettimeVariable + 3;
	switch(weaponid)
	{
		case 1: PlayerInfo[playerid][pWP0] = weaponid;
        case 2,3,4,5,6,7,8,9: PlayerInfo[playerid][pWP1] = weaponid;
		case 10,11,12,13,14,15: PlayerInfo[playerid][pWP10] = weaponid;
		case 22,23,24: PlayerInfo[playerid][pWP2] = weaponid;
		case 25,26,27: PlayerInfo[playerid][pWP3] = weaponid;
		case 28,29,32: PlayerInfo[playerid][pWP4] = weaponid;
		case 30,31: PlayerInfo[playerid][pWP5] = weaponid;
		case 33,34: PlayerInfo[playerid][pWP6] = weaponid;
		case 35,36,37,38: PlayerInfo[playerid][pWP7] = weaponid;
		case 16,17,18,39: PlayerInfo[playerid][pWP8] = weaponid;
		case 41,42,43: PlayerInfo[playerid][pWP9] = weaponid;
		case 44,45,46: PlayerInfo[playerid][pWP11] = weaponid;
		case 40: PlayerInfo[playerid][pWP12] = weaponid;
	}
	GivePlayerWeapon(playerid, weaponid, 9999999);
	return 1;
}

static QuitarArma(playerid, weaponid)
{
	TimerWeapons[playerid] = gettimeVariable + 3;
	switch(weaponid)
	{
		case 1: PlayerInfo[playerid][pWP0] = 0;
		case 2,3,4,5,6,7,8,9: PlayerInfo[playerid][pWP1] = 0;
		case 10,11,12,13,14,15: PlayerInfo[playerid][pWP10] = 0;
		case 22,23,24: PlayerInfo[playerid][pWP2] = 0;
		case 25,26,27: PlayerInfo[playerid][pWP3] = 0;
		case 28,29,32: PlayerInfo[playerid][pWP4] = 0;
		case 30,31: PlayerInfo[playerid][pWP5] = 0;
		case 33,34: PlayerInfo[playerid][pWP6] = 0;
		case 35,36,37,38: PlayerInfo[playerid][pWP7] = 0;
		case 16,18,39: PlayerInfo[playerid][pWP8] = 0;
		case 41,42,43: PlayerInfo[playerid][pWP9] = 0;
		case 44,45,46: PlayerInfo[playerid][pWP11] = 0;
		case 40: PlayerInfo[playerid][pWP12] = 0;
	}
	ResetPlayerWeapons(playerid);
	DarArmas(playerid);
	return 1;
}

static DarArmas(playerid)
{
	TimerWeapons[playerid] = gettimeVariable + 3;
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pWP0],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pWP1],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pWP2],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pWP3],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pWP4],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pWP5],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pWP6],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pWP7],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pWP8],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pWP9],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pWP10],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pWP11],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pWP12],9999999);
	return 1;
}

static VehicleWeapons(playerid)
{
	TimerWeapons[playerid] = gettimeVariable + 3;
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pWP4],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pWP5],9999999);
	SetPlayerArmedWeapon(playerid, pweapon[playerid]);
	return 1;
}

static QuitarArmas(playerid, opcion)
{
	TimerWeapons[playerid] = gettimeVariable + 3;
	PlayerInfo[playerid][pWP0] = 0;
	PlayerInfo[playerid][pWP1] = 0;
	PlayerInfo[playerid][pWP2] = 0;
	PlayerInfo[playerid][pWP3] = 0;
	PlayerInfo[playerid][pWP4] = 0;
	PlayerInfo[playerid][pWP5] = 0;
	PlayerInfo[playerid][pWP6] = 0;
	PlayerInfo[playerid][pWP7] = 0;
	PlayerInfo[playerid][pWP8] = 0;
	if(opcion == 2) PlayerInfo[playerid][pWP9] = 0;
	PlayerInfo[playerid][pWP10] = 0;
	PlayerInfo[playerid][pWP11] = 0;
	PlayerInfo[playerid][pWP12] = 0;
	ResetPlayerWeapons(playerid);
}

static DarRopa(playerid)
{
	if(FaccLegal(playerid) || RopaMeca[playerid] == 1 || RopaMedi[playerid] > 0 || RopaBasu[playerid] == 1 || RopaMine[playerid] == 1)
	{
		if(RopaMedi[playerid] > 0)
		{
            switch(PlayerInfo[playerid][jSexo])
			{
				case 2: SetPlayerSkin(playerid,308);
				default:
				{
					switch(RopaMedi[playerid])
					{
						case 1: SetPlayerSkin(playerid,276);
						case 2: SetPlayerSkin(playerid,275);
						case 3: SetPlayerSkin(playerid,274);
					}
				}
			}
		}
		if(RopaBasu[playerid] == 1)
		{
			switch(PlayerInfo[playerid][jSexo])
			{
				case 2: SetPlayerSkin(playerid, 131);
				default: SetPlayerSkin(playerid, 16);
			}
		}
		if(RopaMeca[playerid] == 1)
		{
			switch(PlayerInfo[playerid][jSexo])
			{
				case 2: SetPlayerSkin(playerid, 309);
				default: SetPlayerSkin(playerid, 50);
			}
		}
		if(RopaMine[playerid] == 1)
		{
		    switch(PlayerInfo[playerid][jSexo])
			{
			    case 2: SetPlayerSkin(playerid, 131);
				default: SetPlayerSkin(playerid, 27);
			}
		}
		if(PlayerInfo[playerid][pDutyM] > 0)
		{
			SetPlayerSkin(playerid, PlayerInfo[playerid][pModelo]);
			SetPlayerColor(playerid,COLOR_MILITAR);
		}
		if(PlayerInfo[playerid][pDuty] > 0)
		{
		    if(PlayerInfo[playerid][suspendido] == 0)
			{
				SetPlayerSkin(playerid, PlayerInfo[playerid][pModelo]);
				SetPlayerColor(playerid,TEAM_BLUE_COLOR);
			}
			else
			{
				SetPlayerColor(playerid,COLORCARGO0);
				SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]);
				PlayerInfo[playerid][pDuty] = 0;
				if(PlayerInfo[playerid][pWP1] == 3) QuitarArma(playerid, 3);
				TimerWeapons[playerid] = gettimeVariable + 3;
				ResetPlayerWeapons(playerid);
				DarArmas(playerid);
			}
		}
	}
	else SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]);
    if(EstaEn(playerid,100,-1412.7083,-310.4966,1058.1694) && GetPlayerVirtualWorld(playerid) == 7) SetPosEx(playerid,1094.0945,1597.0083,12.5469,0,0,0);
}

static LimpiarCuenta(playerid)
{
	SeguroBanearID[playerid] = INVALID_PLAYER_ID;
	SeguroBanear[playerid] = false;
	FloodAlerts[playerid] = 0;
	FloodTimer[playerid] = 0;
	PlayerTemp[playerid][pt_Congelado] = false;
	RateLimit[playerid] = 0;
	PlayerDuelo[playerid][Viendo] =  0;
	PrimerosPasos[playerid] = -1;
	for(new slot; slot < 4;slot++)
	{
		PlayerInfo[playerid][pObj][slot] = 11392;
		UsandoObj[slot][playerid] = 0;
		SlotP2[slot][playerid] = 0;
	}
	
	for(new i; i<17;i++)
	{
		PlayerInfo[playerid][pLogro][i] = 0;
	}
	User_Temp[playerid][pt_PLAYER_EVENTODM] = false;
	EnCarro[playerid] = false;
	PlayerInfo[playerid][pCuentaForo] = 0;
    EstaEnEvento[playerid] = 0;
	PlayerTemp[playerid][CJ] = 0;
	Apuntando[playerid] = false;
	PlayerInfo[playerid][AutoLogin] = 0;
	PlayerInfo[playerid][Cache_ID] = MYSQL_INVALID_CACHE;
	SiendoCurado[playerid] = 0;
	PlayerTemp[playerid][CheatDetectado] = 0;
	DesbugPJ[playerid] = false;
	TiempoDesbug[playerid] = 0;
	PlayerInfo[playerid][pTieneEstado] = 0;
	LimpiarVarsVenta(playerid);
	//SetTracingColor(playerid, "COLOR_SERVER");
	//CancelTracing(playerid);
    if(C4PJ[playerid] != INVALID_STREAMER_ID)DestroyDynamicObjectEx(C4PJ[playerid]);
	KillTimer(TimerCCaja[playerid]);
	/*for(new i = 0; i < sizeof TDLogin;i++)
	{
 		TextDrawShowForPlayer(playerid, TDLogin[i]);
    }*/

	for(new a = 0; a < MAX_PAUTOS; a++) 
	{
		VehicleInfo[playerid][a][AceleracionActiva] = 0;
		autos[a][playerid] = 0;
		VehicleInfo[playerid][a][vModelo] = 0;
	}
	KillTimer(TimerEncerrar[playerid]);
	TempPrendaSlot[playerid] = -1;
	KillTimer(TimerMejora[playerid]);
    TipoPrenda[playerid] = 0;
    TipoRopa[playerid] = 0;
    TipoVehiculo[playerid] = 0;
    
	WalkStyle[playerid] = 0;
	//GameTextForPlayer(playerid, "", 0, 3);
    new temp_PlayerAnticheat[pAnticheat];
	PlayerAnticheat[playerid] = temp_PlayerAnticheat;
 	new temp_PlayerCheckPoint[pCheckpoint];
	PlayerCheckPoint[playerid] = temp_PlayerCheckPoint;
	new temp_PlayerTemp[E_TEMP_INFO];
	PlayerTemp[playerid] = temp_PlayerTemp;
	BandaOfertada[playerid] = 0;
	OfertadorBanda[playerid] = INVALID_PLAYER_ID;
	antifakekill[playerid] = 0;
	AyudaActiva[playerid] = 0;
    ContraVacia[playerid] = 0;
    NoSpec[playerid] = 0;
	PlayerChaleco[playerid] = 0;
	ChalecoJugador[playerid] = 0;
	PlayerVida[playerid] = 200.0;
	ZonaSegura[playerid] = 0;
    TiempoConectado[playerid] = 0;
	TiempoPD[playerid] = 0;
    Transferir[playerid] = 0;
    JustReported[playerid] = 0;
    TiempoCompu[playerid] = 0;
    JetPack[playerid] = 0;
    SpawnCorrecto[playerid] = 0;
    TimerCamionero[playerid] = 0;
	TimerBasurero[playerid] = 0;
	CanalDudas[playerid] = 0;
    ShowCone[playerid] = 0;
    ShowGuia[playerid] = 0;
	ShowMutes[playerid] = 0;
	ShowVelo[playerid] = 0;
	ShowSound[playerid] = 0;
    SedOculta[playerid] = 0;
	AvisoTerritorio[playerid] = 0;
	ShowTerritorio[playerid] = 0;
	MostrarTwitter[playerid] = 0;
    ViajeAvion[playerid] = 0;
    suicidio[playerid] = 0;
    Baneados[playerid] = 0;
    Kickeados[playerid] = 0;
	TieneMicrofono[playerid] = 0;
	objetostatus[playerid] = 0;
	Contador[playerid] = 0;
	EnCabina[playerid] = 0;
	IntentoDeLogear[playerid] = 0;
	IntentoDeCorreo[playerid] = 0;
    NPrendas[playerid] = 0;
    UsandoP[playerid] = 0;
	Boletos[playerid] = 0;
	EstaEnBus[playerid] = 0;
	tipogrua[playerid] = 0;
	tipogruallama[playerid] = 0;
	RecorridoPescador[playerid] = 0;
	VWTemporal[playerid] = 0;
	permisopesca[playerid] = 0;
	ViendoPantalla[playerid] = 0;
	ViendoGPS[playerid] = 0;
	HCalculo[playerid] = 0;
	AutoBuscado[playerid] = 0;
	PuntoBaX[playerid] = 0;
	PuntoBaY[playerid] = 0;
	PuntoBaZ[playerid] = 0;
	PuntoBaA[playerid] = 0;
	PuntoTraX[playerid] = 0;
	PuntoTraY[playerid] = 0;
	PuntoTraZ[playerid] = 0;
	RopaBasu[playerid] = 0;
	RopaMedi[playerid] = 0;
	RopaMeca[playerid] = 0;
	RopaMine[playerid] = 0;
	TiempoAgresor[playerid] = 0;
	CagoSeguro[playerid] = 0;
	EnLlamada[playerid] = 0;
	CColocado[playerid] = 0;
	EnCombate[playerid] = 0;
	TiempoCombate[playerid] = 0;
	Viaje[playerid] = 0;
	tviaje[playerid] = 0;
	Avisos[playerid] = 0;
	Objeto[playerid] = 0;
	Advertido[playerid] = 0;
	GolpesAdv[playerid] = 0;
	MRepuestos[playerid] = 0;
	LlamadaMeca[playerid] = 0;
	Monto[playerid] = 0;
	EnTaxi[playerid] = 0;
	LlamadaTaxi[playerid] = 0;
	Localizando[playerid] = false;
	CargandoC[playerid] = 0;
	recogiendo[playerid] = 0;
	RecorridoBasu[playerid] = 0;
	PBasura[playerid] = 0;
	PCosechar[playerid] = 0;
	Cosechando[playerid] = 0;
	TipoCosecha[playerid] = 0;
	Muriendo[playerid] = 0;
	TiempoDuda[playerid] = 0;
	Bidon[playerid] = 0;
	Jail[playerid] = 0;
	San[playerid] = 0;
	EnPatrulla[playerid] = 0;
	Manejando[playerid] = 0;
	AvisosAuto[playerid] = 0;
	EnAuto[playerid] = 0;
	Carga[playerid] = 0;
	Mats1[playerid] = 0;
	Mats2[playerid] = 0;
	Mats3[playerid] = 0;
	Curando[playerid] = 0;
	Esposando[playerid] = 0;
	MedicoCP2[playerid] = 0;
	Reanimado[playerid] = 0;
	PrimerSpawn[playerid] = 0;
	TiempoCrack[playerid] = 0;
	TiempoCaramelos[playerid] = 0;
	TiempoMarihuana[playerid] = 0;
	TiempoAcademia[playerid] = 0;
	dineropedido[playerid] = 0;
	PacienteAmbu[playerid] = 0;
	VariableCaido[playerid] = 0;
	JugadorLogeado[playerid] = 0;
	MarcadoMedicos[playerid] = 0;
	LlamadaMedicos[playerid] = 0;
	TelefonoEstado[playerid] = 0;
	TiempoMedicamentos[playerid] = 0;
	TiempoCocaina[playerid] = 0;
	TiempoHongos[playerid] = 0;
	AceptoRepara[playerid] = 0;
    LogeoCorrecto[playerid] = 0;
    ESPROSTI[playerid] = -1;
    SexoOral[playerid] = -1;
	MP3Escuchando[playerid] = -1;
   	Companero[playerid] = -1;
	SpecJugador[playerid] = -1;
	EnLlamada911[playerid] = -1;
	IDReporte[playerid] = -1;
	MConductor[playerid] = -1;
 	EstadoRadio[playerid] = 1;
    VerAdmin[playerid] = 1;
	BajandoV[playerid] = 1;
	Ficha[playerid] = 2;
	rocajugador[playerid] = 11392;
	Escuchando[playerid] = true;
	PermisoSalon[playerid] = false;
	Boleto[playerid] = false;
	EnTuning[playerid] = false;
	EnTuningShop[playerid] = false;
    AreaCheat[playerid] = INVALID_STREAMER_ID;
	CarWarpID[playerid] = INVALID_VEHICLE_ID;
	CamionID[playerid] = INVALID_VEHICLE_ID;
	Paciente[playerid] = INVALID_PLAYER_ID;
	GuardaEspalda[playerid] = INVALID_PLAYER_ID;
	Deposito[playerid] = INVALID_PLAYER_ID;
	VerBaul[playerid] = INVALID_PLAYER_ID;
	Agresor[playerid] = INVALID_PLAYER_ID;
	Colega[playerid] = INVALID_PLAYER_ID;
	Invito[playerid] = INVALID_PLAYER_ID;
	Invitador[playerid] = INVALID_PLAYER_ID;
	Criminal[playerid] = INVALID_PLAYER_ID;
	Taxista[playerid] = INVALID_PLAYER_ID;
	Pasajero[playerid] = INVALID_PLAYER_ID;
	Mecanico[playerid] = INVALID_PLAYER_ID;
	Oficial[playerid] = INVALID_PLAYER_ID;
	ofertador[playerid] = INVALID_PLAYER_ID;
	LeOfreci[playerid] = INVALID_PLAYER_ID;
	KillTimer(TM[playerid]);
	KillTimer(llamadasonido1[playerid]);
	KillTimer(llamadasonido2[playerid]);
	KillTimer(TimerBailando[playerid]);
	KillTimer(CLlamada[playerid]);
    KillTimer(DANOF[playerid]);
	KillTimer(HCurando[playerid]);
	KillTimer(FabCurando[playerid]);
	Emisoras[playerid][TieneEmisora] = 0;
	Emisoras[playerid][TransEmisora] = 0;
	Emisoras[playerid][EmisoraID] = -1;
	Emisoras[playerid][CabinaOcupada] = -1;
	CarTroll[playerid][playerFalseDetection] = false;
	new temp_PlayerInfo[jInfo];
	PlayerInfo[playerid] = temp_PlayerInfo;
	PlayerInfo[playerid][pModelo] = 280;
	PlayerInfo[playerid][pBone][0] = 2;
	PlayerInfo[playerid][pBone][1] = 2;
	PlayerInfo[playerid][pBone][2] = 2;
	PlayerInfo[playerid][pBone][3] = 2;

	PlayerInfo[playerid][MobileSub] = -1;
	format(PlayerInfo[playerid][QuienC], MAX_PLAYER_NAME+1, "Nadie");
	format(PlayerInfo[playerid][pPais], 32, "Ninguno");
	format(PlayerInfo[playerid][pCiudad], 32, "Ninguno");
	PlayerInfo[playerid][jConexion] = 0;
	format(Emisoras[playerid][NombreEmisora], 90, "Ninguno");
	format(Emisoras[playerid][URLEmisora], 120, "http://radio."WebName":8000/listen.pls");
    format(QFA[playerid],80, "nadie");
	
	SetPlayerColor(playerid,0xFFFFFF00);
	DarEstrella(playerid,0);
	DisablePlayerCheckpoint(playerid);
	QuitarArmas(playerid, 1);
	SetPlayerTeam(playerid,NO_TEAM);
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid, 0);
	ResetPlayerWeapons(playerid);
	PlayerPlaySound(playerid, 3402, 0.0, 0.0, 0.0);
	//GameTextForPlayer(playerid, "", 0, 3);
}

static DarHabilidadBasurero(playerid, level)
{
	if(PlayerInfo[playerid][pNivelBasurero] == level && PlayerInfo[playerid][pExpBasurero] < 49)
	{
		if(PlayerInfo[playerid][VIP] > 0)
		{
			new pago = random(3);
			switch (pago)
			{
				case 0,1: PlayerInfo[playerid][pExpBasurero]++,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad.");
				case 2: PlayerInfo[playerid][pExpBasurero]+= 2,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad.");
			}
		}
		else if(PlayerInfo[playerid][VIP] > 2)
		{
			new pago = random(3);
			switch (pago)
			{
				case 0,1: PlayerInfo[playerid][pExpBasurero]+=2,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 punto de habilidad.");
				case 2: PlayerInfo[playerid][pExpBasurero]+= 3,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +3 puntos de habilidad.");
			}
		}
		else PlayerInfo[playerid][pExpBasurero]++,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad.");
	}
	else if(PlayerInfo[playerid][pNivelBasurero] == level && PlayerInfo[playerid][pExpBasurero] >= 49)
	{
		PlayerInfo[playerid][pNivelBasurero]++;
		PlayerInfo[playerid][pExpBasurero] = 0;
		ShowTDN(playerid, "~p~Felicidades~w~, has aumentado tu nivel de basurero.");
	}
}

static ExpMedico(playerid)
{
	switch(PlayerInfo[playerid][pNivelMedico])
	{
		case 1:
		{
			if(PlayerInfo[playerid][pExpMedico] < 49)
			{
				if(PlayerInfo[playerid][VIP] > 0)
				{
					new pago = random(3);
					switch(pago)
					{
						case 0,1: PlayerInfo[playerid][pExpMedico]++,Mensaje(playerid,0x2d8cecFF,"Habilidad de m�dico aumentada +1 punto.");
						case 2: PlayerInfo[playerid][pExpMedico]+= 2,Mensaje(playerid,0x2d8cecFF,"Habilidad de m�dico aumentada +2 puntos.");
					}
				}
				else if(PlayerInfo[playerid][VIP] > 2)
				{
					new pago = random(3);
					switch (pago)
					{
						case 0,1: PlayerInfo[playerid][pExpMedico]+=2,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 punto de habilidad.");
						case 2: PlayerInfo[playerid][pExpMedico]+= 3,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +3 puntos de habilidad.");
					}
				}
				else
				{
					new pago2 = random(3);
					switch(pago2)
					{
						case 0: Mensaje(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membres�a VIP para aumentar las posibiliades de ganar habilidad.");
						case 1: PlayerInfo[playerid][pExpMedico]++,Mensaje(playerid,0x2d8cecFF,"Habilidad de m�dico aumentada +1 punto.");
						case 2: Mensaje(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membres�a VIP para aumentar las posibiliades de ganar habilidad.");
					}
				}
			}
			else if(PlayerInfo[playerid][pExpMedico] >= 49)
			{
				PlayerInfo[playerid][pNivelMedico]++;
				PlayerInfo[playerid][pExpMedico] = 0;
				Mensaje(playerid,-1,""CR"�Felicitaciones!"CB" Aumentaste un nivel en el trabajo de m�dico.");
			}
		}
		case 2:
		{
			if(PlayerInfo[playerid][pExpMedico] < 49)
			{
				if(PlayerInfo[playerid][VIP] > 0)
				{
					new pago = random(3);
					switch(pago)
					{
						case 0,1: PlayerInfo[playerid][pExpMedico]++,Mensaje(playerid,0x2d8cecFF,"Habilidad de m�dico aumentada +1 punto.");
						case 2: PlayerInfo[playerid][pExpMedico]+= 2,Mensaje(playerid,0x2d8cecFF,"Habilidad de m�dico aumentada +2 puntos.");
					}
				}
				else if(PlayerInfo[playerid][VIP] > 2)
				{
					new pago = random(3);
					switch (pago)
					{
						case 0,1: PlayerInfo[playerid][pExpMedico]+=2,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 punto de habilidad.");
						case 2: PlayerInfo[playerid][pExpMedico]+= 3,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +3 puntos de habilidad.");
					}
				}
				else
				{
					new pago2 = random(3);
					switch(pago2)
					{
						case 0,1: Mensaje(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membres�a VIP para aumentar las posibiliades de ganar habilidad.");
						case 2: PlayerInfo[playerid][pExpMedico]++,Mensaje(playerid,0x2d8cecFF,"Habilidad de m�dico aumentada +1 punto.");
					}
				}
			}
			else if(PlayerInfo[playerid][pExpMedico] >= 49)
			{
				PlayerInfo[playerid][pNivelMedico]++;
				PlayerInfo[playerid][pExpMedico] = 0;
				Mensaje(playerid,-1,""CR"�Felicitaciones!"CB" Aumentaste un nivel en el trabajo de m�dico.");
			}
		}
		case 3:
		{
			if(PlayerInfo[playerid][pExpMedico] < 49)
			{
				if(PlayerInfo[playerid][VIP] > 0)
				{
					new pago = random(3);
					switch(pago)
					{
						case 0,2: PlayerInfo[playerid][pExpMedico]++,Mensaje(playerid,0x2d8cecFF,"Habilidad de m�dico aumentada +1 punto.");
						case 1: PlayerInfo[playerid][pExpMedico]+= 2,Mensaje(playerid,0x2d8cecFF,"Habilidad de m�dico aumentada +2 puntos.");
					}
				}
				else if(PlayerInfo[playerid][VIP] > 2)
				{
					new pago = random(3);
					switch (pago)
					{
						case 0,1: PlayerInfo[playerid][pExpMedico]+=2,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 punto de habilidad.");
						case 2: PlayerInfo[playerid][pExpMedico]+= 3,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +3 puntos de habilidad.");
					}
				}
				else
				{
					new pago2 = random(3);
					switch(pago2)
					{
						case 0,1: Mensaje(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membres�a VIP para aumentar las posibiliades de ganar habilidad.");
						case 2: PlayerInfo[playerid][pExpMedico]++,Mensaje(playerid,0x2d8cecFF,"Habilidad de m�dico aumentada +1 punto.");
					}
				}
			}
			else if(PlayerInfo[playerid][pExpMedico] >= 49)
			{
				PlayerInfo[playerid][pNivelMedico]++;
				PlayerInfo[playerid][pExpMedico] = 0;
				Mensaje(playerid,-1,""CR"�Felicitaciones!"CB" Aumentaste un nivel en el trabajo de m�dico.");
			}
		}
		case 4:
		{
			if(PlayerInfo[playerid][pExpMedico] < 49)
			{
				if(PlayerInfo[playerid][VIP] > 0)
				{
					new pago = random(3);
					switch(pago)
					{
						case 0,1: PlayerInfo[playerid][pExpMedico]++,Mensaje(playerid,0x2d8cecFF,"Habilidad de m�dico aumentada +1 punto.");
						case 2: PlayerInfo[playerid][pExpMedico]+= 2,Mensaje(playerid,0x2d8cecFF,"Habilidad de m�dico aumentada +2 puntos.");
					}
				}
				else if(PlayerInfo[playerid][VIP] > 2)
				{
					new pago = random(3);
					switch (pago)
					{
						case 0,1: PlayerInfo[playerid][pExpMedico]+=2,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 punto de habilidad.");
						case 2: PlayerInfo[playerid][pExpMedico]+= 3,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +3 puntos de habilidad.");
					}
				}
				else
				{
					new pago2 = random(3);
					switch(pago2)
					{
						case 0,2: Mensaje(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membres�a VIP para aumentar las posibiliades de ganar habilidad.");
						case 1: PlayerInfo[playerid][pExpMedico]++,Mensaje(playerid,0x2d8cecFF,"Habilidad de m�dico aumentada +1 punto.");
					}
				}
			}
			else if(PlayerInfo[playerid][pExpMedico] >= 49) Mensaje(playerid,0x00CC00FF,"Llegaste al nivel m�ximo como m�dico.");
		}
	}
}

static DarHabilidadCamio(playerid, level)
{
	if(PlayerInfo[playerid][pNivelCamionero] == level && PlayerInfo[playerid][pExpCamionero] < 49)
	{
		if(PlayerInfo[playerid][VIP] > 0)
		{
			new pago = random(3);
			switch (pago)
			{
				case 0,1:
				{
					PlayerInfo[playerid][pExpCamionero]++;
					Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad.");
				}
				case 2:
				{
					PlayerInfo[playerid][pExpCamionero]+= 2;
					Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad.");
				}
			}
		}
		else if(PlayerInfo[playerid][VIP] > 2)
		{
			new pago = random(3);
			switch (pago)
			{
				case 0,1: PlayerInfo[playerid][pExpCamionero]+=2,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 punto de habilidad.");
				case 2: PlayerInfo[playerid][pExpCamionero]+= 3,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +3 puntos de habilidad.");
			}
		}
		else
		{
			PlayerInfo[playerid][pExpCamionero]++;
			Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad.");
		}
	}
	else if(PlayerInfo[playerid][pNivelCamionero] == level && PlayerInfo[playerid][pExpCamionero] >= 49)
	{
		PlayerInfo[playerid][pNivelCamionero]++;
		PlayerInfo[playerid][pExpCamionero] = 0;
		ShowTDN(playerid, "~p~Felicidades~w~, has aumentado tu nivel de camionero.");
	}
}



static DarHabilidadTransportista(playerid)
{
	if(PlayerInfo[playerid][pExpTransportista] < 49)
	{
		if(PlayerInfo[playerid][VIP] > 0)
		{
			new pago = random(3);
			switch(pago)
			{
				case 0,1: PlayerInfo[playerid][pExpTransportista]++,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad.");
				case 2: PlayerInfo[playerid][pExpTransportista]+= 2,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad.");
			}
		}
		else if(PlayerInfo[playerid][VIP] > 2)
		{
			new pago = random(3);
			switch (pago)
			{
				case 0,1: PlayerInfo[playerid][pExpTransportista]+=2,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 punto de habilidad.");
				case 2: PlayerInfo[playerid][pExpTransportista]+= 3,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +3 puntos de habilidad.");
			}
		}
		else PlayerInfo[playerid][pExpTransportista]++,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad.");
	}
	else if(PlayerInfo[playerid][pExpTransportista] >= 49)
	{
		PlayerInfo[playerid][pNivelTransportista]++;
		PlayerInfo[playerid][pExpTransportista] = 0;
		ShowTDN(playerid, "~p~Felicidades~w~, has aumentado tu nivel de transportista.");
	}
}

static DarHabilidadTransportista2(playerid)
{
	if(PlayerInfo[playerid][pExpTransportista] < 49)
	{
		if(PlayerInfo[playerid][VIP] > 0)
		{
			new pago = random(3);
			switch(pago)
			{
				case 0..1: PlayerInfo[playerid][pExpTransportista]++,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad.");
				case 2: PlayerInfo[playerid][pExpTransportista]+= 2,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad.");
			}
		}
		else if(PlayerInfo[playerid][VIP] > 2)
		{
			new pago = random(3);
			switch (pago)
			{
				case 0,1: PlayerInfo[playerid][pExpTransportista]+=2,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 punto de habilidad.");
				case 2: PlayerInfo[playerid][pExpTransportista]+= 3,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +3 puntos de habilidad.");
			}
		}
		else PlayerInfo[playerid][pExpTransportista]++,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad.");
	}
	else if(PlayerInfo[playerid][pExpTransportista] >= 49) Mensaje(playerid,0x0080C2FF,"Has llegado al nivel m�ximo actual de este trabajo.");
}

DarHabilidadArma(playerid, level)
{
	if(PlayerInfo[playerid][pNivelArmero] == level && PlayerInfo[playerid][pExpArmero] < 49)
	{
		if(PlayerInfo[playerid][VIP] > 0)
		{
			new puntos = random(3);
			switch(puntos)
			{
				case 0,1: PlayerInfo[playerid][pExpArmero]++,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad.");
				case 2: PlayerInfo[playerid][pExpArmero]+= 2,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad.");
			}
		}
		else if(PlayerInfo[playerid][VIP] > 2)
		{
			new puntos = random(3);
			switch (puntos)
			{
				case 0,1: PlayerInfo[playerid][pExpArmero]+=2,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 punto de habilidad.");
				case 2: PlayerInfo[playerid][pExpArmero]+= 3,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +3 puntos de habilidad.");
			}
		}
		else PlayerInfo[playerid][pExpArmero]++,Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad.");
	}
	else if(PlayerInfo[playerid][pNivelArmero] == level && PlayerInfo[playerid][pExpArmero] >= 49)
	{
		PlayerInfo[playerid][pNivelArmero]++;
		PlayerInfo[playerid][pExpArmero] = 0;
		Mensaje(playerid,-1,"Has aumentado tu nivel de armero, ahora puedes crear otras armas");
	}
}

static Borracho(playerid)
{
	new restased = 100-PlayerInfo[playerid][pSed];
	if(restased >= 15)	PlayerInfo[playerid][pSed] += 15;
	else if(restased < 15) PlayerInfo[playerid][pSed] += restased;
	new restahambre = 100-PlayerInfo[playerid][pHambre];
	if(restahambre >= 10) PlayerInfo[playerid][pHambre] += 10;
	else if(restahambre < 10) PlayerInfo[playerid][pHambre] += restahambre;
	if(SedOculta[playerid] == 0) BarraHambre(playerid, 1),BarraSed(playerid, 1);
	ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
	AccionesRol(playerid,"comienza a sentirse mal.", 20);
	return 1;
}

static RangoPolicia(playerid)
{
	
	new rango[20];
	if(!IsPlayerConnected(playerid)) return rango;
	if(PlayerInfo[playerid][pRango] == 8) format(rango, sizeof(rango), "Comisario");
    if(PlayerInfo[playerid][pRango] == 7) format(rango, sizeof(rango), "Inspector");
    if(PlayerInfo[playerid][pRango] == 6) format(rango, sizeof(rango), "Capitan");
    if(PlayerInfo[playerid][pRango] == 5) format(rango, sizeof(rango), "Teniente");
    if(PlayerInfo[playerid][pRango] == 4) format(rango, sizeof(rango), "Sargento");
    if(PlayerInfo[playerid][pRango] == 3) format(rango, sizeof(rango), "Cabo");
    if(PlayerInfo[playerid][pRango] == 2) format(rango, sizeof(rango), "Oficial");
    if(PlayerInfo[playerid][pRango] == 1) format(rango, sizeof(rango), "Cadete");
    return rango;
}

new const RangoAdmin[][] = {
	"Usuario",
	"Ayudante",
	"Mod /n",
	"Mod",
	"Mod",
	"Mod Global",
	"ADM",
	"SubDue�o",
	"Due�o"
};
/*
static RangoAdmin(playerid)
{
	new rango[20];
    if(PlayerInfo[playerid][pAdmin] == ADMIN_LVL_ADM) format(rango, sizeof(rango), "Due�o");
    if(PlayerInfo[playerid][pAdmin] == ADMIN_LVL_SUBDUE) format(rango, sizeof(rango), "SubDue�o");
    if(PlayerInfo[playerid][pAdmin] == ADMIN_LVL_GLOBAL2) format(rango, sizeof(rango), "ADM");
    if(PlayerInfo[playerid][pAdmin] == ADMIN_LVL_GLOBAL1) format(rango, sizeof(rango), "Mod Global");
    if(PlayerInfo[playerid][pAdmin] == ADMIN_LVL_JUEGO1 || PlayerInfo[playerid][pAdmin] == ADMIN_LVL_JUEGO2) format(rango, sizeof(rango), "Mod");
    if(PlayerInfo[playerid][pAdmin] == ADMIN_LVL_DUDAS) format(rango, sizeof(rango), "Mod /n");
    if(PlayerInfo[playerid][pAdmin] == ADMIN_LVL_AYUDANTE) format(rango, sizeof(rango), "Ayudante");
    return rango;
}

static NombreAdmin(admin)
{
	new rango[20];
    if(admin == ADMIN_LVL_ADM) format(rango, sizeof(rango), "Due�o");
    if(admin == ADMIN_LVL_SUBDUE) format(rango, sizeof(rango), "SubDue�o");
    if(admin == ADMIN_LVL_GLOBAL2) format(rango, sizeof(rango), "ADM");
    if(admin == ADMIN_LVL_GLOBAL1) format(rango, sizeof(rango), "Mod Global");
    if(admin == ADMIN_LVL_JUEGO1 || admin == ADMIN_LVL_JUEGO2) format(rango, sizeof(rango), "Mod");
    if(admin == ADMIN_LVL_DUDAS) format(rango, sizeof(rango), "Mod /n");
    if(admin == ADMIN_LVL_AYUDANTE) format(rango, sizeof(rango), "Ayudante");
	if(admin == 0) format(rango, sizeof(rango), "No");
    return rango;
}
*/
static EnPesca(playerid)
{
	if(EstaEn(playerid, 40.0, 890.69623, -2448.19629, -3.40480)) 		return 1;
	else if(EstaEn(playerid, 40.0, 890.69623, -2448.19629, -3.40480))	return 1;
	return 0;
}

static EnComisaria(playerid)
{
	if(EstaEn(playerid,10.0,1564.5568,-1694.7732,5.8906))		return 1;
	else if(EstaEn(playerid,10.0,2281.4912,2429.3406,3.2734))	return 1;
	else if(EstaEn(playerid,10.0,-1589.5292,716.2191,-5.6688))	return 1;
	else if(EstaEn(playerid,10.0,-1679.5967,705.8658,30.7528))	return 1;
	else if(EstaEn(playerid,10.0,688.2739,-491.1295,0.0544))	return 1;
	return 0;
}

EnPantalla(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(EstaEn(playerid,10.0,-1959.7164,141.9694,27.6875))		return 1;
		else if(EstaEn(playerid,10.0,-1962.3730,130.1360,27.6875))	return 1;
		else if(EstaEn(playerid,10.0,1729.7041,-1943.3695,13.5705))	return 1;
		else if(EstaEn(playerid,10.0,822.8813,-1353.8101,-0.5078))	return 1;
		else if(EstaEn(playerid,10.0,1439.4858,2644.6511,11.3926))	return 1;
		else if(EstaEn(playerid,10.0,2856.4263,1296.8097,11.3906))	return 1;
		else if(EstaEn(playerid,10.0,181.5000,1243.4573,23.1031))	return 1;
	}
	return 0;
}

EnEstacionTren(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(EstaEn(playerid,10.0,831.5464,-1361.7238,-0.5015)) 		return 1;
		else if(EstaEn(playerid,10.0,1757.1368,-1943.4417,13.5703))	return 1;
		else if(EstaEn(playerid,10.0,1746.9652,-1943.4482,13.5703))	return 1;
		else if(EstaEn(playerid,10.0,1437.3113,2655.2742,11.3926))	return 1;
		else if(EstaEn(playerid,10.0,1437.4141,2620.1450,11.3926))	return 1;
		else if(EstaEn(playerid,10.0,-1974.0217,116.7847,27.6875))	return 1;
		else if(EstaEn(playerid,10.0,2856.5955,1314.5538,11.3906))	return 1;
		else if(EstaEn(playerid,10.0,2856.5969,1266.9460,11.3906))	return 1;
		else if(EstaEn(playerid,10.0,826.7249,-1353.6726,13.5369))	return 1;
	}
	return 0;
}
/*
static EnBinco(playerid)
{
	if(EstaEn(playerid, 20.0,  207.737991,-109.019996,1005.132812)) return 1;
	return 0;
}

static EnVictim(playerid)
{
	if(EstaEn(playerid, 20.0,  226.293991,-7.431529,1002.210937)) return 1;
	return 0;
}

static EnZIP(playerid)
{
	if(EstaEn(playerid, 20.0,  161.391006,-93.159156,1001.804687)) return 1;
	return 0;
}

static EnSubUrban(playerid)
{
	if(EstaEn(playerid, 20.0,  203.777999,-48.492397,1001.804687)) return 1;
	return 0;
}

static EnDidierSachs(playerid)
{
	if(EstaEn(playerid, 20.0,  204.332992,-166.694992,1000.523437)) return 1;
	return 0;
}

static EnProLaps(playerid)
{
	if(EstaEn(playerid, 20.0,  207.054992,-138.804992,1003.507812)) return 1;
	return 0;
}*/

static EnEntregarse(playerid)
{
	if(EstaEn(playerid, 7.0, 240.4520,112.8195,1003.2188))			return 1;
	else if(EstaEn(playerid, 7.0, 233.3752,158.7853,1003.0234))		return 1;
	return 0;
}

static EnSexShop(playerid)
{
	if(EstaEn(playerid, 7.0, 1214.0737,-13.3524,1000.9219))			return 1;
	else if(EstaEn(playerid, 7.0, -103.9013,-22.6749,1000.7188))	return 1;
	return 0;
}

static EnBarco(playerid)
{
	if(EstaEn(playerid, 20.0, 2745.3225,-2596.3396,-0.1532))		return 1;
	else if(EstaEn(playerid, 20.0, -1636.6896,165.5648,-0.3798))	return 1;
	else if(EstaEn(playerid, 20.0, 2965.1025,-1496.3701,-0.2706))	return 1;
	return 0;
}

static EnAereo(playerid)
{
	if(EstaEn(playerid, 15.0, 2041.3850,-2632.4158,13.5469))		return 1;
	else if(EstaEn(playerid, 15.0, -1171.0649,-169.3947,14.1484))	return 1;
	else if(EstaEn(playerid, 15.0, 1317.2406,1480.4854,10.8203))	return 1;
	return 0;
}

static EnRadio(playerid)
{
	for(new i = 0; i < sizeof(RadioPos);i++)
	if(EstaEn(playerid,5.0, RadioPos[i][0], RadioPos[i][1], RadioPos[i][2])) return 1;
	return 0;
}
/*
static EnBalde(playerid)
{
	for(new i = 0; i < sizeof(BaldePosx);i++)
	if(EstaEn(playerid,3.0, BaldePosx[i][0], BaldePosx[i][1], BaldePosx[i][2])) return 1;
	return 0;
}*/

static EnGasolinera(playerid)
{
	for(new i = 0; i < sizeof(GasoPos) ;i++)
	if(EstaEn(playerid,15.0, GasoPos[i][0], GasoPos[i][1], GasoPos[i][2])) return 1;
	return 0;
}

static EnMinero(playerid)
{
	if(EstaEn(playerid, 5.0, -740.4136,2392.6699,4.1117))		return 1;
	else if(EstaEn(playerid, 5.0, -745.1193,2408.8325,1.3375))	return 1;
	else if(EstaEn(playerid, 5.0, -729.0903,2410.1563,7.2710))	return 1;
	else if(EstaEn(playerid, 5.0, -728.3772,2422.0627,7.1895))	return 1;
	return 0;
}

static SiTieneArma(playerid,weaponid)
{
    if(PlayerInfo[playerid][pWP0] == weaponid)			return 1;
	else if(PlayerInfo[playerid][pWP1] == weaponid)		return 1;
	else if(PlayerInfo[playerid][pWP2] == weaponid)		return 1;
	else if(PlayerInfo[playerid][pWP3] == weaponid)		return 1;
	else if(PlayerInfo[playerid][pWP4] == weaponid)		return 1;
	else if(PlayerInfo[playerid][pWP5] == weaponid)		return 1;
	else if(PlayerInfo[playerid][pWP6] == weaponid)		return 1;
	else if(PlayerInfo[playerid][pWP7] == weaponid)		return 1;
	else if(PlayerInfo[playerid][pWP8] == weaponid)		return 1;
	else if(PlayerInfo[playerid][pWP9] == weaponid)		return 1;
	else if(PlayerInfo[playerid][pWP10] == weaponid)	return 1;
	else if(PlayerInfo[playerid][pWP11] == weaponid)	return 1;
	else if(PlayerInfo[playerid][pWP12] == weaponid)	return 1;
	return 0;
}

static Armado(playerid)
{
	if(PlayerInfo[playerid][pWP2] > 0)		return 1;
	else if(PlayerInfo[playerid][pWP3] > 0)	return 1;
	else if(PlayerInfo[playerid][pWP4] > 0)	return 1;
	else if(PlayerInfo[playerid][pWP5] > 0)	return 1;
	else if(PlayerInfo[playerid][pWP6] > 0)	return 1;
	return 0;
}

static ObtenerVelocidad(playerid)
{
	new Float:PosX, Float:PosY, Float:PosZ, Float:PlayerSpeedDistance;
	GetVehicleVelocity(GetPlayerVehicleID(playerid), PosX, PosY, PosZ);
	PlayerSpeedDistance = floatmul(floatsqroot(floatadd(floatadd(floatpower( PosX, 2), floatpower(PosY, 2)), floatpower(PosZ, 2))), 170.0);
	new spe = floatround(PlayerSpeedDistance * 1);
	return spe;
}



static MensajeAdmin(color,const string[],level)
{

	if(level < 3) level = 3;
	if(level > 8) return 1;
 	foreach(new i : Admin)
	{
		if(PlayerInfo[i][pAdmin] >= level && VerAdmin[i] == 1)
		{
			Mensaje(i, color, string);
		}
	}
	return 1;
}

static ExpulsarJugador(playerid, const string[])
{
	if(!IsPlayerConnected(playerid)) return 1;
	printf("[ExpulsarJugador] %s(%d) - (%s)", PlayerInfo[playerid][NombreTemporal],playerid,string);
	new day,month,year;
	new hour,minute,second;
	new dialog[650];
	getdate(year,month,day);
	gettime(hour,minute,second);
	format(dialog, sizeof dialog,
		"\
			"CB"Has sido expulsado por el servidor, detalles:\n\
			\n\
			"CB"Tu nombre: "CR"%s\n\
			\n\
			"CB"Fecha expulsi�n: "CR"%02d/%02d/%02d\n\
			"CB"Hora: "CR"%02d:%02d:%02d\n\
			"CB"Raz�n: "CR"%s\n\
			\n\
			"CB"Si crees que fue un error toma una captura de pantalla y reporta el error en discord\n\
			\n\
		",
		NombreJugador(playerid),day,month,year,hour,minute,second,string
	);
	MostrarDialog(playerid, DIALOG_INFO, DIALOG_STYLE_MSGBOX, "Aviso", dialog, "Entiendo", "");
    SetTimerEx("KickXD",120,false,"d",playerid);
	return 1;
}


static bool:EsFundador(playerid, bool:pornombre = false)
{
	if(pornombre)
	{
		if(!strcmp(NombreJugador(playerid), ""FUNDADOR1"", true)) return true;
		if(!strcmp(NombreJugador(playerid), ""FUNDADOR2"", true)) return true;
		if(!strcmp(NombreJugador(playerid), ""FUNDADOR3"", true)) return true;
	}
	return false;
}
Funcion:KickXD(playerid)
{
	if(!IsPlayerConnected(playerid)) return 1;
 	//if(IsPlayerNPC(playerid))  return 1;
	if(EsFundador(playerid)) return 1;
	return Kick(playerid);
}

static EsNumerico(const str[])
{
	for(new i, len = strlen(str); i < len; i++)
	{
		if(!('0' <= str[i] <= '9')) return false;
	}
	return true;
}
static CrearCheckpoint(playerid, Float:x, Float:y, Float:z, Float:size)
{
	PlayerCheckPoint[playerid][cpvalido] = true;
	PlayerCheckPoint[playerid][cpX] = x;
	PlayerCheckPoint[playerid][cpY] = y;
	PlayerCheckPoint[playerid][cpZ] = z;
	PlayerCheckPoint[playerid][cpA] = size;
	//StartTracing(playerid, x, y, z);
	SetPlayerCheckpoint(playerid,Float:x, Float:y, Float:z, Float:size);
	return 1;
}

static BorrarCheckpoint(playerid)
{
	if(PlayerCheckPoint[playerid][cpvalido])
	{
	    new temp_PlayerCheckPoint[pCheckpoint];
		PlayerCheckPoint[playerid] = temp_PlayerCheckPoint;
	}
	//CancelTracing(playerid);

	DisablePlayerCheckpoint(playerid);
	return 1;
}

static PaintCercano(playerid)
{
	new Float:distancia2, Float:distancia = FLOAT_INFINITY,cercano;
	for(new i; i < sizeof(paynspray); i++)
    {
    	distancia2 = GetPlayerDistanceFromPoint(playerid, paynspray[i][0], paynspray[i][1], paynspray[i][2]);
		if(distancia2 < distancia)
		{
			distancia = distancia2;
			cercano = i;
		}
	}
	PosicionGPS(playerid,paynspray[cercano][0], paynspray[cercano][1], paynspray[cercano][2],5);
	return 1;
}





static ObtenerHospitalCercano(playerid)
{
	new Float:distancia2, Float:distancia = FLOAT_INFINITY,cercano;
	for(new i; i < sizeof(hospitales); i++)
    {
    	distancia2 = GetPlayerDistanceFromPoint(playerid, hospitales[i][0], hospitales[i][1], hospitales[i][2]);
		if(distancia2 < distancia)
		{
			distancia = distancia2;
			cercano = i;
		}
	}
	return cercano;
	
}


static HospitalCercano(playerid)
{
	new id = ObtenerHospitalCercano(playerid);
	CrearCheckpoint(playerid,hospitales[id][0], hospitales[id][1], hospitales[id][2],5.0);
}

static AparecerHospitalRandom(playerid, id)
{
	new donde = random(6);
	switch(id)
	{
		case 1:
		{
			switch(donde)
			{
				case 0: SetPlayerPosAC(playerid, 2037.8715,-1403.7877,17.2759);
				case 1: SetPlayerPosAC(playerid, 2037.0485,-1404.2207,17.2649);
				case 2: SetPlayerPosAC(playerid, 2036.0970,-1403.2449,17.2896);
				case 3: SetPlayerPosAC(playerid, 2037.1929,-1402.8522,17.2996);
				case 4: SetPlayerPosAC(playerid, 2035.7174,-1403.6902,17.2783);
				case 5: SetPlayerPosAC(playerid, 2036.4778,-1404.4312,17.2595);
			}
			SetPlayerCameraPos(playerid, 2025.183838, -1439.199341, 32.350899);
			SetPlayerCameraLookAt(playerid, 2035.394409, -1403.802979, 17.275499, 2);
		}
		case 2:
		{
			switch(donde)
			{
				case 0: SetPlayerPosAC(playerid, 1598.5320,1816.3173,10.8203);
				case 1: SetPlayerPosAC(playerid, 1599.5297,1816.4570,10.8203);
				case 2: SetPlayerPosAC(playerid, 1600.7815,1816.5343,10.8203);
				case 3: SetPlayerPosAC(playerid, 1600.9486,1817.7081,10.8203);
				case 4: SetPlayerPosAC(playerid, 1599.8033,1818.2811,10.8203);
				case 5: SetPlayerPosAC(playerid, 1598.5781,1817.8954,10.8203);
			}
			SetPlayerCameraPos(playerid, 1561.599976, 1728.599976, 13.760000);
			SetPlayerCameraLookAt(playerid, 1570.560059, 1742.569946, 16.620001, 2);
		}
		case 3:
		{
			switch(donde)
			{
				case 0: SetPlayerPosAC(playerid, -2638.0701,636.5035,14.4531);
				case 1: SetPlayerPosAC(playerid, -2639.0579,636.9080,14.4531);
				case 2: SetPlayerPosAC(playerid, -2638.5417,638.3288,14.4531);
				case 3: SetPlayerPosAC(playerid, -2639.4531,637.9344,14.4531);
				case 4: SetPlayerPosAC(playerid, -2640.4895,638.3373,14.4531);
				case 5: SetPlayerPosAC(playerid, -2640.4905,637.0638,14.4531);
			}
			SetPlayerCameraPos(playerid, -2548.600098, 542.380005, 70.220001);
			SetPlayerCameraLookAt(playerid, -2564.379883, 560.460022, 64.970001, 2);
		}
		default:
		{
			switch(donde)
			{
				case 0: SetPlayerPosAC(playerid, 1172.8042,-1319.1246,15.3937);
				case 1: SetPlayerPosAC(playerid, 1172.5389,-1320.2318,15.3961);
				case 2: SetPlayerPosAC(playerid, 1172.8207,-1321.0305,15.3979);
				case 3: SetPlayerPosAC(playerid, 1172.6366,-1322.1377,15.4003);
				case 4: SetPlayerPosAC(playerid, 1173.0378,-1321.4674,15.3972);
				case 5: SetPlayerPosAC(playerid, 1173.2478,-1319.9531,15.3944);
			}
			SetPlayerCameraPos(playerid, 1207.866699, -1290.867798, 30.542900);
			SetPlayerCameraLookAt(playerid, 1170.564575, -1322.156616, 31.474100, 2);
		}
	}
	return 1;
}

static HospitalMasCercano(playerid)
{
    if(PlayerInfo[playerid][jMiembro] == 2 && PlayerInfo[playerid][pDutyM] == 1)
	{
		SetPlayerPosAC(playerid, 635.1552, -600.7262, 16.4780);
		SetPlayerCameraPos(playerid, 696.4921, -607.5233, 18.8558);
		SetPlayerCameraLookAt(playerid, 695.5432, -607.1929, 18.9507);
		return 1;
	}
	if(PlayerInfo[playerid][pSocioHP] == 0) AparecerHospitalRandom(playerid, ObtenerHospitalCercano(playerid));
	else
	{
		switch(PlayerInfo[playerid][pSocioHP])
		{
			case 2: AparecerHospitalRandom(playerid, 1);
			case 3: AparecerHospitalRandom(playerid, 3);
			case 4: AparecerHospitalRandom(playerid, 2);
			default: AparecerHospitalRandom(playerid, 0);
			
		}
	}
	return 1;
}

static GuardarCuenta(playerid)
{
	if(!IsPlayerConnected(playerid)) return 1;
    if(GetPlayerScore(playerid) == 0) return 1;
    if(LogeoCorrecto[playerid] == 0) return 1;
	if(JugadorLogeado[playerid] == 1)
	{
        if(PlayerTemp[playerid][pt_TempName]) return 1;
		new query[3700];
		new Float:x,Float:y,Float:z,Float:z_a,Float:VidaV;
		new inte,vw;
		new day,month,year;
		getdate(year,month,day);
		for(new a = 0; a < MAX_PAUTOS; a++)
  		{
			if(autos[a][playerid] > 0)
			{
				GetVehicleDamageStatus(autos[a][playerid], VehicleInfo[playerid][a][VE1], VehicleInfo[playerid][a][VE2], VehicleInfo[playerid][a][VE3], VehicleInfo[playerid][a][VE4]);
				VehicleInfo[playerid][a][vGas] = VehicleFuel[autos[a][playerid]];
				GetVehicleHealth(autos[a][playerid], VidaV);
				GetVehiclePos(autos[a][playerid], x,y,z);
				VehicleInfo[playerid][a][vX] = x;
				VehicleInfo[playerid][a][vY] = y;
				VehicleInfo[playerid][a][vZ] = z;
				GetVehicleZAngle(autos[a][playerid], z_a);
				VehicleInfo[playerid][a][vA] = z_a;
				VehicleInfo[playerid][a][pVidaV] = VidaV;
				inte = GetVehicleInterior(autos[a][playerid]);
				vw = GetVehicleVirtualWorld(autos[a][playerid]);
				VehicleInfo[playerid][a][vinterior] = inte;
				VehicleInfo[playerid][a][vvw] = vw;
				mysql_format(Conecction, query, sizeof(query),"UPDATE `p_autos` SET VE1='%d', VE2='%d', VE3='%d', VE4='%d', vGas='%d', VidaV='%f', X='%f', Y='%f', Z='%f', A='%f', Ointerior='%d', Ovw='%d'",VehicleInfo[playerid][a][VE1],VehicleInfo[playerid][a][VE2],VehicleInfo[playerid][a][VE3],VehicleInfo[playerid][a][VE4],VehicleInfo[playerid][a][vGas],VehicleInfo[playerid][a][pVidaV],VehicleInfo[playerid][a][vX],VehicleInfo[playerid][a][vY],VehicleInfo[playerid][a][vZ],VehicleInfo[playerid][a][vA],VehicleInfo[playerid][a][v0_interior],VehicleInfo[playerid][a][v0_vw]);
				mysql_format(Conecction, query, sizeof(query),"%s, vTraba='%d', Segurov='%d', OX='%f', OY='%f', OZ='%f', OA='%f', vinterior='%d', vvw='%d', Alarm='%d', Alarma='%d', Motor='%d' WHERE `ID`='%d' LIMIT 1",query,VehicleInfo[playerid][a][vTraba],VehicleInfo[playerid][a][vSeguro],VehicleInfo[playerid][a][pOX],VehicleInfo[playerid][a][pOY],VehicleInfo[playerid][a][pOZ],VehicleInfo[playerid][a][pOA],VehicleInfo[playerid][a][vinterior],VehicleInfo[playerid][a][vvw],VehicleInfo[playerid][a][vAlarm],VehicleInfo[playerid][a][vAlarma],VehicleInfo[playerid][a][Aceleracion],VehicleInfo[playerid][a][v_DBID]);
				mysql_tquery(Conecction, query);
	  		}
  		}
		if(PlayerInfo[playerid][jDinero] < 0) PlayerInfo[playerid][jDinero] = 0;
		if(PlayerInfo[playerid][pBanco] < 0) PlayerInfo[playerid][pBanco] = 0;
		PlayerInfo[playerid][pInterior] = GetPlayerInterior(playerid);
		PlayerInfo[playerid][pMundoVirtual] = GetPlayerVirtualWorld(playerid);
		GetPlayerPos(playerid, PlayerInfo[playerid][jPos_x], PlayerInfo[playerid][jPos_y], PlayerInfo[playerid][jPos_z]);
		GetPlayerHealth(playerid, PlayerInfo[playerid][jVida]);
		GetPlayerArmour(playerid, PlayerInfo[playerid][jArmadura]);
		new hour,minute,second;
		gettime(hour, minute, second);
		new timeonline = PlayerInfo[playerid][TimeOn] + TiempoConectado[playerid];
		PlayerInfo[playerid][jConexion] = gettimeVariable;
		mysql_format(Conecction, query, sizeof(query), "UPDATE `usuarios` SET Online='1',Interior='%d',MundoVirtual='%d',Posx='%f',Posy='%f',Posz='%f',Vida='%f',Chaleco='%f', Admin='%d', Maper='%d', Nivel='%d', Money='%d',Banco='%d',GPS='%d',Radio='%d',Sexo='%d',Numero='%d',Materiales='%d',TiempoJail='%d',Trabajo3='%d',Trabajo2='%d',Trabajo='%d',Faccion='%d',TipoCarcel='%d',SocioHP='%d',Hambre='%d',CanalDudas='%d',ShowCone='%d',ShowGuia='%d',SedOculta='%d'",PlayerInfo[playerid][pInterior],PlayerInfo[playerid][pMundoVirtual],PlayerInfo[playerid][jPos_x],PlayerInfo[playerid][jPos_y],PlayerInfo[playerid][jPos_z],PlayerInfo[playerid][jVida],PlayerInfo[playerid][jArmadura],PlayerInfo[playerid][pAdmin],PlayerInfo[playerid][pMaper],PlayerInfo[playerid][jNivel],PlayerInfo[playerid][jDinero],PlayerInfo[playerid][pBanco],PlayerInfo[playerid][pGPS],PlayerInfo[playerid][pRadio],PlayerInfo[playerid][jSexo],PlayerInfo[playerid][pNumero],PlayerInfo[playerid][pMateriales],PlayerInfo[playerid][pTiempoJail],PlayerInfo[playerid][Trabajo][2],PlayerInfo[playerid][Trabajo][1],PlayerInfo[playerid][Trabajo][0],PlayerInfo[playerid][jMiembro],PlayerInfo[playerid][pTipoCarcel],PlayerInfo[playerid][pSocioHP],PlayerInfo[playerid][pHambre],CanalDudas[playerid],ShowCone[playerid],ShowGuia[playerid],SedOculta[playerid]);
		mysql_format(Conecction, query, sizeof(query), "%s, Licencia='%d',Semillas='%d',Marihuana='%d',IP='%e',Agonizando='%d',CasaID1='%d',CasaID2='%d',Moneda='%d',Creditos='%d',TiempoPD='%d',arrestado='%d',Sanciones='%d',horasjugadas='%d',TieneEmisora='%d',NombreEmisora='%e',Cargos='%d',SkinTrabajo='%d',Duty='%d',WP0='%d',WP1='%d',WP2='%d',WP3='%d',WP4='%d',WP5='%d',Ciudad='%e',ShowMutes='%d',ShowSound='%d',ShowVelo='%d'", query,PlayerInfo[playerid][pLicencia],PlayerInfo[playerid][pSemillas],PlayerInfo[playerid][pMarihuana],PlayerInfo[playerid][IP],PlayerInfo[playerid][Agonizando],PlayerInfo[playerid][CasaID][0],PlayerInfo[playerid][CasaID][1],PlayerInfo[playerid][Moneda],PlayerInfo[playerid][Credits],TiempoPD[playerid],PlayerInfo[playerid][arrestado],PlayerInfo[playerid][sancionado],PlayerInfo[playerid][horasjugadas],Emisoras[playerid][TieneEmisora],Emisoras[playerid][NombreEmisora],PlayerInfo[playerid][pCargos],PlayerInfo[playerid][pModelo],PlayerInfo[playerid][pDuty],PlayerInfo[playerid][pWP0],PlayerInfo[playerid][pWP1],PlayerInfo[playerid][pWP2],PlayerInfo[playerid][pWP3],PlayerInfo[playerid][pWP4],PlayerInfo[playerid][pWP5],PlayerInfo[playerid][pCiudad],ShowMutes[playerid],ShowSound[playerid],ShowVelo[playerid]);
		mysql_format(Conecction, query, sizeof(query), "%s, WP6='%d',WP7='%d',WP8='%d',WP9='%d',WP10='%d',WP11='%d',WP12='%d',Experiencia='%d',PuntosCarrera='%d',Conexion='%d',Sed='%d',RopaBasu='%d',RopaMedi='%d',RopaMeca='%d',RopaMine='%d',Martillo='%d',Destornillador='%d',Barreta='%d',Balde='%d',Regalo='%d',Patines='%d',TiempoCarcelS='%d',NivelTransportista='%d',ExpTransportista='%d',TimeOn='%d'", query,PlayerInfo[playerid][pWP6],PlayerInfo[playerid][pWP7],PlayerInfo[playerid][pWP8],PlayerInfo[playerid][pWP9],PlayerInfo[playerid][pWP10],PlayerInfo[playerid][pWP11],PlayerInfo[playerid][pWP12],PlayerInfo[playerid][jExperiencia],PlayerInfo[playerid][pPuntosCarrera],PlayerInfo[playerid][jConexion],PlayerInfo[playerid][pSed],RopaBasu[playerid],RopaMedi[playerid],RopaMeca[playerid],RopaMine[playerid],PlayerInfo[playerid][jMartillo],PlayerInfo[playerid][jDestornillador],PlayerInfo[playerid][jBarreta],PlayerInfo[playerid][jBalde],PlayerInfo[playerid][jRegalo],PlayerInfo[playerid][pPatines],PlayerInfo[playerid][pTiempoCarcel],PlayerInfo[playerid][pNivelTransportista],PlayerInfo[playerid][pExpTransportista],timeonline);
        mysql_format(Conecction, query, sizeof(query), "%s, Caramelos='%d', AvisoTerritorio='%d',ShowTerritorio='%d',CasaID3='%d',CasaID4='%d',KitMedico='%d',MostrarTwitter='%d',DutyM='%d',C4='%d'", query,PlayerInfo[playerid][pCaramelos],AvisoTerritorio[playerid],ShowTerritorio[playerid],PlayerInfo[playerid][CasaID][2],PlayerInfo[playerid][CasaID][3],PlayerInfo[playerid][pKitm],MostrarTwitter[playerid],PlayerInfo[playerid][pDutyM],PlayerInfo[playerid][pC4]);
		mysql_format(Conecction, query, sizeof(query), "%s, Agenda='%d',Crack='%d',Medicamentos='%d',VIP='%d',Rango='%d',Repuestos='%d',NMute='%d',NivelPescador='%d',ExpPescador='%d',NivelArmero='%d',ExpArmero='%d',NivelCamionero='%d',ExpCamionero='%d',NivelBasurero='%d',ExpBasurero='%d',NivelPiloto='%d',ExpPiloto='%d',NivelLadron='%d',ExpLadron='%d',NivelMinero='%d',ExpMinero='%d'", query,PlayerInfo[playerid][pAgenda],PlayerInfo[playerid][pCrack],PlayerInfo[playerid][pMedicamentos],PlayerInfo[playerid][VIP],PlayerInfo[playerid][pRango],PlayerInfo[playerid][Repuestos],TiempoDuda[playerid],PlayerInfo[playerid][pNivelPescador],PlayerInfo[playerid][pExpPescador],PlayerInfo[playerid][pNivelArmero],PlayerInfo[playerid][pExpArmero],PlayerInfo[playerid][pNivelCamionero],PlayerInfo[playerid][pExpCamionero],PlayerInfo[playerid][pNivelBasurero],PlayerInfo[playerid][pExpBasurero],PlayerInfo[playerid][pNivelMecanico],PlayerInfo[playerid][pExpPiloto],PlayerInfo[playerid][pNivelLadron],PlayerInfo[playerid][pExpLadron],PlayerInfo[playerid][pNivelMinero],PlayerInfo[playerid][pExpMinero]);
		mysql_format(Conecction, query, sizeof(query), "%s, Afinidad1='%d',Afinidad2='%d',Afinidad3='%d',Afinidad4='%d',Afinidad5='%d',Afinidad6='%d',NivelMedico='%d',ExpMedico='%d',AMute='%d',TiendaInt='%d',TiendaVw='%d',TiendasX='%f',TiendasY='%f',EstiloCaminar='%d',EstadoLaser='%d',ColorLaser='%d',Acento='%d',Estado='%e',MEstado='%d',Cocaina='%d',Hongos='%d',AcentoP='%e',Asesinatos='%d',AutoLogin='%d' WHERE `ID`='%d' LIMIT 1", query, Afinidad[0][playerid],Afinidad[1][playerid],Afinidad[2][playerid],Afinidad[3][playerid],Afinidad[4][playerid],Afinidad[5][playerid],PlayerInfo[playerid][pNivelMedico],PlayerInfo[playerid][pExpMedico],PlayerTemp[playerid][TiempoTwitter],PlayerInfo[playerid][TiendaInt],PlayerInfo[playerid][TiendaVw],PlayerInfo[playerid][TiendasX],PlayerInfo[playerid][TiendasY],WalkStyle[playerid],PlayerInfo[playerid][pEstadoLaser],PlayerInfo[playerid][pColorLaser],PlayerInfo[playerid][pAcento],PlayerInfo[playerid][pFraseEstado],PlayerInfo[playerid][pTieneEstado],PlayerInfo[playerid][pCocaina],PlayerInfo[playerid][pHongos],PlayerInfo[playerid][AcentoP],PlayerInfo[playerid][pAsesinatos],PlayerInfo[playerid][AutoLogin],PlayerInfo[playerid][p_DBID]);
		mysql_tquery(Conecction, query);
	}
	return 1;
}

static ConceCercano(playerid,modelo,color1,color2,slot)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:Conce1, Float:Conce2, Float:Conce3, Float:Conce4, Float:Conce5;
		Conce1 = GetPlayerDistanceFromPoint(playerid, 1656.1246,-1883.6947,13.1237);
		Conce2 = GetPlayerDistanceFromPoint(playerid, 557.6544,-1260.8588,16.8133);
		Conce3 = GetPlayerDistanceFromPoint(playerid, 2127.5342,-1123.4701,24.9874);
		Conce4 = GetPlayerDistanceFromPoint(playerid, -1989.7445,288.3349,33.9223);
		Conce5 = GetPlayerDistanceFromPoint(playerid, 1464.9510,-1780.9888,13.9439);
		if(Conce1 < Conce2 && Conce1 < Conce3 && Conce1 < Conce4 && Conce1 < Conce5) autos[slot][playerid] = CreateVehicle(modelo,1656.1246,-1883.6947,13.1237,359.9166,color1,color2,-1);
		else if(Conce2 < Conce1 && Conce2 < Conce3 && Conce2 < Conce4 && Conce2 < Conce5) autos[slot][playerid] = CreateVehicle(modelo,557.6544,-1260.8588,16.8133,17.7973,color1,color2,-1);
		else if(Conce3 < Conce1 && Conce3 < Conce2 && Conce3 < Conce4 && Conce3 < Conce5) autos[slot][playerid] = CreateVehicle(modelo,2127.5342,-1123.4701,24.9874,3.9086,color1,color2,-1);
		else if(Conce4 < Conce1 && Conce4 < Conce2 && Conce4 < Conce3 && Conce4 < Conce5) autos[slot][playerid] = CreateVehicle(modelo,-1989.7445,288.3349,33.9223,90.9973,color1,color2,-1);
		else if(Conce5 < Conce1 && Conce5 < Conce2 && Conce5 < Conce3 && Conce5 < Conce4) autos[slot][playerid] = CreateVehicle(modelo,1494.5084,-1744.7078,13.5469,358.7261,color1,color2,-1);
		VehicleInfo[playerid][slot][v0_interior] = 0;
		VehicleInfo[playerid][slot][v0_vw] = 0;
		EnAuto[playerid] = autos[slot][playerid];
		EntrandoAV[playerid] = autos[slot][playerid];
		VehicleFuel[autos[slot][playerid]] = CombustibleCoche(autos[slot][playerid]);
		VehicleInfo[playerid][slot][vGas] = CombustibleCoche(autos[slot][playerid]);
		bloqueado[autos[slot][playerid]] = 0;
		Mensaje(playerid, -1, "Compraste el veh�culo, ahora estacionalo en un lugar seguro usando "CR"/estacionar"CB".");
		SetVehicleNumberPlate(autos[slot][playerid], Patente[playerid][slot]);
		va_SendClientMessage(playerid,-1, "La patente de tu veh�culo es "CR"%s"CB".", Patente[playerid][slot]);
		Mensaje(playerid, -1, "En caso de que tu veh�culo sea robado, llama a la polic�a y comun�cales la patente.");
		SetTimerEx("EstacionarCoche", 2500, false, "dd", playerid, 0);
		PutPlayerInVehicleAC(playerid, autos[slot][playerid], 0);
 	 	MostrarInfoVehiculo(playerid);
  		MostrarVelocimetro(playerid);
		RevisarLogro(playerid,1);
		new Float:CompraPos[4];
		switch(modelo)
		{
			case 430,446,452,453,454,472,473,484,493,595:
			{
				new rand = random(sizeof(ConceBSpawn));
				CompraPos[0] = ConceBSpawn[rand][0],CompraPos[1] = ConceBSpawn[rand][1],CompraPos[2] = ConceBSpawn[rand][2],CompraPos[3] = ConceBSpawn[rand][3];
			}

			case 592,577,511,512,593,520,553,476,519,460,513,548,425,417,487,488,497,563,447,469:
			{
				new rand = random(sizeof(ConceHeliSpawn));
				CompraPos[0] = ConceHeliSpawn[rand][0],CompraPos[1] = ConceHeliSpawn[rand][1],CompraPos[2] = ConceHeliSpawn[rand][2],CompraPos[3] = ConceHeliSpawn[rand][3];
			}
			default:
			{
				new rand = random(sizeof(ConceSpawn));
				CompraPos[0] = ConceSpawn[rand][0],CompraPos[1] = ConceSpawn[rand][1],CompraPos[2] = ConceSpawn[rand][2],CompraPos[3] = ConceSpawn[rand][3];
			}
		}
		VehicleInfo[playerid][slot][pOX] = CompraPos[0];
		VehicleInfo[playerid][slot][pOY] = CompraPos[1];
		VehicleInfo[playerid][slot][pOZ] = CompraPos[2];
		VehicleInfo[playerid][slot][pOA] = CompraPos[3];
		
	}
}

Funcion:RespawnearV(vehicleid) SetVehicleToRespawn(vehicleid);

Funcion:FixPlayerPutInVehicle(playerid, vehicleid, seatid)
{
	CarTroll[playerid][playerFalseDetection] = true;
	vehicleData[CarTroll[playerid][playerStateVehicle]][broadVehicleOwner] = INVALID_PLAYER_ID;
	CarTrollData(playerid,vehicleid,1);
	return PutPlayerInVehicle(playerid, vehicleid, seatid);
}
Funcion:EstacionarCoche(playerid,type)
{
	if(!IsPlayerInAnyVehicle(playerid)) return 1;
	new autoid,asd;
	autoid = GetPlayerVehicleID(playerid);
	asd = GetPlayerVehicle(playerid, autoid);
	if(asd != -1)
	{
		new query[200],Float:X,Float:Y,Float:Z,Float:z_A,Float:Health,interior,vw;
		interior = GetPlayerInterior(playerid);
		vw = GetPlayerVirtualWorld(playerid);
		GetVehicleHealth(autoid, Health);
		if(type == 1)
		{
			AccionesRol(playerid,"estacion� su veh�culo.", 20);
			GetVehicleParamsEx(autoid, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(autoid, 0, lights, alarm, doors, bonnet, boot, objective);
			SetCameraBehindPlayer(playerid);
		}
		GetVehiclePos(autoid, X,Y,Z);
		GetVehicleZAngle(autoid, z_A);
		GetVehicleDamageStatus(autos[asd][playerid], VehicleInfo[playerid][asd][VE1], VehicleInfo[playerid][asd][VE2], VehicleInfo[playerid][asd][VE3], VehicleInfo[playerid][asd][VE4]);
		mysql_format(Conecction,query, sizeof(query), "UPDATE `p_autos` SET `OX`='%f',`OY`='%f',`OZ`='%f',`OA`='%f',`Ointerior`='%d',`Ovw`='%d',`VidaVE`='%f' WHERE `ID`='%d'",Float:X,Float:Y,Float:Z,Float:z_A,interior,vw,Health,VehicleInfo[playerid][asd][v_DBID]);
		mysql_tquery(Conecction, query);
		VehicleInfo[playerid][asd][pOX] = X;
		VehicleInfo[playerid][asd][pOY] = Y;
		VehicleInfo[playerid][asd][pOZ] = Z;
		VehicleInfo[playerid][asd][pOA] = z_A;
		VehicleInfo[playerid][asd][v0_interior] = interior;
		VehicleInfo[playerid][asd][v0_vw] = vw;
		VehicleInfo[playerid][asd][pVidaVE] = Health;
		MotorAuto[autoid] = 0;
	}
	return 1;
}

static Respawnear(autoid)
{
	MotorAuto[autoid] = 0;
	SetVehicleToRespawn(autoid);
	return 1;
}

static PagoBasurero(playerid, nivel)
{
	new dinero;
	switch(nivel)
	{
		case 1: dinero = 12300;
        case 2: dinero = 15000;
        case 3: dinero = 17000;
        case 4: dinero = 18800;
        case 5: dinero = 20000;
        default: dinero = 20500;
	}
	va_SendClientMessage(playerid, -1,"Has terminado tu recorrido correctamente, has ganado "CR"$%s",ConvertirNumero(dinero));
	DarDinero(playerid, dinero);
	return 1;
}

static PagoCamionero(playerid, nivel, carga)
{
	new dinero,crack,medis,arma;
	switch(nivel)
    {
        case 1: dinero = 6500,crack = 45,medis = 30,arma = 100;
        case 2: dinero = 9500,crack = 45,medis = 35,arma = 190;
        case 3: dinero = 11750,crack = 50,medis = 40,arma = 220;
        case 4: dinero = 13000,crack = 55,medis = 45,arma = 270;
        case 5: dinero = 14500,crack = 60,medis = 50,arma = 320;
        case 6: dinero = 16500,crack = 65,medis = 55,arma = 350;
        default: dinero = 17300,crack = 65,medis = 55,arma = 390;
    }
	switch(carga)
	{
		case 1,2:{ 
			dinero = dinero*2;
			va_SendClientMessage(playerid, -1, "�Excelente entrega! Tus ganancias son: "CR"$%s"CB".",ConvertirNumero(dinero));
		}
		case 3:
		{
			PlayerInfo[playerid][pCrack] += crack;
			PlayerInfo[playerid][pMedicamentos] += medis;
			va_SendClientMessage(playerid, -1, "�Excelente entrega! Tus ganancias son: "CR"$%s"CB" y {EE0000}%dg"CB" de crack + {EE0000}%d"CB" medicamentos.",ConvertirNumero(dinero),crack,medis);
		}
		case 4:
		{
			PlayerInfo[playerid][pMateriales] += arma;
			va_SendClientMessage(playerid, -1, "�Excelente entrega! Tus ganancias son: "CR"$%s"CB" y {EE0000}%d"CB" piezas de armas.",ConvertirNumero(dinero),arma);
		}
	}
	if(random(2) == 0)
	{
		va_SendClientMessage(playerid, -1, "Has recibido "CR"%d"CB" "Moneda3".", PlayerInfo[playerid][pNivelCamionero]);
		PlayerInfo[playerid][Credits] += PlayerInfo[playerid][pNivelCamionero];
	}
	DarHabilidadCamio(playerid, PlayerInfo[playerid][pNivelCamionero]);
	DarDinero(playerid, dinero);
	return 1;
}
/*
static Habilidad(playerid)
{
	new item[900];
	format(item, sizeof(item), ""CB"Trabajo de {FF9B00}Camionero"CB" (Nivel: %d | Progreso %d/50)\n",PlayerInfo[playerid][pNivelCamionero],PlayerInfo[playerid][pExpCamionero]);
	format(item, sizeof(item), "%s\nTrabajo de {E20000}Fabricante de armas"CB" (Nivel: %d | Progreso %d/50)\n",item,PlayerInfo[playerid][pNivelArmero],PlayerInfo[playerid][pExpArmero]);
	format(item, sizeof(item), "%s\nTrabajo de {33CCFF}Mec�nico"CB" (Nivel: %d | Progreso %d/50)\n",item,PlayerInfo[playerid][pNivelMecanico],PlayerInfo[playerid][pExpPiloto]);
	format(item, sizeof(item), "%s\nTrabajo de {6C5B37}Basurero"CB" (Nivel: %d | Progreso %d/50)\n",item,PlayerInfo[playerid][pNivelBasurero],PlayerInfo[playerid][pExpBasurero]);
	format(item, sizeof(item), "%s\nTrabajo de {270055}Transportista"CB" (Nivel: %d | Progreso %d/50)\n",item,PlayerInfo[playerid][pNivelTransportista],PlayerInfo[playerid][pExpTransportista]);
	format(item, sizeof(item), "%s\nTrabajo de {0000BC}Ladr�n"CB" (Nivel: %d | Progreso %d/50)\n",item,PlayerInfo[playerid][pNivelLadron],PlayerInfo[playerid][pExpLadron]);
	format(item, sizeof(item), "%s\nTrabajo de {878A8B}Minero"CB" (Nivel: %d | Progreso %d/50)\n",item,PlayerInfo[playerid][pNivelMinero],PlayerInfo[playerid][pExpMinero]);
	format(item, sizeof(item), "%s\nTrabajo de {007600}Pescador"CB" (Nivel: %d | Progreso %d/50)\n",item,PlayerInfo[playerid][pNivelPescador],PlayerInfo[playerid][pExpPescador]);
	format(item, sizeof(item), "%s\nTrabajo de {ff4e00}M�dico"CB" (Nivel: %d | Progreso %d/50)\n",item,PlayerInfo[playerid][pNivelMedico],PlayerInfo[playerid][pExpMedico]);
	MostrarDialog(playerid, DIALOG_INFO, DIALOG_STYLE_MSGBOX, "Habilidades", item, "Cerrar", "");
	return 1;
}*/

static Habilidad2(ID,playerid)
{
	new item[900];
	format(item, sizeof(item), ""CB"Trabajo de {FF9B00}Camionero"CB" (Nivel: %d | Progreso %d/50)\n",PlayerInfo[ID][pNivelCamionero],PlayerInfo[ID][pExpCamionero]);
	format(item, sizeof(item), "%s\nTrabajo de {E20000}Fabricante de armas"CB" (Nivel: %d | Progreso %d/50)\n",item,PlayerInfo[ID][pNivelArmero],PlayerInfo[ID][pExpArmero]);
	format(item, sizeof(item), "%s\nTrabajo de {33CCFF}Mec�nico"CB" (Nivel: %d | Progreso %d/50)\n",item,PlayerInfo[ID][pNivelMecanico],PlayerInfo[ID][pExpPiloto]);
	format(item, sizeof(item), "%s\nTrabajo de {6C5B37}Basurero"CB" (Nivel: %d | Progreso %d/50)\n",item,PlayerInfo[ID][pNivelBasurero],PlayerInfo[ID][pExpBasurero]);
	format(item, sizeof(item), "%s\nTrabajo de {270055}Transportista"CB" (Nivel: %d | Progreso %d/50)\n",item,PlayerInfo[ID][pNivelTransportista],PlayerInfo[ID][pExpTransportista]);
	format(item, sizeof(item), "%s\nTrabajo de {0000BC}Ladr�n"CB" (Nivel: %d | Progreso %d/50)\n",item,PlayerInfo[ID][pNivelLadron],PlayerInfo[ID][pExpLadron]);
	format(item, sizeof(item), "%s\nTrabajo de {878A8B}Minero"CB" (Nivel: %d | Progreso %d/50)\n",item,PlayerInfo[ID][pNivelMinero],PlayerInfo[ID][pExpMinero]);
	format(item, sizeof(item), "%s\nTrabajo de {007600}Pescador"CB" (Nivel: %d | Progreso %d/50)\n",item,PlayerInfo[ID][pNivelPescador],PlayerInfo[ID][pExpPescador]);
	format(item, sizeof(item), "%s\nTrabajo de {ff4e00}M�dico"CB" (Nivel: %d | Progreso %d/50)\n",item,PlayerInfo[playerid][pNivelMedico],PlayerInfo[playerid][pExpMedico]);
	MostrarDialog(playerid, DIALOG_INFO, DIALOG_STYLE_MSGBOX, "Habilidades", item, "Cerrar", "");
	return 1;
}

static Localizar(playerid)
{
    new string[120*MAX_PAUTOS];
    for(new i = 0; i < MAX_PAUTOS; i++)
    {
        if(GetVehicleModel(autos[i][playerid]) < 400) continue;
		new Float:POS[3];
		GetVehiclePos(autos[i][playerid], POS[0], POS[1], POS[2]);
		new Float:distancia = GetPlayerDistanceFromPoint(playerid, POS[0], POS[1], POS[2]);
        format(string, sizeof(string), "%s Veh�culo: {F6E200}%s"CB" | Patente: "CR"%s"CB" | Distancia: "CR"%0.1fm"CB"\n",string,GetVehicleName(autos[i][playerid]), Patente[playerid][i], distancia);
		
	}
    MostrarDialog(playerid, GPS2, DIALOG_STYLE_LIST, "Selecciona el veh�culo que deseas localizar", string, "Localizar","Cancelar");
    return 1;
}

static Localizar2(ID,playerid)
{
    new string[100*MAX_PAUTOS];
    for(new i = 0; i < MAX_PAUTOS; i++)
    {
        if(VehicleInfo[ID][i][vModelo] < 400) continue;
        format(string, sizeof(string), "%s Veh�culo: {F6E200}%s"CB" | Patente: "CR"%s"CB" | ID: %d\n",string,GetVehicleName(autos[i][ID]), Patente[ID][i], autos[i][ID]);
    }
    MostrarDialog(playerid, DIALOG_INFO, DIALOG_STYLE_LIST, "Selecciona el veh�culo que deseas localizar", string, "Localizar","Cancelar");
    return 1;
}

static Revivir(revivido)
{
	SiendoCurado[revivido] = 0;
    suicidio[revivido] = 0;
	PlayerInfo[revivido][Agonizando] = 0;
	Muriendo[revivido] = 0;
	VariableCaido[revivido] = 0;
	Esposando[revivido] = 0;
	MarcadoMedicos[revivido] = 0;
	LlamadaMedicos[revivido] = 0;
	DescongelarEx(revivido);
	EstablecerVida(revivido, 100.0);
	ClearAnimations(revivido);
	ApplyAnimation(revivido, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	TextDrawHideForPlayer(revivido,Sangre);
	TextDrawHideForPlayer(revivido,MisionT2[5]);
	PlayerTextDrawHide(revivido,IndicacionesT[revivido]);
	return 1;
}

static ConvertirNumero(iValue, const iDelim[2] = ".", szNum[15] = "", iSize = sizeof(szNum))
{
	new tamano = strlen(szNum) - 3;
	format(szNum, iSize, "%d", iValue < 0 ? -iValue : iValue);
	for(new i = tamano; i > 0; i -= 3) strins(szNum, iDelim, i, iSize);
	if(iValue < 0) strins(szNum, "-", 0, iSize);
	return szNum;
}

static Inventario(playerid,id)
{
	if(PrimerosPasos[playerid] == 0)
	{
	    Mensaje(playerid,-1,""CR"[!]"CB" Ahora tendr�s que vestirte y personalizar tu personaje a tu gusto, esto lo podr�s hacer en el tienda "CR""Moneda1""CB".");
	    Mensaje(playerid,-1,""CR"[!]"CB" Puedes encontrar la tienda marcada en el "CR"mapa"CB" o GPS, tambi�n puedes ver las estad�sticas de tu personaje con el comando "CR"/EST"CB".");
		ShowTDN(playerid, "~b~Primer objetivo:~w~ visita la tienda ~p~BZ");
		ShowTDN(playerid, "~w~Personaliza tu personaje con nueva vestimenta, prendas, estilos y muchos mas");
		PrimerosPasos[playerid] = 1;
		PosicionGPS(playerid,690.9043,-1607.1835,14.5957,5);
  	}
	new string[1500];
	format(string, 950,""CB""Moneda3": {D1A231}%s"CB"\n",ConvertirNumero(PlayerInfo[playerid][Credits]));
	if(PlayerInfo[playerid][Moneda] > 0) format(string, 950,"%s"CB""Moneda1": "CR"%s"CB"\n",string,ConvertirNumero(PlayerInfo[playerid][Moneda]));
	format(string, 950,"%s"CB"Dinero: "CR"$%s"CB"", string, ConvertirNumero(PlayerInfo[playerid][jDinero]));
	if(PlayerInfo[playerid][pNumero] > 0) format(string, 950,"%s\nTelefono m�vil",string);
	if(PlayerInfo[playerid][pAgenda] == 1) format(string, 950,"%s\nGu�a telefonica",string);
	if(PlayerInfo[playerid][pGPS] == 1) format(string, 950,"%s\nGPS",string);
	if(PlayerInfo[playerid][pPatines] == 1) format(string, 950,"%s\nPatines",string);
	if(PlayerInfo[playerid][pObj][0] != 11392 || PlayerInfo[playerid][pObj][1] != 11392 || PlayerInfo[playerid][pObj][2] != 11392 || PlayerInfo[playerid][pObj][3] != 11392) format(string, 850,"%s\nPrenda de vestir: "CR"S�"CR" /prendas"CB"",string);
	if(PlayerInfo[playerid][pRadio] == 1) format(string, 950,"%s\nRadio comunicador",string);
	if(Bidon[playerid] == 1) format(string, 850,"%s\nBid�n de gasolina",string);
	if(PlayerInfo[playerid][pKitm] > 0) format(string, 950,"%s\nKits m�dico: "CR"%d"CB".",string,PlayerInfo[playerid][pKitm]);
	if(PlayerInfo[playerid][pMedicamentos] > 0) format(string, 850,"%s\nMedicamentos: "CR"%s"CB"",string,ConvertirNumero(PlayerInfo[playerid][pMedicamentos]));
	if(PlayerInfo[playerid][pCrack] > 0) format(string, 950,"%s\nCrack: "CR"%sg"CB".",string,ConvertirNumero(PlayerInfo[playerid][pCrack]));
	if(PlayerInfo[playerid][pHongos] > 0) format(string, 950,"%s\nHongos: "CR"%s"CB".",string,ConvertirNumero(PlayerInfo[playerid][pHongos]));
	if(PlayerInfo[playerid][pCocaina] > 0) format(string, 950,"%s\nCoca�na: "CR"%sg"CB".",string,ConvertirNumero(PlayerInfo[playerid][pCocaina]));
	if(PlayerInfo[playerid][pCaramelos] > 0) format(string, 950,"%s\nCaramelos: {a31fff}%d"CB".",string,PlayerInfo[playerid][pCaramelos]);
	if(PlayerInfo[playerid][pMarihuana] > 0) format(string, 950,"%s\nMarihuana: "CR"%sg"CB".",string,ConvertirNumero(PlayerInfo[playerid][pMarihuana]));
	if(PlayerInfo[playerid][pSemillas] > 0) format(string, 950,"%s\nSemillas de marihuana: "CR"%s"CB".",string,ConvertirNumero(PlayerInfo[playerid][pSemillas]));
	if(PlayerInfo[playerid][Repuestos] > 0) format(string, 950,"%s\nRepuestos: "CR"%d"CB"/100",string,PlayerInfo[playerid][Repuestos]);
	if(PlayerInfo[playerid][pMateriales] > 0) format(string, 950,"%s\nPiezas de armas: "CR"%s"CB"",string,ConvertirNumero(PlayerInfo[playerid][pMateriales]));
	if(PlayerInfo[playerid][piezas] > 0) format(string, 950,"%s\nMateriales: "CR"%s"CB"",string,ConvertirNumero(PlayerInfo[playerid][piezas]));
	if(PlayerInfo[playerid][pC4] > 0) format(string, 950,"%s\nBomba C4: "CR"%d"CB"",string,PlayerInfo[playerid][pC4]);
	if(PlayerInfo[playerid][pWP0] > 0 || PlayerInfo[playerid][pWP1] > 0 || PlayerInfo[playerid][pWP2] > 0||PlayerInfo[playerid][pWP3] > 0||PlayerInfo[playerid][pWP4] > 0||PlayerInfo[playerid][pWP5] > 0||PlayerInfo[playerid][pWP6] > 0||PlayerInfo[playerid][pWP7] > 0||PlayerInfo[playerid][pWP8] > 0||PlayerInfo[playerid][pWP9] > 0||PlayerInfo[playerid][pWP10] > 0||PlayerInfo[playerid][pWP11] > 0||PlayerInfo[playerid][pWP12] > 0) format(string, 850,"%s\nArmas: %s%s%s%s%s%s%s%s%s%s%s%s%s",string, NombreArma[PlayerInfo[playerid][pWP0]],NombreArma[PlayerInfo[playerid][pWP1]],NombreArma[PlayerInfo[playerid][pWP2]],NombreArma[PlayerInfo[playerid][pWP3]],NombreArma[PlayerInfo[playerid][pWP4]],NombreArma[PlayerInfo[playerid][pWP5]],NombreArma[PlayerInfo[playerid][pWP6]],NombreArma[PlayerInfo[playerid][pWP7]],NombreArma[PlayerInfo[playerid][pWP8]],NombreArma[PlayerInfo[playerid][pWP9]],NombreArma[PlayerInfo[playerid][pWP10]],NombreArma[PlayerInfo[playerid][pWP11]],NombreArma[PlayerInfo[playerid][pWP12]]);
	if(PlayerInfo[playerid][jMartillo] > 0 || PlayerInfo[playerid][jDestornillador] > 0 || PlayerInfo[playerid][jBarreta] > 0||PlayerInfo[playerid][jBalde] > 0) format(string, 850,"%s\n\n"CB"Herramientas: %s%s%s%s ",string, NombreHerramienta[PlayerInfo[playerid][jMartillo]],NombreHerramienta[PlayerInfo[playerid][jDestornillador]],NombreHerramienta[PlayerInfo[playerid][jBarreta]],NombreHerramienta[PlayerInfo[playerid][jBalde]]);
	MostrarDialog(id, INVENTARIO, DIALOG_STYLE_MSGBOX,""CR"Inventario",string,"Cerrar","");
	return 1;
}

static SendRadioMessage(member, color, const string[], id, frecuencia)
{
	if(member == 1)
	{
		foreach(new i : Player)
		{
			
			if(PlayerInfo[i][pDuty] == 1 && Frecuencia[i] == frecuencia && EstadoRadio[i] == 1 && i != id) Mensaje(i, color, string);
			
		}
	}
	else
	{
		foreach(new i : Player)
		{
			
			if(PlayerInfo[i][jMiembro] == member && EstadoRadio[i] == 1 && i != id) Mensaje(i, color, string);
			
		}
	}
}

static LogroForzar(playerid,xd,casa)
{
	new Float:Pos[3];
	GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	if(xd == 1)
	{
		AbrirPuerta(casa);
		AccionesRol(playerid,"logr� forzar la cerradura.", 20);
		Mensaje(playerid,-1,"Tus herramientas fueron guardados en tu inventario.");
		Mensaje(playerid,-1,""CR"Lograste abrir la puerta"CB", roba todo lo que puedas antes de que pasen "CR"10 segundos"CB" o seras arrestado.");
		DarHabilidadLadron(playerid);
		SetTimerEx("CerrarPuerta",24000,false,"d",casa);
		RevisarLogro(playerid,11);
	}
	else if(xd == 2)
	{

		AccionesRol(playerid,"no logra forzar la cerradura.", 20);
		Mensaje(playerid,-1,"No pudiste abrir la puerta, un vecino te vio y ha alertado a la polic�a, escapa de la zona.");
		Mensaje(playerid,-1,"Tienes {FF0000}1 minuto"CB" para alejarte de la casa a m�s de "CR"200 metros"CB"");
	}
	DescongelarEx(playerid);
	RemovePlayerAttachedObject(playerid,4);
	LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	foreach(new i : StreamedPlayer[playerid]) { if(EstaEn(i,15.0,Pos[0],Pos[1],Pos[2]) && ShowSound[i] == 1) PlayAudioStreamForPlayer(i,"https://"URL"/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1); }
	return 1;
}

static DarHabilidadLadron(playerid)
{
	new exp = random(4);
	switch(exp)
	{
		case 0..2: Mensaje(playerid,-1,"Esta vez no ganaste ningun punto de habilidad");
		case 3:
		{
			if(PlayerInfo[playerid][pExpLadron] < 49)
			{
				Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad.");
				PlayerInfo[playerid][pExpLadron]++;
			}
			else if(PlayerInfo[playerid][pExpLadron] >= 49)
			{
				ShowTDN(playerid, "~p~Felicidades~w~, has aumentado tu nivel de ladr�n.");
				PlayerInfo[playerid][pExpLadron] = 0;
				PlayerInfo[playerid][pNivelLadron]++;
			}
		}
	}
}
/*
static SendClientMessagef(playerid, color, const form[], {Float, _}: ...)
{
    #pragma unused form
    static tmp[145];
    new t1 = playerid,t2 = color;
    const n4 = -4,n16 = -16,size = sizeof tmp;
    #emit stack 28
    #emit push.c size
    #emit push.c tmp
    #emit stack n4
    #emit sysreq.c format
    #emit stack n16
    return (t1 == -1 ? (SendClientMessageToAll(t2, tmp)) : (SendClientMessage(t1, t2, tmp)) );
}*/
/*
stock SendClientMessagef(playerid, colour, const fmat[], {Float, _}:...)
{
	new
		str[145];
	va_format(str, sizeof (str), fmat, va_start<3>);
	return SendClientMessage(playerid, colour, str);
}*/
/*
static SendClientMessagef(playerid, colour, const message[], {Float, _}:...)
{
	new out[145];
	format(out, sizeof(out), message, ___(3));
	return SendClientMessage(playerid, colour, out);
}*/

static SiHayPersonaEnVehiculo(vehicleid)
{
	foreach(new i : Player)
	{
	    if(IsPlayerInVehicle(i,vehicleid)) return true;
	}
	return false;
}

static QueMes(month)
{
	new rango[15];
    if (month == 1)  format(rango, sizeof(rango), "Enero");
    if (month == 2)  format(rango, sizeof(rango), "Febrero");
    if (month == 3)  format(rango, sizeof(rango), "Marzo");
    if (month == 4)  format(rango, sizeof(rango), "Abril");
    if (month == 5)  format(rango, sizeof(rango), "Mayo");
    if (month == 6)  format(rango, sizeof(rango), "Junio");
    if (month == 7)  format(rango, sizeof(rango), "Julio");
    if (month == 8)  format(rango, sizeof(rango), "Agosto");
    if (month == 9)  format(rango, sizeof(rango), "Septiembre");
    if (month == 10) format(rango, sizeof(rango), "Octubre");
    if (month == 11) format(rango, sizeof(rango), "Noviembre");
    if (month == 12) format(rango, sizeof(rango), "Diciembre");
    return rango;
}
static Actualizarnivel(playerid)
{
	new NivelUser = PlayerInfo[playerid][jNivel];
	new ExpUser = PlayerInfo[playerid][jExperiencia];
	new ExpMonto = PlayerInfo[playerid][NivelExp];
	new string[50];
	format(string, 50, "Nivel %d (%d/%d)", NivelUser, ExpUser, ExpMonto);
	PlayerTextDrawSetString(playerid, pjnivel[playerid], string);
	return 1;
}
static MostrarVelocimetro(playerid)
{
    if(ShowVelo[playerid] == 0) return 1;
	new VeloDados[43];
	new vehid = GetPlayerVehicleID(playerid);
	PlayerTextDrawSetPreviewModel(playerid, TextVelocimetroP[playerid][3], GetVehicleModel(vehid));
	new Float:VidaV; GetVehicleHealth(vehid, VidaV);
	new Float:V1 = floatmul(VidaV, 100.0);
	new Float:V2 = floatdiv(V1, 1000.0);
	PlayerTextDrawSetPreviewVehCol(playerid, TextVelocimetroP[playerid][3], InternalVehicleInfo[vehid][E_IVI_Color1], InternalVehicleInfo[vehid][E_IVI_Color2]);

	format(VeloDados, sizeof(VeloDados), "%0.0f%s", V2, "%");
	PlayerTextDrawSetString(playerid, TextVelocimetroP[playerid][1], VeloDados);

	format(VeloDados, sizeof(VeloDados), "%d", ObtenerVelocidad(playerid));
	PlayerTextDrawSetString(playerid, TextVelocimetroP[playerid][0], VeloDados);

	format(VeloDados, sizeof(VeloDados), "%d/%d~n~", VehicleFuel[vehid], CombustibleCoche(vehid));
	PlayerTextDrawSetString(playerid, TextVelocimetroP[playerid][2], VeloDados);

	TextDrawShowForPlayer(playerid, TextVelocimetro[0]);
	TextDrawShowForPlayer(playerid, TextVelocimetro[1]);
	TextDrawShowForPlayer(playerid, TextVelocimetro[2]);

	for(new t; t < 4; t++)
	{
		PlayerTextDrawShow(playerid, TextVelocimetroP[playerid][t]);
	}
    Manejando[playerid] = 1;
    KillTimer(Bajando[playerid]);
	return 1;
}

static QuitarVelocimetro(playerid)
{
	TextDrawHideForPlayer(playerid, TextVelocimetro[0]);
	TextDrawHideForPlayer(playerid, TextVelocimetro[1]);
	TextDrawHideForPlayer(playerid, TextVelocimetro[2]);
	for(new t; t < 4; t++)
	{
		PlayerTextDrawHide(playerid, TextVelocimetroP[playerid][t]);
	}
	return 1;
}

static EnviarRuta(playerid, ruta, const lugar[])
{
	va_SendClientMessage(playerid,COLOR_SMS,"Empresa de transporte(por celular): Hola, �podr�a ir a buscar una carga en %s?", lugar);
	Viaje[playerid] = ruta;
	return 1;
}


new spam2[][] = {"alphazone",".es","oz","bs","lz","vz","f z","ls-rp","delux"};



/******* EDSA**********/
static FaccLegal(playerid)
{
    if(PlayerInfo[playerid][pDuty] > 0 || PlayerInfo[playerid][pDutyM] > 0)
	{
	    return 1;
	}
	else return 0;
}
static FaccLegal2(playerid)
{
    if(PlayerInfo[playerid][jMiembro] == 1 || PlayerInfo[playerid][jMiembro] == 2)
	{
	    return 1;
	}
	else return 0;
}
static EDSA(carid)
{
	if(VehiculosInfo[carid][vfaccion] == 2) return 1;
	return 0;
}
/*******FIN EDSA******/
static HELISAPD(carid)
{
	if(GetVehicleModel(carid) == 497) return 1;
	return 0;
}

static AMBU(carid)
{
	if(GetVehicleModel(carid) == 416) return 1;
	return 0;
}

static CAMIONVIP(carid)
{
	if(GetVehicleModel(carid) == 609) return 1;
	return 0;
}

static DFT(carid)
{
	if(GetVehicleModel(carid) == 578) return 1;
	return 0;
}

static COSECHA(carid)
{
	if(GetVehicleModel(carid) == 532) return 1;
	return 0;
}

static BASU(carid)
{
	if(GetVehicleModel(carid) == 408) return 1;
	return 0;
}

TAXI(carid)
{
	new v = GetVehicleModel(carid);
	if(v == 420 || v == 438) return 1;
	return 0;
}

TREN(carid)
{
	new v = GetVehicleModel(carid);
	if(v == 570 || v == 538) return 1;
	return 0;
}

CAMION(carid)
{
	new v = GetVehicleModel(carid);
	if(v == 498 || v == 456) return 1;
	return 0;
}

BICI(carid)
{
	new v = GetVehicleModel(carid);
	if(v == 481 || v == 509 || v == 510) return 1;
	return 0;
}

MARITIMO(carid)
{
	new v = GetVehicleModel(carid);
	if(v == 430 || v == 446 || v == 452 || v == 453 || v == 454 || v == 472 || v == 473 || v == 484 || v == 493 || v == 595) return 1;
	return 0;
}

MOTO(carid)
{
	new v = GetVehicleModel(carid);
	if(v == 448 || v == 461 || v == 462 || v == 463 || v == 468 || v == 471 || v == 521 || v == 522 || v == 581 || v == 586) return 1;
	return 0;
}

MOTOSAPD(carid)
{
	new v = GetVehicleModel(carid);
	if(v == 541) return 1;
	return 0;
}

SAPD(carid)
{
	new v = GetVehicleModel(carid);
	if(v == 497 || v == 427 || v == 430 || v == 528 || v == 596 || v == 597 || v == 598 || v == 599 || v == 523 || v == 601) return 1;
	return 0;
}


NOBAUL(carid)
{
	new v = GetVehicleModel(carid);
	if(v == 481 || v == 509 || v == 510) return 1;
	return 0;
}

BAUL2(carid)
{
	if(GetVehicleModel(carid) == 523) return 1;
	return 0;
}

BAUL6(carid)
{
	new v = GetVehicleModel(carid);
	if(v == 400 || v == 404 || v == 418 || v == 422 || v == 470 || v == 478 || v == 489 || v == 495 || v == 505 || v == 543 || v == 554 || v == 579 || v == 605) return 1;
	return 0;
}

BAUL8(carid)
{
	new v = GetVehicleModel(carid);
	if(v == 403 || v == 413 || v == 414 || v == 431 || v == 437 || v == 440 || v == 443 || v == 459 || v == 482 || v == 499 || v == 514 || v == 515 || v == 578) return 1;
	return 0;
}

AVION(carid)
{
	new v = GetVehicleModel(carid);
	switch(v)
    {
        case 592,577,511,512,593,520,553,476,519,460,513,548,425,417,487,488,497,563,447,469: return true;
        default: return false;
    }
    return 0;
}

BOTE(carid)
{
	new v = GetVehicleModel(carid);
	switch(v)
	{
	    case 430,446,452,453,454,472,473,484,493,595: return 1;
	}
	return 0;
}

GetVehicleTopSpeed(vehicleid)
{
    new model = GetVehicleModel(vehicleid);
    if(model)
    {
        return s_TopSpeed[(model - 400)];
    }
    return 0;
}

static ObtenerOrdenAuto(playerid,listitem)
{
    new auto,saltados = 0;
    for(new i = 0; i < MAX_PAUTOS; i++)
    {
        if(VehicleInfo[playerid][i][vModelo] == 0) continue;
        if(listitem <= saltados)
        {
            auto = i;
            break;
        }
        saltados++;
    }
    return auto;
}

static ObtenerOrdenPropiedad(playerid,listitem)
{
    new home,saltados = 0;
    for(new i = 0; i < MAX_PCASAS; i++)
    {
        if(PlayerInfo[playerid][CasaID][i] == 0) continue;
        if(listitem <= saltados)
        {
            home = i;
            break;
        }
        saltados++;
    }
    return home;
}
static IsPlayerInWater(playerid)
{
	new anim = GetPlayerAnimationIndex(playerid);
 	if (((anim >=  1538) && (anim <= 1542)) || (anim == 1544) || (anim == 1250) || (anim == 1062)) return 1;
  	return 0;
}
static GetYesOrNoConfig2(var)
{
	new str[32];
	switch(var)
	{
		case 0: str = "> {FA0505}Apagado"CB"";
		default: str = "< {2BA30A}Encendido"CB"";
	}
	return str;
}
static CombustibleCoche(modelo)
{
	new modelid = GetVehicleModel(modelo);
    switch(modelid)
    {
        case 571,441: return 50;
        case 521,522,581,468,462,471,461,586,457,523: return 60;
        case 568,463,424: return 70;
        case 439,411,442,434,539: return 80;
        case 492,477,529,415,545,436: return 85;
        case 516,480,420,603,451,506,496,500,565,589,602,491,566,445,533,517,542,526,527,494,502,503,504,507,585,600,562,559,541,405,546,547,550,558,401,421,402,555,410,419,429,540: return 90;
        case 518,580,587,549,426: return 95;
        case 438,553,575,416,596,597,598,561,567,534,536,560,551,412,479,466,467,404,604,474,475,458,453,595,446,493,452,473,576,454,484: return 100;
        case 543,556,557,444,535,605,418,409: return 110;
        case 495,120,525,588,552,582,489,478,579,554,423,422,483,593: return 120;
        case 440,400: return 130;
        case 499,413,609,482,459,601: return 140;
        case 414,563: return 150;
        case 486,508: return 160;
        case 470: return 170;
        case 578: return 180;
        case 524,456,487,497: return 200;
        case 408,443,403: return 210;
        case 515,514,431,437: return 220;
        case 532: return 220;
        case 455: return 230;
        default: return 120;
    }
    return 1;
}

static EnVerMapa(playerid)
{
	for(new i = 0; i < sizeof(VerMapasPositions);i++)
	if(EstaEn(playerid,2.0, VerMapasPositions[i][0], VerMapasPositions[i][1], VerMapasPositions[i][2])) return 1;
	return 0;
}

static CarTrollData(playerid,vehicleid,type)
{
	KillTimer(CarTroll[playerid][playerStateTimer]);
	switch(type)
	{
		case 0:
		{
			CarTroll[playerid][resetVehicleOwner] = SetTimerEx("ResetVariableValues", 500, false, "i", playerid);
			CarTroll[playerid][playerFalseDetection]= false;
		}
		case 1:
		{
			CarTroll[playerid][playerStateVehicle] = vehicleid;
			CarTroll[playerid][playerStateTimer] = SetTimerEx("DelayPlayerState", 350, false, "i", playerid);
			if(vehicleData[CarTroll[playerid][playerStateVehicle]][broadVehicleOwner] == INVALID_PLAYER_ID)
			{
				KillTimer(CarTroll[playerid][resetVehicleOwner]);
				vehicleData[CarTroll[playerid][playerStateVehicle]][broadVehicleOwner] = playerid;
			}
		}
	}
	return 1;
}

static Float:GetDistanceBetweenPoints(Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2) return floatsqroot(floatadd(floatadd(floatpower(floatsub(x1,x2),2),floatpower(floatsub(y1,y2),2)),floatpower(floatsub(z1,z2),2)));

static ErroresPrenda(playerid)
{
    Mensaje(playerid,-1,"Ya tienes equipada esa prenda.");
    OcultarTodo(playerid);
	MarcadoMenu[playerid] = 0;
	CancelSelectTextDraw(playerid);
	PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
    return 1;
}

static OcultarTodo(playerid)
{
	PlayerTextDrawHide(playerid, TextoMenu[playerid]);
	TextDrawHideForPlayer(playerid, BoxMenu);
	PlayerTextDrawHide(playerid, SelectionTD[playerid][0]);
	PlayerTextDrawHide(playerid, SelectionTD[playerid][1]);
	PlayerTextDrawHide(playerid, SelectionTD[playerid][2]);
	PlayerTextDrawHide(playerid, SelectionTD[playerid][3]);
	PlayerTextDrawHide(playerid, CerrarPrenda[playerid]);
	return 1;
}

EnLugarRobo(playerid)
{
	if(EstaEn(playerid, 2.0,-2279.4150,-15.9555,38.2932)) 		return 1;
	else if(EstaEn(playerid, 2.0,941.0195,1975.9528,11.6227)) 	return 2;
	else if(EstaEn(playerid, 2.0,-2394.7178,-17.2777,35.3740)) 	return 3;
	else if(EstaEn(playerid, 2.0,2369.2976,-1129.8099,30.0510)) return 4;
	else if(EstaEn(playerid, 2.0,-2730.4536,-58.3611,7.0453)) 	return 5;
	else if(EstaEn(playerid, 2.0,-2731.8882,-163.3702,7.2174)) 	return 6;
	else if(EstaEn(playerid, 2.0,1757.2273,-2093.2109,13.9916)) return 7;
	else if(EstaEn(playerid, 2.0,2481.5874,-1988.4568,13.6347)) return 8;
	else if(EstaEn(playerid, 2.0,1842.4642,767.7050,11.5541)) 	return 9;
	else if(EstaEn(playerid, 2.0,-1449.4860,2644.3088,56.5616)) return 10;
	else if(EstaEn(playerid, 2.0,1356.1920,2612.3801,11.5559)) 	return 11;
	else if(EstaEn(playerid, 2.0,1678.7388,2612.4460,11.5559)) 	return 12;
	return 0;
}

static EnCajasFabrica(playerid)
{
    if(EstaEn(playerid,2.0,-1995.5045,222.0777,1035.8162)) return 1;
    else if(EstaEn(playerid,2.0,-1999.6919,222.0572,1035.8162)) return 2;
    else if(EstaEn(playerid,2.0,-2003.9482,222.0583,1035.8162)) return 3;
    else if(EstaEn(playerid,2.0,-2008.3027,222.0571,1035.8162)) return 4;
    else if(EstaEn(playerid,2.0,-2012.3131,222.0612,1035.8225)) return 5;
    else if(EstaEn(playerid,2.0,-2016.8007,222.0583,1035.8225)) return 6;
    else if(EstaEn(playerid,2.0,-2021.0313,222.0580,1035.8225)) return 7;
    else if(EstaEn(playerid,2.0,-2024.7906,223.9543,1035.8225)) return 8;
    else if(EstaEn(playerid,2.0,-2024.7908,227.3648,1035.81620)) return 9;
    else if(EstaEn(playerid,2.0,-2018.0074,231.9918,1035.8162)) return 10;
    return false;
}

static EnCocineroFabrica(playerid)
{
	if(EstaEn(playerid,2, -2017.67334, 227.02380, 1035.15454)) return 1;
	else if(EstaEn(playerid,2, -2013.86060, 227.05284, 1035.15454)) return 2;
	else if(EstaEn(playerid,2, -2009.98157, 227.00481, 1035.15454)) return 3;
	else if(EstaEn(playerid,2, -2006.16040, 226.99612, 1035.15454)) return 4;
	else if(EstaEn(playerid,2, -2002.34033, 227.01234, 1035.15454)) return 5;
	return false;
}

static EnTanquesFabrica(playerid)
{
	for(new i = 0; i < sizeof(PosTanque);i++) if(EstaEn(playerid, 3.0, PosTanque[i][0], PosTanque[i][1], 1041.0414-0.5)) return i+1;
	return false;
}

static EnOllaFabrica(playerid)
{
	if(EstaEn(playerid,2, -1992.3154,195.8535,1035.8162)) return 1;
	else if(EstaEn(playerid,2, -1995.7380,195.8532,1035.8162)) return 2;
	else if(EstaEn(playerid,2, -1999.2255,195.8546,1035.8162)) return 3;
	return false;
}

static LimpiarSalon()
{
	format(Alquilador,sizeof(Alquilador),"Nadie");
	Alquilado = false;
	HorasSalon = 0;
	Personas = 0;
	PrecioSalon = 0;
	NivelSalon = 0;
	format(NombreEvento,sizeof(NombreEvento),"Sin Nombre");
	format(DescriEvento,sizeof(DescriEvento),"Sin Descripci�n");
	TipoEvento = 0;
	return 1;
}

EnTiendaRobo(playerid)
{
	for(new i = 0; i < sizeof TiendaSpawn; i++) if(EstaEn(playerid, 15.0, TiendaSpawn[i][0], TiendaSpawn[i][1], TiendaSpawn[i][2])) return 1;
	return 0;
}

EnPuntoCamionero(playerid)
{
	for(new i = 0; i < sizeof(CamioneroPos);i++) if(EstaEn(playerid, 7.0, CamioneroPos[i][0], CamioneroPos[i][1], CamioneroPos[i][2])) return 1;
	return 0;
}

EnBotiquin(playerid)
{
    if(EstaEn(playerid,2.0,1169.7440,-1353.4617,-10.7922)) return 1;
	else if(EstaEn(playerid, 2.0,1235.0582,-821.8716,1164.2759)) return 1;
	else if(EstaEn(playerid, 2.0,-2720.8923,647.0943,1385.6534)) return 1;
    return 0;
}

static BorrarPlayerIconoGPS(u,i)
{
	if(TDPGPSCreado[u][i] > 0)
	{
		PlayerTextDrawDestroy(u, TextDPGPS[u][i]);
		PlayerTextDrawDestroy(u, TextDPGPS2[u][i]);
		TDPGPSCreado[u][i] = 0;
	}
	
	return 1;
}

static CrearPlayerIconoGPS(playerid, tdid, Float: PosGPS_X, Float: PosGPS_Y, color)
{
	if(TDPGPSCreado[playerid][tdid] == 1) BorrarPlayerIconoGPS(playerid,tdid);
	TDPGPSCreado[playerid][tdid] = 1;
	TextDPGPS2[playerid][tdid] = CreatePlayerTextDraw(playerid, PosGPS_X-1,PosGPS_Y-1, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, TextDPGPS2[playerid][tdid], 1.000000, 2.000000);
	PlayerTextDrawTextSize(playerid, TextDPGPS2[playerid][tdid], 8.000000, 8.000000);
	PlayerTextDrawAlignment(playerid, TextDPGPS2[playerid][tdid], 2);
	PlayerTextDrawColor(playerid, TextDPGPS2[playerid][tdid], 255);
	PlayerTextDrawSetShadow(playerid, TextDPGPS2[playerid][tdid], 0);
	PlayerTextDrawSetOutline(playerid, TextDPGPS2[playerid][tdid], 0);
	PlayerTextDrawFont(playerid, TextDPGPS2[playerid][tdid], 4);
	PlayerTextDrawShow(playerid, TextDPGPS2[playerid][tdid]);
	TextDPGPS[playerid][tdid] = CreatePlayerTextDraw(playerid, PosGPS_X,PosGPS_Y, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, TextDPGPS[playerid][tdid], 1.000000, 2.000000);
	PlayerTextDrawTextSize(playerid, TextDPGPS[playerid][tdid], 6.000000, 6.000000);
	PlayerTextDrawAlignment(playerid, TextDPGPS[playerid][tdid], 2);
	PlayerTextDrawColor(playerid, TextDPGPS[playerid][tdid], color);
	PlayerTextDrawSetShadow(playerid, TextDPGPS[playerid][tdid], 0);
	PlayerTextDrawSetOutline(playerid, TextDPGPS[playerid][tdid], 0);
	PlayerTextDrawFont(playerid, TextDPGPS[playerid][tdid], 4);
	PlayerTextDrawShow(playerid, TextDPGPS[playerid][tdid]);
	return 1;
}

static PointUpdate(u)
{
	if(PlayerPoint[u] == 1) PlayerTextDrawDestroy(u, PlayerGPS[u]),PlayerPoint[u] = 0;
	PlayerPoint[u] = 1;
	new Float:DyGPSPos[2],Float:posicionPlayerGPS[3];
	GetPlayerPos(u, posicionPlayerGPS[0], posicionPlayerGPS[1], posicionPlayerGPS[2]);
	floatMapa3Da2D(posicionPlayerGPS[0], posicionPlayerGPS[1], 360.000000, 26.000000,256.000000,256.000000, DyGPSPos[0], DyGPSPos[1]);
	PlayerGPS[u] = CreatePlayerTextDraw(u, DyGPSPos[0], DyGPSPos[1], "hud:radar_waypoint");
	PlayerTextDrawLetterSize(u, PlayerGPS[u], 1.000000, 2.000000);
	PlayerTextDrawTextSize(u, PlayerGPS[u], 8.000000, 8.000000);
	PlayerTextDrawAlignment(u, PlayerGPS[u], 0);
	PlayerTextDrawColor(u, PlayerGPS[u], 0xE1E1E1FF);
	PlayerTextDrawUseBox(u, PlayerGPS[u], 1);
	PlayerTextDrawBoxColor(u, PlayerGPS[u], 0x000000FF);
	PlayerTextDrawSetShadow(u, PlayerGPS[u], 1);
	PlayerTextDrawSetOutline(u, PlayerGPS[u], 0);
	PlayerTextDrawBackgroundColor(u, PlayerGPS[u], 0x000000FF);
	PlayerTextDrawFont(u, PlayerGPS[u], 4);
	PlayerTextDrawSetProportional(u, PlayerGPS[u], 1);
	PlayerTextDrawSetSelectable(u, PlayerGPS[u], 0);
	PlayerTextDrawShow(u, PlayerGPS[u]);
	return 1;
}
	
static CamioneroFallado(e,vehicleid)
{
    Mensaje(e,-1,"Fallaste en tu trabajo de camionero, no se te pagar� nada.");
    CamionCargado[vehicleid] = 0;
    SetTimerEx("RespawnearV",2000,false,"d",vehicleid);
    CamionID[e] = INVALID_PLAYER_ID;
    CargandoC[e] = 0;
    PlayerTemp[e][pt_Camionero] = false;
	BorrarCheckpoint(e);
}

static RGBAToARGB(col) return ((((col) << 24) & 0xFF000000) | (((col) >>> 8) & 0xFFFFFF));
static ARGBToRGBA(col) return ((((col) << 8) & 0xFFFFFF00) | (((col) >>> 24) & 0xFF));

static EnCajero(playerid)
{
	for(new i = 0; i < sizeof(OperacionesPositions);i++)
	if(EstaEn(playerid,2.0, OperacionesPositions[i][0], OperacionesPositions[i][1], OperacionesPositions[i][2])) return 1;
	return 0;
}
Funcion:TimerEncerrarA(playerid)
{
	VariableCaido[playerid] = 0;
	if(GetPlayerWantedLevel(playerid) != 0)
	{
		Encerrando2(playerid);
	}
	return 1;
}
static MostrarGuia(playerid)
{
	new mensaje[256];
	format(mensaje, sizeof(mensaje), "Detalle\t\tN�mero\n"CB"Departamento de polic�a\t\t{d2e033}911"CB"\nHospital - Emergencias 24hs\t\t{d2e033}71"CB"\nServicio de gr�as\t\t{d2e033}815"CB"\nAsistencia mec�nica\t\t{d2e033}80"CB"\nServicio de taxi\t\t{d2e033}82"CB"");
	MostrarDialog(playerid, DGUIA, DIALOG_STYLE_TABLIST_HEADERS,"{d2e033}Gu�a"CB" telef�nica", mensaje, "Llamar", "Cerrar");
}

static RespawnVF1(f)
{
	DestroyVehicle(Fabricas[f][Auto1F]);
	Fabricas[f][Auto1F] = CreateVehicle(554,-2007.1453000,213.5989000,1035.9004000,271.7110000,1,53,-1);
	LinkVehicleToInteriorAC(Fabricas[f][Auto1F], Fabricas[f][pInt]);
	SetVehicleVirtualWorld(Fabricas[f][Auto1F], Fabricas[f][pVW]);
	SetVehicleHealthAC(Fabricas[f][Auto1F], 5000.0);
	bloqueado[Fabricas[f][Auto1F]] = 0;
	alarma[Fabricas[f][Auto1F]] = 0;
	if(CajaMeta[f][0] != INVALID_STREAMER_ID) DestroyDynamicObjectEx(CajaMeta[f][0]);
	for(new a = 0; a < 5; a++)
	{
		if(CajaMeta[f][a] != INVALID_STREAMER_ID) DestroyDynamicObjectEx(CajaMeta[f][a]);
		CajaMeta[f][a] = CreateDynamicObject(1271,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000);
		if(BarrilMeta[f][a] != INVALID_STREAMER_ID)  DestroyDynamicObjectEx(BarrilMeta[f][a]);
		BarrilMeta[f][a] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000,Fabricas[f][pVW],Fabricas[f][pInt]);
	}
	VehiculoConBarril[Fabricas[f][Auto1F]] = 0;
	VehiculoConCajas[Fabricas[f][Auto1F]] = 0;
	return 1;
}

static RespawnVF2(f)
{
	DestroyVehicle(Fabricas[f][Auto2F]);
	Fabricas[f][Auto2F] = CreateVehicle(554,-1998.8115,208.2825,1035.9037,285.0887,1,53,-1);
	LinkVehicleToInteriorAC(Fabricas[f][Auto2F], Fabricas[f][pInt]);
	SetVehicleVirtualWorld(Fabricas[f][Auto2F], Fabricas[f][pVW]);
	SetVehicleHealthAC(Fabricas[f][Auto2F], 5000.0);
	bloqueado[Fabricas[f][Auto2F]] = 0;
	alarma[Fabricas[f][Auto2F]] = 0;
	ObjetoDistraccion(Fabricas[f][Auto2F],f);
	return 1;
}

/*static IsPlayerUsingDB(playerid,bool:withsomeone = false)
{
	if(GetPlayerState(playerid) != PLAYER_STATE_PASSENGER) return 0;
	new bool:hassomeone = false;
	if(withsomeone)
	{
		new v = GetPlayerVehicleID(playerid);
		foreach(i : Player)
		{
			if(!hassomeone)
			{
				if(IsPlayerInVehicle(i,v) && GetPlayerState(i) == PLAYER_STATE_DRIVER) hassomeone = true;

			}
		}

	}
	return (!withsomeone || (withsomeone && hassomeone));
}*/



static GetWeaponSlot(wid)
{
	switch(wid)
    {
    	case 0, 1: return 0;
        case 2..9: return 1;
        case 22..24: return 2;
        case 25..27: return 3;
        case 28,29,32: return 4;
        case 30,31: return 5;
        case 33,34: return 6;
        case 35..38: return 7;
        case 16..19,39: return 8;
        case 41..43: return 9;
        case 10..15: return 10;
        case 44..46: return 11;
        case 40: return 12;
        default: return -1;
	}
    return -1;
}

static MonedaVenta(coin)
{
	new moneda[10];
	switch(coin)
	{
		case 0: moneda = "$";
		case 1: moneda = ""Moneda1"";
		case 2: moneda = ""Moneda1"";
		case 3: moneda = ""Moneda3"";
	}
	return moneda;
}

static GetWeaponNameEx(weaponid)
{
	new wname[35];
	switch(weaponid)
	{
		case 0:		wname = "Vac�o";
		case 1:		wname = "Manopla";
		case 2:		wname = "Palo de golf";
		case 3:		wname = "Palo de policia";
		case 4:		wname = "Cuchillo";
		case 5:		wname = "Bate de beisbol";
		case 6:		wname = "Pala";
		case 7:		wname = "Palo de billar";
		case 8:		wname = "Katana";
		case 9:		wname = "Motosierra";
		case 10:	wname = "Consolador rosa";
		case 11:	wname = "Vibrador blanco";
		case 12:	wname = "Gran vibrador blanco";
		case 13:	wname = "Vibrador plateado";
		case 14:	wname = "Ramo de flores";
		case 15:	wname = "Baston";
		case 16:	wname = "Granada";
		case 17:	wname = "Gas lacrimogeno";
		case 18:	wname = "Molotov";
		case 19:	wname = "Jetpack";
		case 20:	wname = "";
		case 21:	wname = "";
		case 22:	wname = "9mm";
		case 23:	wname = "9mm silenciada";
		case 24:	wname = "Desert eagle";
		case 25:	wname = "Escopeta";
		case 26:	wname = "Sawn off";
		case 27:	wname = "Escopeta de combate";
		case 28:	wname = "Uzi";
		case 29: 	wname = "MP5";
		case 30: 	wname = "AK 47";
		case 31: 	wname = "M4";
		case 32: 	wname = "Tec 9";
		case 33: 	wname = "Rifle";
		case 34: 	wname = "Sniper";
		case 35: 	wname = "Lanzacohetes";
		case 36: 	wname = "Bazooka";
		case 37:    wname = "Lanzallamas";
		case 38:    wname = "Minigun";
		case 39:    wname = "Bomba";
		case 40:    wname = "Detonador";
		case 41:    wname = "Spray";
		case 42:    wname = "Extintor de incendios";
		case 43:    wname = "Camara";
		case 44:    wname = "Lentes de visi�n nocturna";
		case 45:    wname = "Gafas termicas";
		case 46:    wname = "Paracaidas";
		case 47:    wname = "Fake Pistol";
		case 49:    wname = "Veh�culo";
		case 50:    wname = "Helices de helic�pteros";
		case 51:    wname = "Explosi�n";
		case 53:    wname = "Ahogado";
		case 54:    wname = "Salpicadura";
		case 200:   wname = "Conectar";
		case 201:   wname = "Desconectar";
		case 255:   wname = "Suicidio";
		case 2702:  wname = "Pizza";
		case 1000:  wname = "Cerveza x6 unidades";
		case 1001:  wname = "Vino x6 unidades";
		case 1002:  wname = "Sprunk x4 unidades";
		case 1429:  wname = "Tv antigua";
		case 1518:  wname = "Tv moderna";
		case 2912:  wname = "Caja de madera";
		case 2190:  wname = "Computadora";
		case 1788:  wname = "Videocasetera";
		case 1790:  wname = "Bluray";
		case 2028:  wname = "Consola de juegos";
		case 2226:  wname = "Radio";
		case 1650:  wname = "Bid�n de gasolina";
		case 9003:  wname = "Balde con agua";
		case 2404:  wname = "Tabla de surf T1";
     	case 1210:  wname = "Maletin";
     	case 2405:  wname = "Tabla de surf T2";
		case 10004: wname = "Pizza completa";
		case 10000: wname = "Caja de aquarius de 12 unidades";
        case 10001: wname = "Caja de vino de 12 unidades";
        case 10002: wname = "Caja de cerveza de 12 unidades";
        case 10003: wname = "Caja de sprunk de 12 unidades";
		case 19317: wname = "Guitarra";
		case 19318: wname = "Bajo";
		case 18634: wname = "Barreta";
		default: wname = "Objeto";
	}
	return wname;
}

AntiDeAMX()
{
	new a[][] =
	{
		"Unarmed (Fist)",
		"Brass K"
	};
	#pragma unused a
}

main()
{
	print(" ");
	print("--------------------------------");
	print(" Gamemode Cargado Correctamente ");
	print("--------------------------------");
	print(" ");
	return 1;
}



static EnviarSMS(playerid, numero, const text[])
{
	if(PlayerInfo[playerid][pNumero] == numero) return Mensaje(playerid, COLORCARGO0, "No puedes enviarte un SMS a ti mismo.");
	if(numero == 0) Mensaje(playerid, -1, "N�mero no existe");
	foreach(new i : Player)
	{
		if(PlayerInfo[i][pNumero] == numero)
		{
			if(TelefonoEstado[i] == 1)
			{
				Mensaje(playerid, COLORCARGO0, "El mensaje {FF4202}no se pudo entregar"CB", comprueba que el n�mero sea el correcto.");
				Mensaje(playerid, COLORCARGO0, "Si el n�mero est� bien, probablemente el tel�fono est� apagado.");
				return 1;
			}
			if(PlayerInfo[i][pTiempoCarcel] > 0 || PlayerInfo[i][pTiempoJail] > 0)
			{
				Mensaje(playerid, COLORCARGO0, "El mensaje {FF4202}no se pudo entregar"CB", comprueba que el n�mero sea el correcto.");
				Mensaje(playerid, COLORCARGO0, "Si el n�mero est� bien, probablemente el tel�fono est� apagado.");
				return 1;
			}
			va_SendClientMessage(i, COLOR_SMS, "((SMS de %s [%d])): %s", NombreJugador(playerid),PlayerInfo[playerid][pNumero], text);
			Mensaje(playerid, COLOR_DORADO, "Mensaje enviado con �xito.");
			GameTextForPlayer(playerid, "~r~-15$", 5000, 1);
			if(PlayerTemp[playerid][pt_NumeroSMS] == 0 || PlayerTemp[playerid][pt_NumeroSMS] != numero)
			{
				PlayerTemp[playerid][pt_NumeroSMS] = numero;
				va_SendClientMessage(playerid, COLORCARGO0, "Para volver a enviar otro mensaje al n�mero "CR"%d "CB"simplemente usa "CR"/sms mensaje"CB".",numero);
			}
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			QuitarDinero(playerid, 15);
			return 1;
		}
	}
	Mensaje(playerid, COLORCARGO0, "El mensaje {FF4202}no se pudo entregar"CB", comprueba que el n�mero sea el correcto.");
	Mensaje(playerid, COLORCARGO0, "Si el n�mero est� bien, probablemente el tel�fono est� apagado.");
	return 1;
}

static EnviarCarcel(playerid)
{
    if(PlayerInfo[playerid][pTipoCarcel] == 4)
	{
		new rand;
		StatusFC[playerid] = 0;
		rand = random(sizeof(FortCarsonSpawn));
		SetPosEx(playerid, FortCarsonSpawn[rand][0], FortCarsonSpawn[rand][1], FortCarsonSpawn[rand][2], 0, 15, 15);
	}
	else
	{
		new celda = random(4);
		if(PlayerInfo[playerid][pTipoCarcel] == 1 || PlayerInfo[playerid][pTipoCarcel] == 0)
		{
			if(celda == 0) SetPosEx(playerid, 227.3367,109.3470,999.0156, 0, 10, 1);
			else if(celda == 1) SetPosEx(playerid, 223.0108,109.8135,999.0156, 0, 10, 1);
			else if(celda == 2) SetPosEx(playerid, 219.0009,110.3388,999.0156, 0, 10, 1);
			else if(celda == 3) SetPosEx(playerid, 215.2188,109.1792,999.0156, 0, 10, 1);
		}
		else if(PlayerInfo[playerid][pTipoCarcel] == 2)
		{
			if(celda == 0) SetPosEx(playerid, 227.3367,109.3470,999.0156, 0, 10 ,5);
			else if(celda == 1) SetPosEx(playerid, 223.0108,109.8135,999.0156, 0, 10 ,5);
			else if(celda == 2) SetPosEx(playerid, 219.0009,110.3388,999.0156, 0, 10 ,5);
			else if(celda == 3) SetPosEx(playerid, 215.2188,109.1792,999.0156, 0, 10 ,5);
		}
		else if(PlayerInfo[playerid][pTipoCarcel] == 3)
		{
			if(celda == 0) SetPosEx(playerid, 197.6199, 174.8677, 1002.6390, 0, 3, 7);
			else if(celda == 1) SetPosEx(playerid, 193.5631, 174.8843, 1002.6390, 0, 3, 7);
			else if(celda == 2) SetPosEx(playerid, 194.5337, 163.1250, 1002.6390, 0, 3, 7);
			else if(celda == 3) SetPosEx(playerid, 198.6272, 162.4750, 1002.6390, 0, 3, 7);
		}
		else if(PlayerInfo[playerid][pTipoCarcel] == 5)
		{
			if(celda == 0) SetPosEx(playerid, 197.6199, 174.8677, 1002.6390, 0, 3, 7);
			else if(celda == 1) SetPosEx(playerid, 193.5631, 174.8843, 1002.6390, 0, 3, 7);
			else if(celda == 2) SetPosEx(playerid, 194.5337, 163.1250, 1002.6390, 0, 3, 7);
			else if(celda == 3) SetPosEx(playerid, 198.6272, 162.4750, 1002.6390, 0, 3, 7);
		}
	}
	DarRopa(playerid);
	QuitarArmas(playerid, 1);
	return 1;
}

static LimpiarChat(playerid, lines, color)
{
	
	for(new i=0; i<lines; i++) Mensaje(playerid,color," ");
	
	return 1;
}

Funcion:ActBarraJob(playerid)
{
	BarraProgreso[playerid][0]++;
	if(CargandoC[playerid] == 1 || PlayerTemp[playerid][TimerReparar] > 0 || PlayerTemp[playerid][TimerPicando] > 0) SetTimerEx("ActBarraJob",1000,false,"dd",playerid, 2);
	else return 1;
	UpdateBarraJob(playerid,BarraProgreso[playerid][0]);
	return 1;
}

static UpdateBarraJob(playerid,Float:valor)
{
	new Float:value;
	value = (valor < 0.0) ? (0.0) : (valor > BarraProgreso[playerid][1]) ? (BarraProgreso[playerid][1]) : (valor);
	PlayerTextDrawUseBox(playerid, BarraTrabajo[playerid][2], value > 0.0);
	PlayerTextDrawTextSize(playerid, BarraTrabajo[playerid][2],pb_percent(278.000000 + 4, 91.500000 - 12, BarraProgreso[playerid][1], value), 0.0);
	PlayerTextDrawShow(playerid, BarraTrabajo[playerid][2]);
}

static BarraJob(playerid, var)
{
	BarraProgreso[playerid][0] = 0;
	UpdateBarraJob(playerid,BarraProgreso[playerid][0]);
	switch(var)
	{
		case 1:
		{
			PlayerTextDrawShow(playerid, BarraTrabajo[playerid][0]);
			PlayerTextDrawShow(playerid, BarraTrabajo[playerid][1]);
			PlayerTextDrawShow(playerid, BarraTrabajo[playerid][2]);
		}
		case 2:
		{
			PlayerTextDrawHide(playerid, BarraTrabajo[playerid][0]);
			PlayerTextDrawHide(playerid, BarraTrabajo[playerid][1]);
			PlayerTextDrawHide(playerid, BarraTrabajo[playerid][2]);
		}
	}
 	return 1;
}

static BarraSed(playerid, variable)
{
	switch(variable)
	{
	    case 1:
		{
			new Float:size;
			size = 547.0 + (PlayerInfo[playerid][pSed] * 0.575);
			if(size > 604.5) size = 604.5;
			PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_HUD][2], size, 0.000000);
			PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_HUD][2], !(size < 547.571472));
			TextDrawShowForPlayer(playerid, Textdraws[textdraw_HUD][4]);
			TextDrawShowForPlayer(playerid, Textdraws[textdraw_HUD][5]);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_HUD][2]);
			return 1;
		}
	    case 2:
		{
			TextDrawHideForPlayer(playerid, Textdraws[textdraw_HUD][4]);
			TextDrawHideForPlayer(playerid, Textdraws[textdraw_HUD][5]);
			PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_HUD][2]);
			return 1;
		}
	}
	return 1;
}

static BarraExp(playerid, variable)
{
	switch(variable)
	{
	    case 1:
		{
			new Float:sizeX = floatmul(floatdiv(float(PlayerInfo[playerid][jExperiencia]), PlayerInfo[playerid][NivelExp]), 637.85);
			PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_HUD][0], sizeX, 0.0);
			PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_HUD][0], PlayerInfo[playerid][jExperiencia]);
			TextDrawShowForPlayer(playerid, Textdraws[textdraw_HUD][0]);
			TextDrawShowForPlayer(playerid, Textdraws[textdraw_HUD][1]);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_HUD][0]);
			Actualizarnivel(playerid);
			return 1;
		}
	}
	return 1;
}

static BarraHambre(playerid, variable)
{
	switch(variable)
	{
	    case 1:
		{
			new Float:size;
			size = 547.0 + (PlayerInfo[playerid][pHambre] * 0.575);
			if(size > 604.5) size = 604.5;
			PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_HUD][1], size, 0.000000);
			PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_HUD][1], !(size < 547.571472));
			TextDrawShowForPlayer(playerid, Textdraws[textdraw_HUD][2]);
			TextDrawShowForPlayer(playerid, Textdraws[textdraw_HUD][3]);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_HUD][1]);
			return 1;
		}
	    case 2:
		{
			TextDrawHideForPlayer(playerid, Textdraws[textdraw_HUD][2]);
			TextDrawHideForPlayer(playerid, Textdraws[textdraw_HUD][3]);
			PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_HUD][1]);
			return 1;
		}
	}
	return 1;
}

static Actualizar(playerid)
{
	Actualizarnivel(playerid);
	CalcularNivel(playerid);
    BarraExp(playerid, 1);
	SetPlayerScore(playerid, PlayerInfo[playerid][jNivel]);
	SetPlayerStats(playerid);
}

static MostrarConfig(playerid)
{
	new string[700];
	new textoconfig1[20], textoconfig2[20], textoconfig3[20], textoconfig4[20], textoconfig5[20], textoconfig6[20], textoconfig7[20],textoconfig8[20],textoconfig9[20],textoconfig10[20],textoconfig11[20],textoconfig12[20];
	if(CanalDudas[playerid] == 1) textoconfig1 = ""CR"S�"CB"";
	else textoconfig1 = "{FF3300}No"CB"";
	if(ShowMutes[playerid] == 1) textoconfig2 = ""CR"S�"CB"";
	else textoconfig2 = "{FF3300}No"CB"";
	if(ShowSound[playerid] == 1) textoconfig3 = ""CR"S�"CB"";
	else textoconfig3 = "{FF3300}No"CB"";
	if(ShowCone[playerid] == 1) textoconfig4 = ""CR"S�"CB"";
	else textoconfig4 = "{FF3300}No"CB"";
	if(ShowGuia[playerid] == 1) textoconfig5 = ""CR"S�"CB"";
	else textoconfig5 = "{FF3300}No"CB"";
	if(SedOculta[playerid] == 1) textoconfig6 = ""CR"S�"CB"";
	else textoconfig6 = "{FF3300}No"CB"";
	if(ShowVelo[playerid] == 1) textoconfig7 = ""CR"S�"CB"";
	else textoconfig7 = "{FF3300}No"CB"";
	if(AvisoTerritorio[playerid] == 1) textoconfig8 = ""CR"S�"CB"";
	else textoconfig8 = "{FF3300}No"CB"";
	if(ShowTerritorio[playerid] == 1) textoconfig9 = ""CR"S�"CB"";
	else textoconfig9 = "{FF3300}No"CB"";
	if(MostrarTwitter[playerid] == 1) textoconfig10 = ""CR"S�"CB"";
	else textoconfig10 = "{FF3300}No"CB"";
	if(PlayerInfo[playerid][AutoLogin] == 1) textoconfig11 = ""CR"S�"CB"";
	else textoconfig11 = "{FF3300}No"CB"";
	
	if(strcmp(User_Temp[playerid][DiscordID], "0", true) == 0) textoconfig12 = "{FF3300}No"CB"";
	else textoconfig12 = ""CR"S�"CB"";
	
	
	format(string, 700,"Opci�n\tEstado actual\nMostrar canal de dudas.\t< %s\nMostrar muteos, sanciones y baneos.\t< %s\nReproducir sonidos especiales y de radios.\t< %s\nMostrar alertas de conexi�n.\t< %s\nAparecer en la gu�a telef�nica.\t< %s\nMostrar barras de hambre y sed.\t< %s\nMostrar veloc�metro y medidor de combustible.\t< %s\nMostrar propietario del territorio al entrar en el.\t< %s\nMostrar territorios en mapa (solo al estar en banda).\t< %s\nMostrar canal de twitter.\t< %s\nLogueo autom�tico.\t< %s\nProtecci�n de dos factores.\t< %s", textoconfig1, textoconfig2, textoconfig3, textoconfig4, textoconfig5, textoconfig6, textoconfig7,textoconfig8,textoconfig9,textoconfig10, textoconfig11, textoconfig12);
    MostrarDialog(playerid, CONFIG, DIALOG_STYLE_TABLIST_HEADERS, "Opciones de configuraci�n", string, "Cambiar", "Cerrar");
    return 1;
}

ActualizarPickup(id)
{
	DestroyDynamicPickupEx(PropInfo[id][pPickup]);
	if(PropInfo[id][pEnVenta] == 0)
	{
	 	if(PropInfo[id][pTipo] == 3 && PropInfo[id][pAbierta] == 1) PropInfo[id][pPickup] = CreateDynamicPickup(1318,1,PropInfo[id][pPosX],PropInfo[id][pPosY],PropInfo[id][pPosZ],0);
 	}
	else
	{
	    if(PropInfo[id][pTipo] == 3) PropInfo[id][pPickup] = CreateDynamicPickup(1272,1,PropInfo[id][pPosX],PropInfo[id][pPosY],PropInfo[id][pPosZ],0);
		else PropInfo[id][pPickup] = CreateDynamicPickup(1273,1,PropInfo[id][pPosX],PropInfo[id][pPosY],PropInfo[id][pPosZ],0);
	}
	return 1;
}

static TipoPropiedad(id)
{
	new tipo[41];
	switch(id)
	{
	    case 1: tipo = ""CB"Casa\n{bdbdbd}";
	    case 2: tipo = "{8c5c35}Oficina"CB"\n{bdbdbd}";
	    case 3: tipo = "{99ccff}Restaurante"CB"\n{bdbdbd}";
	    case 4: tipo = "{868b9e}Empresa privada"CB"\n{bdbdbd}";
	}
	return tipo;
}

CargarPropiedad(id,act)
{
	new string[350];
	if(PropInfo[id][pEnVenta] == 0) format(string, sizeof(string), "%s%s %d\n"CB"Propietario: "CR"%s"CB"\n\nEscribe "CR"/entrar "CB"para ingresar.",TipoPropiedad(PropInfo[id][pTipo]),PropInfo[id][pLocalizacion],PropInfo[id][propiedad_ID],PropInfo[id][pPropietario]);
	else
	{
		switch(PropInfo[id][pEnVentaPor])
		{
			case 0: format(string, sizeof(string), "%s%s %d\n"CB"En venta por: "CR"$%d"CB".\nNivel necesario: "CR"%d"CB".\nUsa "CR"/comprar propiedad"CB" para comprarla.\n\nUsa "CR"/entrar"CB" para ingresar.",TipoPropiedad(PropInfo[id][pTipo]),PropInfo[id][pLocalizacion],PropInfo[id][propiedad_ID],PropInfo[id][pPrecio],PropInfo[id][pNivel]);
			case 1: format(string, sizeof(string), "%s%s %d"CB"\nEn venta por: "CR"%d"Moneda1""CB"\nNivel necesario: "CR"%d"CB"\nEscribe "CR"/comprar propiedad"CB" para comprarla.\n\nEscribe "CR"/entrar"CB" para ingresar.",TipoPropiedad(PropInfo[id][pTipo]),PropInfo[id][pLocalizacion],PropInfo[id][propiedad_ID],PropInfo[id][pPrecio],PropInfo[id][pNivel]);
			case 2: format(string, sizeof(string), "%s%s %d"CB"\nEn venta por: {D1A231}%d "Moneda3""CB"\nNivel necesario: "CR"%d"CB"\nEscribe "CR"/comprar propiedad"CB" para comprarla.\n\nEscribe "CR"/entrar"CB" para ingresar.",TipoPropiedad(PropInfo[id][pTipo]),PropInfo[id][pLocalizacion],PropInfo[id][propiedad_ID],PropInfo[id][pPrecio],PropInfo[id][pNivel]);
		}
	}
 	if(act == 0)
 	{
  		PropInfo[id][pLabel] = CreateDynamic3DTextLabel(string,COLOR_BLANCO,PropInfo[id][pPosX],PropInfo[id][pPosY],PropInfo[id][pPosZ]+0.6,9.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0,-1,100.0);
    	PropInfo[id][pLabel2] = CreateDynamic3DTextLabel(""CB"Usa "CR"/salir"CB" para salir de la propiedad.",COLOR_BLANCO,PropInfo[id][pPosXS],PropInfo[id][pPosYS],PropInfo[id][pPosZS]+0.6,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,PropInfo[id][pVW],PropInfo[id][pInteriorID],-1,100.0);
 		DarPosicionHeladera(id);
	}
	else if(act == 1)
	{
 		UpdateDynamic3DTextLabelText(PropInfo[id][pLabel],COLOR_BLANCO,string);
   		UpdateDynamic3DTextLabelText(PropInfo[id][pLabel2],COLOR_BLANCO,""CB"Usa "CR"/salir"CB" para salir de la propiedad.");
	}
	ActualizarPickup(id);
	return true;
}

static DarPosicionHeladera(p)
{
	switch(PropInfo[p][pInterior])
	{
		case 1: { PropInfo[p][pHeladeraX] = 240.6087; PropInfo[p][pHeladeraY] = 1195.1021; PropInfo[p][pHeladeraZ] = 1080.2578; PropInfo[p][pRoperoX] = 232.7087; PropInfo[p][pRoperoY] = 1211.9266; PropInfo[p][pRoperoZ] = 1084.3838; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 2: { PropInfo[p][pHeladeraX] = 2315.2896; PropInfo[p][pHeladeraY] = -1007.9119; PropInfo[p][pHeladeraZ] = 1050.2109; PropInfo[p][pRoperoX] = 2316.1682; PropInfo[p][pRoperoY] = -1010.6525; PropInfo[p][pRoperoZ] = 1054.7188; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 3: { PropInfo[p][pHeladeraX] = 2334.3918; PropInfo[p][pHeladeraY] = -1068.3335; PropInfo[p][pHeladeraZ] = 1049.0234; PropInfo[p][pRoperoX] = 2334.7236; PropInfo[p][pRoperoY] = -1073.7806; PropInfo[p][pRoperoZ] = 1049.0234; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 4: { PropInfo[p][pHeladeraX] = 2182.2820; PropInfo[p][pHeladeraY] = -1201.3693; PropInfo[p][pHeladeraZ] = 1049.0308; PropInfo[p][pRoperoX] = 2194.8635; PropInfo[p][pRoperoY] = -1210.7710; PropInfo[p][pRoperoZ] = 1049.0234; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 5: { PropInfo[p][pHeladeraX] = 2314.4543; PropInfo[p][pHeladeraY] = -1212.2015; PropInfo[p][pHeladeraZ] = 1049.0234; PropInfo[p][pRoperoX] = 2319.6328; PropInfo[p][pRoperoY] = -1212.8752; PropInfo[p][pRoperoZ] = 1049.0234; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 6: { PropInfo[p][pHeladeraX] = 2373.8438; PropInfo[p][pHeladeraY] = -1135.4618; PropInfo[p][pHeladeraZ] = 1050.8750; PropInfo[p][pRoperoX] = 2363.7671; PropInfo[p][pRoperoY] = -1127.4540; PropInfo[p][pRoperoZ] = 1050.8826; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 7: { PropInfo[p][pHeladeraX] = 2277.6765; PropInfo[p][pHeladeraY] = -1134.2250; PropInfo[p][pHeladeraZ] = 1050.8984; PropInfo[p][pRoperoX] = 2286.2429; PropInfo[p][pRoperoY] = -1137.8119; PropInfo[p][pRoperoZ] = 1050.8984; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 8: { PropInfo[p][pHeladeraX] = 2498.1443; PropInfo[p][pHeladeraY] = -1711.3541; PropInfo[p][pHeladeraZ] = 1014.7422; PropInfo[p][pRoperoX] = 2492.3171; PropInfo[p][pRoperoY] = -1708.5667; PropInfo[p][pRoperoZ] = 1018.3368; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 9: { PropInfo[p][pHeladeraX] = 231.6045; PropInfo[p][pHeladeraY] = 1243.9056; PropInfo[p][pHeladeraZ] = 1082.1406; PropInfo[p][pRoperoX] = 225.0578; PropInfo[p][pRoperoY] = 1248.5391; PropInfo[p][pRoperoZ] = 1082.1406; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 10: { PropInfo[p][pHeladeraX] = 226.4834; PropInfo[p][pHeladeraY] = 1287.9227; PropInfo[p][pHeladeraZ] = 1082.1406; PropInfo[p][pRoperoX] = 233.7389; PropInfo[p][pRoperoY] = 1291.2286; PropInfo[p][pRoperoZ] = 1082.1406; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 11: { PropInfo[p][pHeladeraX] = 243.4800; PropInfo[p][pHeladeraY] = 1021.4285; PropInfo[p][pHeladeraZ] = 1084.0129; PropInfo[p][pRoperoX] = 236.0156; PropInfo[p][pRoperoY] = 1032.3390; PropInfo[p][pRoperoZ] = 1088.3125; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 24; }
		case 12: { PropInfo[p][pHeladeraX] = 300.0292; PropInfo[p][pHeladeraY] = 1486.6417; PropInfo[p][pHeladeraZ] = 1080.2578; PropInfo[p][pRoperoX] = 300.1356; PropInfo[p][pRoperoY] = 1471.3264; PropInfo[p][pRoperoZ] = 1080.2578; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 13: { PropInfo[p][pHeladeraX] = 325.7386; PropInfo[p][pHeladeraY] = 1478.6791; PropInfo[p][pHeladeraZ] = 1084.4446; PropInfo[p][pRoperoX] = 327.8060; PropInfo[p][pRoperoY] = 1488.6558; PropInfo[p][pRoperoZ] = 1084.6858; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 14: { PropInfo[p][pHeladeraX] = 378.8145; PropInfo[p][pHeladeraY] = 1458.4629; PropInfo[p][pHeladeraZ] = 1080.1875; PropInfo[p][pRoperoX] = 380.6929; PropInfo[p][pRoperoY] = 1472.8866; PropInfo[p][pRoperoZ] = 1080.1875; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 15: { PropInfo[p][pHeladeraX] = 364.6002; PropInfo[p][pHeladeraY] = 1428.4363; PropInfo[p][pHeladeraZ] = 1081.3359; PropInfo[p][pRoperoX] = 360.1048; PropInfo[p][pRoperoY] = 1418.1925; PropInfo[p][pRoperoZ] = 1081.3281; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 16: { PropInfo[p][pHeladeraX] = 494.4734; PropInfo[p][pHeladeraY] = 1406.9779; PropInfo[p][pHeladeraZ] = 1080.2578; PropInfo[p][pRoperoX] = 486.9271; PropInfo[p][pRoperoY] = 1414.3024; PropInfo[p][pRoperoZ] = 1084.4160; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 17: { PropInfo[p][pHeladeraX] = 441.7853; PropInfo[p][pHeladeraY] = 1406.7727; PropInfo[p][pHeladeraZ] = 1084.3120; PropInfo[p][pRoperoX] = 455.6025; PropInfo[p][pRoperoY] = 1406.6128; PropInfo[p][pRoperoZ] = 1084.3080; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 18: { PropInfo[p][pHeladeraX] = 266.9625; PropInfo[p][pHeladeraY] = 1294.9094; PropInfo[p][pHeladeraZ] = 1080.2578; PropInfo[p][pRoperoX] = 260.4753; PropInfo[p][pRoperoY] = 1293.0789; PropInfo[p][pRoperoZ] = 1080.2578; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 19: { PropInfo[p][pHeladeraX] = 228.3452; PropInfo[p][pHeladeraY] = 1157.6827; PropInfo[p][pHeladeraZ] = 1082.6094; PropInfo[p][pRoperoX] = 220.2945; PropInfo[p][pRoperoY] = 1149.0428; PropInfo[p][pRoperoZ] = 1082.6094; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 20: { PropInfo[p][pHeladeraX] = 22.4300; PropInfo[p][pHeladeraY] = 1347.2555; PropInfo[p][pHeladeraZ] = 1084.3750; PropInfo[p][pRoperoX] = 31.3994; PropInfo[p][pRoperoY] = 1345.5010; PropInfo[p][pRoperoZ] = 1088.8750; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 21: { PropInfo[p][pHeladeraX] = -266.6378; PropInfo[p][pHeladeraY] = 1451.4071; PropInfo[p][pHeladeraZ] = 1084.3745; PropInfo[p][pRoperoX] = -274.8148; PropInfo[p][pRoperoY] = 1446.9792; PropInfo[p][pRoperoZ] = 1088.8672; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 22: { PropInfo[p][pHeladeraX] = 31.4377; PropInfo[p][pHeladeraY] = 1404.4353; PropInfo[p][pHeladeraZ] = 1084.4297; PropInfo[p][pRoperoX] = 26.3300; PropInfo[p][pRoperoY] = 1414.8411; PropInfo[p][pRoperoZ] = 1084.4297; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 23: { PropInfo[p][pHeladeraX] = 147.4858; PropInfo[p][pHeladeraY] = 1383.1149; PropInfo[p][pHeladeraZ] = 1083.8594; PropInfo[p][pRoperoX] = 151.4808; PropInfo[p][pRoperoY] = 1387.0924; PropInfo[p][pRoperoZ] = 1088.3672; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 24; }
		case 24: { PropInfo[p][pHeladeraX] = 223.4673; PropInfo[p][pHeladeraY] = 1079.7946; PropInfo[p][pHeladeraZ] = 1084.1979; PropInfo[p][pRoperoX] = 238.2854; PropInfo[p][pRoperoY] = 1082.9908; PropInfo[p][pRoperoZ] = 1084.1875; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 24; }
		case 25: { PropInfo[p][pHeladeraX] = -57.9440; PropInfo[p][pHeladeraY] = 1366.2247; PropInfo[p][pHeladeraZ] = 1080.2109; PropInfo[p][pRoperoX] = -70.4076; PropInfo[p][pRoperoY] = 1357.8486; PropInfo[p][pRoperoZ] = 1080.2109; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 26: { PropInfo[p][pHeladeraX] = -290.5264; PropInfo[p][pHeladeraY] = 1480.1294; PropInfo[p][pHeladeraZ] = 1084.3750; PropInfo[p][pRoperoX] = -296.5676; PropInfo[p][pRoperoY] = 1474.6875; PropInfo[p][pRoperoZ] = 1088.8750; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 27: { PropInfo[p][pHeladeraX] = -46.0470; PropInfo[p][pHeladeraY] = 1398.3417; PropInfo[p][pHeladeraZ] = 1084.4297; PropInfo[p][pRoperoX] = -42.7718; PropInfo[p][pRoperoY] = 1412.7611; PropInfo[p][pRoperoZ] = 1084.4297; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 28: { PropInfo[p][pHeladeraX] = 78.2833; PropInfo[p][pHeladeraY] = 1338.3760; PropInfo[p][pHeladeraZ] = 1083.8672; PropInfo[p][pRoperoX] = 92.7948; PropInfo[p][pRoperoY] = 1332.7618; PropInfo[p][pRoperoZ] = 1088.3595; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 29: { PropInfo[p][pHeladeraX] = 259.9944; PropInfo[p][pHeladeraY] = 1249.3361; PropInfo[p][pHeladeraZ] = 1084.2578; PropInfo[p][pRoperoX] = 257.0948; PropInfo[p][pRoperoY] = 1243.6552; PropInfo[p][pRoperoZ] = 1084.2578; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 30: { PropInfo[p][pHeladeraX] = 2449.5256; PropInfo[p][pHeladeraY] = -1685.9985; PropInfo[p][pHeladeraZ] = 1013.5078; PropInfo[p][pRoperoX] = 2462.0654; PropInfo[p][pRoperoY] = -1699.1202; PropInfo[p][pRoperoZ] = 1013.5078; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 31: { PropInfo[p][pHeladeraX] = 2817.4475; PropInfo[p][pHeladeraY] = -1173.2578; PropInfo[p][pHeladeraZ] = 1025.5703; PropInfo[p][pRoperoX] = 2810.4717; PropInfo[p][pRoperoY] = -1161.3860; PropInfo[p][pRoperoZ] = 1029.1719; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 32: { PropInfo[p][pHeladeraX] = 331.9549; PropInfo[p][pHeladeraY] = 1119.5458; PropInfo[p][pHeladeraZ] = 1083.8903; PropInfo[p][pRoperoX] = 310.7163; PropInfo[p][pRoperoY] = 1119.6621; PropInfo[p][pRoperoZ] = 1083.8828; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 33: { PropInfo[p][pHeladeraX] = 2334.3560; PropInfo[p][pHeladeraY] = -1143.5551; PropInfo[p][pHeladeraZ] = 1050.7031; PropInfo[p][pRoperoX] = 2316.4282; PropInfo[p][pRoperoY] = -1144.3564; PropInfo[p][pRoperoZ] = 1054.3047; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 24; }
		case 34: { PropInfo[p][pHeladeraX] = 2265.0903; PropInfo[p][pHeladeraY] = -1141.6536; PropInfo[p][pHeladeraZ] = 1050.6328; PropInfo[p][pRoperoX] = 2270.1960; PropInfo[p][pRoperoY] = -1133.6097; PropInfo[p][pRoperoZ] = 1050.6328; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 35: { PropInfo[p][pHeladeraX] = -2158.5508; PropInfo[p][pHeladeraY] = 640.5544; PropInfo[p][pHeladeraZ] = 1057.5861; PropInfo[p][pRoperoX] = -2170.4807; PropInfo[p][pRoperoY] = 646.8701; PropInfo[p][pRoperoZ] = 1057.5938; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20;}
		case 36: { PropInfo[p][pHeladeraX] = 414.0121; PropInfo[p][pHeladeraY] = 2537.5400; PropInfo[p][pHeladeraZ] = 10.0077; PropInfo[p][pRoperoX] = 413.1199; PropInfo[p][pRoperoY] = 2536.6013; PropInfo[p][pRoperoZ] = 10.0000; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 37: { PropInfo[p][pHeladeraX] = 1275.3596; PropInfo[p][pHeladeraY] = -821.8875; PropInfo[p][pHeladeraZ] = 1085.6328; PropInfo[p][pRoperoX] = 1271.5107; PropInfo[p][pRoperoY] = -822.3544; PropInfo[p][pRoperoZ] = 1089.9375; PropInfo[p][pLugarRopero] = 24; PropInfo[p][pLugarHeladera] = 20; }
		case 38: { PropInfo[p][pHeladeraX] = 2556.3142; PropInfo[p][pHeladeraY] = -1297.3783; PropInfo[p][pHeladeraZ] = 1060.9844; PropInfo[p][pRoperoX] = 2576.5298; PropInfo[p][pRoperoY] = -1280.4081; PropInfo[p][pRoperoZ] = 1065.3672; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 39: { PropInfo[p][pHeladeraX] = 1096.6918; PropInfo[p][pHeladeraY] = -837.7063; PropInfo[p][pHeladeraZ] = 107.5134; PropInfo[p][pRoperoX] = 1098.8173; PropInfo[p][pRoperoY] = -810.8547; PropInfo[p][pRoperoZ] = 107.4822; PropInfo[p][pLugarHeladera] = 40; PropInfo[p][pLugarRopero] = 30; }
		case 40: { PropInfo[p][pHeladeraX] = 1465.6249; PropInfo[p][pHeladeraY] = 549.5752; PropInfo[p][pHeladeraZ] = 1000.9959; PropInfo[p][pRoperoX] = 1471.5107; PropInfo[p][pRoperoY] = 563.7426; PropInfo[p][pRoperoZ] = 1000.9959; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 41: { PropInfo[p][pHeladeraX] = -791.4077; PropInfo[p][pHeladeraY] = 508.3234; PropInfo[p][pHeladeraZ] = 1367.3672; PropInfo[p][pRoperoX] = -778.0544; PropInfo[p][pRoperoY] = 496.4131; PropInfo[p][pRoperoZ] = 1368.5304; PropInfo[p][pLugarHeladera] = 240; PropInfo[p][pLugarRopero] = 20; }
		case 42: { PropInfo[p][pHeladeraX] = 2248.2996; PropInfo[p][pHeladeraY] = -1213.5907; PropInfo[p][pHeladeraZ] = 1049.0234; PropInfo[p][pRoperoX] = 2262.7876; PropInfo[p][pRoperoY] = -1216.7347; PropInfo[p][pRoperoZ] = 1049.0234; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
		case 43: { PropInfo[p][pHeladeraX] = 1436.5463; PropInfo[p][pHeladeraY] = 595.6940; PropInfo[p][pHeladeraZ] = 1000.9829; PropInfo[p][pRoperoX] = 1437.5188; PropInfo[p][pRoperoY] = 600.7122; PropInfo[p][pRoperoZ] = 1000.9829; PropInfo[p][pLugarHeladera] = 24; PropInfo[p][pLugarRopero] = 20; }
	}
	if(PropInfo[p][pHeladeraX] != 0) PropInfo[p][pLabel3] = CreateDynamic3DTextLabel(""CB"Heladera\n"CR"/ver heladera"CB" - "CR"/heladera guardar objeto",COLOR_BLANCO,PropInfo[p][pHeladeraX],PropInfo[p][pHeladeraY],PropInfo[p][pHeladeraZ],7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,PropInfo[p][pVW],PropInfo[p][pInteriorID],-1,100.0);
	if(PropInfo[p][pRoperoX] != 0) PropInfo[p][pLabel4] = CreateDynamic3DTextLabel(""CB"Usa "CR"/entrar"CB" para ingresar",COLOR_BLANCO,PropInfo[p][pRoperoX],PropInfo[p][pRoperoY],PropInfo[p][pRoperoZ]+0.6,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,PropInfo[p][pVW],PropInfo[p][pInteriorID],-1,100.0);
	if(PropInfo[p][pGX] != 0) PropInfo[p][pLabel5] = CreateDynamic3DTextLabel(""CB"Pulsa "CR"'H'"CB" para ingresar al garaje.",COLOR_BLANCO,PropInfo[p][pGX],PropInfo[p][pGY],PropInfo[p][pGZ]+0.6,9.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0,-1,100.0);
	return 1;
}

static GetSpam(playerid,string[])
{
	if(PlayerInfo[playerid][pAdmin] >= 3) return 0;
    new SPAM;
    new CUENTAP,CUENTAN,CUENTADP,ss2,CUENTAJ;
	new j = strlen(string);
	for(SPAM = 0; SPAM < j; SPAM ++)
	{
		if(string[SPAM] == '.') CUENTAP ++;
		if(string[SPAM] == '-') CUENTAJ ++;
		if(string[SPAM] == '0' || string[SPAM] == '1' || string[SPAM] == '2' || string[SPAM] == '3' || string[SPAM] == '4' || string[SPAM] == '5' || string[SPAM] == '6' || string[SPAM] == '7' || string[SPAM] == '8' || string[SPAM] == '9') CUENTAN ++;
		if(string[SPAM] == ':') CUENTADP ++;
	}
 	if(CUENTAP >= 3 && CUENTAN >= 4 && CUENTADP >= 1) ss2 = 1; // 192.168.1.250:777
 	if(CUENTAJ >= 3 && CUENTAN >= 4) ss2 = 1; // 192-168-1-250:7777
	if(CUENTAN >= 5 && CUENTAP >= 3) ss2 = 1;// 192.168.1.250
	if(CUENTAP >= 2 && CUENTADP == 1 && CUENTAN >= 3) ss2 = 1;// samp.servidor.com:7777
	if(CUENTAP >= 2 && CUENTAN >= 3) ss2 = 1; //samp.servidor.com
	if(CUENTAJ >= 3 && CUENTAN >= 3) ss2 = 1;
	new a;
	while(a < sizeof(spam))
  	{
  	    if(strfind(string,spam[a],true) != -1)
	  	{
		  	new msjadm[160];
		  	format(msjadm,sizeof(msjadm),"Notificaci�n: %s (%d) SPAM - {FF3300}%s: "CB"%s", NombreJugador(playerid), playerid, spam[a],string);
			MensajeAdmin(COLOR_CHEAT, msjadm, 3);
			return 2;
		}
        a ++;
   	}
   	a = 0;
 	while(a < sizeof(spam2))
  	{
  	    if(strfind(string,spam2[a],true) != -1)
	  	{
		  	new msjadm[160];
		  	format(msjadm,sizeof(msjadm),"Notificaci�n: %s (%d) SPAM - {FF3300}%s: "CB"%s", NombreJugador(playerid), playerid, spam2[a],string);
			MensajeAdmin(COLOR_CHEAT, msjadm, 3);
			return 1;
		}
        a ++;
   	}
    if(ss2 == 1)
	{
		new msjadm[144];
		format(msjadm,sizeof(msjadm),"Notificaci�n: %s (%d) SPAM - {FF3300}Posible IP: "CB"%s", NombreJugador(playerid), playerid, string);
		MensajeAdmin(COLOR_CHEAT, msjadm, 3);
		return 3;
	}
 	return 0;
}

static GuardarPropiedad(c)
{
	new query[600];
 	mysql_format(Conecction, query, sizeof(query),"UPDATE `propiedades` SET `Sprunk`='%d',`Cerveza`='%d',`Aquarius`='%d',`Pizzas`='%d',`Vino`='%d',`Baston`='%d' WHERE `ID`='%d'", PropInfo[c][pSprunk],PropInfo[c][pCerveza],PropInfo[c][pAquarius],PropInfo[c][pPizzas],PropInfo[c][pVino],PropInfo[c][pBaston],PropInfo[c][propiedad_ID]);
	mysql_tquery(Conecction, query);
	mysql_format(Conecction, query, sizeof(query),"UPDATE `propiedades` SET `PosAS`='%f',`EnUso`='%d',`Tipo`='%d',`Interior`='%d',`InteriorID`='%d',`Abierta`='%d' WHERE `ID`='%d'", PropInfo[c][pPosAS],PropInfo[c][pEnUso],PropInfo[c][pTipo],PropInfo[c][pInterior],PropInfo[c][pInteriorID],PropInfo[c][pAbierta],PropInfo[c][propiedad_ID]);
 	mysql_tquery(Conecction, query);
 	mysql_format(Conecction, query, sizeof(query),"UPDATE `propiedades` SET `AK47`='%d',`M4`='%d',`EscopetaNormal`='%d',`EscopetaDeCombate`='%d',`MP5`='%d',`9mm`='%d',`9mmSilenciada`='%d',`PaloDeBillar`='%d' WHERE`ID`='%d'", PropInfo[c][pAK47],PropInfo[c][pM4],PropInfo[c][pEscopetaNormal],PropInfo[c][pEscopetaDeCombate],PropInfo[c][pMP5],PropInfo[c][p9mm],PropInfo[c][p9mmSilenciada],PropInfo[c][pPaloDeBillar],PropInfo[c][propiedad_ID]);
 	mysql_tquery(Conecction, query);
	mysql_format(Conecction, query, sizeof(query),"UPDATE `propiedades` SET `EnVentaPor`='%d',`EnVenta`='%d',`Precio`='%d',`Nivel`='%d',`Ganancias`='%d',`Bazooka`='%d',`Lanzallamas`='%d',`Minigun`='%d',`Paracaidas`='%d' WHERE `ID`='%d'", PropInfo[c][pEnVentaPor], PropInfo[c][pEnVenta], PropInfo[c][pPrecio], PropInfo[c][pNivel], PropInfo[c][pGanancias],PropInfo[c][pBazooka],PropInfo[c][pLanzallamas],PropInfo[c][pMinigun],PropInfo[c][pParacaidas],PropInfo[c][propiedad_ID]);
	mysql_tquery(Conecction, query);
 	mysql_format(Conecction, query, sizeof(query),"UPDATE `propiedades` SET `Camara`='%d',`Flores`='%d',`Pala`='%d',`BateDeBeisbol`='%d',`PaloDeGolf`='%d',`ConsoladorRosa`='%d',`VibradorBlanco`='%d',`VibradorPlateado`='%d' WHERE `ID`='%d'", PropInfo[c][pCamara],PropInfo[c][pFlores],PropInfo[c][pPala],PropInfo[c][pBateDeBeisbol],PropInfo[c][pPaloDeGolf],PropInfo[c][pConsoladorRosa],PropInfo[c][pVibradorBlanco],PropInfo[c][pVibradorPlateado],PropInfo[c][propiedad_ID]);
 	mysql_tquery(Conecction, query);
	mysql_format(Conecction, query, sizeof(query),"UPDATE `propiedades` SET `PosX`='%f',`PosY`='%f',`PosZ`='%f',`PosXS`='%f',`PosYS`='%f',`PosZS`='%f',`Uzi`='%d',`Tec9`='%d',`Motosierra`='%d',`Sniper`='%d',`Lanzacohetes`='%d' WHERE `ID`='%d'", PropInfo[c][pPosX],PropInfo[c][pPosY],PropInfo[c][pPosZ],PropInfo[c][pPosXS],PropInfo[c][pPosYS],PropInfo[c][pPosZS],PropInfo[c][pUzi],PropInfo[c][pTec9],PropInfo[c][pMotosierra],PropInfo[c][pSniper],PropInfo[c][pLanzacohetes],PropInfo[c][propiedad_ID]);
	mysql_tquery(Conecction, query);
 	mysql_format(Conecction, query, sizeof(query),"UPDATE `propiedades` SET `DesertEagle`='%d',`Rifle`='%d',`Granada`='%d',`Manopla`='%d',`Cuchillo`='%d',`Katana`='%d',`Crack`='%d',`Medicamentos`='%d',`GranVibradorBlanco`='%d',`Sniper`='%d' WHERE `ID`='%d'", PropInfo[c][pDesertEagle],PropInfo[c][pRifle],PropInfo[c][pGranada],PropInfo[c][pManopla],PropInfo[c][pCuchillo],PropInfo[c][pKatana],PropInfo[c][pCrack],PropInfo[c][pMedicamentos],PropInfo[c][pGranVibradorBlanco],PropInfo[c][Sniper],PropInfo[c][propiedad_ID]);
 	mysql_tquery(Conecction, query);
	return true;
}

static LoadNPCs()
{
	ConnectNPC("Motorman1","Motorman1");
	//ConnectNPC("Motorman2","Motorman2");
	ConnectNPC("Motorman3","Motorman3");
	ConnectNPC("Motorman4","Motorman4");
	ConnectNPC("Alexis","Alexis");
	ConnectNPC("Marcelo","Marcelo");
	ConnectNPC("Alejandro","Alejandro");
	ConnectNPC("Camello","Camello");
	ConnectNPC("HippePepe","HippePepe");
	ConnectNPC("Angelica","Angelica");
	ConnectNPC("Jorge","Jorge");
	ConnectNPC("Ignacio","Ignacio");
	ConnectNPC("Hugo","Hugo");
	ConnectNPC("Mao","Mao");
	ConnectNPC("Leo","npcspawn");
	npctoggle = 1;
	return 1;
}

static NameCheck(const source[])
{
    new length = strlen(source);
    if (!(3 <= length <= 20)) return 0;
    new pos = strfind(source, "_");
    if(pos == -1) return 0;
    new us_count;
    for(new i; i != length; ++i)
    {
        switch (source[i])
        {
            case '_': ++us_count;
        }
        if(!i || i == pos + 1)
        {
            switch (source[i])
            {
                case 'A' .. 'Z': continue;
                case 'a' .. 'z': continue;
				case '0' .. '9': continue;
                default: return 0;
            }
        }
        else if (i && i != pos && i != pos + 1)
        {
            switch (source[i])
            {
                case 'A' .. 'Z': continue;
                case 'a' .. 'z': continue;
				case '0' .. '9': continue;
                default: return 0;
            }
        }
    }
    return (us_count == 1 && source[length - 1] != '_');
}

static PlayerConectado(playerid)
{
	if(playerid == INVALID_PLAYER_ID) return 0;
	if(playerid < 0 || playerid > MAX_PLAYERS) return 0;
	if(!IsPlayerConnected(playerid)) return 0;
	if(JugadorLogeado[playerid] == 1) return 1;
	return 0;
}

static CalcularNivel(playerid)
{
	switch(PlayerInfo[playerid][jNivel])
	{
		case 1: PlayerInfo[playerid][NivelExp] = 1,PlayerInfo[playerid][PrecioNivel] = 1500;
		case 2: PlayerInfo[playerid][NivelExp] = 2,PlayerInfo[playerid][PrecioNivel] = 3240;
		case 3: PlayerInfo[playerid][NivelExp] = 8,PlayerInfo[playerid][PrecioNivel] = 7600;
		case 4: PlayerInfo[playerid][NivelExp] = 12,PlayerInfo[playerid][PrecioNivel] = 16430;
		case 5: PlayerInfo[playerid][NivelExp] = 6,PlayerInfo[playerid][PrecioNivel] = 34320;
		case 6: PlayerInfo[playerid][NivelExp] = 50,PlayerInfo[playerid][PrecioNivel] = 300000;
		case 7: PlayerInfo[playerid][NivelExp] = 80,PlayerInfo[playerid][PrecioNivel] = 500000;
		case 8: PlayerInfo[playerid][NivelExp] = 140,PlayerInfo[playerid][PrecioNivel] = 700000;
		case 9: PlayerInfo[playerid][NivelExp] = 230,PlayerInfo[playerid][PrecioNivel] = 900000;
		case 10: PlayerInfo[playerid][NivelExp] = 400,PlayerInfo[playerid][PrecioNivel] = 1500000;
		case 11: PlayerInfo[playerid][NivelExp] = 660,PlayerInfo[playerid][PrecioNivel] = 3000000;
		case 12: PlayerInfo[playerid][NivelExp] = 1100,PlayerInfo[playerid][PrecioNivel] = 5000000;
		case 13: PlayerInfo[playerid][NivelExp] = 1800,PlayerInfo[playerid][PrecioNivel] = 6000000;
		case 14: PlayerInfo[playerid][NivelExp] = 3000,PlayerInfo[playerid][PrecioNivel] = 7000000;
		case 15: PlayerInfo[playerid][NivelExp] = 5000,PlayerInfo[playerid][PrecioNivel] = 8000000;
		default: PlayerInfo[playerid][NivelExp] = 100000,PlayerInfo[playerid][PrecioNivel] = 200000000;
	}
}



static VehicleToPoint(Float:radi, vehicleid, Float:x, Float:y, Float:z)
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new Float:tempposx, Float:tempposy, Float:tempposz;
	GetVehiclePos(vehicleid, oldposx, oldposy, oldposz);
	tempposx = (oldposx -x);
	tempposy = (oldposy -y);
	tempposz = (oldposz -z);
	if(((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) return 1;
	return 0;
}

encode_tires(tire1, tire2, tire3, tire4)
{
	return tire1 | (tire2 << 1) | (tire3 << 2) | (tire4 << 3);
}

static VerTiempos(playerid,id)
{
	if(Jail[id] == 1)
	{
		new string[256];
		if(PlayerInfo[id][pTiempoCarcel] < 60) format(string, sizeof(string), "Tiempo restante para cumplir la condena: "CR"%ds.", PlayerInfo[id][pTiempoCarcel]);
		else if(PlayerInfo[id][pTiempoCarcel] >= 60) format(string, sizeof(string), "Tiempo restante para cumplir la condena: "CR"%dm %ds.", PlayerInfo[id][pTiempoCarcel]/60, PlayerInfo[id][pTiempoCarcel]%(60));
		Mensaje(playerid,-1,string);
	}
	else if(PlayerInfo[id][pTiempoJail] > 0)
	{
		new string[256];
		if(PlayerInfo[id][pTiempoJail] < 60) format(string, sizeof(string), "Tiempo restante para cumplir la condena: "CR"%ds", PlayerInfo[id][pTiempoJail]);
		else if(PlayerInfo[id][pTiempoJail] >= 60) format(string, sizeof(string), "Tiempo restante para cumplir la condena: "CR"%dm %ds", PlayerInfo[id][pTiempoJail]/60, PlayerInfo[id][pTiempoJail]%(60));
		Mensaje(playerid,-1,string);
	}
	return 1;
}

static ColocarCombate(playerid)
{
    if(!IsPlayerConnected(playerid)) return 1;
	if(EnCombate[playerid] == 0)
	{
		TimerCombate[playerid] = SetTimerEx("TextoCombate",1000,true,"d",playerid);
		EnCombate[playerid] = 1;
		TiempoCombate[playerid] = 40;
	}
	else if(EnCombate[playerid] == 1) return TiempoCombate[playerid] = 40;
	return 1;
}

static procesarCheckpointsBasurero(const playerid)
{
	new Float:puntos[][] =
	{
		// Ruta SF
		{-110.2728,-1169.3069,2.4092},
		{-103.7799,-1172.5127,3.5240},
		{-345.9767,-756.6649,30.8484},
		{-426.7870,-433.8864,17.8884},
		{-916.0715,-446.1450,29.7584},
		{-1904.3972,-567.3438,25.5184},
		{-2244.9705,-123.7534,36.0884},
		{-2245.8291,84.2427,35.9984},
		{-2166.9063,201.9160,35.9784},
		{-2033.2213,313.7436,35.9284},
		{-2013.7318,137.0096,28.3484},
		{-1813.1581,-122.9985,6.3384},
		{-1824.8383,-559.8033,17.1384},
		{-815.8467,-1021.9445,83.8480},
		{-44.1083,-1525.1487,2.2014},
		{-349.6644,-757.6539,29.0136},
		{-428.8095,-436.5871,16.6492},
		{-917.4271,-450.9999,27.6603},
		{-1904.0535,-572.3555,24.1474},
		{-2248.4912,-124.0376,34.8783},
		{-2248.7205,83.8178,34.8784},
		{-2167.4629,204.8546,34.8776},
		{-2033.6031,316.9929,34.7233},
		{-2010.0227,137.4623,27.2469},
		{-1813.6909,-119.8742,5.2043},
		{-1822.1787,-559.9365,15.9207},
		{-817.4674,-1018.3693,83.3079},
		{-43.7590,-1519.9025,1.5263},
		// Ruta LS - 1
		{990.8474,-1811.6334,14.2317},
		{991.5659,-1805.8092,14.0539},
		{1548.8268,-1879.8169,13.5469},
		{1548.8938,-1874.5441,13.3828},
		{2089.1584,-1908.3224,13.5469},
		{2084.0916,-1908.8611,13.3828},
		{2222.9968,-1793.5454,13.5625},
		{2218.6541,-1793.9825,13.1953},
		{2114.7368,-1607.7476,13.5625},
		{2115.4761,-1613.1133,13.3904},
		{1994.0798,-1681.3557,13.5469},
		{1999.2738,-1679.7145,13.3828},
		{1764.0529,-1724.7991,13.5469},
		{1765.4800,-1729.7675,13.3828},
		{1735.8999,-1589.8905,13.5455},
		{1738.8538,-1595.5604,13.3814},
		{1390.0305,-1581.1624,13.5469},
		{1393.0277,-1587.4966,13.3564},
		{1365.0758,-1155.3657,23.8660},
		{1360.2289,-1162.8208,23.7095},
		{1097.2964,-1133.7189,23.8281},
		{1098.3059,-1139.8910,23.6563},
		{1046.2882,-1304.1703,13.5469},
		{1051.4209,-1304.8677,13.3828},
		{679.1686,-1311.9562,13.6760},
		{679.4622,-1317.1431,13.5095},
		{483.6781,-1277.2889,15.6511},
		{487.7305,-1280.6522,15.5305},
		{345.4417,-1368.1273,14.3875},
		{344.1947,-1374.5900,14.2268},
		{197.3550,-1743.2972,4.5101},
		{195.3670,-1736.5179,4.3181},
		{390.4010,-1779.2229,5.5900},
		{388.9255,-1775.0706,5.3994},
		// Ruta LS - 2
		{183.3738,-1393.7588,47.3034},
		{188.6838,-1395.9762,47.2736},
		{350.3483,-1273.5121,53.7532},
		{353.9030,-1277.7860,53.8950},
		{680.5216,-1060.3474,49.4870},
		{686.0798,-1062.7533,49.6633},
		{873.2125,-863.1124,77.5146},
		{871.3945,-868.6337,77.5458},
		{1079.9196,-774.5426,107.9675},
		{1081.2075,-778.0049,107.7854},
		{918.6940,-680.4443,117.0033},
		{912.7013,-677.6242,116.8398},
		{810.9399,-792.6181,68.5974},
		{808.1866,-788.2479,68.7993},
		{272.8895,-1100.2932,81.7537},
		{266.5842,-1101.4108,81.7877},
		{339.2604,-1189.8682,76.4328},
		{343.5382,-1193.1310,76.5068},
		{549.9263,-1156.9595,54.1546},
		{554.6530,-1161.1757,54.4223},
		{326.4816,-1192.4799,76.1984},
		{322.6987,-1189.3054,76.3568},
		{179.2384,-1389.3564,47.9640},
		{175.0909,-1387.1046,48.6300},
		{-55.1223,-1594.4856,2.7740},
		{-78.5097,-1592.9054,2.6172},
		// Ruta LS - 3
		{259.6662,-1435.2172,13.5396},
		{263.6307,-1438.7028,13.7373},
		{715.6998,-1119.7213,17.9918},
		{721.1824,-1121.8177,18.2286},
		{1105.8407,-958.8027,42.3986},
		{1106.3229,-964.0125,42.6446},
		{1260.1581,-1106.3085,25.0804},
		{1254.5852,-1106.2231,25.2560},
		{1193.4933,-1498.0582,13.3828},
		{1188.3806,-1499.1213,13.5469},
		{1295.2137,-1839.4456,13.3828},
		{1289.6144,-1837.6057,13.5469},
		{1039.8508,-1670.3042,13.3828},
		{1045.2313,-1669.8091,13.5469},
		{932.7011,-1486.6115,13.3750},
		{932.4356,-1480.9509,13.5361},
		{855.2783,-1392.5234,13.3664},
		{857.4956,-1382.1349,13.7507},
		{483.1931,-1499.0760,20.3036},
		{478.3005,-1497.9749,20.4542},
		{656.1319,-1675.2115,14.2370},
		{655.2776,-1680.0502,14.4416},
		{807.8727,-1757.3798,13.3872},
		{802.7533,-1756.1191,13.5469},
		{107.0301,-1530.0708,6.4494},
		{108.2038,-1525.6523,7.0480}
	};

	for(new i = 0; i < sizeof(puntos); i++)
	{
		if(EstaEn(playerid, 5.0, puntos[i][0], puntos[i][1], puntos[i][2]))
		{
			if(!IsPlayerConnected(Companero[playerid])) return Mensaje(playerid,-1,"Tu compa�ero se ha ido.");
			if(procesarCheckpoint(playerid)) return 1;
		}
	}
	return 0;
}

static procesarCheckpoint(const playerid)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)))
	{
		if(PlayerTemp[playerid][pt_RolBasurero] == 1) return Mensaje(playerid, -1, "Tu trabajo es recolectar basura.");
		
		SetTimerEx("PuntoB", 500, false, "d", Companero[playerid]);
		Mensaje(playerid, -1, "Espera a que tu compa�ero recolecte la basura.");
		BorrarCheckpoint(playerid);
		PuntoBaX[playerid] = 0;
		return 1;
    }
    if(!IsPlayerInAnyVehicle(playerid) && RecorridoBasu[playerid] != 0)
    {
		new tiemporecolectar;
		if(PlayerTemp[playerid][pt_RolBasurero] == 2) return Mensaje(playerid, -1, "Tu trabajo es manejar.");
		recogiendo[playerid]++;
		BorrarCheckpoint(playerid);
        PuntoBaX[playerid] = 0;
		switch(PlayerInfo[playerid][pNivelBasurero])
		{
			case 0..1: tiemporecolectar = 13000;
			case 2: tiemporecolectar = 11000;
			case 3: tiemporecolectar = 9000;
			case 4: tiemporecolectar = 7000;
			case 5: tiemporecolectar = 5000;
			default: tiemporecolectar = 2500;
		}
		LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, tiemporecolectar);
		SetTimerEx("Recolectar", tiemporecolectar, false, "d", playerid);
		GameTextForPlayer(playerid, "~g~RECOLECTANDO BASURA", tiemporecolectar, 3);
		return 1;
    }
	return 0;
}

static ExpTrans(playerid)
{
    PlayerTemp[playerid][pt_Transportista] = false;
	switch(PlayerInfo[playerid][pNivelTransportista])
	{
		case 1..5: DarHabilidadTransportista(playerid);
		default: DarHabilidadTransportista2(playerid);
	}
}

static ApareceHospital(playerid)
{
	PlayerInfo[playerid][Agonizando] = 0;
	Muriendo[playerid] = 0;
	MarcadoMedicos[playerid] = 0;
	LlamadaMedicos[playerid] = 0;
	new accesoa=0;
	if(FaccLegal(playerid)) accesoa=1;
	if(PlayerInfo[playerid][pAdmin] > 3) accesoa=1;
	if(accesoa == 0) QuitarArmas(playerid, 1);
    EstablecerVida(playerid,4.0);
	DarRopa(playerid);
	DarArmas(playerid);
	DarPrendas(playerid);
	HospitalMasCercano(playerid);
 	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid, 999);
	CongelarEx(playerid);
	TextDrawHideForPlayer(playerid,Sangre);
	TextDrawHideForPlayer(playerid,MisionT2[5]);
	PlayerTextDrawHide(playerid,IndicacionesT[playerid]);
	if(PlayerInfo[playerid][jMiembro] == 2 && PlayerInfo[playerid][pDutyM] == 1){
		Mensaje(playerid,COLOR_GREY,"{FFBC00}Fuiste trasladado y el hospital de la central militar pudieron reanmiarte.");
	}
	else{
		Mensaje(playerid,COLOR_GREY,"{FFBC00}Fuiste trasladado al hospital y los m�dicos pudieron reanimarte.");
	}
	Mensaje(playerid,COLOR_GREY,"{FFBC00}Est�n cur�ndote las heridas, aguarda un momento.");
	SetPlayerColor(playerid, COLORCARGO0);
	SetTimerEx("CurarON",2000,false,"d",playerid);
	return 1;
}

static PonerPrenda(playerid, slot)
{
	if(UsandoObj[slot][playerid] == 1) return ErroresPrenda(playerid);
	new Query[256]/*, bone = 2*/;
	SlotP2[slot][playerid] = slot;
	/*if(PlayerInfo[playerid][pObj][slot] == 0)
	{
	if(PlayerInfo[playerid][pObj][slot] == 19086) bone = 6;
	if(PlayerInfo[playerid][pObj][slot] == 19078 || PlayerInfo[playerid][pObj][slot] == 19079) bone = 16;
	if(PlayerInfo[playerid][pObj][slot] == 19142 || PlayerInfo[playerid][pObj][slot] == 19515) bone = 1;
	}
	else
	{
		bone = PlayerInfo[playerid][pObj][slot];
	}
	PlayerInfo[playerid][pBone][slot] = bone;*/
	SetPlayerAttachedObject(playerid, SlotP2[slot][playerid], PlayerInfo[playerid][pObj][slot], PlayerInfo[playerid][pBone][slot], PlayerInfo[playerid][pfOffsetX][slot], PlayerInfo[playerid][pfOffsetY][slot],  PlayerInfo[playerid][pfOffsetZ][slot], PlayerInfo[playerid][pfRotX][slot], PlayerInfo[playerid][pfRotY][slot], PlayerInfo[playerid][pfRotZ][slot], PlayerInfo[playerid][pfScaleX][slot], PlayerInfo[playerid][pfScaleY][slot], PlayerInfo[playerid][pfScaleZ][slot], PlayerInfo[playerid][pObjColor][slot]);
	UsandoObj[slot][playerid] = 1;
	UsandoP[playerid]++;
	Mensaje(playerid,-1,"Te pusiste una prenda, en cualquier momento puedes configurarla en "CR"/prendas"CB"");
	mysql_format(Conecction, Query, sizeof(Query), "UPDATE `prendas` SET `ObjUsed`='1',`ATH`='%d' WHERE `UserID` ='%d' AND Slot='%d' LIMIT 1",SlotP2[slot][playerid], PlayerInfo[playerid][p_DBID],slot+1);
	mysql_tquery(Conecction, Query);
    return 1;
}

static QuitarPrenda(playerid, slot)
{
	new Query[256];
 	RemovePlayerAttachedObject(playerid, SlotP2[slot][playerid]);
  	UsandoObj[slot][playerid] = 0;
   	UsandoP[playerid]--;
   	Mensaje(playerid,-1,"Te quitaste una prenda, en cualquier momento puedes usar "CR"/prendas");
    mysql_format(Conecction, Query, sizeof(Query), "UPDATE `prendas` SET `ObjUsed`='0' WHERE `UserID` ='%d' AND Slot='%d'", PlayerInfo[playerid][p_DBID],slot+1);
    mysql_tquery(Conecction, Query);
    return 1;
}

static AcomodarPrenda(playerid, slot)
{
	CancelarSelect(playerid);
 	if(!IsPlayerAttachedObjectSlotUsed(playerid,SlotP2[slot][playerid])) return Mensaje(playerid,-1,"Necesitas usar una prenda para modificar su posici�n");
  	EditAttachedObject(playerid,SlotP2[slot][playerid]);
   	Mensaje(playerid,-1,""CR"�ATENCI�N!"CB" Si usas el objeto en un lugar irreal, la administraci�n puede quitarte todas las prendas sin previo aviso.");
    return 1;
}


static EliminarPrenda(playerid, slot)
{
	CancelarSelect(playerid);
	if(IsPlayerAttachedObjectSlotUsed(playerid,SlotP2[slot][playerid])) RemovePlayerAttachedObject(playerid, SlotP2[slot][playerid]),UsandoP[playerid]--;
	new Query[120];
	mysql_format(Conecction, Query, sizeof(Query),"DELETE FROM `prendas` WHERE `UserID`='%d' AND `Slot`='%d'", PlayerInfo[playerid][p_DBID],slot+1);
	mysql_tquery(Conecction, Query);
	PlayerInfo[playerid][pObj][slot] = 11392;
	NPrendas[playerid]--;
	UsandoObj[slot][playerid] = 0;
	va_SendClientMessage(playerid, -1, "La prenda en el slot %d fue eliminada",slot+1);
   	return 1;
}

static EditarCuerpo(playerid, slot)
{
	CancelarSelect(playerid);
	TempPrendaSlot[playerid] = slot;
	MostrarDialog(playerid, PRENDAS_POS, DIALOG_STYLE_LIST, "Selecciona la posici�n en la que quieres la prenda", "Espalda\nCabeza\nHombro izquierdo\nHombro derecho\nMano izquiera\nMano derecha\nMuslo izquierdo\nMuslo derecho\nPie izquierdo\nPie derecho\nPantorrilla derecha\nPantorrilla izquierda\nAntebrazo izquierdo\nAntebrazo derecho\nClavicula izquierda\nClavicula derecha\nCuello\nMand�bula", "Aceptar", "Cancelar");
	
	
   	return 1;
}


static PrendaColor(playerid, slot)
{
	if(!IsPlayerAttachedObjectSlotUsed(playerid,SlotP2[slot][playerid])) return Mensaje(playerid,-1,"Necesitas usar una prenda para modificar su color");
	MostrarDialog(playerid, PRENDA_COLOR, DIALOG_STYLE_LIST, "Selecciona color", DialogFormatColores, "Continuar", "Atras");
	PrendaMarcada[playerid] = slot;
	return 1;
}

static LimpiarLog(lineas)
{
	foreach(new i : Player)
	{
		if(PlayerInfo[i][pAdmin] < ADMIN_LVL_DUDAS)
		{
		    for(new e=0; e<lineas; e++)
			{
				Mensaje(i, -1, "");
   			}
			Mensaje(i, 0xAA3333AA, "El log del chat fue borrado.");
		}
	}
	return 1;
}



static DarPrendas(playerid)
{
	if(UsandoObj[0][playerid] == 1 && PlayerInfo[playerid][pObj][0] != 11392) SetPlayerAttachedObject(playerid, SlotP2[0][playerid], PlayerInfo[playerid][pObj][0], PlayerInfo[playerid][pBone][0], PlayerInfo[playerid][pfOffsetX][0], PlayerInfo[playerid][pfOffsetY][0],  PlayerInfo[playerid][pfOffsetZ][0], PlayerInfo[playerid][pfRotX][0], PlayerInfo[playerid][pfRotY][0], PlayerInfo[playerid][pfRotZ][0], PlayerInfo[playerid][pfScaleX][0], PlayerInfo[playerid][pfScaleY][0], PlayerInfo[playerid][pfScaleZ][0],PlayerInfo[playerid][pObjColor][0]);
	if(UsandoObj[1][playerid] == 1 && PlayerInfo[playerid][pObj][1] != 11392) SetPlayerAttachedObject(playerid, SlotP2[1][playerid], PlayerInfo[playerid][pObj][1], PlayerInfo[playerid][pBone][1], PlayerInfo[playerid][pfOffsetX][1], PlayerInfo[playerid][pfOffsetY][1],  PlayerInfo[playerid][pfOffsetZ][1], PlayerInfo[playerid][pfRotX][1], PlayerInfo[playerid][pfRotY][1], PlayerInfo[playerid][pfRotZ][1], PlayerInfo[playerid][pfScaleX][1], PlayerInfo[playerid][pfScaleY][1], PlayerInfo[playerid][pfScaleZ][1],PlayerInfo[playerid][pObjColor][1]);
	if(UsandoObj[2][playerid] == 1 && PlayerInfo[playerid][pObj][2] != 11392) SetPlayerAttachedObject(playerid, SlotP2[2][playerid], PlayerInfo[playerid][pObj][2], PlayerInfo[playerid][pBone][2], PlayerInfo[playerid][pfOffsetX][2], PlayerInfo[playerid][pfOffsetY][2],  PlayerInfo[playerid][pfOffsetZ][2], PlayerInfo[playerid][pfRotX][2], PlayerInfo[playerid][pfRotY][2], PlayerInfo[playerid][pfRotZ][2], PlayerInfo[playerid][pfScaleX][2], PlayerInfo[playerid][pfScaleY][2], PlayerInfo[playerid][pfScaleZ][2],PlayerInfo[playerid][pObjColor][2]);
	if(UsandoObj[3][playerid] == 1 && PlayerInfo[playerid][pObj][3] != 11392) SetPlayerAttachedObject(playerid, SlotP2[3][playerid], PlayerInfo[playerid][pObj][3], PlayerInfo[playerid][pBone][3], PlayerInfo[playerid][pfOffsetX][3], PlayerInfo[playerid][pfOffsetY][3],  PlayerInfo[playerid][pfOffsetZ][3], PlayerInfo[playerid][pfRotX][3], PlayerInfo[playerid][pfRotY][3], PlayerInfo[playerid][pfRotZ][3], PlayerInfo[playerid][pfScaleX][3], PlayerInfo[playerid][pfScaleY][3], PlayerInfo[playerid][pfScaleZ][3],PlayerInfo[playerid][pObjColor][3]);
}

static randomString(strDest[], strLen = 10)
{
	while(strLen--)
	strDest[strLen] = random(2) ? (random(26) + (random(2) ? 'A' : 'A')) : (random(10) + 'A');
}
/*
static NombreRandomString(strDest[], strLen = 10)
{
	while(strLen--)
	strDest[strLen] = random(2) ? (random(26) + (random(2) ? 'a' : 'A')) : (random(10) + '0');
}*/

static Float:GetPlayerDistanceToVehicle(playerid, vehicleid)
{
	new Float:PCoords[3], Float:VCoords[3];
	GetPlayerPos(playerid, PCoords[0], PCoords[1], PCoords[2]);
	GetVehiclePos(vehicleid, VCoords[0], VCoords[1], VCoords[2]);
	new Float:Distance[4];
	for(new n=0; n<3; n++) { Distance[n] = floatabs(PCoords[n]) - floatabs(VCoords[n]); }
	Distance[3] = floatsqroot((Distance[0] * Distance[0]) + (Distance[1] * Distance[1]) + (Distance[2] * Distance[2]));
	return Distance[3];
}



static GetPlayerNearestVehicle(playerid)
{
	new nearest[2] = {-1, -1};
 	foreach(new v : StreamedVehicle[playerid])
	{
		if(GetVehicleModel(v) == 453)
		{
			if(nearest[0] == -1)
			{
				nearest[0] = v;
				nearest[1] = floatround(GetPlayerDistanceToVehicle(playerid, v));
			}
			else
			{
				if(floatround(GetPlayerDistanceToVehicle(playerid, v)) < nearest[1])
				{
					nearest[0] = v;
					nearest[1] = floatround(GetPlayerDistanceToVehicle(playerid, v));
				}
			}
		}
	}
	return nearest[0];
}

static floatMapa3Da2D(Float:_3Dx, Float:_3Dy, Float:texturaX, Float:texturaY, Float:textura_tamanoX, Float:textura_tamanoY, &Float:_2Dx, &Float:_2Dy)
{
	const Float:mapaTamanoMaximo = 6000.0;
	_2Dx = ((textura_tamanoX/mapaTamanoMaximo)*_3Dx+texturaX+(textura_tamanoX/2));
	_2Dy = ((textura_tamanoY/mapaTamanoMaximo)*-_3Dy+texturaY+(textura_tamanoY/2));
	return 1;
}

ProxDetectorS(Float:radi, playerid, targetid)
{
	new Float: fp_playerPos[3];
	GetPlayerPos(targetid, fp_playerPos[0], fp_playerPos[1], fp_playerPos[2]);
	if(EstaEn(playerid, radi, fp_playerPos[0], fp_playerPos[1], fp_playerPos[2]) && GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(targetid)) return 1;
	return 0;
}

PuntosCamello(playerid)
{
	if(EstaEn(playerid,2.5,2385.2434,-1771.1910,13.5469) || EstaEn(playerid,2.5, 2293.6973,-1693.1864,13.5482) || EstaEn(playerid,2.5, 2441.2925,-1689.9332,13.8047) || EstaEn(playerid,2.5, 2252.9622,-1793.9364,13.5546)) return 1;
	else return -1;
}

static SendReportToQue(reportfrom, reportadoid, report[])
{
    new bool:breakingloop = false, newid = INVALID_REPORT_ID;
	for(new i=0;i<MAX_REPORTS;i++)
	{
		if(!breakingloop)
		{
			if(Reports[i][HasBeenUsed] == 0)
			{
				breakingloop = true;
				newid = i;
			}
		}
    }
    if(newid != INVALID_REPORT_ID)
    {
        strmid(Reports[newid][Report], report, 0, strlen(report), 250);
        Reports[newid][ReportadoID] = reportadoid;
        Reports[newid][ReportFrom] = reportfrom;
        Reports[newid][HasBeenUsed] = 1;
        Reports[newid][BeingUsed] = 1;
        Reports[newid][TiempoReport] = gettimeVariable;
		foreach(new i : Admin)
		{
			if(PlayerInfo[i][pAdmin] > 2 && VerAdmin[i] == 1)
			{
        		new string[255];
                //if(PlayerInfo[reportfrom][VIP] > 0 && PlayerInfo[reportfrom][VIP] < 3) format(string, sizeof(string), "{FF227A}#%i Jugador VIP %s "CB"(ID: %i | Nivel: %d){FF227A} Reporto a %s "CB"(ID: %i | Nivel: %d)", newid, NombreJugador(reportfrom), reportfrom, PlayerInfo[reportfrom][jNivel], NombreJugador(reportadoid), reportadoid, PlayerInfo[reportadoid][jNivel]),Mensaje(i,-1,string);
                if(PlayerInfo[reportfrom][VIP] == 3) format(string, sizeof(string), "{FF227A}#%i Jugador VIP #3 %s "CB"(ID: %i | Nivel: %d){FF227A} Reporto a %s "CB"(ID: %i | Nivel: %d)", newid, NombreJugador(reportfrom), reportfrom, PlayerInfo[reportfrom][jNivel], NombreJugador(reportadoid), reportadoid, PlayerInfo[reportadoid][jNivel]),Mensaje(i,-1,string);
                else format(string, sizeof(string), "{FF227A}#%i Jugador %s "CB"(ID: %i | Nivel: %d){FF227A} Reporto a %s "CB"(ID: %i| Nivel: %d)", newid, NombreJugador(reportfrom), reportfrom, PlayerInfo[reportfrom][jNivel], NombreJugador(reportadoid), reportadoid, PlayerInfo[reportadoid][jNivel]),Mensaje(i,-1,string);
  	    	  	format(string, sizeof(string), "{FF227A}Raz�n: %s", (report)),Mensaje(i,-1,string);
   			}
		}
    }
    else ClearReports(),SendReportToQue(reportfrom, reportadoid, report);
	return 1;
}

RespawnNearbyVehicles(playerid, Float:radi)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	foreach(new i: StreamedVehicle[playerid])
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetVehiclePos(i, posx, posy, posz);
		tempposx = (posx - x);
		tempposy = (posy - y);
		tempposz = (posz - z);
		if(((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			//new idx = i;
			//Iter_SafeRemove(Vehicle, idx, i);
			Respawnear(i);
		}
	}
}

MandarMensajeSalon(const mensaje[], id)
{
	foreach(new i : Player)
	{
		if(strcmp(Alquilador,NombreJugador(i),true) == 0)
	 	{
	 	    if(id != i) Mensaje(i, -1, mensaje);
		}
	}
	return 1;
}

MandarMensajeInvitado(playerid, radio, mensaje[])
{
	foreach(new i : Player)
	{
		if((ParlanteEscuchando[i] == radio || MP3Escuchando[i] == radio || EmisoraEscuchando[GetPlayerVehicleID(i)] == radio || IsPlayerInDynamicArea(i, AreaCabinas[radio])) && i != playerid)
		{
		    if(PlayerInfo[i][pAdmin] < ADMIN_LVL_JUEGO2)
		    {
				new string[256], locutor;
				locutor = CabinasOcupadasEmisoras[radio][1];
				format(string, sizeof(string), "[Invitado en radio %s]: %s", Emisoras[locutor][NombreEmisora], mensaje);
				Mensaje(i, COLOR_DORADO, string);
			}
			else if(PlayerInfo[i][pAdmin] >= ADMIN_LVL_JUEGO2)
			{
				new string[256];
				format(string, sizeof(string), "[Emis. Invitado %s (%d)]: %s", NombreJugador(playerid), playerid, mensaje);
				Mensaje(i, COLOR_DORADO, string);
			}
		}
	}
	return 1;
}

MandarMensajeLocutor(playerid, radio, mensaje[])
{
	foreach(new i : Player)
	{
		if((ParlanteEscuchando[i] == radio || MP3Escuchando[i] == radio || EmisoraEscuchando[GetPlayerVehicleID(i)] == radio || IsPlayerInDynamicArea(i, AreaCabinas[radio])) && i != playerid)
		{
		    if(PlayerInfo[i][pAdmin] < ADMIN_LVL_JUEGO2)
		    {
				new string[256], locutor;
				locutor = CabinasOcupadasEmisoras[radio][1];
				format(string, sizeof(string), "[Locutor de radio %s]: %s", Emisoras[locutor][NombreEmisora], mensaje);
				Mensaje(i, COLOR_DORADO, string);
			}
			else if(PlayerInfo[i][pAdmin] >= ADMIN_LVL_JUEGO2)
			{
				new string[256];
				format(string, sizeof(string), "[Emis. loc. %s (%d)]: %s", NombreJugador(playerid), playerid, mensaje);
				Mensaje(i, COLOR_DORADO, string);
			}
		}
	}
	return 1;
}

EstablecerVida(playerid, Float:vida)
{
    TiempoVida[playerid] = gettimeVariable + 8;
	VidaJugador[playerid] = vida;
	SetPlayerHealth(playerid,VidaJugador[playerid]);
	return true;
}

EstablecerChaleco(playerid, Float:chaleco)
{
	TiempoChaleco[playerid] = gettimeVariable + 4;
	ChalecoJugador[playerid] = chaleco;
	SetPlayerArmour(playerid,ChalecoJugador[playerid]);
	return true;
}

Funcion:ResetearCosecha(playerid, autoid, dinero, premio)
{
	switch(premio)
	{
	    case 0: va_SendClientMessage(playerid, -1, "Bien hecho, has ganado "CR"$%s"CB".", ConvertirNumero(dinero));
	    case 1: va_SendClientMessage(playerid, -1, "Bien hecho, has ganado "CR"$%s"CB" y "CR"20 gramos de crack"CB".",ConvertirNumero(dinero)),PlayerInfo[playerid][pCrack] += 20;
	    case 2: va_SendClientMessage(playerid, -1, "Bien hecho, has ganado "CR"$%s"CB" y "CR"10 "Moneda1""CB".",ConvertirNumero(dinero)),PlayerInfo[playerid][Moneda] += 10;
	    case 3: va_SendClientMessage(playerid, -1, "Bien hecho, has ganado "CR"$%s"CB" y "CR"una pala"CB".",ConvertirNumero(dinero)),DarArma(playerid, 6);
	    case 4: va_SendClientMessage(playerid, -1, "Bien hecho, has ganado "CR"$%s"CB" y "CR"un ramo de flores"CB".",ConvertirNumero(dinero)),DarArma(playerid, 14);
	    case 5: va_SendClientMessage(playerid, -1, "Bien hecho, has ganado "CR"$%s"CB" y "CR"un cuchillo"CB".",ConvertirNumero(dinero)),DarArma(playerid, 4);
	}
	DarDinero(playerid, dinero);
	Respawnear(autoid);
	Cosechando[playerid] = 0;
	PCosechar[playerid] = 0;
	TipoCosecha[playerid] = 0;
	return 1;
}

static EstaEnP(playerid,id,Float:rang)
{
	new Float:Pos[3];
	GetPlayerPos(id,Pos[0],Pos[1],Pos[2]);
	if(EstaEn(playerid,rang,Pos[0],Pos[1],Pos[2])) return 1;
	return 0;
}

static DarInteriorCasa(c,interior)
{
	new Interior, Float:Pos2[3],query[200];
	switch(interior)
	{
		case 1: { Pos2[0] = 235.3099;   Pos2[1] = 1186.6809;  Pos2[2] = 1080.2578; Interior = 3; }
		case 2: { Pos2[0] = 2317.6685;  Pos2[1] = -1026.7620; Pos2[2] = 1050.2178; Interior = 9; }
		case 3: { Pos2[0] = 2333.2153;  Pos2[1] = -1077.3358; Pos2[2] = 1049.0234; Interior = 6; }
		case 4: { Pos2[0] = 2196.85;    Pos2[1] = -1204.25;   Pos2[2] = 1049.02;   Interior = 6; }
		case 5: { Pos2[0] = 2308.77;    Pos2[1] = -1212.94;   Pos2[2] = 1049.02;   Interior = 6; }
		case 6: { Pos2[0] = 2365.4602;  Pos2[1] = -1135.5823; Pos2[2] = 1050.8826; Interior = 8; }
		case 7: { Pos2[0] = 2283.04;    Pos2[1] = -1140.28;   Pos2[2] = 1050.90;   Interior = 11; }
		case 8: { Pos2[0] = 2496.0586;  Pos2[1] = -1692.0869; Pos2[2] = 1014.7422; Interior = 3; }
		case 9: { Pos2[0] = 226.7886;   Pos2[1] = 1239.8962;  Pos2[2] = 1082.1406; Interior = 2; }
		case 10: { Pos2[0] = 223.0915;  Pos2[1] = 1287.0846;  Pos2[2] = 1082.1406; Interior = 1; }
		case 11: { Pos2[0] = 225.7592;  Pos2[1] = 1021.4461;  Pos2[2] = 1084.0177; Interior = 7; }
		case 12: { Pos2[0] = 295.04;    Pos2[1] = 1472.26;    Pos2[2] = 1080.26;   Interior = 15; }
		case 13: { Pos2[0] = 328.0828;  Pos2[1] = 1477.7327;  Pos2[2] = 1084.4375; Interior = 15; }
		case 14: { Pos2[0] = 387.2211;  Pos2[1] = 1471.6251;  Pos2[2] = 1080.1949; Interior = 15; }
		case 15: { Pos2[0] = 377.0259;  Pos2[1] = 1417.4404;  Pos2[2] = 1081.3281; Interior = 15; }
		case 16: { Pos2[0] = 491.0412;  Pos2[1] = 1398.5021;  Pos2[2] = 1080.2578; Interior = 2; }
		case 17: { Pos2[0] = 446.9309;  Pos2[1] = 1397.0626;  Pos2[2] = 1084.3047; Interior = 2; }
		case 18: { Pos2[0] = 261.2726;  Pos2[1] = 1284.3112;  Pos2[2] = 1080.2578; Interior = 4; }
		case 19: { Pos2[0] = 221.8109;  Pos2[1] = 1140.1986;  Pos2[2] = 1082.6094; Interior = 4; }
		case 20: { Pos2[0] = 23.8471;   Pos2[1] = 1340.1683;  Pos2[2] = 1084.3750; Interior = 10; }
		case 21: { Pos2[0] = -260.4884; Pos2[1] = 1456.5424;  Pos2[2] = 1084.3672; Interior = 4; }
		case 22: { Pos2[0] = 22.9034;   Pos2[1] = 1403.3380;  Pos2[2] = 1084.4370; Interior = 5; }
		case 23: { Pos2[0] = 140.1393;  Pos2[1] = 1365.9347;  Pos2[2] = 1083.8594; Interior = 5; }
		case 24: { Pos2[0] = 234.0749;  Pos2[1] = 1063.7300;  Pos2[2] = 1084.2123; Interior = 6; }
		case 25: { Pos2[0] = -68.9326;  Pos2[1] = 1351.2013;  Pos2[2] = 1080.2109; Interior = 6; }
		case 26: { Pos2[0] = -283.4381; Pos2[1] = 1471.1987;  Pos2[2] = 1084.3750; Interior = 15; }
		case 27: { Pos2[0] = -42.59;    Pos2[1] = 1405.47;    Pos2[2] = 1084.43;   Interior = 8; }
		case 28: { Pos2[0] = 83.1256;   Pos2[1] = 1322.2806;  Pos2[2] = 1083.8662; Interior = 9; }
		case 29: { Pos2[0] = 260.85;    Pos2[1] = 1237.24;    Pos2[2] = 1084.26;   Interior = 9; }
		case 30: { Pos2[0] = 2468.84;   Pos2[1] = -1698.24;   Pos2[2] = 1013.51;   Interior = 2; }
		case 31: { Pos2[0] = 2807.8662; Pos2[1] = -1174.7537; Pos2[2] = 1025.5703; Interior = 8; }
		case 32: { Pos2[0] = 318.4255;  Pos2[1] = 1114.4877;  Pos2[2] = 1083.8828; Interior = 5; }
		case 33: { Pos2[0] = 2324.5017; Pos2[1] = -1149.5309; Pos2[2] = 1050.7101; Interior = 12; }
		case 34: { Pos2[0] = 2259.38;   Pos2[1] = -1135.77;   Pos2[2] = 1050.64;   Interior = 10; }
		case 35: { Pos2[0] = -2170.4675; Pos2[1] = 639.4775;  Pos2[2] = 1052.3750; Interior = 1; }
		case 36: { Pos2[0] = 422.5716;  Pos2[1] = 2536.6816;  Pos2[2] = 10.0000;   Interior = 10; }
		case 37: { Pos2[0] = 1260.8397; Pos2[1] = -785.4880;  Pos2[2] = 1091.9063; Interior = 5; }
		case 38: { Pos2[0] = 2548.7993; Pos2[1] = -1294.6368; Pos2[2] = 1060.9844; Interior = 2; }
		case 39: { Pos2[0] = 1094.7491; Pos2[1] = -812.6580;  Pos2[2] = 107.4822;  Interior = 1; }
		case 40: { Pos2[0] = 1454.7249; Pos2[1] = 551.5430;   Pos2[2] = 1000.9959; Interior = 10; }
		case 41: { Pos2[0] = -794.7611; Pos2[1] = 508.3545;   Pos2[2] = 1371.7490; Interior = 1; }
		case 42: { Pos2[0] = 2270.38;   Pos2[1] = -1210.35;   Pos2[2] = 1047.56;   Interior = 10; }
		case 43: { Pos2[0] = 1425.9812; Pos2[1] = 599.6008;   Pos2[2] = 1000.9754; Interior = 99; }
		default: return print("[ERROR]: Se creo una casa con ID inv�lida.");
	}
	PropInfo[c][pPosXS] = Pos2[0];
	PropInfo[c][pPosYS] = Pos2[1];
	PropInfo[c][pPosZS] = Pos2[2];
	PropInfo[c][pInteriorID] = Interior;
	mysql_format(Conecction, query, sizeof(query),"UPDATE `propiedades` SET `InteriorID`='%d',`PosXS`='%f',`PosYS`='%f',`PosZS`='%f' WHERE `ID`='%d'", Interior,Pos2[0],Pos2[1],Pos2[2],PropInfo[c][propiedad_ID]);
	mysql_tquery(Conecction, query);
	return true;
}

static EstacionaDesocupado()
{
	for(new p = 1; p < MAX_ESTACIONA; p++)
	{
	    if(InfoEst[p][estEnUso] == 0 && p != 0) return p;
	}
	return -1;
}

static CasaDesocupada()
{
	for(new p = 1; p < MAX_PROPIEDADES; p++)
	{
	    if(PropInfo[p][pEnUso] == 0 && p != 0) return p;
	}
	return -1;
}
/*
static PlantaOcupada(id)
{
	foreach(new p : Plantas)
	{
	    if(MariInfo[p][Creado] == 1 && MariInfo[p][Estado] != 0 && p == id) return 1;
	}
	return -1;
}

static PlantaLibre()
{
	for(new p = 0; p < MAX_MARIHUANA; p++)
	{
	    if(MariInfo[p][Creado] == 0 && MariInfo[p][Estado] == 0 && p != 0) return p;
	}
	return -1;
}*/

static PortonLibre()
{
	for(new p = 0; p < MAX_PORTONES; p++)
	{
	    if(PortonInfo[p][PortonModelo] == 0 && p != 0) return p;
	}
	return -1;
}
/*
static CuantoPlanto(playerid)
{
	new count;
	foreach(new i : Plantas)
	{
	    if(strcmp(MariInfo[i][Plantador], NombreJugador(playerid), true) == 0) count ++;
	}
	return count;
}*/

static CuantoEstacio(playerid)
{
	new count;
	for(new i = 1; i < MAX_ESTACIONA; i++)
	{
	    if(strcmp(InfoEst[i][estDuenoN], NombreJugador(playerid), true) == 0) count ++;
	}
	return count;
}

GetOyentesEmisora(emisora)
{
	new count;
	foreach(new vehicleid: Vehicle)
	{
		if(EmisoraEscuchando[vehicleid] == emisora) count ++;
	}
	foreach(new i : Player)
    {
        if(MP3Escuchando[i] == emisora) count ++;
		if(ParlanteEscuchando[i] == emisora) count ++;
    }
	return count;
}

static SiRoperoTiene(c,objeto)
{
    if(objeto == 1 && PropInfo[c][pManopla] > 0) return 1;
	else if(objeto == 2 && PropInfo[c][pPaloDeGolf] > 0) return 1;
	else if(objeto == 4 && PropInfo[c][pCuchillo] > 0) return 1;
	else if(objeto == 5 && PropInfo[c][pBateDeBeisbol] > 0) return 1;
	else if(objeto == 6 && PropInfo[c][pPala] > 0) return 1;
	else if(objeto == 7 && PropInfo[c][pPaloDeBillar] > 0) return 1;
	else if(objeto == 8 && PropInfo[c][pKatana] > 0) return 1;
	else if(objeto == 10 && PropInfo[c][pConsoladorRosa] > 0) return 1;
	else if(objeto == 11 && PropInfo[c][pVibradorBlanco] > 0) return 1;
	else if(objeto == 12 && PropInfo[c][pGranVibradorBlanco] > 0) return 1;
	else if(objeto == 13 && PropInfo[c][pVibradorPlateado] > 0) return 1;
	else if(objeto == 14 && PropInfo[c][pFlores] > 0) return 1;
	else if(objeto == 15 && PropInfo[c][pBaston] > 0) return 1;
	else if(objeto == 16 && PropInfo[c][pGranada] > 0) return 1;
	else if(objeto == 22 && PropInfo[c][p9mm] > 0) return 1;
	else if(objeto == 23 && PropInfo[c][p9mmSilenciada] > 0) return 1;
	else if(objeto == 24 && PropInfo[c][pDesertEagle] > 0) return 1;
	else if(objeto == 25 && PropInfo[c][pEscopetaNormal] > 0) return 1;
	else if(objeto == 27 && PropInfo[c][pEscopetaDeCombate] > 0) return 1;
	else if(objeto == 29 && PropInfo[c][pMP5] > 0) return 1;
	else if(objeto == 31 && PropInfo[c][pM4] > 0) return 1;
	else if(objeto == 30 && PropInfo[c][pAK47] > 0) return 1;
	else if(objeto == 33 && PropInfo[c][pRifle] > 0) return 1;
	else if(objeto == 34 && PropInfo[c][Sniper] > 0) return 1;
	else if(objeto == 43 && PropInfo[c][pCamara] > 0) return 1;
	else if(objeto == 28 && PropInfo[c][pUzi] > 0) return 1;
	else if(objeto == 32 && PropInfo[c][pTec9] > 0) return 1;
	else if(objeto == 9 && PropInfo[c][pMotosierra] > 0) return 1;
	else if(objeto == 34 && PropInfo[c][pSniper] > 0) return 1;
	else if(objeto == 35 && PropInfo[c][pLanzacohetes] > 0) return 1;
	else if(objeto == 36 && PropInfo[c][pBazooka] > 0) return 1;
	else if(objeto == 37 && PropInfo[c][pLanzallamas] > 0) return 1;
	else if(objeto == 38 && PropInfo[c][pMinigun] > 0) return 1;
	else if(objeto == 46 && PropInfo[c][pParacaidas] > 0) return 1;
	return 0;
}

static EspacioRopero(c)
{
	new total =
	PropInfo[c][pAK47] +
	PropInfo[c][pM4] +
	PropInfo[c][pEscopetaNormal] +
	PropInfo[c][pEscopetaDeCombate] +
	PropInfo[c][pMP5] +
	PropInfo[c][p9mm] +
	PropInfo[c][p9mmSilenciada] +
	PropInfo[c][pDesertEagle] +
	PropInfo[c][pRifle] +
	PropInfo[c][Sniper] +
	PropInfo[c][pGranada] +
	PropInfo[c][pManopla] +
	PropInfo[c][pCuchillo] +
	PropInfo[c][pKatana] +
	PropInfo[c][pPala] +
	PropInfo[c][pCamara] +
	PropInfo[c][pBateDeBeisbol] +
	PropInfo[c][pPaloDeGolf] +
	PropInfo[c][pPaloDeBillar] +
	PropInfo[c][pConsoladorRosa] +
	PropInfo[c][pVibradorBlanco] +
	PropInfo[c][pGranVibradorBlanco] +
	PropInfo[c][pUzi] +
	PropInfo[c][pTec9] +
	PropInfo[c][pMotosierra] +
	PropInfo[c][pSniper] +
	PropInfo[c][pLanzacohetes] +
	PropInfo[c][pBazooka] +
	PropInfo[c][pLanzallamas] +
	PropInfo[c][pMinigun] +
	PropInfo[c][pParacaidas] +
	PropInfo[c][pVibradorPlateado] +
	PropInfo[c][pBaston] +
	PropInfo[c][pFlores];
	return total;
}


static DestroyDynamicActorEx(&objeto)
{
	if(objeto != INVALID_STREAMER_ID && IsValidDynamicActor(objeto)) DestroyDynamicActor(objeto);
	objeto = INVALID_STREAMER_ID;
	return INVALID_STREAMER_ID;
}

static DestroyDynamicPickupEx(&objeto)
{
	if(objeto != INVALID_STREAMER_ID && IsValidDynamicPickup(objeto)) DestroyDynamicPickup(objeto);
	objeto = INVALID_STREAMER_ID;
	return INVALID_STREAMER_ID;
}


static DestroyDynamic3DTextLabelEx(&Text3D:objeto)
{
	if(_:objeto != INVALID_STREAMER_ID && IsValidDynamic3DTextLabel(objeto)) DestroyDynamic3DTextLabel(objeto);
	objeto = Text3D:INVALID_STREAMER_ID;
	return INVALID_STREAMER_ID;
}


BorrarLabelCasa(p)
{

	DestroyDynamicPickupEx(PropInfo[p][pPickup]);
	DestroyDynamic3DTextLabelEx(PropInfo[p][pLabel]);
	DestroyDynamic3DTextLabelEx(PropInfo[p][pLabel2]);
	DestroyDynamic3DTextLabelEx(PropInfo[p][pLabel3]);
	DestroyDynamic3DTextLabelEx(PropInfo[p][pLabel4]);
	DestroyDynamic3DTextLabelEx(PropInfo[p][pLabel5]);
}

static SacarObjeto(playerid,objeto)
{
	if(objeto >= 1000 && objeto <= 10004)
	{
		Objeto[playerid] = 0;
		RemovePlayerAttachedObject(playerid,2);
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	}
}

static DarVino(playerid)
{
	PlayerTemp[playerid][TieneVino] = 100;
	SetPlayerAttachedObject(playerid, 4, 1486, 6, 0.062000, 0.017999, 0.049999, 0.299998, -3.000000, -35.800006, 1.000000, 1.000000, 1.000000);
}

static DarCerveza(playerid)
{
	PlayerTemp[playerid][TieneCerveza] = 100;
	SetPlayerAttachedObject(playerid, 4, 1544, 6, 0.087999, 0.024000, -0.212000, 0.000000, -5.999997, -93.999977, 1.000000, 1.000000, 0.819000);
}

static DarSprunk(playerid)
{
    PlayerTemp[playerid][TieneSprunk] = 100;
	SetPlayerAttachedObject(playerid, 4, 1546, 6, 0.034999, 0.022999, -0.003000, 0.000000, -8.099999, 0.000000, 0.879999, 0.880999, 0.736999);
}

static DarAquarius(playerid)
{
    PlayerTemp[playerid][TieneAquari] = 100;
    SetPlayerAttachedObject(playerid, 4, 19570, 6, 0.069999, 0.027000, -0.156000, 0.000000, 0.000000, 0.000000, 0.436999, 0.570999, 0.883999);
}

static DarPizza(playerid)
{
    PlayerTemp[playerid][TienePizza] = 100;
    SetPlayerAttachedObject(playerid, 4, 2702, 6, 0.107999, 0.034000, 0.000000, -14.500009, -7.500002, -80.099967, 0.957000, 0.880999, 0.856000);
}

EnAcademia(playerid)
{
 	if(GetPlayerInterior(playerid) == 55 && GetPlayerInterior(playerid) == 55) return 1;
	return false;
}

EnSalonEvento(playerid)
{
	if(IsPlayerInArea(playerid, -1244.693847, 2027.578979, -1139.976074, 2129.051025) && GetPlayerInterior(playerid) == 13) return 1;
	return false;
}

EnSalonEvento2(playerid)
{
    if(EstaEn(playerid,500,-1191.9619,2035.5724,1248.3600)) return true;
    return false;
}

static ObtenerVehiculo(playerid, const placa[])
{
	new count;
    foreach(new i : Player)
	{
		if(!IsPlayerNPC(i))
		{
			for(new a = 0; a < MAX_PAUTOS; a++)
			{
				if(strcmp(placa, Patente[i][a], true) == 0)
				{
					AutoBuscado[playerid] = autos[a][i];
					format(PatenteBuscada[playerid], 10, placa);
					JugadorBuscado[playerid] = i;
					count = 1;
					break;
				}
			}
		}
	}
	if(count == 0) Mensaje(playerid, -1, "La patente solicitada no se encuentra en la base de datos de la polic�a de San Andreas.");
	return 1;
}

static AbrirRegalo2(playerid)
{
	new gift = random(3);
	switch(gift)
	{
    	case 0: DarDinero(playerid, 100000),Mensaje(playerid, -1, "Recibes "CR"$100.000"CB".");
    	case 1:
	    {
	        if(PlayerInfo[playerid][pPatines] == 1) return AbrirRegalo2(playerid);
			DarDinero(playerid, 100000);
		    PlayerInfo[playerid][pPatines] = 1;
			Mensaje(playerid, -1, "Recibes "CR"$100.000"CB" y unos "CR"patines"CB".");
	    }
	    case 2:
	    {
        	if(PlayerInfo[playerid][pLicencia] == 1) return AbrirRegalo2(playerid);
			DarDinero(playerid, 100000);
			PlayerInfo[playerid][pLicencia] = 1;
   	    	Mensaje(playerid, -1, "Recibes "CR"$100.000"CB" y una "CR"licencia de aviaci�n"CB".");
	    }
	    default: AbrirRegalo2(playerid);
	}
	return 1;
}

static AbrirRegalo(playerid)
{
	new gift = random(5);
	switch(gift)
	{
	    case 0:
	    {
			DarDinero(playerid, 300000);
		    PlayerInfo[playerid][pPatines] = 1;
		    PlayerInfo[playerid][pLicencia] = 1;
		    PlayerInfo[playerid][Moneda] += 10;
			Mensaje(playerid, -1, "Recibes "CR"$300.000"CB", {89746A}10 "Moneda1""CB", "CR"unos patines"CB" y una "CR"licencia de aviaci�n"CB".");
	    }
	    case 1:
	    {
			PlayerInfo[playerid][Credits] += 5;
			DarDinero(playerid, 300000);
			Mensaje(playerid, -1, "Recibes "CR"$300.000"CB" y {89746A}5 "Moneda3""CB".");
	    }
	    case 2: PlayerInfo[playerid][pMateriales] += 10000,Mensaje(playerid, -1, "Recibes "CR"10.000 piezas de armas"CB".");
	    case 3:
		{
		    PlayerInfo[playerid][pCrack] += 3000;
			PlayerInfo[playerid][pMarihuana] += 3000;
			PlayerInfo[playerid][pMedicamentos] += 3000;
			Mensaje(playerid, -1, "Recibes "CR"3.000g de crack"CB", "CR"3.000g de marihuana"CB" y "CR"3.000 medicamentos"CB".");
		}
		case 4: PlayerInfo[playerid][Credits] += 100,Mensaje(playerid, -1, "Recibes "CR"100 "Moneda3""CB".");
	    default: AbrirRegalo(playerid);
	}
	return 1;
}

static NombreTrabajo(trabajo)
{
	new job[20];
    if (trabajo == 0)  				format(job, sizeof(job), "Ninguno");
    if (trabajo == MEDICO)  		format(job, sizeof(job), "M�dico");
    if (trabajo == ARMERO)  		format(job, sizeof(job), "Armero");
    if (trabajo == CAMIONERO)  		format(job, sizeof(job), "Camionero");
    if (trabajo == GUARDAESPALDAS)  format(job, sizeof(job), "Guardaespaldas");
    if (trabajo == TRANSPORTISTA)  	format(job, sizeof(job), "Transportista");
    if (trabajo == BASURERO)  		format(job, sizeof(job), "Basurero");
    if (trabajo == TAXISTA)  		format(job, sizeof(job), "Taxista");
    if (trabajo == MECANICO)  		format(job, sizeof(job), "Mec�nico");
    if (trabajo == PESCADOR) 		format(job, sizeof(job), "Pescador");
    if (trabajo == MINERO) 			format(job, sizeof(job), "Minero");
    if (trabajo == CRIMINAL) 	    format(job, sizeof(job), "Criminal");
    if (trabajo == PROSTITUTA) 	    format(job, sizeof(job), "Prostituci�n");
    return job;
}

IsVehicleSeatInUse(vehicleid, asiento)
{
	foreach(new i : Player)
	{
		if(GetPlayerVehicleID(i) == vehicleid && GetPlayerVehicleSeat(i) == asiento) return 1;
	}
	return 0;
}

static randomEx(min, max)
{
    new rand = random(max-min)+min;
    return rand;
}

CargarEstaciona(id)
{
    if(InfoEst[id][estEnUso] > 0)
	{
		new string[350];
		InfoEst[id][EstPickup] = CreateDynamicPickup(1318, 1, InfoEst[id][estX],InfoEst[id][estY],InfoEst[id][estZ], 0);
		format(string, sizeof(string), ""CR"Estacionamiento\n"CB"ID: %d | Propietario: {03C5DF}%s\n"CB"Con nivel %d puedes "CR"/comprar estacionamiento\n"CB"Precio: "CR"$%s\n\n"CB"Pulsa "CR"'Y'"CB" para entrar a pie y "CR"'H'"CB" para entrar en un veh�culo.\nEl costo es de "CR"$150"CB"/d�a.", id, InfoEst[id][estDuenoN], InfoEst[id][estNivel], ConvertirNumero(InfoEst[id][estValor]));
		InfoEst[id][EstLabel] = CreateDynamic3DTextLabel(string, 0xFFFFFFAA, InfoEst[id][estX],InfoEst[id][estY],InfoEst[id][estZ]+0.9, 15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0,-1,100.0);
	}
    return true;
}

CrearPuerta(id)
{
	new string[250];
	if(DoorData[id][dType] == 1) { format(string, sizeof(string), ""CR"(%d)"CB" - {37db45}%s\n{02b79f}Franquicia %d\n"CB"Propietario: "CR"%s\n\n"CB"Pulsa "CR"'Y'"CB" o usa "CR"/entrar"CB" para ingresar.",id,DoorData[id][dNombre], DoorData[id][dID], DoorData[id][dPropietario]); }
	else if(DoorData[id][dType] == 2) { format(string, sizeof(string), ""CR"(%d)"CB" - {37db45}%s\n "CB"Propietario: "CR"Gobierno\n\n"CB"Pulsa "CR"'Y'"CB" o usa "CR"/entrar"CB" para ingresar.",id,DoorData[id][dNombre]); }
	else if(DoorData[id][dType] == 3) { format(string, sizeof(string), ""CR"(%d)"CB" - {37db45}%s"CB"\n\nPulsa "CR"'Y'"CB" o usa "CR"/entrar"CB" para ingresar.",id,DoorData[id][dNombre]); }
	else if(DoorData[id][dType] == 4) { format(string, sizeof(string), ""CR"(%d)"CB" - {37db45}%s"CB"\n\nPulsa '"CR"Y"CB"' para ingresar.",id,DoorData[id][dNombre]); }
	CreateDynamic3DTextLabel(string, COLOR_BLANCO ,DoorData[id][dX], DoorData[id][dY], DoorData[id][dZ]+0.75, 23, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0);
	DoorData[id][dPickup1] = CreateDynamicPickup(DoorData[id][dPickup], 1, DoorData[id][dX], DoorData[id][dY], DoorData[id][dZ], 0, 0, -1, 70.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para salir.",COLOR_BLANCO,DoorData[id][dsX], DoorData[id][dsY], DoorData[id][dsZ]+1.00,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
    return true;
}

BorrarLabelEstaciona(p)
{
	DestroyDynamicPickupEx(InfoEst[p][EstPickup]);
	DestroyDynamic3DTextLabelEx(InfoEst[p][EstLabel]);
}

static GuardarEstaciona(id)
{
    new query[250];
	mysql_format(Conecction, query, sizeof(query), "UPDATE estacionamientos SET EstEnUso='%d', DuenoID='%d', DuenoN='%e', Valor='%d', Nivel='%d', X='%f', Y='%f', Z='%f', A='%f', VW='%d', Inte='%d', VIP='%d' WHERE ID=%d", InfoEst[id][estEnUso], InfoEst[id][estDuenoID], InfoEst[id][estDuenoN], InfoEst[id][estValor], InfoEst[id][estNivel], InfoEst[id][estX], InfoEst[id][estY], InfoEst[id][estZ], InfoEst[id][estA], InfoEst[id][estVirW], InfoEst[id][estInt], InfoEst[id][estVIP], InfoEst[id][estID]);
	mysql_tquery(Conecction, query);
	return 1;
}

GetMedicos()
{
	new count;
	foreach(new i : Player)
	{
		if(RopaMedi[i] > 0) count ++;
	}
	return count;
}

GetTerritorios(banda)
{
	new count;
	foreach(new i : Territorios)
	{
		if(Tdata[i][tValid] == 1)
		{
			if(Tdata[i][tBanda] == banda) count ++;
		}
	}
	return count;
}

GetVehicleFreeObjectSlot(playerid,slot)
{
	new maximo = 10;
	if(PlayerInfo[playerid][VIP] == 3)
	{
		maximo = MAX_TOBJETOS;
	}
	for(new i = 0; i != maximo; i ++)
	{
		if(!TuningObjetos[playerid][slot][i][vobject_VALID]) return i;
	}
	return -1;
}

static GetPlayerID(const playername[])
{
	foreach(new i : Player)
	{
		if(strcmp(NombreJugador(i),playername,true)==0) return i;
	}
	return -1;
}

static DatosFrecuencia(dato)
{
	new respuesta[13];
    if(dato == 0) format(respuesta, sizeof(respuesta), "Libre");
    if(dato == 1) format(respuesta, sizeof(respuesta), "1 Persona");
    if(dato > 1) format(respuesta, sizeof(respuesta), "%d Personas", dato);
    return respuesta;
}

static IsVehicleInArea(vehicleid, Float:minx, Float:maxx, Float:miny, Float:maxy)
{
    new Float:x, Float:y, Float:z;
    GetVehiclePos(vehicleid, x, y, z);
    if(x >= minx && x <= maxx && y >= miny && y <= maxy) return 1;
    return 0;
}

CargarActores()
{
	ActorP[0] = CreateDynamicActor(178,1219.7974,-6.6276,1001.3281,191.0230);
	ActorP[1] = CreateDynamicActor(87,1214.0870,-4.2850,1001.3281,52.4976);
	ActorP[2] = CreateDynamicActor(245,1202.8500,9.1434,1000.9219,141.9280);
	ActorP[3] = CreateDynamicActor(246,1220.9673,8.2033,1001.3356,118.1507);
	ActorP[4] = CreateDynamicActor(152,1208.4001,-6.2825,1001.3281,80.8317);
	ActorP[5] = CreateDynamicActor(244,1202.9122,-8.3771,1002.0255,279.8937);
	ActorP[6] = CreateDynamicActor(85,1214.8149,-15.2605,1000.9219,0.4746);
	ActorP[7] = CreateDynamicActor(90,1206.3390,-1.1021,1000.9219,126.6304);
	ActorP[8] = CreateDynamicActor(124,1205.8223,-13.6294,1000.9219,358.0385);
	ApplyDynamicActorAnimation(ActorP[8], "COP_AMBIENT","Coplook_loop", 4.1,1,0,0,1,0);
	ApplyDynamicActorAnimation(ActorP[7], "DANCING","dnce_M_b",4.1,7,5,1,1,1);
    for(new b = 0, bj = sizeof(ActorP); b < bj; b++)
    {
        SetDynamicActorVirtualWorld(ActorP[b], 5);
    }
	for(new i = 0; i < 13; i++)
 	{
		ClientesPizza[i] = randomEx(1,9);
		CrearCliente(ClientesPizza[i], i);
	}
}

CrearCliente(i, vw)
{
	if(i > 0) { new rand = randomEx(0,2);     ClienteActor[0][vw] = CreateDynamicActor(randomEx(1,290),ClientesPizzaPos[rand][0],ClientesPizzaPos[rand][1],ClientesPizzaPos[rand][2],ClientesPizzaPos[rand][3]); }
	if(i > 1) { new rand2 = randomEx(3,5);    ClienteActor[1][vw] = CreateDynamicActor(randomEx(1,290),ClientesPizzaPos[rand2][0],ClientesPizzaPos[rand2][1],ClientesPizzaPos[rand2][2],ClientesPizzaPos[rand2][3]); }
	if(i > 2) { new rand3 = randomEx(6,8);    ClienteActor[2][vw] = CreateDynamicActor(randomEx(1,290),ClientesPizzaPos[rand3][0],ClientesPizzaPos[rand3][1],ClientesPizzaPos[rand3][2],ClientesPizzaPos[rand3][3]); }
	if(i > 3) { new rand4 = randomEx(9,11);   ClienteActor[3][vw] = CreateDynamicActor(randomEx(1,290),ClientesPizzaPos[rand4][0],ClientesPizzaPos[rand4][1],ClientesPizzaPos[rand4][2],ClientesPizzaPos[rand4][3]); }
	if(i > 4) { new rand5 = randomEx(12,14);  ClienteActor[4][vw] = CreateDynamicActor(randomEx(1,290),ClientesPizzaPos[rand5][0],ClientesPizzaPos[rand5][1],ClientesPizzaPos[rand5][2],ClientesPizzaPos[rand5][3]); }
	if(i > 5) { new rand6 = randomEx(15,17);  ClienteActor[5][vw] = CreateDynamicActor(randomEx(1,290),ClientesPizzaPos[rand6][0],ClientesPizzaPos[rand6][1],ClientesPizzaPos[rand6][2],ClientesPizzaPos[rand6][3]); }
	if(i > 7) { new rand7 = randomEx(18,20);  ClienteActor[6][vw] = CreateDynamicActor(randomEx(1,290),ClientesPizzaPos[rand7][0],ClientesPizzaPos[rand7][1],ClientesPizzaPos[rand7][2],ClientesPizzaPos[rand7][3]); }
	if(i > 8) { new rand8 = randomEx(21,23);  ClienteActor[7][vw] = CreateDynamicActor(randomEx(1,290),ClientesPizzaPos[rand8][0],ClientesPizzaPos[rand8][1],ClientesPizzaPos[rand8][2],ClientesPizzaPos[rand8][3]); }
	if(i == 9) { new rand9 = randomEx(24,27); ClienteActor[8][vw] = CreateDynamicActor(randomEx(1,290),ClientesPizzaPos[rand9][0],ClientesPizzaPos[rand9][1],ClientesPizzaPos[rand9][2],ClientesPizzaPos[rand9][3]); }
	for(new a = 0; a < i; a++)
 	{
 		SetDynamicActorVirtualWorld(ClienteActor[a][vw], vw);
		ApplyDynamicActorAnimation(ClienteActor[a][vw], "ped", "SEAT_down", 4.000000, 0, 0, 0, 1, 0);
 	}
}

Funcion:DesactivarAlarma(vehicleid)
{
	if(alarmaon[vehicleid] == 1)
 	{
		GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(vehicleid, engine, false, false, doors, bonnet, boot, objective);
		Luces[vehicleid] = 0;
		KillTimer(TimerLuces[vehicleid]);
		KillTimer(TimerLuces2[vehicleid]);
		alarmaon[vehicleid] = 0;
	}
}

Funcion:TimerLucesIntermitentes(vehicleid)
{
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, engine, true, alarm, doors, bonnet, boot, objective);
	TimerLuces2[vehicleid] = SetTimerEx("TimerLucesIntermitentes2", 500, false, "d", vehicleid);
}

Funcion:Equilibrio(i) SetTimerEx("Equilibrio2",600,0,"d",i);

Funcion:Equilibrio2(i)
{
	if(gettimeVariable > TiempoCaida[i])
	{
	    AccionesRol(i,"pierde el equilibrio y se cae.", 20);
	    SetPlayerPosAC(i,PlayerTemp[i][CaidaTaxi][0],PlayerTemp[i][CaidaTaxi][1],PlayerTemp[i][CaidaTaxi][2]);
		ApplyAnimation(i,"PED","getup_front",2,0,1,1,0,0);
		TiempoCaida[i] = gettimeVariable + 15;
	}
}

Funcion:KickTimer(playerid) Kick(playerid);

Funcion:SexoOralT(playerid)
{
	new uwu = PlayerTemp[playerid][AnimSexo];
	switch(uwu)
	{
		case 0: ApplyAnimation(playerid, "BLOWJOBZ", "BJ_CAR_START_W", 4.0, 0, 0, 0, 1, 0, 1);
		case 1..3: ApplyAnimation(playerid, "BLOWJOBZ", "BJ_CAR_LOOP_W", 4.0, 1, 0, 0, 1, 0, 0);
		case 4:
		{
			ApplyAnimation(playerid, "BLOWJOBZ", "BJ_CAR_END_W", 4.0, 0, 0, 0, 1, 0, 1);
			PlayerTemp[playerid][AnimSexo] = 0;
		    return 1;
	    }
		case 6: return PlayerTemp[playerid][AnimSexo] = 0;
	}
	PlayerTemp[playerid][AnimSexo]++;
	SetTimerEx("SexoOralT",2000,false,"d",playerid);
	return 1;
}

Funcion:SexoOralA(playerid) ApplyAnimation(playerid, "BLOWJOBZ", "BJ_CAR_END_P", 4.0, 0, 0, 0, 1, 0, 1);

Funcion:TimerLucesIntermitentes2(vehicleid)
{
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, engine, false, alarm, doors, bonnet, boot, objective);
	TimerLuces[vehicleid] = SetTimerEx("TimerLucesIntermitentes", 500, false, "d", vehicleid);
}

static PlaySoundForPlayersInRange(soundid, Float:range, Float:x, Float:y, Float:z)
{
	foreach(new i : Player)
	{
	    if(EstaEn(i,range,x,y,z)) PlayerPlaySound(i, soundid, x, y, z);
	}
}

static GetClosestCar(playerid, exception = INVALID_VEHICLE_ID)
{
	new Float:Distance,target = -1;
	foreach(new v : StreamedVehicle[playerid])
	{
	    if(v != exception && (target < 0 || Distance > GetDistancePlayerVeh(playerid, v)))
		{
	        target = v;
	        Distance = GetDistancePlayerVeh(playerid, v);
	    }
	}
	return target;
}

static GetDistancePlayerVeh(playerid, veh)
{
	new Float:Floats[7];
	GetPlayerPos(playerid, Floats[0], Floats[1], Floats[2]);
	GetVehiclePos(veh, Floats[3], Floats[4], Floats[5]);
	Floats[6] = floatsqroot((Floats[3]-Floats[0])*(Floats[3]-Floats[0])+(Floats[4]-Floats[1])*(Floats[4]-Floats[1])+(Floats[5]-Floats[2])*(Floats[5]-Floats[2]));
	return floatround(Floats[6]);
}



static IsPlayerInRangeOfVehicle(playerid, vehicleid, Float: radius)
{
	new Float:Floats[3];
	GetVehiclePos(vehicleid, Floats[0], Floats[1], Floats[2]);
	return EstaEn(playerid, radius, Floats[0], Floats[1], Floats[2]);
}

static GetPlayerVehicle(playerid, vehicleid)
{
	if(!IsPlayerConnected(playerid)) return -1;
	if(!GetVehicleModel(vehicleid)) return -1;
	for(new i = 0; i < MAX_PAUTOS; i++)
	{
		if(VehicleInfo[playerid][i][vModelo] == 0) continue;
		if(autos[i][playerid] == vehicleid) return i;
	}
	return -1;
}

static PuedeHoras(playerid)
{
	if(PlayerInfo[playerid][horasjugadas] < 10)
	{
		va_SendClientMessage(playerid,-1,"No tienes las horas de juego necesarias para realizar esto. (%d/10)",PlayerInfo[playerid][horasjugadas]);
		return false;
	}
	return true;
}

Funcion:RegresarPos(playerid, codigo)
{
	SetPosEx(playerid, TeleportDest[playerid][0], TeleportDest[playerid][1], TeleportDest[playerid][2], TeleportDest[playerid][3], TeleportDesti[playerid][0], TeleportDesti[playerid][1]);
	if(codigo == 1) TextDrawHideForPlayer(playerid, EsperarT[0]);
	return 1;
}

static Desbug(const string[])
{
	new szFixed[1024],iPos,iLen;
	for(iLen = strlen(string); iPos < iLen; iPos ++)
	switch (string[iPos])
	{
		case '�':   szFixed[iPos] = 151;
		case '�':   szFixed[iPos] = 152;
		case '�':   szFixed[iPos] = 153;
		case '�':   szFixed[iPos] = 154;
		case '�':   szFixed[iPos] = 128;
		case '�':   szFixed[iPos] = 129;
		case '�':   szFixed[iPos] = 130;
		case '�':   szFixed[iPos] = 131;
		case '�':   szFixed[iPos] = 157;
		case '�':   szFixed[iPos] = 158;
		case '�':   szFixed[iPos] = 159;
		case '�':   szFixed[iPos] = 160;
		case '�':   szFixed[iPos] = 134;
		case '�':   szFixed[iPos] = 135;
		case '�':   szFixed[iPos] = 136;
		case '�':   szFixed[iPos] = 137;
		case '�':   szFixed[iPos] = 161;
		case '�':   szFixed[iPos] = 162;
		case '�':   szFixed[iPos] = 163;
		case '�':   szFixed[iPos] = 164;
		case '�':   szFixed[iPos] = 138;
		case '�':   szFixed[iPos] = 139;
		case '�':   szFixed[iPos] = 140;
		case '�':   szFixed[iPos] = 141;
		case '�':   szFixed[iPos] = 165;
		case '�':   szFixed[iPos] = 166;
		case '�':   szFixed[iPos] = 167;
		case '�':   szFixed[iPos] = 168;
		case '�':   szFixed[iPos] = 142;
		case '�':   szFixed[iPos] = 143;
		case '�':   szFixed[iPos] = 144;
		case '�':   szFixed[iPos] = 145;
		case '�':   szFixed[iPos] = 169;
		case '�':   szFixed[iPos] = 170;
		case '�':   szFixed[iPos] = 171;
		case '�':   szFixed[iPos] = 172;
		case '�':   szFixed[iPos] = 146;
		case '�':   szFixed[iPos] = 147;
		case '�':   szFixed[iPos] = 148;
		case '�':   szFixed[iPos] = 149;
		case '�':   szFixed[iPos] = 174;
		case '�':   szFixed[iPos] = 173;
		case '�':   szFixed[iPos] = 64;
		case '�':   szFixed[iPos] = 175;
		case '`':   szFixed[iPos] = 177;
		case '&':   szFixed[iPos] = 38;
		default:    szFixed[iPos] = string[iPos];
	}
	return szFixed;
}





static Armados(playerid)
{
	if(PlayerInfo[playerid][pWP0] > 0) return 1;
	else if(PlayerInfo[playerid][pWP2] > 0) return 1;
	else if(PlayerInfo[playerid][pWP3] > 0) return 1;
	else if(PlayerInfo[playerid][pWP4] > 0) return 1;
	else if(PlayerInfo[playerid][pWP5] > 0) return 1;
	else if(PlayerInfo[playerid][pWP6] > 0) return 1;
	else if(PlayerInfo[playerid][pWP7] > 0) return 1;
	else if(PlayerInfo[playerid][pWP8] > 0) return 1;
	else if(PlayerInfo[playerid][pWP12] > 0) return 1;
	return 0;
}

static AccionesRol(playerid, const params[], rango)
{
	new string[160];
	format(string, sizeof(string), "%s %s", NombreJugador(playerid), params);
	ProxDetector(rango, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
	return 1;
}

static MostrarLogro(playerid,const titulo[],const textoarriba[],const puntos[])
{
    PlayerTextDrawSetString(playerid,LogroNumero[playerid],puntos);
	PlayerTextDrawSetString(playerid,LogroTitulo[playerid],titulo);
	PlayerTextDrawSetString(playerid,LogroTexto1[playerid],textoarriba);
    PlayerTextDrawShow(playerid,LogroTexto1[playerid]);
	PlayerTextDrawShow(playerid,LogroTitulo[playerid]);
	PlayerTextDrawShow(playerid,LogroLinea[playerid]);
    PlayerTextDrawShow(playerid,LogroRueda[playerid]);
    PlayerTextDrawShow(playerid,LogroNumero[playerid]);
    return 1;
}

CalcularBolsos(f)
{
	new cantidad_x = Fabricas[f][pCantidadDinero];
    Fabricas[f][pCantidadBolsas] = cantidad_x / 1000000;
	return 1;
}

ResetRecortada(id)
{
    for(new ch = 0; ch < Fabricas[id][pRecortada]; ch++) { 

		DestroyDynamicObjectEx(Fabricas[id][EscoObjetos][ch]); 

		Fabricas[id][EscoObjetos][ch] = CreateDynamicObject(350, EscopetasRecortadas[ch][0], EscopetasRecortadas[ch][1], EscopetasRecortadas[ch][2],   0.00000, 0.00000, 0.00000, Fabricas[id][pVW],Fabricas[id][pInt]);
		
	}
	return 1;
}

ResetUzi(id)
{
    for(new cb = 0; cb < Fabricas[id][pUzi]; cb++) { 

		DestroyDynamicObjectEx(Fabricas[id][UziObjetos][cb]); 
		Fabricas[id][UziObjetos][cb] = CreateDynamicObject(352, PUzis[cb][0], PUzis[cb][1], PUzis[cb][2],   0.00000, 0.00000, 0.00000, Fabricas[id][pVW],Fabricas[id][pInt]);
	}
	return 1;
}

ResetTec(id)
{
    for(new cb = 0; cb < Fabricas[id][pTec9]; cb++) {

		DestroyDynamicObjectEx(Fabricas[id][Tec9Objetos][cb]); 
		Fabricas[id][Tec9Objetos][cb] = CreateDynamicObject(372, PTec[cb][0], PTec[cb][1], PTec[cb][2],   0.00000, 0.00000, 0.00000, Fabricas[id][pVW],Fabricas[id][pInt]);
		
	}
	return 1;
}

ResetSnipers(id)
{
    for(new cb = 0; cb < Fabricas[id][pSniper]; cb++) { 
		DestroyDynamicObjectEx(Fabricas[id][SniperObjetos][cb]);
		Fabricas[id][SniperObjetos][cb] = CreateDynamicObject(358, PSnipers[cb][0], PSnipers[cb][1], PSnipers[cb][2],   0.00000, 0.00000, 0.00000, Fabricas[id][pVW],Fabricas[id][pInt]);
	}
	return 1;
}

UpdateAllBagsMoney(id)
{
    CalcularBolsos(id);
    for(new cb = 0; cb < Fabricas[id][pCantidadBolsas]; cb++) { 
		DestroyDynamicObjectEx(Fabricas[id][Bolso][cb]); 
		Fabricas[id][Bolso][cb] = CreateDynamicObject(1550, BolsoSpawn[cb][0], BolsoSpawn[cb][1], BolsoSpawn[cb][2], BolsoSpawn[cb][3], BolsoSpawn[cb][4], BolsoSpawn[cb][5], Fabricas[id][pVW],Fabricas[id][pInt]);
	}
	return 1;
}

ResetearArmas(id)
{
    for(new ch = 0; ch < Fabricas[id][pChalecos]; ch++) 			{ DestroyDynamicObjectEx(Fabricas[id][Chalecos][ch]); }
	for(new ch1 = 0; ch1 < Fabricas[id][pCantidadBolsas]; ch1++) 	{ DestroyDynamicObjectEx(Fabricas[id][Bolso][ch1]); }
	for(new ch2 = 0; ch2 < Fabricas[id][pSniper]; ch2++) 			{ DestroyDynamicObjectEx(Fabricas[id][SniperObjetos][ch2]); }
	for(new ch3 = 0; ch3 < Fabricas[id][pTec9]; ch3++) 				{ DestroyDynamicObjectEx(Fabricas[id][Tec9Objetos][ch3]); }
	for(new ch4 = 0; ch4 < Fabricas[id][pUzi]; ch4++) 				{ DestroyDynamicObjectEx(Fabricas[id][UziObjetos][ch4]); }
	for(new ch5 = 0; ch5 < Fabricas[id][pRecortada]; ch5++) 		{ DestroyDynamicObjectEx(Fabricas[id][EscoObjetos][ch5]); }
	return 1;
}

ActualizarCantidadTChale(f)
{
    for(new ch = 0; ch < Fabricas[f][pChalecos]; ch++) { DestroyDynamicObjectEx(Fabricas[f][Chalecos][ch]); Fabricas[f][Chalecos][ch] = CreateDynamicObject(373, ChalecoSpawn[ch][0], ChalecoSpawn[ch][1], ChalecoSpawn[ch][2],   ChalecoSpawn[ch][3], ChalecoSpawn[ch][4], ChalecoSpawn[ch][5], Fabricas[f][pVW],Fabricas[f][pInt]); }
	return 1;
}

ActualizarCantidadFChale(f,cantidad=1 ,x = 1)
{
	if(x == 1)
	{
		new cantidad_x = Fabricas[f][pChalecos]-1;
	    DestroyDynamicObjectEx(Fabricas[f][Chalecos][cantidad_x]);
	    Fabricas[f][pChalecos] --;
		return 1;
	}
	else
	{
		x = cantidad;
    	new cantidad_x = Fabricas[f][pChalecos];
       	Fabricas[f][Chalecos][cantidad_x] = CreateDynamicObject(373, ChalecoSpawn[cantidad_x][0], ChalecoSpawn[cantidad_x][1], ChalecoSpawn[cantidad_x][2],   ChalecoSpawn[cantidad_x][3], ChalecoSpawn[cantidad_x][4], ChalecoSpawn[cantidad_x][5], Fabricas[f][pVW],Fabricas[f][pInt]);
	}
	return 1;
}

ActualizarUzi(f, d)
{
	if(d == 1)
	{
		new cantidad_x = Fabricas[f][pUzi]-1;
		Fabricas[f][UziObjetos][cantidad_x] = CreateDynamicObject(352, PUzis[cantidad_x][0], PUzis[cantidad_x][1], PUzis[cantidad_x][2],   PUzis[cantidad_x][3], PUzis[cantidad_x][4], PUzis[cantidad_x][5], Fabricas[f][pVW],Fabricas[f][pInt]);
	}
	else if(d == 2)
	{
		if(Fabricas[f][pUzi] > 0)
		{
			new cantidad_x = Fabricas[f][pUzi];
			DestroyDynamicObjectEx(Fabricas[f][UziObjetos][cantidad_x]);
		}
	}
	return 1;
}

ActualizarSnipers(f, d)
{
	if(d == 1)
	{
		new cantidad_x = Fabricas[f][pSniper]-1;
		Fabricas[f][SniperObjetos][cantidad_x] = CreateDynamicObject(358, PSnipers[cantidad_x][0], PSnipers[cantidad_x][1], PSnipers[cantidad_x][2],   PSnipers[cantidad_x][3], PSnipers[cantidad_x][4], PSnipers[cantidad_x][5], Fabricas[f][pVW],Fabricas[f][pInt]);
	}
	else if(d == 2)
	{
		if(Fabricas[f][pSniper] > 0)
		{
			new cantidad_x = Fabricas[f][pSniper];
			DestroyDynamicObjectEx(Fabricas[f][SniperObjetos][cantidad_x]);
		}
	}
	return 1;
}

ActualizarTec(f, d)
{
	if(d == 1)
	{
		new cantidad_x = Fabricas[f][pTec9]-1;
		Fabricas[f][Tec9Objetos][cantidad_x] = CreateDynamicObject(372, PTec[cantidad_x][0], PTec[cantidad_x][1], PTec[cantidad_x][2],   PTec[cantidad_x][3], PTec[cantidad_x][4], PTec[cantidad_x][5], Fabricas[f][pVW],Fabricas[f][pInt]);
	}
	else if(d == 2)
	{
		if(Fabricas[f][pTec9] > 0)
		{
			new cantidad_x = Fabricas[f][pTec9];
			DestroyDynamicObjectEx(Fabricas[f][Tec9Objetos][cantidad_x]);
		}
	}
	return 1;
}

ActualizarRecortadas(f, d)
{
	if(d == 1)
	{
        new cantidad_x = Fabricas[f][pRecortada]-1;
        Fabricas[f][EscoObjetos][cantidad_x] = CreateDynamicObject(350, EscopetasRecortadas[cantidad_x][0], EscopetasRecortadas[cantidad_x][1], EscopetasRecortadas[cantidad_x][2],   EscopetasRecortadas[cantidad_x][3], EscopetasRecortadas[cantidad_x][4], EscopetasRecortadas[cantidad_x][5], Fabricas[f][pVW],Fabricas[f][pInt]);
	}
	else if(d == 2)
	{
	    if(Fabricas[f][pRecortada] > 0)
	    {
	        new cantidad_x = Fabricas[f][pRecortada];
         	DestroyDynamicObjectEx(Fabricas[f][EscoObjetos][cantidad_x]);
	    }
	}
	return 1;
}

ActualizarBolsos(f, d)
{
	if(d == 1)
	{
        new cantidad_x = Fabricas[f][pCantidadBolsas];
        Fabricas[f][Bolso][cantidad_x] = CreateDynamicObject(1550, BolsoSpawn[cantidad_x][0], BolsoSpawn[cantidad_x][1], BolsoSpawn[cantidad_x][2], BolsoSpawn[cantidad_x][3], BolsoSpawn[cantidad_x][4], BolsoSpawn[cantidad_x][5], Fabricas[f][pVW],Fabricas[f][pInt]);
        Fabricas[f][pCantidadBolsas] ++;
		return 1;
	}
	else if(d == 2)
	{
	    if(Fabricas[f][pCantidadBolsas] > 0)
	    {
	        new cantidad_x = Fabricas[f][pCantidadBolsas]-1;
         	DestroyDynamicObjectEx(Fabricas[f][Bolso][cantidad_x]);
	        Fabricas[f][pCantidadBolsas] --;
	    }
    	return 1;
	}
	return 1;
}

static ActualizarLabelMoledores(id,type)
{
	new string[256];
	format(string,sizeof(string),"{000cff}Mesa de producci�n\n"CB"Cristal molido: "CR"%d%%"CB"\nEstado:%s",Fabricas[id][PorcentajeCocinero][type], EstadoCuoco(Fabricas[id][StatoCuoco][type]));
	UpdateDynamic3DTextLabelText(Fabricas[id][Cocinero][type], COLOR_BLANCO, string);
    return 1;
}


Funcion:BorrarStatsFabrica(f)
{
	printf("Resetear f�brica: %d", f);
	Fabricas[f][pCantidadDinero] = 4000000;
	ActualizarDineroPared(f);
	UpdateAllBagsMoney(f);
	Fabricas[f][pRecortada] = 0;
	Fabricas[f][pUzi] = 0;
	Fabricas[f][pSniper] = 0;
	Fabricas[f][pTec9] = 0;
	Fabricas[f][TiempoSoborno] = gettimeVariable + 604800;
	Fabricas[f][pBanda] = 0;
	Fabricas[f][pEnUso] = 0;
	Fabricas[f][pChalecos] = 0;
	DestroyDynamicPickupEx(Fabricas[f][pPickup]);
	DestroyDynamic3DTextLabelEx(Fabricas[f][pLabel]);
	DestroyDynamic3DTextLabelEx(Fabricas[f][pLabel]);
	DestroyDynamic3DTextLabelEx(Fabricas[f][pLabel2]);
	DestroyDynamic3DTextLabelEx(Fabricas[f][pLabel3]);
	DestroyDynamic3DTextLabelEx(Fabricas[f][pLabel4]);
	DestroyDynamic3DTextLabelEx(Fabricas[f][pLabel5]);
	DestroyDynamicObjectEx(Fabricas[f][pPuerta]);
	Fabricas[f][bolsospagados] = 0;
	DestroyVehicle(Fabricas[f][Auto1F]);
	DestroyVehicle(Fabricas[f][Auto2F]);
	Fabricas[f][Auto1F] = INVALID_VEHICLE_ID;
	Fabricas[f][Auto2F] = INVALID_VEHICLE_ID;
	for(new c = 0; c < 10; c++) Fabricas[f][Almacen][c] = 0;
	for(new c = 0; c < 9; c++)
	{
		Fabricas[f][pTanque][c] = 0;
		DestroyDynamic3DTextLabelEx(Fabricas[f][LTanque][c]);
	}
	for(new c = 0; c < 3; c++)
	{
		DestroyDynamicObjectEx(Fabricas[f][humo][c]);
		Fabricas[f][Crisol][c] = 0;
		Fabricas[f][Porcentaje][c] = 0;
		DestroyDynamic3DTextLabelEx(Fabricas[f][olla][c]);
	}
	for(new c = 0; c < 5; c++)
	{
     	Fabricas[f][Termino][c] = 0;
		DestroyDynamicObjectEx(Fabricas[f][Bloque][c]);
		Fabricas[f][StatoCuoco][c] = 0;
		Fabricas[f][PorcentajeCocinero][c] = 0;
		DestroyDynamic3DTextLabelEx(Fabricas[f][Cocinero][c]);
	}
	for(new a = 0; a < 11; a++)
	{
		Fabricas[f][TieneActor][a] = 0;
		Fabricas[f][EstadoActor][a] = 0;
		DestroyDynamicActorEx(Fabricas[f][ActorFabrica][a]);
	}
	for(new c = 0; c < 20; c++) DestroyDynamicObjectEx(Fabricas[f][Meta][c]);
	ResetearArmas(f);
	CargarFabricass(f);
}

static QuitarDineroFabrica(f,cantidad)
{
    Fabricas[f][pCantidadDinero] = Fabricas[f][pCantidadDinero]-cantidad;
	ActualizarDineroPared(f);
	UpdateAllBagsMoney(f);
	GuardarFabrica(f);
}

static DarDineroFabrica(f,cantidad)
{
    Fabricas[f][pCantidadDinero] = Fabricas[f][pCantidadDinero]+cantidad;
	if(Fabricas[f][pCantidadDinero] > MAX_FDINERO) Fabricas[f][pCantidadDinero] = MAX_FDINERO;
	ActualizarDineroPared(f);
	UpdateAllBagsMoney(f);
	GuardarFabrica(f);
}

static GuardarFBarril(playerid,f)
{
    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_CARRY);
    TieneBarril[playerid] = 0;
    GuardarFabrica(f);
}

static GuardarCajaFabrica(playerid,f,type)
{
	switch(type)
	{
	    case 0: RemovePlayerAttachedObject(playerid, 4);
	    case 1: SetPlayerAttachedObject(playerid, 4, 1271, 1, 0.216000, 0.365000, -0.032000, 0.000000, 0.000000, 0.000000, 0.667000, 0.651999, 0.568000);
    }
	TieneCajaMeta[playerid] = type;
    GuardarFabrica(f);
}

static ObjetosTransporte(vehicleid, f)
{
	if(VehiculoConCajas[Fabricas[f][Auto1F]] == 0) return 1;
    new vw = GetVehicleVirtualWorld(vehicleid);
	new interior = GetVehicleInterior(vehicleid);
    for(new bl = 0; bl < 5; bl++)
	{
	    DestroyDynamicObjectEx(CajaMeta[f][bl]);
		CajaMeta[f][bl] = CreateDynamicObject(1271,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000,vw,interior);
	}
	if(VehiculoConCajas[Fabricas[f][Auto1F]] > 0) AttachDynamicObjectToVehicle(CajaMeta[f][0], Fabricas[f][Auto1F], -0.011962,-1.074538,0.107927,-0.199999,0.000000,0.000000);
	if(VehiculoConCajas[Fabricas[f][Auto1F]] > 1) AttachDynamicObjectToVehicle(CajaMeta[f][1], Fabricas[f][Auto1F], 0.000000,-1.999999,0.100000,0.349999,-1.149999,0.000000);
	if(VehiculoConCajas[Fabricas[f][Auto1F]] > 2) AttachDynamicObjectToVehicle(CajaMeta[f][2], Fabricas[f][Auto1F], -0.007348,-1.509131,0.746309,0.000000,0.000000,0.000000);
	if(VehiculoConCajas[Fabricas[f][Auto1F]] > 3) AttachDynamicObjectToVehicle(CajaMeta[f][3], Fabricas[f][Auto1F], 0.658764,-2.240282,0.650753,0.000000,34.049999,0.000000);
	if(VehiculoConCajas[Fabricas[f][Auto1F]] > 4) AttachDynamicObjectToVehicle(CajaMeta[f][4], Fabricas[f][Auto1F], -0.714648,-2.216089,0.620124,0.000000,-29.000000,0.000000);
	return 1;
}

static ActualizarCajasMeta(f)
{
	for(new bl = 0; bl < 5; bl++)
	{
	    DestroyDynamicObjectEx(BarrilMeta[f][bl]);
     	BarrilMeta[f][bl] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000,Fabricas[f][pVW],Fabricas[f][pInt]);
	}
}

static ActualizarBarriles(vehicleid,f)
{
    new vw = GetVehicleVirtualWorld(vehicleid);
	new interior = GetVehicleInterior(vehicleid);
    for(new bl = 0; bl < 5; bl++)
	{
	    DestroyDynamicObjectEx(BarrilMeta[f][bl]);
		BarrilMeta[f][bl] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000,vw,interior);
	}
}

static BarrilesTransporte(vehicleid, f)
{
	if(VehiculoConBarril[Fabricas[f][Auto1F]] == 0) return 1;
    new vw = GetVehicleVirtualWorld(vehicleid);
	new interior = GetVehicleInterior(vehicleid);
    for(new bl = 0; bl < 5; bl++)
	{
	    DestroyDynamicObjectEx(BarrilMeta[f][bl]);
		BarrilMeta[f][bl] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000,vw,interior);
	}
 	if(VehiculoConBarril[Fabricas[f][Auto1F]] > 0) AttachDynamicObjectToVehicle(BarrilMeta[f][0], vehicleid, 0.394999, -1.084999, 0.230000, 0.000000, 0.000000, 0.000000);
 	if(VehiculoConBarril[Fabricas[f][Auto1F]] > 1) AttachDynamicObjectToVehicle(BarrilMeta[f][1], vehicleid, -0.519999, -1.084999, 0.199500, 0.000000, 0.000000, 0.000000);
 	if(VehiculoConBarril[Fabricas[f][Auto1F]] > 2) AttachDynamicObjectToVehicle(BarrilMeta[f][2], vehicleid, -0.049999, -1.729998, 0.230000, 0.000000, 0.000000, 0.000000);
 	if(VehiculoConBarril[Fabricas[f][Auto1F]] > 3) AttachDynamicObjectToVehicle(BarrilMeta[f][3], vehicleid, 0.429999, -2.320005, 0.165000, 0.000000, 0.000000, 0.000000);
 	if(VehiculoConBarril[Fabricas[f][Auto1F]] > 4) AttachDynamicObjectToVehicle(BarrilMeta[f][4], vehicleid, -0.554999, -2.285004, 0.220000, 0.000000, 0.000000, 0.000000);
	return 1;
}

static ObjetoDistraccion(vehicleid, id)
{
	if(GetVehicleModel(vehicleid) != 554) return 1;
	new vw = GetVehicleVirtualWorld(vehicleid);
	new interior = GetVehicleInterior(vehicleid);
 	for(new bl = 0; bl < 5; bl++)
	{
		DestroyDynamicObjectEx(unkbox[id][bl]);
		unkbox[id][bl] = CreateDynamicObject(1271,0,0,-1000,0,0,0, vw,interior);
	}
    AttachDynamicObjectToVehicle(unkbox[id][0], vehicleid, -0.011962,-1.074538,0.107927,-0.199999,0.000000,0.000000);
	AttachDynamicObjectToVehicle(unkbox[id][1], vehicleid, 0.000000,-1.999999,0.100000,0.349999,-1.149999,0.000000);
	AttachDynamicObjectToVehicle(unkbox[id][2], vehicleid, -0.007348,-1.509131,0.746309,0.000000,0.000000,0.000000);
	AttachDynamicObjectToVehicle(unkbox[id][3], vehicleid, 0.658764,-2.240282,0.650753,0.000000,34.049999,0.000000);
	AttachDynamicObjectToVehicle(unkbox[id][4], vehicleid, -0.714648,-2.216089,0.620124,0.000000,-29.000000,0.000000);
	return 1;
}

static MandarMensajeFabrica(f,const string[])
{
	foreach(new i : Player)
    {
	    if(PlayerInfo[i][jMiembro] == Fabricas[f][pBanda]) Mensaje(i,-1,string);
    }
    return 1;
}

static GuardarTerritorio(t)
{
	new query[200];
	mysql_format(Conecction,query,sizeof(query),"UPDATE `territorios` SET `BID`='%d' WHERE `ID`='%d'",Tdata[t][tBanda],Tdata[t][tID]);
	mysql_tquery(Conecction,query);
	return true;
}

static GuardarFabrica(c)
{
	new query[1500];
	mysql_format(Conecction,query,sizeof(query),"UPDATE `fabricas` SET `Coins`='%d',`Precio`='%d', `BandaID`='%d',`EnVenta`='%d',`EntradaA`='%f' WHERE `ID`='%d' LIMIT 1",Fabricas[c][pEnVentaPor],Fabricas[c][pValor],Fabricas[c][pBanda],Fabricas[c][pEnVenta],Fabricas[c][pEntradaA],Fabricas[c][pID]);
	mysql_tquery(Conecction,query);
	mysql_format(Conecction,query,sizeof(query),"UPDATE `fabricas` SET `EntradaA`='%f',`EntradaX`='%f',`EntradaY`='%f',`EntradaZ`='%f',`SalidaX`='%f',`SalidaY`='%f',`SalidaZ`='%f' WHERE `ID`='%d' LIMIT 1",Fabricas[c][pEntradaA],Fabricas[c][pEntradaX],Fabricas[c][pEntradaY],Fabricas[c][pEntradaZ],Fabricas[c][pSalidaX],Fabricas[c][pSalidaY],Fabricas[c][pSalidaZ],Fabricas[c][pID]);
	mysql_tquery(Conecction,query);
	mysql_format(Conecction,query,sizeof(query),"UPDATE `fabricas` SET `GarajeE_A`='%f',`GarajeE_X`='%f',`GarajeE_Y`='%f',`GarajeE_Z`='%f',`GarajeS_X`='%f',`GarajeS_Y`='%f',`GarajeS_Z`='%f' WHERE `ID`='%d' LIMIT 1",Fabricas[c][pEntradaGA],Fabricas[c][pEntradaGX],Fabricas[c][pEntradaGY],Fabricas[c][pEntradaGZ],Fabricas[c][pSalidaGX],Fabricas[c][pSalidaGY],Fabricas[c][pSalidaGZ],Fabricas[c][pID]);
	mysql_tquery(Conecction,query);
	mysql_format(Conecction,query,sizeof(query),"UPDATE `fabricas` SET `Tanque1Contenido`='%d',`Tanque2Contenido`='%d',`Tanque3Contenido`='%d',`Tanque4Contenido`='%d',`Tanque5Contenido`='%f',`Tanque6Contenido`='%f' WHERE `ID`='%d' LIMIT 1",Fabricas[c][pTanque][0],Fabricas[c][pTanque][1],Fabricas[c][pTanque][2],Fabricas[c][pTanque][3],Fabricas[c][pTanque][4],Fabricas[c][pTanque][5],Fabricas[c][pID]);
	mysql_tquery(Conecction,query);
	mysql_format(Conecction,query,sizeof(query),"UPDATE `fabricas` SET `Almacen1`='%d',`Almacen2`='%d',`Almacen3`='%d',`Almacen4`='%d',`Almacen5`='%d',`Almacen6`='%d',`Almacen7`='%d',`Almacen8`='%d',`Almacen9`='%d',`Almacen10`='%d' WHERE `ID`='%d' LIMIT 1",Fabricas[c][Almacen][0],Fabricas[c][Almacen][1],Fabricas[c][Almacen][2],Fabricas[c][Almacen][3],Fabricas[c][Almacen][4],Fabricas[c][Almacen][5],Fabricas[c][Almacen][6],Fabricas[c][Almacen][7],Fabricas[c][Almacen][8],Fabricas[c][Almacen][9],Fabricas[c][pID]);
	mysql_tquery(Conecction,query);
	mysql_format(Conecction,query,sizeof(query),"UPDATE `fabricas` SET `Chalecos`='%d',`Interior`='%d',`VW`='%d',`DineroAlmacenado`='%d' WHERE `ID`='%d'",Fabricas[c][pChalecos],Fabricas[c][pInt],Fabricas[c][pVW],Fabricas[c][pCantidadDinero],Fabricas[c][pID]);
	mysql_tquery(Conecction,query);
	mysql_format(Conecction,query,sizeof(query),"UPDATE `fabricas` SET `Uzi`='%d',`Recortada`='%d',`Sniper`='%d',`Tec9`='%d' WHERE `ID`='%d' LIMIT 1",Fabricas[c][pUzi],Fabricas[c][pRecortada],Fabricas[c][pSniper],Fabricas[c][pTec9],Fabricas[c][pID]);
	mysql_tquery(Conecction,query);
	mysql_format(Conecction,query,sizeof(query),"UPDATE `fabricas` SET `MContra`='%d', `PorcentajeLleno1`='%d', `PorcentajeLleno2`='%d', `PorcentajeLleno3`='%d', `Crisol1`='%d', `Crisol2`='%d', `Crisol3`='%d' WHERE `ID`='%d' LIMIT 1",Fabricas[c][TieneActor][0],Fabricas[c][Porcentaje][0],Fabricas[c][Porcentaje][1],Fabricas[c][Porcentaje][2],Fabricas[c][Crisol][0],Fabricas[c][Crisol][1],Fabricas[c][Crisol][2],Fabricas[c][pID]);
	mysql_tquery(Conecction,query);
	mysql_format(Conecction,query,sizeof(query),"UPDATE `fabricas` SET `ProgresoC1`='%d', `ProgresoC2`='%d', `ProgresoC3`='%d', `ProgresoC4`='%d', `ProgresoC5`='%d', `EstadoC1`='%d', `EstadoC2`='%d', `EstadoC3`='%d', `EstadoC4`='%d', `EstadoC5` = '%d' WHERE `ID`='%d' LIMIT 1",Fabricas[c][PorcentajeCocinero][0],Fabricas[c][PorcentajeCocinero][1],Fabricas[c][PorcentajeCocinero][2],Fabricas[c][PorcentajeCocinero][3],Fabricas[c][PorcentajeCocinero][4],Fabricas[c][StatoCuoco][0],Fabricas[c][StatoCuoco][1],Fabricas[c][StatoCuoco][2],Fabricas[c][StatoCuoco][3],Fabricas[c][StatoCuoco][4],Fabricas[c][pID]);
	mysql_tquery(Conecction,query);
	mysql_format(Conecction,query,sizeof(query),"UPDATE `fabricas` SET `TieneMoledor1` = '%d', `TieneMoledor2` = '%d', `TieneMoledor3` = '%d', `TieneMoledor4` = '%d', `TieneMoledor5` = '%d' WHERE `ID`='%d' LIMIT 1",Fabricas[c][TieneActor][1],Fabricas[c][TieneActor][2],Fabricas[c][TieneActor][3],Fabricas[c][TieneActor][4],Fabricas[c][TieneActor][5],Fabricas[c][pID]);
	mysql_tquery(Conecction,query);
	mysql_format(Conecction,query,sizeof(query),"UPDATE `fabricas` SET `Termino1` = '%d', `Termino2` = '%d', `Termino3` = '%d', `Termino4` = '%d', `Termino5` = '%d' WHERE `ID`='%d' LIMIT 1",Fabricas[c][Termino][0],Fabricas[c][Termino][1],Fabricas[c][Termino][2],Fabricas[c][Termino][3],Fabricas[c][Termino][4],Fabricas[c][pID]);
	mysql_tquery(Conecction,query);
	mysql_format(Conecction,query,sizeof(query),"UPDATE `fabricas` SET `EstadoMedico` = '%d', `EstadoG1` = '%d', `EstadoG2` = '%d', `EstadoG3` = '%d', `EstadoCoc1` = '%d', `EstadoCoc2` = '%d', `EstadoCoc3` = '%d', `EstadoCoc4` = '%d', `EstadoCoc5` = '%d' WHERE `ID`='%d' LIMIT 1",Fabricas[c][EstadoActor][0],Fabricas[c][EstadoActor][6],Fabricas[c][EstadoActor][7],Fabricas[c][EstadoActor][8],Fabricas[c][EstadoActor][1],Fabricas[c][EstadoActor][2],Fabricas[c][EstadoActor][3],Fabricas[c][EstadoActor][4],Fabricas[c][EstadoActor][5],Fabricas[c][pID]);
	mysql_tquery(Conecction,query);
	mysql_format(Conecction,query,sizeof(query),"UPDATE `fabricas` SET `TieneGuardia1` = '%d', `TieneGuardia2` = '%d', `TieneGuardia3` = '%d', `TieneGuardia4` = '%d', `TieneGuardia5` = '%d', `EstadoG4` = '%d', `EstadoG5` = '%d', `TiempoSoborno` = '%d' WHERE `ID`='%d' LIMIT 1",Fabricas[c][TieneActor][6],Fabricas[c][TieneActor][7],Fabricas[c][TieneActor][8],Fabricas[c][TieneActor][9],Fabricas[c][TieneActor][10],Fabricas[c][EstadoActor][9],Fabricas[c][EstadoActor][10],Fabricas[c][TiempoSoborno],Fabricas[c][pID]);
	mysql_tquery(Conecction,query);
	return true;
}

static DarInteriorFabrica(c)
{
	new query[1000];
 	Fabricas[c][pSalidaX] = -1976.3900;
	Fabricas[c][pSalidaY] = 206.3660;
	Fabricas[c][pSalidaZ] = 1035.8199;
	mysql_format(Conecction,query,sizeof(query),"UPDATE `fabricas` SET `Interior`='1',`SalidaX`='-1976.3900',`SalidaY`='206.3660',`SalidaZ`='1035.8199' WHERE `ID`='%d'",Fabricas[c][pID]);
	mysql_tquery(Conecction,query);
	return true;
}

static FabricaDesocupada()
{
	for(new p=1; p<MAX_FABRICAS; p++)
	{
	    if(Fabricas[p][pEnUso] == 0) return p;
	}
	return -1;
}

static ActualizarDineroPared(f)
{
    new moneytext[200];
	format(moneytext,sizeof(moneytext),"Dinero guardado:\n $%s", Numeros(Fabricas[f][pCantidadDinero]));
	SetDynamicObjectMaterialText(Fabricas[f][tMoney], 0,moneytext, 130, "F25_Bank_Printer_Bold", 25, 1, 0xFFFFFFFF, 0, 1);
}

static TieneFabrica(bandaid)
{
    foreach(new i : Fabricas)
    {
        if(Fabricas[i][pBanda] == bandaid) return 1;
    }
	return 0;
}

static ActualizarCantidadChalecos(f)
{
	new stringas[360];
	format(stringas,sizeof(stringas),"{3399FF}Chalecos antibalas"CB"\nCantidad disponible: "CR"%s"CB"\n\nPulsa "CR"'H'"CB" para equipar uno.",Numeros(Fabricas[f][pChalecos]));
    UpdateDynamic3DTextLabelText(Fabricas[f][pLabel5], COLOR_BLANCO, stringas);
}

static EstadoCuoco(var)
{
	new str[52];
	switch(var)
	{
	    case 0: str = " {3399FF}falta trabajador"CB"";
		case 1: str = " "CR"procesando"CB"";
		case 2: str = " "CR"faltan materiales"CB"";
		case 3: str = " "CR"asesinado"CB"";
		case 4: str = " {3D83CE}esperando recolecci�n"CB"";
	}
	return str;
}

static EstadoHo(var)
{
	new str[200];
	switch(var)
	{
		case 0: str = ""CB"Pulsa "CR"'Y' "CB"para encender.";
		case 1: str = ""CB"Pulsa "CR"'Y' "CB"para apagar.";
	}
	return str;
}

static EstadoCristal(var)
{
	new str[200];
	switch(var)
	{
		case 0: str = "";
		case 1: str = "\nPulsa {3d83ce}'H'"CB" para recolectar el cristal";
	}
	return str;
}

static EstadoH(var)
{
	new str[32];
	switch(var)
	{
		case 0: str = ""CR"apagada";
		case 1: str = ""CR"encendida";
	}
	return str;
}



static LCaja(playerid) return ApplyAnimation(playerid,"CARRY","LIFTUP",2,0,1,1,0,0);
static DCaja(playerid) return ApplyAnimation(playerid,"CARRY","putdwn",2,0,1,1,0,0);

/*
static RestarVida(playerid,Float:cantidad)
{
	new Float:vida, Float:chaleco;
	GetPlayerHealth(playerid, vida);
	GetPlayerArmour(playerid, chaleco);
	if(vida > 0 && chaleco == 0) EstablecerVida(playerid, vida-cantidad);
	if(vida > 0 && chaleco > cantidad) EstablecerChaleco(playerid, chaleco-cantidad);
}*/
static RestarVida(playerid,Float:cantidad)
{
	new Float:vida, Float:chaleco;
	GetPlayerHealth(playerid, vida);
	GetPlayerArmour(playerid, chaleco);
	new Float:resta = cantidad-chaleco;
	if(chaleco > cantidad) EstablecerChaleco(playerid, chaleco-cantidad);
	else if(chaleco <= cantidad) EstablecerChaleco(playerid, 0),EstablecerVida(playerid, vida-resta);
	else EstablecerVida(playerid, vida-cantidad);
}

static GetVehicleSpeed(vehicleid)
{
	new Float:V[3];
	GetVehicleVelocity (vehicleid, V [0], V [1], V [2]);
	return floatround(floatsqroot (V [0] * V [0] + V [1] * V [1] + V [2] * V [2]) * 180.00);
}



Numeros(number)
{
    new numOfPeriods = 0, tmp = number;
    new str[32];
    while(tmp > 1000) {
        tmp = floatround(tmp / 1000, floatround_floor), ++numOfPeriods;
    }
    valstr(str, number);
    new slen = strlen(str);
    for(new i = 1; i != numOfPeriods + 1; ++i) {
        strins(str, ".", slen - 3*i);
    }
    return str;
}
ptask MensajesAleatorios[250000](playerid)
{
    new msj = random(24);
    switch(msj)
    {
    	case 0: { ShowTDN(playerid, "~b~Ayuda:~w~, Ahora puedes mejorar en tu vehiculo en el taller tunning."); }
    	case 1: { ShowTDN(playerid, "~b~Ayuda:~w~, �Necesitas consumir alguna droga o medicamento? usa /cons."); }
    	case 2: { ShowTDN(playerid, "~b~Ayuda:~w~, Si tienes una duda usa /n o /ayuda para poder guiarte por el servidor."); }
    	case 3: { ShowTDN(playerid, "~b~Ayuda:~w~, Contamos con membresia VIP 3, puedes encontrar en la tienda "Moneda1"."); }
    	case 4: { ShowTDN(playerid, "~b~Ayuda:~w~, Administra tu baul de tu auto con el comando /baul."); }
        case 5: { ShowTDN(playerid, "~b~Ayuda:~w~, Usa /referidos para obtener bonos adicionales para tu personaje."); }
        case 6: { ShowTDN(playerid, "~b~Ayuda:~w~, Ahora podras configurar tu cuenta con el comando /config."); }
        case 7: { ShowTDN(playerid, "~b~Ayuda:~w~, Usa /crear dk o /crear edc para crear tus armas con mayor fluidez."); }
        case 8: { ShowTDN(playerid, "~b~Ayuda:~w~, Contamos con territorios por conquistar para tu banda."); }
        case 18: { ShowTDN(playerid, "~b~Ayuda:~w~, Tenemos actualmente un /top para ver los mejores jugadores del servidor."); }
        case 9: { ShowTDN(playerid, "~b~Ayuda:~w~, Tiene una duda sobre la membresia VIP, usa /ayuda vip."); }
        case 10: { ShowTDN(playerid, "~b~Ayuda:~w~, Usa tu /parlante para poner tu propia musica de YouTube."); }
        case 11: { ShowTDN(playerid, "~b~Ayuda:~w~, �Necesitas curar a tu compa�ero?, no olvides usar un botiquin."); }
        case 12: { ShowTDN(playerid, "~b~Ayuda:~w~, Tenemos un vendedor de objectos ilegales en groove street, visitalo!."); }
        case 13: { ShowTDN(playerid, "~b~Ayuda:~w~, Ahora podras robar tiendas, bancos, casas para obtener dinero f�cil."); }
        case 14: { ShowTDN(playerid, "~b~Ayuda:~w~, Hemos agregado un canal de twitter usa /tw para poder hablar por alli."); }
        case 15: { ShowTDN(playerid, "~b~Ayuda:~w~, Ahora podes comprar un C4 al traficante de groove street."); }
        case 16: { ShowTDN(playerid, "~b~Ayuda:~w~, Actualmente tenemos una tienda exclusiva en discord para poder comprar objectos."); }
        case 17: { ShowTDN(playerid, "~b~Ayuda:~w~, Si estas aburrido ve a /arena y disfruta."); }
		default:{ ShowTDN(playerid, "~b~Ayuda:~w~, Actualmente puedes /crear arma con mas fluides."); }
	}
}
static StringPing(playerid)
{
	new Ping[100];
	new ping = GetPlayerPing(playerid);
	if(ping >= 0 && ping < 150) format(Ping, 100, "{46e800}%d"CB"",ping);
	if(ping >= 150 && ping < 200) format(Ping, 100, "{00cbf7}%d"CB"",ping);
	if(ping >= 200 && ping < 250) format(Ping, 100, "{E0F600}%d"CB"",ping);
	if(ping >= 250 && ping < 300) format(Ping, 100, "{f7e300}%d"CB"",ping);
	if(ping >= 300) format(Ping, 100, "{f74000}%d"CB"",ping);
	return Ping;
}

static PosicionGPS(playerid,Float:x,Float:y,Float:z,range)
{
	CrearCheckpoint(playerid, x,y,z, range);
    Mensaje(playerid, -1, "Se ha marcado en el mapa un {FF0000}punto rojo"CB" en la ubicaci�n seleccionada.");
    PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
	return 1;
}

static CrearIconoGPS(tdid, Float: PosGPS_X, Float: PosGPS_Y, const text[])
{
	TDGPSCreadoS ++;
	TDGPSCreado[tdid] = 1;
	TextDGPS[tdid] = TextDrawCreate(PosGPS_X,PosGPS_Y, text);
	TextDrawLetterSize(TextDGPS[tdid], 0.000000, 0.000000);
	TextDrawTextSize(TextDGPS[tdid], 8.444448, 9.457767);
	TextDrawAlignment(TextDGPS[tdid], 2);
	TextDrawColor(TextDGPS[tdid], -1);
	TextDrawSetShadow(TextDGPS[tdid], 0);
	TextDrawSetOutline(TextDGPS[tdid], 0);
	TextDrawFont(TextDGPS[tdid], 4);
	return 1;
}

static MostrarBotiquin(playerid)
{
	new string[450];
	if(RopaMedi[playerid] > 0)
	{
		if(EstaEn(playerid,2.0,1169.7440,-1353.4617,-10.7922) || EstaEn(playerid,2.0,-2720.8577,647.0939,1385.6547) || EstaEn(playerid,2.0,1235.0538,-821.8724,1164.2759))
		{
			format(string,sizeof(string),"Pinzas, vendas, jeringa con anestesia\nPinzas, vendas, jeringa con morfina\nAntiinflamatorios y yeso\nAntiinflamatorios\nHilo, aguja, vendas y suero fisiol�gico\nAntiinflamatorios y Hielo\nAntiinflamatorios, hielo y yeso\nBistur�, escalpelo, hilo, aguja y jeringa con morfina\nHielo, vendas y jeringa con morfina\nHielo y vendas\nYeso, vendas, morfina y antiinflamatorios");
			MostrarDialog(playerid,BOTIQUIN,DIALOG_STYLE_LIST,"Botiqu�n m�dico",string,"Agarrar","Cerrar");
		}
	}
	return 1;
}

static CancelarSelect(playerid)
{
	OcultarTodo(playerid);
 	MarcadoMenu[playerid] = 0;
  	CancelSelectTextDraw(playerid);
   	PlayerPlaySound(playerid,1054,0.0,0.0,0.0);
   	return 1;
}

static PescaSelection(playerid,sele)
{
	CongelarEx(playerid);
	SetPlayerAttachedObject(playerid, 4, 2036, 2, -0.003002, 0.819994,  0.012999, -176.2, -4.00001, -74.7001, 0.777, 0.771999, 1);
	ApplyAnimation(playerid,"ped", "ARRESTgun", 4.0,0,1,1,1,1);
	SetTimerEx("LanzarArpon",5000,false,"dd", playerid,sele);
	return 1;
}

static UniformeSelect(playerid,uni)
{
	if(PlayerInfo[playerid][jMiembro] == 1)
	{
		MensajeDiscord(NombreJugador(playerid), "Entra en 10-08 desde la comisaria mas cercana", WEBHOOK_ACTIVIDAD_SAPD);
		PlayerInfo[playerid][pDuty] = 1;
		SetPlayerColor(playerid,TEAM_BLUE_COLOR);
		Mensaje(playerid, COLORCARGO0, "Te pusiste el uniforme de polic�a.");
		Frecuencia[playerid] = 1;
		frecuencias[1]++;
	}
	if(PlayerInfo[playerid][jMiembro] == 2)
	{
		PlayerInfo[playerid][pDutyM] = 1;
		SetPlayerColor(playerid,COLOR_MILITAR);
		Mensaje(playerid, COLORCARGO0, "Te pusiste el uniforme militar.");
	}
	SetPlayerSkin(playerid, uni);
	PlayerInfo[playerid][pModelo] = uni;
	if(uni == 211)
	{
		SetPlayerAttachedObject(playerid, 3,19142,1,0.109797,0.053399,-0.002000,0.000000,-2.299998,0.299997,1.046000,0.986998,0.893000);
		SetPlayerAttachedObject(playerid, 4,18636,2,0.136399,0.028400,0.001000,90.000000,90.000000,0.000000,1.154000,1.100000,1.161000);
	}
	return 1;
}

static RocaSelect(playerid)
{
	new string[128], ganancias;
 	switch(PlayerInfo[playerid][pNivelMinero])
	{
		case 1:
		{
			new intento = random(3);
			switch(intento)
			{
				case 0: ganancias=2200;
				case 1: ganancias=3400;
				case 2: ganancias=3680;
			}
		}
		case 2:
		{
			new intento = random(3);
			switch(intento)
			{
				case 0: ganancias=3760;
				case 1: ganancias=3960;
				case 2: ganancias=4170;
			}
		}
		default:
		{
			new intento = random(3);
			switch(intento)
			{
				case 0: ganancias=4350;
				case 1: ganancias=4480;
				case 2: ganancias=4590;
			}
		}
	}

	format(string, sizeof(string), "%s tira una roca a la procesadora.", NombreJugador(playerid));
	ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
	new exp = random(3);
	switch(exp)
	{
		case 0,1: Mensaje(playerid,-1,"Esta vez no ganaste habilidad.");
		case 2:
		{
			if(PlayerInfo[playerid][pExpMinero] < 49) Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad."),PlayerInfo[playerid][pExpMinero]++;
			else if(PlayerInfo[playerid][pExpMinero] >= 49)
			{
				ShowTDN(playerid, "~p~Felicidades~w~, has aumentado tu nivel de minero.");
				PlayerInfo[playerid][pExpMinero] = 0;
				PlayerInfo[playerid][pNivelMinero]++;
			}
		}
	}
	
	new coins = 3;
	if(PlayerInfo[playerid][pNivelMinero] < coins) coins = PlayerInfo[playerid][pNivelMinero];
	if(random(8) == 3)
	{
		va_SendClientMessage(playerid, -1, "Has recibido "CR"%d"CB" "Moneda3".", coins);
		PlayerInfo[playerid][Credits] += coins;
	}
	format(string, sizeof(string), "�Buen trabajo!, tus ganancias son "CR"$%s", ConvertirNumero(ganancias));
	DarDinero(playerid, ganancias);
	Mensaje(playerid, -1, string);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	RemovePlayerAttachedObject(playerid,4);
	rocajugador[playerid] = 11392;
	new premio = random(70);
	switch(premio)
	{
		case 5: { DarArma(playerid,2); Mensaje(playerid,-1,"�Enhorabuena! Encontraste un "CR"Palo de golf"CB" mientras trabajaste como minero."); }
		case 15: { DarArma(playerid,4); Mensaje(playerid,-1,"�Enhorabuena! Encontraste un "CR"Cuchillo"CB" mientras trabajaste como minero."); }
		case 25: { DarArma(playerid,5); Mensaje(playerid,-1,"�Enhorabuena! Encontraste un "CR"Bate de beisbol"CB" mientras trabajaste como minero."); }
		case 35: { DarArma(playerid,7); Mensaje(playerid,-1,"�Enhorabuena! Encontraste un "CR"Palo de billar"CB" mientras trabajaste como minero."); }
		case 45: { DarArma(playerid,8); Mensaje(playerid,-1,"�Enhorabuena! Encontraste una "CR"Katana"CB" mientras trabajaste como minero."); }
		case 55: { DarArma(playerid,15); Mensaje(playerid,-1,"�Enhorabuena! Encontraste un "CR"Baston"CB" mientras trabajaste como minero."); }
		case 65: { DarArma(playerid,43); Mensaje(playerid,-1,"�Enhorabuena! Encontraste una "CR"Camara"CB" mientras trabajaste como minero."); }
	}
	return 1;
}

static CancelarCriminal(playerid)
{
	if(PlayerTemp[playerid][TieneEncargo] > 0)
	{
		for(new e=1; e<MAX_ENCARGOS; e++)
		{
			if(e == PlayerTemp[playerid][TieneEncargo])
			{
				Encargo[e][MisionActiva] = 0;
				Encargo[e][ObjetivoTake] = 0;
				Encargo[e][Bajas] = 0;
				Encargo[e][Tiene9mm] = 0;
				Encargo[e][TieneColega] = 0;
				Encargo[e][IdCriminal] = INVALID_PLAYER_ID;
				Encargo[e][IdColega] = INVALID_PLAYER_ID;
				PlayerTemp[e][CriminalAceptado] = 0;
				foreach(new u : Player)
				{
					if(PlayerTemp[u][TieneEncargo] == e)
					{
						Mensaje(u, -1, "Tu colega se ha marchado, no puedes seguir con el encargo.");
						PlayerTemp[u][TieneEncargo] = 0;
						PlayerTemp[u][CriminalAceptado] = 0;
						PlayerTemp[u][TomoEncargo] = 0;
						TextDrawHideForPlayer(u,MisionT2[5]);
						PlayerTextDrawHide(u,IndicacionesT[u]);
						PlayerTextDrawHide(u,aTiempoCriminal[u]);
						BorrarCheckpoint(u);
						DestroyDynamicActorEx(Encargo[e][Actor1]);
						DestroyDynamicActorEx(Encargo[e][Objetivo]);
						DestroyDynamicActorEx(Encargo[e][Actor2]);
						break;
					}
				}
			}
		}
	}
	return 1;
}

static FinTiempoCriminal(e)
{
	if(Encargo[e][SegundosMision] == 0)
	{
		Encargo[e][MisionActiva] = 0;
		Encargo[e][ObjetivoTake] = 0;
		Encargo[e][Bajas] = 0;
		Encargo[e][Tiene9mm] = 0;
		Encargo[e][TieneColega] = 0;
		Encargo[e][IdCriminal] = INVALID_PLAYER_ID;
		Encargo[e][IdColega] = INVALID_PLAYER_ID;
		foreach(new u : Player)
		{
			if(PlayerTemp[u][TieneEncargo] == e)
			{
				if(PlayerTemp[u][CriminalAceptado] == 0) Mensaje(u, -1, "Tardaste demasiado en conseguir un colega, {FF0303}el encargo ha sido cancelado"CB".");
                else Mensaje(u, -1, "Tardaron demasiado, {FF0303}el objetivo se ha ido"CB".");
				PlayerTemp[u][TieneEncargo] = 0;
				PlayerTemp[u][TomoEncargo] = 0;
				TextDrawHideForPlayer(u,MisionT2[5]);
				PlayerTextDrawHide(u,IndicacionesT[u]);
				PlayerTextDrawHide(u,aTiempoCriminal[u]);
				BorrarCheckpoint(u);
				DestroyDynamicActorEx(Encargo[e][Actor1]);
				DestroyDynamicActorEx(Encargo[e][Objetivo]);
				DestroyDynamicActorEx(Encargo[e][Actor2]);
			}
		}
	}
	return 1;
}

static FinMisionCriminal(e)
{
	new item[200],GananciaFinal;
	switch(e)
	{
		case 1: GananciaFinal= 5000;
		case 2: GananciaFinal= 6500;
		case 3: GananciaFinal= 7200;
		case 4: GananciaFinal= 8000;
		case 5: GananciaFinal= 9800;
	}
	format(item,sizeof(item),"\n"CB"Pago inicial: {F7A40A}$%d",	GananciaFinal);
	if(PlayerInfo[Encargo[e][IdCriminal]][pWP2] == 23)
	{
		format(item,sizeof(item),"%s\n"CB"Ganancia por entregar el arma del delito: {4CF000}$2000",item);
		TimerWeapons[Encargo[e][IdCriminal]] = gettimeVariable + 3;
		QuitarArma(Encargo[e][IdCriminal],23);
		GananciaFinal += 2000;
	}
	if(Encargo[e][Bajas] > 0)
	{
		format(item,sizeof(item),"%s\n"CB"Descuento por bajas innecesarias: {FF0808}$500",item);
		GananciaFinal -= 500;
	}
	format(item,sizeof(item),"%s\n"CB"Ganancia final: {4CF000}$%d",item,GananciaFinal);
	foreach(new u : Player)
	{
		if(PlayerTemp[u][TieneEncargo] == e)
		{
			new Ganancias[200];
			MostrarDialog(u,DIALOG_INFO,DIALOG_STYLE_MSGBOX,"{49C410}Encargo finalizado"CB"",item,"Aceptar","");
			PlayerTemp[u][TieneEncargo] = 0;
			PlayerTemp[u][TomoEncargo] = 0;
			PlayerTemp[u][CriminalAceptado] = 0;
			BorrarCheckpoint(u);
			DarEstrella(u, 0);
			DarDinero(u, GananciaFinal);
			format(Ganancias, 128, "�Buen Trabajo! Tus ganancias son: "CR"$%d"CB".",GananciaFinal);
			Mensaje(u, -1, Ganancias);
			TextDrawHideForPlayer(u,MisionT2[5]);
			PlayerTextDrawHide(u,IndicacionesT[u]);
			PlayerTextDrawHide(u,aTiempoCriminal[u]);
		}
	}
	Encargo[e][MisionActiva] = 0;
	Encargo[e][ObjetivoTake] = 0;
	Encargo[e][Bajas] = 0;
	Encargo[e][Tiene9mm] = 0;
	Encargo[e][TieneColega] = 0;
	Encargo[e][IdCriminal] = INVALID_PLAYER_ID;
	Encargo[e][IdColega] = INVALID_PLAYER_ID;
	DestroyDynamicActorEx(Encargo[e][Actor1]);
	DestroyDynamicActorEx(Encargo[e][Objetivo]);
	DestroyDynamicActorEx(Encargo[e][Actor2]);
	return 1;
}

BorrarPuntosFabrica(p)
{
	DestroyDynamicObjectEx(Fabricas[p][tMoney]);
	DestroyDynamicObjectEx(Fabricas[p][pPuerta]);
	DestroyDynamicPickupEx(Fabricas[p][pPickup]);
	DestroyDynamic3DTextLabelEx(Fabricas[p][pLabel]);
	DestroyDynamic3DTextLabelEx(Fabricas[p][pLabel2]);
	DestroyDynamic3DTextLabelEx(Fabricas[p][pLabel3]);
	DestroyDynamic3DTextLabelEx(Fabricas[p][pLabel4]);
	DestroyDynamic3DTextLabelEx(Fabricas[p][pLabel5]);
	DestroyDynamicMapIcon(Fabricas[p][pMapIcon]);
	DestroyDynamicActorEx(Fabricas[p][ActorFabrica][0]);
	DestroyDynamicObjectEx(Fabricas[p][pPuerta]);
	DestroyVehicle(Fabricas[p][Auto1F]);
	DestroyVehicle(Fabricas[p][Auto2F]);

	Fabricas[p][Auto1F] = INVALID_VEHICLE_ID;
	Fabricas[p][Auto2F] = INVALID_VEHICLE_ID;
}

const RPC_VehicleDestroy = 136;
IRPC:RPC_VehicleDestroy(playerid, BitStream:bs)
{
	if(ac_destroy) {

		new vehicleid;
		BS_ReadUint16(bs, vehicleid);

		if(vehicleid <= 0 || vehicleid >= MAX_VEHICLES)
		{
			return 0;
		}

		if(PlayerInfo[playerid][jNivel] < 8)
		{
			if((vehicleid == GetPlayerVehicleID(playerid) && CarWarpID[playerid] == vehicleid))
			{
				return 1;
			}
			return 0;
		}

		if(!IsVehicleStreamedIn(vehicleid, playerid))
		{
			return 0;
		}

		new interval = GetTickDiff(GetTickCount(), PlayerTemp[playerid][pt_LAST_VEHICLE_DESTROY]);
		if(interval < 500)
		{
			if(!CheatDelete[playerid])
			{
				new string[144];
				format(string, sizeof(string), "[!]"CB" El anticheat ha detectado que el usuario "CR"%s(ID:%d)"CB" borrar veh�culos.", NombreJugador(playerid), playerid);
				MensajeAdmin(COLOR_CHEAT, string, 3);
				CheatDelete[playerid] = true;
				SetTimerEx("ResetCheatDelete",1000,false,"d",playerid);
			}
			return 0;
		}
		PlayerTemp[playerid][pt_LAST_VEHICLE_DESTROY] = GetTickCount();
	}
    return 1;
}

GetTickDiff(newtick, oldtick)
{
	if (oldtick < 0 && newtick >= 0) {
		return newtick - oldtick;
	} else if (oldtick >= 0 && newtick < 0 || oldtick > newtick) {
		return (cellmax - oldtick + 1) - (cellmin - newtick);
	}
	return newtick - oldtick;
}

static ReturnCI(id)
{
    new
        szSerial[41]; // 40 + \0

    gpci(id, szSerial, sizeof(szSerial));
    return szSerial;
}

static LocalizarPropiedad(playerid)
{
	new string[80*MAX_PCASAS];

	for(new i = 0; i < MAX_PCASAS; i++)
	{
		if(PlayerInfo[playerid][CasaID][i] == 0) continue;
		new p = PlayerInfo[playerid][CasaID][i];
		format(string, sizeof(string), "%sUbicaci�n: "CR"%s"CB" | Interior: {009BE4}%d"CB"\n",string,PropInfo[p][pLocalizacion],PropInfo[p][pInterior]);

	}

	MostrarDialog(playerid,LOCALIZARCASA,DIALOG_STYLE_LIST,"Selecciona la propiedad que deseas localizar",string,"Localizar","Cancelar");
	return 1;
}
public OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, Float:new_x, Float:new_y, Float:new_z, Float:vel_x, Float:vel_y, Float:vel_z)
{

	if(floatabs(new_x) >= 25000.0 || floatabs(new_y) >= 25000.0 || floatabs(new_z) >= 25000.0)
	{
     	ExpulsarJugador(playerid, "cheat de vehiculos");
	    return 1;
	}
 	new Float:vehx, Float:vehy, Float:vehz;
  	GetVehiclePos(vehicleid, vehx, vehy, vehz);
	if(GetVehicleDistanceFromPoint(vehicleid, new_x, new_y, new_z) > 5)
 	{
  		SetVehiclePosAC(vehicleid, vehx, vehy, vehz);
    	SetVehicleVelocity(vehicleid, 0.0, 0.0, 0.0);
  		return 0;
   	}
	new Float:PlayerSpeedDistance;
 	PlayerSpeedDistance = floatmul(floatsqroot(floatadd(floatadd(floatpower(vel_x, 2), floatpower(vel_y, 2)), floatpower(vel_z, 2))), 170.0);
  	new spe = floatround(PlayerSpeedDistance * 1);
	if(spe > 5 && passenger_seat > 0)
	{
 		SetVehiclePosAC(vehicleid, vehx, vehy, vehz);
   		SetVehicleVelocity(vehicleid, 0.0, 0.0, 0.0);
     	return 0;
	}
	if(passenger_seat == 0)
	{
		if(spe > 25)
 		{
   			SetVehiclePosAC(vehicleid, vehx, vehy, vehz);
 	    	SetVehicleVelocity(vehicleid, 0.0, 0.0, 0.0);
        	return 0;
   		}
	}
    return 1;
}
TimerDuelos()
{
	for(new arenaid = 0; arenaid < MAX_ARENAS; arenaid++)
    {
 		if(DueloInfo[arenaid][IniciarLK] ==  1)
		{
				DueloInfo[arenaid][ConteoLK]--;
		        if(DueloInfo[arenaid][ConteoLK] != 0)
		        {
		            new cont[6];
		            format(cont,sizeof(cont),"~w~%d",DueloInfo[arenaid][ConteoLK]);
		            GameTextForPlayer(DueloInfo[arenaid][DesafiadorLK],cont,1000,3);
		            GameTextForPlayer(DueloInfo[arenaid][DesafiadoLK],cont,1000,3);
					PlayerPlaySound(DueloInfo[arenaid][DesafiadorLK],1056,0.0,0.0,0.0);
					PlayerPlaySound(DueloInfo[arenaid][DesafiadoLK],1056,0.0,0.0,0.0);
				}
		        else IniciarDuelo(arenaid);
    	}
    }
}


Funcion:PrepararDuelo(arenaid,id1,id2,ArmasTipo)
{
	if(DueloInfo[arenaid][DesocupadaLK] != 1)
	{
	    SendClientMessage(id1,-1,"** Esta arena esta ocupada");
	    SendClientMessage(id2,-1,"** Esta arena esta ocupada");
	    return 1;
	}
	if(!IsPlayerConnected(id1))
	    return SendClientMessage(id2,-1,"** El otro jugador ya no se encuentra online");
	if(!IsPlayerConnected(id2))
	    return SendClientMessage(id1,-1,"** El otro jugador ya no se encuentra online");

    PlayerDuelo[id1][Viendo] = 0;
    PlayerDuelo[id2][Viendo] = 0;
	//
	GetPlayerPos(id1,PlayerDuelo[id1][Posa][0],PlayerDuelo[id1][Posa][1],PlayerDuelo[id1][Posa][2]);
	GetPlayerPos(id2,PlayerDuelo[id2][Posa][0],PlayerDuelo[id2][Posa][1],PlayerDuelo[id2][Posa][2]);
	//
	EstablecerVida(id1,100.0);
	EstablecerVida(id2,100.0);
	EstablecerChaleco(id1,100.0);
	EstablecerChaleco(id2,100.0);
	SetPlayerPosAC(id1,DueloPos[arenaid][0],DueloPos[arenaid][1],DueloPos[arenaid][2]);
	SetPlayerPosAC(id2,DueloPos[arenaid][4],DueloPos[arenaid][5],DueloPos[arenaid][6]);
	SetPlayerFacingAngle(id1,DueloPos[arenaid][3]);
	SetPlayerFacingAngle(id2,DueloPos[arenaid][7]);
	SetPlayerInterior(id1,DueloInfo[arenaid][InteriorLK]);
	SetPlayerInterior(id2,DueloInfo[arenaid][InteriorLK]);
	SetCameraBehindPlayer(id1);
	SetCameraBehindPlayer(id2);
	ResetPlayerWeapons(id1);
	ResetPlayerWeapons(id2);
	CongelarEx(id1);
	CongelarEx(id2);
	switch(ArmasTipo)
	{
	    case 0:
	    {
	        DarArma(id1,22);
	        DarArma(id2,22);
	        DarArma(id1,26);
	        DarArma(id2,26);
	        DarArma(id1,28);
	        DarArma(id2,28);
	        DueloInfo[arenaid][ArmasLK]=0;
	    }
	    case 1:
	    {
	        DarArma(id1,22);
	        DarArma(id2,22);
	        DarArma(id1,26);
	        DarArma(id2,26);
	        DarArma(id1,32);
	        DarArma(id2,32);
	        DueloInfo[arenaid][ArmasLK]=1;
	    }
	    case 2:
	    {
	        DarArma(id1,24);
	        DarArma(id2,24);
	        DarArma(id1,27);
	        DarArma(id2,27);
	        DarArma(id1,29);
	        DarArma(id2,29);
	        DueloInfo[arenaid][ArmasLK]=2;
	    }
	    case 3:
	    {
	        DarArma(id1,24);
	        DarArma(id2,24);
	        DarArma(id1,25);
	        DarArma(id2,25);
	        DarArma(id1,34);
	        DarArma(id2,34);
	        DueloInfo[arenaid][ArmasLK]=3;
	    }
	}
	DueloInfo[arenaid][DesocupadaLK]=0;
	DueloInfo[arenaid][DesafiadorLK]=id1;
	DueloInfo[arenaid][DesafiadoLK] =id2;
	PlayerDuelo[id1][Estaenduelo]=1;
	PlayerDuelo[id1][Contrincante]=id2;
	PlayerDuelo[id2][Estaenduelo]=1;
	PlayerDuelo[id2][Contrincante]=id1;
	PlayerDuelo[id1][ArenaID]=arenaid;
	PlayerDuelo[id2][ArenaID]=arenaid;
	DueloInfo[arenaid][ConteoLK]  =  10;
	DueloInfo[arenaid][IniciarLK] =  1;
	new armastipo2[16];
	switch(ArmasTipo)
	{
	    case 0: armastipo2 = "armas rapidas 1";
	    case 1: armastipo2 = "armas rapidas 2";
	    case 2: armastipo2 = "armas lentas 1";
	}
	return 1;
}

Funcion:IniciarDuelo(arenaid)
{
	DescongelarEx(DueloInfo[arenaid][DesafiadorLK]);
	DescongelarEx(DueloInfo[arenaid][DesafiadoLK]);
	DueloInfo[arenaid][IniciarLK] =  2;
	PlayerPlaySound(DueloInfo[arenaid][DesafiadorLK],1057,0.0,0.0,0.0);
	PlayerPlaySound(DueloInfo[arenaid][DesafiadoLK],1057,0.0,0.0,0.0);
}
Funcion:DetectGodMode(playerid)
{
    if(PlayerAvisos[playerid] <= 3) PlayerAvisos[playerid] ++;

	if(PlayerAvisos[playerid] > 3)
	{
        new string2[144];
	    format(string2, sizeof(string2),"El jugador {FF3300}%s(ID: %d){FFFFFF} fue expulsado por el anticheat. Raz�n:{FF3300} GM/F3{FFFFFF}.",NombreJugador(playerid),playerid);
	    SendClientMessageToAll(-1,string2);
   		ExpulsarJugador(playerid, "GM/F3");
    }
    return 1;
}
static MostrarDialog(playerid, dialogid, style, const caption[], const info[], const button1[], const button2[])
{
	#if DEBUG_GM == 1
	printf("(MostrarDialog) dialogid: %d", dialogid);
	#endif
	UltimoDialogID[playerid] = dialogid;
	return ShowPlayerDialog(playerid, dialogid, style, caption, info, button1, button2);
}


static MensajeDiscord(const titulo[], const mensaje[], const webhook)
{
	#if DEBUG_GM == 1
	printf("(MensajeDiscord) titulo: %s | mensaje: %s", titulo, mensaje);
	#endif
	new string[350];
	format(string, sizeof(string), "%s/discord.php?titulo=%s&mensaje=%s&webhook=%d",CONVERTER_PATH,titulo,mensaje,webhook);
	HTTP(14, HTTP_GET, string, "", "DiscordEnviado");
	return 1;

}

Funcion:DiscordEnviado(index, response_code, const data[])
{
    return 1;
}
Funcion:CambiarContra(playerid,const name[], pass[])
{
	if(cache_num_rows())
	{
		new encriptada[65],query[220];
		SHA256_PassHash(pass, "stellarhostingzone", encriptada, 65);
		mysql_format(Conecction, query, sizeof(query), "UPDATE `usuarios` SET `Password`='%e' WHERE `Username`='%e' LIMIT 1",encriptada,name);
		mysql_tquery(Conecction, query);
        #if defined UsarForo
		mysql_format(Conecction2, query, sizeof(query), "UPDATE `smf_members` SET passwd=SHA1(CONCAT(LOWER('%e'),'%e')) WHERE `member_name`='%e'",name,pass,name);
		mysql_tquery(Conecction2, query);
		#endif
		va_SendClientMessage(playerid,-1,"Has cambiado la contrase�a de %s a [%s].",name,pass);

	}
	else SendClientMessage(playerid,-1,"Este nombre no existe.");
}

UbicarClima(playerid)
{
	new t_hora, t_min, t_seg;
	gettime(t_hora, t_min, t_seg);
	return SetPlayerTime(playerid, t_hora, t_min);
}

static IsPlayerAiming(playerid)
{
	return Apuntando[playerid];
}

static IsPlayerPaused(playerid)
{
	if(gettimeVariable - TimerAFK[playerid] > 2) return 1;
	else return 0;
}
Funcion:DarCoinsOff(playerid,cantidad)
{
	if(cache_num_rows())
	{
		new id;
		cache_get_value_name_int(0,"ID",id);
		new query[160];
		mysql_format(Conecction, query, sizeof(query), "UPDATE `usuarios` SET `Creditos` = Creditos + '%d' WHERE `ID`='%d' LIMIT 1", cantidad, id);
		mysql_tquery(Conecction, query);
		va_SendClientMessage(playerid,-1, "Le diste "CR"%d"CB" coins.", cantidad);
	}
	else
	{
		return Mensaje(playerid,-1,"No se encontr� a ese jugador.");
	}
	return 1;

}
static CuantosTrabajos(playerid)
{

    if(PlayerInfo[playerid][VIP] == 3) return MAX_TRABAJOS_VIP3;
    else if(PlayerInfo[playerid][VIP] > 0 && PlayerInfo[playerid][VIP] < 3) return MAX_TRABAJOS_VIP;
    else return 1;
}

static SlotTrabajo(playerid)
{
    new trabajos = CuantosTrabajos(playerid);
    for(new i; i < trabajos; i++)
    {
        if(PlayerInfo[playerid][Trabajo][i] == 0) return i;
    }
    return -1;
}

static TieneTrabajo(playerid, trabajo)
{
	new trabajos = CuantosTrabajos(playerid);
    for(new i; i < trabajos; i++)
    {
        if(PlayerInfo[playerid][Trabajo][i] == trabajo) return true;
    }
    return false;
}

static IsPlayerInArea(playerid, Float:minx, Float:maxx, Float:miny, Float:maxy)
{
   new Float:x, Float:y, Float:z;
   GetPlayerPos(playerid, x, y, z);
   if (x >= minx && x <= maxx && y >= miny && y <= maxy) return 1;
   return 0;
}
static DarTrabajo(playerid, trabajo)
{
    if(PrimerosPasos[playerid] == 3)
	{
		GameTextForPlayer(playerid, "~g~] ~w~LOGRO CONSEGUIDO ~g~]", 5000, 4);
		Mensaje(playerid,0xA385CBFF,"Conseguiste un logro, puedes ver tus logros y los de otras personas en la web.");
	   	if(ShowSound[playerid] == 1) PlayAudioStreamForPlayer(playerid, "https://"URL"/Logro.mp3");
		new porcento[5], porcentaje = 0;
		valstr(porcento,porcentaje);
		MostrarLogro(playerid,"Ya no soy verde","~n~_~n~_~n~Completa tus primeros objetivos~n~Disfruta el servidor.~n~_",porcento);
	    ShowTDN(playerid, "~p~Si tienes una duda estamos para ayudarte, ~w~disfruta del servidor.");
	    Mensaje(playerid,-1, ""CR"[!]"CB" Actualmente contamos con un canal de dudas "CR"/n (Pregunta) y /reportar"CB" para reportar un usuario.");
	    Mensaje(playerid,-1, ""CR"[!]"CB" No olvides unirte y vincular tu cuenta en "CR"/discord"CB" para obtener recompensas adicionales.");
   		SetTimerEx("QuitarLogro",6000,false,"d",playerid);
	    PrimerosPasos[playerid] = -1;
		ShowTDN(playerid, "~w~No olvides reportar el anti rol a la administracion, usa ~b~/re~w~ para reportar.");
		ShowTDN(playerid, "~w~Esperamos y disfrutes de nuestro servidor, un saludo de parte de la administracion.");
	}
	if(TieneTrabajo(playerid, trabajo)) return Mensaje(playerid,-1, "Ya tienes este trabajo.");
    new i = SlotTrabajo(playerid);
    if(i == -1)
    {
        return va_SendClientMessage(playerid, 0xFFFFFFFF, "Ya tienes %d trabajo(s), renuncia a uno.", CuantosTrabajos(playerid));
    }
    switch(trabajo)
    {
        case MEDICO:
        {
            if(PlayerInfo[playerid][jNivel] < 2) return Mensaje(playerid, -1, "Necesitas ser nivel 2 para poder trabajar de medico.");
            if(EstaEn(playerid, 5.0, 1177.6499,-1361.4723,14.2290)) return MostrarDialog(playerid,TRABAJO_MEDICO,DIALOG_STYLE_MSGBOX,"�Quieres ser m�dico?",""CB"Para fomar parte del equipo de m�dicos de San Andreas debes pagar {00FC00}$4000"CB".\n","Aceptar","Cancelar");
        }
        case PESCADOR:
        {
            if(EstaEn(playerid, 5.0, 2789.3672,-2574.6675,3.1683))
            {
                MensajeJob(playerid);
                PlayerInfo[playerid][Trabajo][i] = PESCADOR;
            }
        }
        case MINERO:
        {
            if(EstaEn(playerid, 5.0, -382.5980,2199.3918,25.4105)) MensajeJob(playerid),PlayerInfo[playerid][Trabajo][i] = MINERO;
        }
        case ARMERO:
        {
			if(!VerificarAccion(playerid)) return 1;
            //if(PlayerInfo[playerid][jNivel] < 3) return Mensaje(playerid,-1,"Necesitas nivel 3 para poder trabajar de armero.");
			if(EstaEn(playerid, 2.0, 2122.9236,-2275.1238,20.6719)) return MensajeJob(playerid),PlayerInfo[playerid][Trabajo][i] = ARMERO;
        }
        case CAMIONERO:
        {
            if(EstaEn(playerid, 5.0, -1715.4917,-65.0561,3.6473))
			{
                MensajeJob(playerid);
                PlayerInfo[playerid][Trabajo][i] = CAMIONERO;
			}
        }
        case GUARDAESPALDAS:
        {
            if(EstaEn(playerid, 2.0, 2227.6040,-1714.0569,13.5551))
            {
                MensajeJob(playerid);
                PlayerInfo[playerid][Trabajo][i] = GUARDAESPALDAS;
            }
        }
        case TRANSPORTISTA:
        {
            if(EstaEn(playerid, 2.0, 2583.8274,1644.3837,1087.5602) && GetPlayerInterior(playerid) == 1)
            {
                if(PlayerInfo[playerid][pNivelCamionero] < 2) return ShowTDN(playerid, "~r~Error: ~w~Necesitas nivel 2 de camionero para conseguir este trabajo.");
                MensajeJob(playerid);
                PlayerInfo[playerid][Trabajo][i] = TRANSPORTISTA;
            }
        }
        case BASURERO:
        {
            if(EstaEn(playerid, 2.0,-177.6093,-1549.4420,6.3284))
            {
                MensajeJob(playerid);
                PlayerInfo[playerid][Trabajo][i] = BASURERO;
            }
        }
        case MECANICO:
        {
            if(EstaEn(playerid, 2.0,114.7220,-151.4292,1.5781))
            {
                MensajeJob(playerid);
                PlayerInfo[playerid][Trabajo][i] = MECANICO;
            }
        }
        case TAXISTA:
        {
            if(EstaEn(playerid, 2.0,-2024.7489,-113.9102,1038.8187))
            {
                MensajeJob(playerid);
                PlayerInfo[playerid][Trabajo][i] = TAXISTA;
            }
        }
        case CRIMINAL:
        {
            if(PlayerInfo[playerid][jNivel] <= 7 && PlayerInfo[playerid][VIP] == 0)
            {
                Mensaje(playerid, -1, "Necesitas ser {FF3300}nivel 8"CB" para conseguir este trabajo.");
                Mensaje(playerid, -1, "Si no llegas a ese nivel puedes optar por adquirir membres�a "CR"VIP"CB".");
                return 1;
            }
            if(EstaEn(playerid, 2.0,-2181.3860,714.7617,53.8915))
            {
                MensajeJob(playerid);
                PlayerInfo[playerid][Trabajo][i] = CRIMINAL;
            }
        }
        case PROSTITUTA:
        {
            if(EstaEn(playerid, 2.0,958.2476,-54.3639,1001.1172))
            {
                MensajeJob(playerid);
                PlayerInfo[playerid][Trabajo][i] = PROSTITUTA;
            }
        }

    }
	return 1;
}

static AbandonarBanda(playerid)
{
	if(PlayerInfo[playerid][jMiembro] != 0 && PlayerInfo[playerid][pRango] == 8) return Mensaje(playerid,-1,"No puedes abandonar una banda donde eres el lider.");
	if(PlayerInfo[playerid][jMiembro] == 0) return Mensaje(playerid,-1,"No est�s en ninguna banda.");
	ActualizarIntegrantes(PlayerInfo[playerid][jMiembro], 0);
	if(PlayerInfo[playerid][jMiembro] == 1 || PlayerInfo[playerid][jMiembro] == 2)
	{
		frecuencias[Frecuencia[playerid]]--;
		Frecuencia[playerid] = 0;
		PlayerInfo[playerid][pDuty] = 0;
		PlayerInfo[playerid][pDutyM] = 0;
		SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]);
		ClearAnimations(playerid);
		if(PlayerInfo[playerid][pWP1] == 3) QuitarArma(playerid, 3);
		TimerWeapons[playerid] = gettimeVariable + 3;
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
		SetPlayerColor(playerid,COLORCARGO0);
		LimpiarMarker(playerid);
	}
	if(PlayerInfo[playerid][jMiembro] > 2) MarcarJugador(playerid,COLORCARGO0,PlayerInfo[playerid][jMiembro]);

	PlayerTemp[playerid][Refuerzos] = 0;
	new msgPlayer[128];
	format(msgPlayer, 128, "El jugador "CR"%s"CB" abandon� la banda.", NombreJugador(playerid));
	SendRadioMessage(PlayerInfo[playerid][jMiembro], -1, msgPlayer,INVALID_PLAYER_ID, 1);
	Mensaje(playerid, -1, "Abandonaste la banda.");
	PlayerInfo[playerid][jMiembro] = 0;
	PlayerInfo[playerid][pRango] = 0;

	return 1;
}
GetIntegrantes(bid)
{
	if(BandasInfo[bid][BIntegrantes] == 0) ContarMiembros(bid);
	return 1;
}
ActualizarIntegrantes(id, accion)
{

	if(id == 0) return id;
	new query[100];
	if(accion ==  0)
	{
		if(BandasInfo[id][BIntegrantes] != 0) BandasInfo[id][BIntegrantes]--;
		mysql_format(Conecction, query, sizeof(query), "UPDATE `facciones` SET `Integrantes`='%d' WHERE `id`='%d' LIMIT 1", BandasInfo[id][BIntegrantes],id);
		mysql_tquery(Conecction, query);
	}
	else if (accion == 1)
	{
		BandasInfo[id][BIntegrantes]++;
		mysql_format(Conecction, query, sizeof(query), "UPDATE `facciones` SET `Integrantes`='%d' WHERE `id`='%d' LIMIT 1", BandasInfo[id][BIntegrantes],id);
		mysql_tquery(Conecction, query);
	}

	return 1;
}
Funcion:faccbaneados(playerid)
{
	new h = cache_num_rows();

	if(h)
	{
		new faccion, Query[300];
		for(new i; i < h; i++)
		{

			cache_get_value_name_int(i, "Faccion", faccion);

			mysql_format(Conecction, Query, sizeof(Query), "UPDATE `usuarios` SET `Faccion`='0',`Rango`='0' WHERE `Faccion`='%d'",faccion);
			mysql_tquery(Conecction, Query);

			mysql_format(Conecction, Query, sizeof(Query), "UPDATE `facciones` SET `Nombre`='Slot Disponible',`EnUso`='0' WHERE `id`='%d' LIMIT 1",faccion);
			mysql_tquery(Conecction, Query);
		}
		CargarFacciones();
		va_SendClientMessage(playerid,-1,"Se limpiaron %d bandas", h);
	}
}

Funcion:VerLideresBanda(playerid)
{
	if(cache_num_rows() > 1)
	{
		ActualizarIntegrantes(PlayerInfo[playerid][jMiembro], 0);
		PlayerInfo[playerid][jMiembro] = 0;
		PlayerInfo[playerid][pRango] = 0;
	}
	else
	{
		BorrarBanda(playerid);
	}
	ExpulsarJugador(playerid, "Baneado");
}
BorrarBanda(playerid, accion = 1)
{
	if(PlayerInfo[playerid][pRango] == 8 && accion == 1)
	{
		new banda = PlayerInfo[playerid][jMiembro];
		new Query[240];
		mysql_format(Conecction, Query, sizeof(Query), "UPDATE `facciones` SET `Nombre`='Slot Disponible',`EnUso`='0' WHERE `id`='%d' LIMIT 1",banda);
		mysql_tquery(Conecction, Query);

		mysql_format(Conecction, Query, sizeof(Query), "UPDATE `usuarios` SET `Faccion`='0',`Rango`='0' WHERE `Faccion`='%d'",banda);
		mysql_tquery(Conecction, Query);
		//new fabrica_id = TieneFabrica(PlayerInfo[playerid][jMiembro]);

		foreach(new i : Territorios)
		{
			if(Tdata[i][tValid] == 1)
			{
				if(Tdata[i][tBanda] == PlayerInfo[playerid][jMiembro])
				{
					Tdata[i][tBanda] = 2;
				}
			}
		}

		foreach(new f : Fabricas)
		{
			if(Fabricas[f][pBanda] == PlayerInfo[playerid][jMiembro])
			{
				Fabricas[f][pBanda] = 0;
				BorrarStatsFabrica(f);
				GuardarFabrica(f);
				new query[300];
				mysql_format(Conecction, query,sizeof(query),"UPDATE `fabricas` SET `BandaID`='0' WHERE `ID`='%d'",Fabricas[f][pID]);
				mysql_tquery(Conecction, query);
				mysql_format(Conecction, query,sizeof(query),"UPDATE `fabricas` SET `EnVenta`='1', `EnUso`='0' WHERE `ID`='%d'",Fabricas[f][pID]);
				mysql_tquery(Conecction, query);
				break;
			}
		}
		CargarFacciones();
		foreach(new i : Player)
		{
			if(PlayerInfo[i][jMiembro] == banda && i != playerid)
			{
				PlayerInfo[i][jMiembro] = 0;
				PlayerInfo[i][pRango] = 0;
				GuardarCuenta(i);
				Mensaje(i, -1, "La banda que pertenec�as fue borrada por el lider.");
			}
		}
		DarRopa(playerid);
		DarPrendas(playerid);
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
		BandasInfo[PlayerInfo[playerid][jMiembro]][BIntegrantes] = 0;

		ActualizarIntegrantes(PlayerInfo[playerid][jMiembro], 0);
		PlayerInfo[playerid][jMiembro] = 0;
		PlayerInfo[playerid][pRango] = 0;
	}

	if(PlayerInfo[playerid][pRango] == 8 && accion == 2)
	{
		new Query[120];
		mysql_format(Conecction, Query, sizeof(Query), "SELECT ID FROM usuarios WHERE Faccion = '%d' AND Baneado = '0' AND Rango = '8' LIMIT 2",PlayerInfo[playerid][jMiembro]);
		mysql_tquery(Conecction, Query, "VerLideresBanda", "d", playerid);
		return 1;
	}
	else if(PlayerInfo[playerid][pRango] < 8 && accion == 2)
	{
		ExpulsarJugador(playerid, "Baneado");
	}
	return 1;
}

static GuardarArma(playerid, armaid,bslot = -1)
{
	if(VariableCaido[playerid] == 1 || PlayerInfo[playerid][Agonizando] == 1) return Mensaje(playerid,-1,"No puedes utilizar este comando en este momento.");
	if(IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid,-1,"No puedes utilizar este comando estando en un veh�culo.");
	if(VerBaul[playerid] == INVALID_PLAYER_ID) return Mensaje(playerid,-1,"Est�s muy lejos del �ltimo maletero que revisaste.");
	new t_o = armaid, veh_c, Float:Pos[3];

	new Float:CPos[3], autoid_slot = -1;
	for(new a = 0; a < MAX_PAUTOS; a++)
	{
		if(!IsValidVehicle(autos[a][VerBaul[playerid]])) continue;
		GetVehiclePos(autos[a][VerBaul[playerid]], CPos[0], CPos[1], CPos[2]);
		if(EstaEn(playerid, 5.0, CPos[0], CPos[1], CPos[2])) veh_c = autos[a][VerBaul[playerid]],autoid_slot = a;
	}

	if(autoid_slot == -1) return Mensaje(playerid,-1,"Est�s muy lejos del �ltimo maletero que revisaste.");

	if(bslot == -1)
	{
		new counter = 4;
		if(BAUL6(veh_c)) counter = 6;
		if(BAUL8(veh_c)) counter = 8;
		if(MOTO(veh_c)) counter = 2;
		switch(PlayerInfo[VerBaul[playerid]][VIP])
		{
			case 2: counter += 1;
			case 3: counter += 2;
		}
		for(new i = 1; i <= counter; i++)
		{
			if(EspacioBaul[VerBaul[playerid]][autoid_slot][i] == 0)
			{
				bslot = i;
				break;
			}
		}
	}
	if(bslot == -1) return Mensaje(playerid,-1, "No tienes mas espacio en el ba�l del veh�culo");

	if(Baul[veh_c] == 1)
	{
		if(t_o == 1650 || t_o == Objeto[playerid])
		{
			if(t_o == 1650 && Bidon[playerid] == 0) return Mensaje(playerid,-1,"Tu no tienes un bid�n de gasolina");
			if(t_o == Objeto[playerid] && Objeto[playerid] == 0) return Mensaje(playerid,-1,"No tienes ning�n objeto para guardar");
		}
		else
		{
			if(!SiTieneArma(playerid,t_o)) return Mensaje(playerid, -1, "Tu no tienes esta arma para guardar");

			if(PlayerInfo[playerid][pCargos] > 2)
			{
				GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
				foreach(new i : StreamedPlayer[playerid])
				{
					if(FaccLegal(i) && EstaEn(i,50.0,Pos[0],Pos[1],Pos[2])) return Mensaje(playerid,-1,"La polic�a esta muy cerca.");
				}
			}
		}



		if(EspacioBaul[VerBaul[playerid]][autoid_slot][bslot] == 0)
		{
			new string[128];
			EspacioBaul[VerBaul[playerid]][autoid_slot][bslot] = t_o;
			if(t_o > 0 && t_o <= 43)
			{
				format(string, sizeof(string), "%s guarda un/a %s en el maletero del veh�culo.", NombreJugador(playerid),GetWeaponNameEx(t_o));
				ProxDetector(20, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
				QuitarArma(playerid,t_o);
			}
			else
			{
				if(t_o == 1650) AccionesRol(playerid, "guarda un Bidon de gasolina en el maletero del veh�culo.", 20),Bidon[playerid] = 0;
				else AccionesRol(playerid, "guarda un objeto en el maletero del veh�culo.", 20),DCaja(playerid);
				RemovePlayerAttachedObject(playerid,4);
			}
			Objeto[playerid] = 0;
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			mysql_format(Conecction, string, sizeof(string), "UPDATE `p_autos` SET `%s`='%d' WHERE `ID`='%d'", BaulSlot(bslot),t_o,VehicleInfo[VerBaul[playerid]][autoid_slot][v_DBID]);
			mysql_tquery(Conecction, string);
		}

	}
	else Mensaje(playerid,-1,"El maletero est� cerrado.");
	return 1;
}
Funcion:SelectUserDPB(playerid)
{
	new row = cache_num_rows();
	if(row)
	{
		new idcasa, idpropietario;
		for(new i; i < row; i++)
		{
			cache_get_value_name_int(i, "IDPropietario", idpropietario);
			cache_get_value_name_int(i, "ID", idcasa);

			if(PropInfo[idcasa][pEnUso] == 1)
			{
				PropInfo[idcasa][pEnVenta] = 1;

				PropInfo[idcasa][pAbierta] = 1;
				PropInfo[idcasa][pRoperoAbierto] = 0;
				PropInfo[idcasa][pIDPropietario] = 0;

				new Query[120];
				mysql_format(Conecction, Query, sizeof(Query),"UPDATE `propiedades` SET `Propietario`='Nadie',`IDPropietario`='0',`EnVenta`='1' WHERE `ID`='%d' LIMIT 1", idcasa);
				mysql_tquery(Conecction, Query);
				CargarPropiedad(idcasa,1);
				GuardarPropiedad(idcasa);

			}
		}
		va_SendClientMessage(playerid, -1, "Se desocuparon %d casas", row);
	}
	else
	{
		Mensaje(playerid, -1, "No hay registros.");
	}
	return 1;
}

Funcion:SelectBandasTerris(playerid)
{

	new dialog[650],total,BID;

	dialog = "Banda\tTerritorios\n";
	new h = cache_num_rows();
 	for(new i = 0; i < h; i++)
	{
	    cache_get_value_name_int(i, "BID", BID);
		cache_get_value_name_int(i, "total_territorios", total);

        format(dialog, sizeof dialog, "%s%d- %s\t%d\n",dialog,i+1,BandasInfo[BID][BNombre],total);
	}

    return MostrarDialog(playerid, DIALOG_INFO, DIALOG_STYLE_TABLIST_HEADERS, "Bandas mas peligrosas de "NameServer" RP", dialog, "Aceptar", "");

}


Funcion:SelectTop(playerid, d)
{
	new dialog[(MAX_PLAYER_NAME+1+25+10)*12], Conexion,monto,name[MAX_PLAYER_NAME+1],online, titulo[31], banco=0;
	if(d == 1) dialog = "Nombre\tDinero total\t�lt. conexi�n\n";
	else if(d == 2) dialog = "Nombre\tCoins\t�lt. conexi�n\n";
	else if(d == 3) dialog = "Nombre\tAsesinatos\t�lt. conexi�n\n";
	new h = cache_num_rows();
 	for(new i = 0; i < h; i++)
	{
	    cache_get_value_name(i, "Username", name);
	    if(d== 1) cache_get_value_name_int(i, "Money", monto);
		if(d== 1) cache_get_value_name_int(i, "Banco", banco);
		else if(d == 2) cache_get_value_name_int(i, "Creditos", monto);
		else if(d == 3) cache_get_value_name_int(i, "Asesinatos", monto);
        cache_get_value_name_int(i, "Conexion",Conexion);
        cache_get_value_name_int(i, "Online",online);

        if(online == 0) format(dialog, sizeof dialog, "%s%s\t%s\t%s\n",dialog,name,ConvertirNumero(monto+banco),FormatTimeleft(gettimeVariable - Conexion));
        else format(dialog, sizeof dialog, "%s%s\t%s\t{80D465}Conectado"CB"\n",dialog,name,ConvertirNumero(monto+banco));
	}
	if(d == 1 || d == 2)
	{
	    format(titulo, sizeof titulo, "Los millonarios de "NameServer" RP");
	}
	else if(d == 3)
	{
		format(titulo, sizeof titulo, "Los asesinos de "NameServer" RP");
	}
    return MostrarDialog(playerid, DIALOG_INFO, DIALOG_STYLE_TABLIST_HEADERS, titulo, dialog, "Aceptar", "");
}

static BajarTiemposCarcel(i)
{

	if(Jail[i] == 1)
	{
		if(PlayerInfo[i][pTiempoCarcel] <= 0 || PlayerInfo[i][pTiempoCarcel] >= 0)
		{
			if(EstaEnBus[i] == 0)
			{
				PlayerInfo[i][pTiempoCarcel] --;
				if(PlayerInfo[i][pTiempoCarcel] <= 0)
				{
					new donde = random(6);
					Mensaje(i,-1,""CR"Cumpliste tu condena"CB", quedas en libertad.");
					switch(PlayerInfo[i][pTipoCarcel])
					{
						case 1:
						{
							switch(donde)
							{
								case 0: SetPosEx(i, 216.4100,120.2400,999.0156,0.0000,10,1);
								case 1: SetPosEx(i, 217.3244,120.3063,999.0156,6.6009,10,1);
								case 2: SetPosEx(i, 215.5035,120.2255,999.0156,355.9474,10,1);
								case 3: SetPosEx(i, 216.0696,121.0746,999.0156,355.9474,10,1);
								case 4: SetPosEx(i, 217.4385,120.7687,999.0156,355.9474,10,1);
								case 5: SetPosEx(i, 216.9519,118.9357,999.0156,2.6959,10,1);
							}
						}
						case 2:
						{
							switch(donde)
							{
								case 0: SetPosEx(i, 216.4100,120.2400,999.0156,0.0000,10,5);
								case 1: SetPosEx(i, 217.3244,120.3063,999.0156,6.6009,10,5);
								case 2: SetPosEx(i, 215.5035,120.2255,999.0156,355.9474,10,5);
								case 3: SetPosEx(i, 216.0696,121.0746,999.0156,355.9474,10,5);
								case 4: SetPosEx(i, 217.4385,120.7687,999.0156,355.9474,10,5);
								case 5: SetPosEx(i, 216.9519,118.9357,999.0156,2.6959,10,5);
							}
						}
						case 3:
						{
							switch(donde)
							{
								case 0: SetPosEx(i, 212.4893,158.3311,1003.0300,265.8078,3,7);
								case 1: SetPosEx(i, 212.3264,157.0358,1003.0300,270.1945,3,7);
								case 2: SetPosEx(i, 212.6126,159.4301,1003.0300,270.5078,3,7);
								case 3: SetPosEx(i, 211.6316,159.2158,1003.0234,270.5078,3,7);
								case 4: SetPosEx(i, 211.3360,158.4849,1003.0300,270.5078,3,7);
								case 5: SetPosEx(i, 211.4012,157.4245,1003.0300,270.5078,3,7);
							}
						}
						case 4:
						{
							switch(donde)
							{
								case 0: SetPosEx(i, 292.9334,1419.6272,10.1358,263.0111,0,0);
								case 1: SetPosEx(i, 292.3492,1418.9880,10.1810,263.0111,0,0);
								case 2: SetPosEx(i, 293.0168,1420.9564,10.1436,263.0111,0,0);
								case 3: SetPosEx(i, 293.6794,1419.9397,10.0793,263.0111,0,0);
								case 4: SetPosEx(i, 293.8986,1418.5115,10.0506,263.0111,0,0);
								case 5: SetPosEx(i, 294.7386,1419.3837,9.9930,263.0111,0,0);
							}
						}
					}
					PlayerInfo[i][pTipoCarcel] = 0;
					PlayerInfo[i][pTiempoCarcel] = 0;
					PlayerInfo[i][pTiempoJail] = 0;
					Esposando[i] = 0;
					StatusFC[i] = 0;
					Jail[i] = 0;
					San[i] = 0;
					CargandoEx(i);
				}
			}
		}
	}
	if(San[i] == 1)
	{
		if(PlayerInfo[i][pTiempoJail] <= 0 || PlayerInfo[i][pTiempoJail] >= 0)
		{
			PlayerInfo[i][pTiempoJail] --;
			if(PlayerInfo[i][pTiempoJail] <= 0)
			{
				Jail[i] = 0;
				PlayerInfo[i][pTiempoCarcel] = 0;
				PlayerInfo[i][pTiempoJail] = 0;
				San[i] = 0;
				new donde = random(6);
				switch(donde)
				{
					case 0: SetPosEx(i,1443.8561,-1663.9950,13.5530,91.1813,0,0);
					case 1: SetPosEx(i,1443.4794,-1665.1669,13.5530,91.1813,0,0);
					case 2: SetPosEx(i,1443.6100,-1666.9442,13.5530,91.1813,0,0);
					case 3: SetPosEx(i,1445.0105,-1666.2917,13.5530,91.1813,0,0);
					case 4: SetPosEx(i,1444.9506,-1664.9329,13.5530,91.1813,0,0);
					case 5: SetPosEx(i,1444.5131,-1663.3024,13.5530,91.1813,0,0);
				}
				Mensaje(i, -1, "Has cumplido tu tiempo de sancion, ten en cuenta las reglas para no volver a ser sancionado.");
			}
		}
	}
}

static AntiCheatDeSegundo(i)
{

	new arma = GetPlayerWeapon(i);
	if(PlayerInfo[i][pAdmin] < 4)
	{
		switch (arma)
		{
			case 35..40,42,44,55,16..18:
			{
				ExpulsarJugador(i, "Cheat armas (4549)");
			}
		}
	}
	if(NivelArmeroRequerido && PlayerInfo[i][jNivel] < 6)
	{
		if(!User_Temp[i][pt_PLAYER_EVENTODM] && !EstaEnEvento[i])
		{
			if(arma != 0) ResetPlayerWeapons(i);
		}
	}

	if(!IsPlayerNPC(i) && TimerWeapons[i] < gettimeVariable && PlayerInfo[i][pAdmin] < ADMIN_LVL_JUEGO1)
	{
		if(VehiculosInfo[GetPlayerVehicleID(i)][vfaccion] == 1 && GetPlayerVehicleSeat(i) == 0 && PlayerInfo[i][jMiembro] != 1 && GetPlayerState(i) == PLAYER_STATE_DRIVER)
		{
			new string[144];
			format(string,sizeof(string),"[!]"CB" El anticheat ha detectado que el usuario uso teleport hacia una patrulla - "Rojo"%s (ID:%d) - N:%d (Kick)"CB".",NombreJugador(i),i,PlayerInfo[i][jNivel]);
			MensajeAdmin(COLOR_CHEAT, string, 3);
			ExpulsarJugador(i, "Teleport a patrulla");
			return 1;
		}
		if(arma != 46 && !SiTieneArma(i,arma))
		{
			if(Avisos[i] >= 3)
			{
				new string[144];
				format(string,sizeof(string),"El jugador {FF3300}%s(ID: %d)"CB" fue expulsado por el anticheat. Raz�n:{FF3300} Cheat de armas"CB"(%d).",NombreJugador(i),i,arma);
				MensajedeCheater(string);
				ExpulsarJugador(i, "Cheat de armas");
				return 1;
			}
			else Avisos[i]++;
		}
	}
	return 1;
}
/*
PlantasMarihuana()
{

	new str[354];
	foreach(new e : Plantas)
	{
		if(MariInfo[e][Creado] == 1)
		{
			if(MariInfo[e][Estado] == 1)
			{
				MariInfo[e][Seg] -= 1;
				if(MariInfo[e][Seg] <= 0 && MariInfo[e][Min] <= 0)
				{
					DestroyDynamicObjectEx(MariInfo[e][ObjetoID]);
					DestroyDynamic3DTextLabelEx(MariInfo[e][Label]);
					MariInfo[e][Estado] = 0;
					MariInfo[e][Creado] = 0;
					MariInfo[e][pX] = 0;
					MariInfo[e][pY] = 0;
					MariInfo[e][pZ] = 0;
					format(MariInfo[e][Plantador], 24, "Nadie");
					Iter_SafeRemove(Plantas, e, e);
				}
				if(MariInfo[e][Seg] <= 0)
				{
					MariInfo[e][Min] -= 1;
					MariInfo[e][Seg] = 60;
				}
				format(str, sizeof(str), ""CR"Semillas de Marihuana"CB"\nSembradas por {009BE4}%s"CB"\nSe secan en %dm %ds\n"CR"/regar"CB"", MariInfo[e][Plantador], MariInfo[e][Min], MariInfo[e][Seg]);
				UpdateDynamic3DTextLabelText(MariInfo[e][Label], COLOR_BLANCO, str);
			}
			else if(MariInfo[e][Estado] == 2)
			{
				MariInfo[e][Seg] -= 1;
				if(MariInfo[e][Min] <= 0 && MariInfo[e][Hor] > 0)
				{
					MariInfo[e][Seg] = 60;
					MariInfo[e][Min] = 60;
					MariInfo[e][Hor] -= 1;
					DestroyDynamicObjectEx(MariInfo[e][ObjetoID]);
					if(MariInfo[e][Hor] <= 1) MariInfo[e][ObjetoID] = CreateDynamicObject(19473, MariInfo[e][pX], MariInfo[e][pY], MariInfo[e][pZ]-2.4, 0.000000, 0.000000, -0.000000);
					else if(MariInfo[e][Hor] == 2) MariInfo[e][ObjetoID] = CreateDynamicObject(19473, MariInfo[e][pX], MariInfo[e][pY], MariInfo[e][pZ]-1.78, 0.000000, 0.000000, -0.000000);
					else if(MariInfo[e][Hor] == 3) MariInfo[e][ObjetoID] = CreateDynamicObject(19473, MariInfo[e][pX], MariInfo[e][pY], MariInfo[e][pZ]-1.52, 0.000000, 0.000000, -0.000000);
					else if(MariInfo[e][Hor] == 4) MariInfo[e][ObjetoID] = CreateDynamicObject(19473, MariInfo[e][pX], MariInfo[e][pY], MariInfo[e][pZ]-1.26, 0.000000, 0.000000, -0.000000);
					else if(MariInfo[e][Hor] == 5) MariInfo[e][ObjetoID] = CreateDynamicObject(19473, MariInfo[e][pX], MariInfo[e][pY], MariInfo[e][pZ]-1.00, 0.000000, 0.000000, -0.000000);
				}
				if(MariInfo[e][Seg] <= 0 && MariInfo[e][Min] > 0)
				{
					MariInfo[e][Min] -= 1;
					MariInfo[e][Seg] = 60;
				}
				format(str, sizeof(str), ""CR"Planta de Marihuana"CB"\nSembrada por {009BE4}%s"CB"\nMadura en %dh %dm %ds", MariInfo[e][Plantador], MariInfo[e][Hor], MariInfo[e][Min], MariInfo[e][Seg]);
				UpdateDynamic3DTextLabelText(MariInfo[e][Label], COLOR_BLANCO, str);
				if(MariInfo[e][Seg] <= 0 && MariInfo[e][Min] <= 0 && MariInfo[e][Hor] <= 0)
				{
					MariInfo[e][Estado] = 3;
					MariInfo[e][Hor] = 4;
					MariInfo[e][Min] = 59;
					MariInfo[e][Seg] = 59;
					DestroyDynamicObjectEx(MariInfo[e][ObjetoID]);
					MariInfo[e][ObjetoID] = CreateDynamicObject(19473, MariInfo[e][pX], MariInfo[e][pY], MariInfo[e][pZ]-1.00, 0.000000, 0.000000, -0.000000);
					format(str, sizeof(str), ""CR"Planta de Marihuana"CB"\nSembrada por {009BE4}%s"CB"\nSe seca en %dh %dm %ds\n"CR"/cosechar planta"CB"", MariInfo[e][Plantador], MariInfo[e][Hor], MariInfo[e][Min], MariInfo[e][Seg]);
					UpdateDynamic3DTextLabelText(MariInfo[e][Label], COLOR_BLANCO, str);
				}
			}
			else if(MariInfo[e][Estado] == 3)
			{
				MariInfo[e][Seg] -= 1;
				if(MariInfo[e][Seg] <= 0 && MariInfo[e][Min] > 0)
				{
					MariInfo[e][Min] -= 1;
					MariInfo[e][Seg] = 60;
				}
				if(MariInfo[e][Min] <= 0 && MariInfo[e][Hor] > 0)
				{
					MariInfo[e][Seg] = 60;
					MariInfo[e][Min] = 60;
					MariInfo[e][Hor] -= 1;
				}
				format(str, sizeof(str), ""CR"Planta de Marihuana"CB"\nSembrada por {009BE4}%s"CB"\nSe seca en %dh %dm %ds\n"CR"/cosechar planta"CB"", MariInfo[e][Plantador], MariInfo[e][Hor], MariInfo[e][Min], MariInfo[e][Seg]);
				UpdateDynamic3DTextLabelText(MariInfo[e][Label], COLOR_BLANCO, str);
				if(MariInfo[e][Seg] <= 0 && MariInfo[e][Min] <= 0 && MariInfo[e][Hor] <= 0)
				{
					DestroyDynamicObjectEx(MariInfo[e][ObjetoID]);
					DestroyDynamic3DTextLabelEx(MariInfo[e][Label]);
					MariInfo[e][Estado] = 0;
					MariInfo[e][Creado] = 0;
					MariInfo[e][pX] = 0;
					MariInfo[e][pY] = 0;
					MariInfo[e][pZ] = 0;
					format(MariInfo[e][Plantador], 24, "Nadie");
					Iter_SafeRemove(Plantas, e, e);
				}
			}
		}
	}

}*/

TiempoEncargos(i)
{
	new str2[64];
	for(new e=1;e<MAX_ENCARGOS;e++)
	{
		if(PlayerTemp[i][TieneEncargo] > 0)
		{
			TextDrawShowForPlayer(i,MisionT2[5]);
			PlayerTextDrawShow(i,IndicacionesT[i]);
			if(Encargo[PlayerTemp[i][TieneEncargo]][SegundosMision] < 10) format(str2, 64, "00:0%d", Encargo[PlayerTemp[i][TieneEncargo]][SegundosMision]);
			else if(Encargo[PlayerTemp[i][TieneEncargo]][SegundosMision] < 60) format(str2, 64, "00:%d", Encargo[PlayerTemp[i][TieneEncargo]][SegundosMision]);
			else if(Encargo[PlayerTemp[i][TieneEncargo]][SegundosMision] >= 60) format(str2, 64, "0%d:%d",Encargo[PlayerTemp[i][TieneEncargo]][SegundosMision]/60, Encargo[PlayerTemp[i][TieneEncargo]][SegundosMision]%(60));
			PlayerTextDrawSetString(i,aTiempoCriminal[i],str2);
			if(PlayerInfo[i][pWP2] == 23 && Encargo[PlayerTemp[i][TieneEncargo]][Tiene9mm] == 0 && Encargo[PlayerTemp[i][TieneEncargo]][TieneColega] == 1)
			{
				Encargo[PlayerTemp[i][TieneEncargo]][Tiene9mm] = 1;
				PlayerTextDrawSetString(i,IndicacionesT[Encargo[PlayerTemp[i][TieneEncargo]][IdCriminal]],Desbug("~g~Re�nete~w~_con_tu_colega_en_el_punto_marcado."));
			}
			if(Encargo[PlayerTemp[i][TieneEncargo]][SegundosMision] > 0) PlayerTextDrawShow(i,aTiempoCriminal[i]);
			else FinTiempoCriminal(e);
		}
	}
}

static TimerBajarTiempos(i)
{
	//Bajar Tiempos PASAR A GET TIME
	if(TiempoAgresor[i] > 0 && Agresor[i] != INVALID_PLAYER_ID) TiempoAgresor[i]--;
	else if(TiempoAgresor[i] <= 0 && Agresor[i] != INVALID_PLAYER_ID)
	{
		TiempoAgresor[i] = 0;
		Agresor[i] = INVALID_PLAYER_ID;
	}
	//Hospital
	if(PlayerConectado(i))
	{
		if(Curando[i] == 1)
		{
			new Float:health;
			GetPlayerHealth(i,health);
			if(health < 60) EstablecerVida(i, health+2.0);
			else
			{
				Curando[i] = 0;
				SetTimerEx("ApareceHospital2", 1000, false, "d", i);
			}
		}
	}


	if(!IsPlayerPaused(i)) TiempoPD[i]++;
	if(!IsPlayerPaused(i)) TiempoConectado[i]++;
	if(LogeoCorrecto[i] == 0) LimpiarChat(i, 10, 1);
	if(ofertador[i] != INVALID_PLAYER_ID && gettimeVariable > TiempoOferta[i]) TerminarOferta(i);
	if(PlayerCheckPoint[i][cpvalido]) SetPlayerCheckpoint(i,PlayerCheckPoint[i][cpX], PlayerCheckPoint[i][cpY], PlayerCheckPoint[i][cpZ], PlayerCheckPoint[i][cpA]);
	if(ViendoPantalla[i] == 1) modificarpuntotren(i);
	if(ViendoGPS[i] == 1) PointUpdate(i);
	if(NotificacionConectado[i] > 0)
	{
		NotificacionConectado[i] --;
		if(NotificacionConectado[i] == 2)
		{
			PlayerTextDrawBoxColor(i, NotiConnect[i][0], 70);
			PlayerTextDrawColor(i, NotiConnect[i][1], 9044129);
			PlayerTextDrawColor(i, NotiConnect[i][2], -926365496);
			PlayerTextDrawColor(i, NotiConnect[i][3], -926365496);
			PlayerTextDrawShow(i, NotiConnect[i][0]);
			PlayerTextDrawShow(i, NotiConnect[i][1]);
			PlayerTextDrawShow(i, NotiConnect[i][2]);
			PlayerTextDrawShow(i, NotiConnect[i][3]);
		}
		else if(NotificacionConectado[i] == 1)
		{
			PlayerTextDrawBoxColor(i, NotiConnect[i][0], 50);
			PlayerTextDrawColor(i, NotiConnect[i][1], 11075654);
			PlayerTextDrawColor(i, NotiConnect[i][2], -926365496);
			PlayerTextDrawColor(i, NotiConnect[i][3], -926365666);
			PlayerTextDrawShow(i, NotiConnect[i][0]);
			PlayerTextDrawShow(i, NotiConnect[i][1]);
			PlayerTextDrawShow(i, NotiConnect[i][2]);
			PlayerTextDrawShow(i, NotiConnect[i][3]);
		}
		else if(NotificacionConectado[i] <= 0)
		{
			PlayerTextDrawBoxColor(i, NotiConnect[i][0], 255);
			PlayerTextDrawColor(i, NotiConnect[i][1], 8388863);
			PlayerTextDrawColor(i, NotiConnect[i][2], -1);
			PlayerTextDrawColor(i, NotiConnect[i][3], -1);
			PlayerTextDrawHide(i, NotiConnect[i][0]);
			PlayerTextDrawHide(i, NotiConnect[i][1]);
			PlayerTextDrawHide(i, NotiConnect[i][2]);
			PlayerTextDrawHide(i, NotiConnect[i][3]);
		}
	}
	if(PlayerTemp[i][Refuerzos] > 0)
	{
		PlayerTemp[i][Refuerzos] --;
		if(PlayerInfo[i][jMiembro] == 1 || PlayerInfo[i][jMiembro] == 2)
		{
			MarcarJugador(i,0x3399FFFF,1);
			if(PlayerTemp[i][Refuerzos] == 90 || PlayerTemp[i][Refuerzos] == 70 || PlayerTemp[i][Refuerzos] == 50) TextDrawHideForPlayer(i,RefuerzosT[3]);
			if((PlayerTemp[i][Refuerzos] == 80 || PlayerTemp[i][Refuerzos] == 60 || PlayerTemp[i][Refuerzos] == 40) && PlayerTemp[i][Refuerzos] > 40) TextDrawShowForPlayer(i,RefuerzosT[3]);
			if(PlayerTemp[i][Refuerzos] == 40) { for(new td; td < sizeof(RefuerzosT); td++) TextDrawHideForPlayer(i,RefuerzosT[td]); }
		}
		else MarcarJugador(i,BandasInfo[PlayerInfo[i][jMiembro]][BColor2],PlayerInfo[i][jMiembro]);
		if(PlayerTemp[i][Refuerzos] == 0) MarcarJugador(i,0xFFFFFF00,PlayerInfo[i][jMiembro]);
	}

}
static RegaloRandomConquista(playerid)
{
	new gift = random(8);
	switch(gift)
	{
	    case 0:
	    {
			DarDinero(playerid, 10000);
		    PlayerInfo[playerid][Moneda] += 2;
			Mensaje(playerid, -1, "Recibes "CR"$10.000"CB" y {89746A}2 "Moneda1""CB".");
	    }
	    case 1:
	    {
			DarDinero(playerid, 15000);
			Mensaje(playerid, -1, "Recibes "CR"$15.000"CB".");
	    }
	    case 2: PlayerInfo[playerid][pMateriales] += 60,Mensaje(playerid, -1, "Recibes "CR"60 piezas de armas"CB".");
	    case 3:
		{
		    PlayerInfo[playerid][pCrack] += 10;
			PlayerInfo[playerid][pMarihuana] += 10;
			PlayerInfo[playerid][pMedicamentos] += 10;
			Mensaje(playerid, -1, "Recibes "CR"10g de crack"CB", "CR"10g de marihuana"CB" y "CR"10 medicamentos"CB".");
		}
		case 4: PlayerInfo[playerid][Credits] += 1,Mensaje(playerid, -1, "Recibes "CR"1 "Moneda3""CB".");
	   	default: PlayerInfo[playerid][pMateriales] += 60,Mensaje(playerid, -1, "Recibes "CR"60 piezas de armas"CB".");
	}
	return 1;
}


Funcion:AntiVida(playerid, Float: vida, Float: dano)
{
	new Float:vidanueva;
	GetPlayerHealth(playerid,vidanueva);
	new Float:restas = floatsub(vidanueva,vida);
	AntiVidas[playerid] = false;
	if(restas > 1)
	{

		RestarVida(playerid, dano);
		//va_SendClientMessage(playerid, -1, "hecho Vidanueva: %f, vidaac: %f", vidanueva,vida);
	}
	/*else
	{
		va_SendClientMessage(playerid, -1, "Vidanueva: %f, vidaac: %f", vidanueva, vida);
	}*/


	return 1;
}

static PickUpBoombox(playerid)
{
    foreach(new i : Player)
	{
 		if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
   		{
     		Mensaje(i, COLOR_GREY, "El parlante que estabas escuchando fue guardado por ende la m�sica dej� de sonar.");
     		StopAudioStreamForPlayer(i);
			ParlanteEscuchando[i] = 0;
		}
	}
	DeletePVar(playerid, "BBArea");
	if(IsValidDynamicObject(GetPVarInt(playerid, "PlacedBB"))){
		DestroyDynamicObject(GetPVarInt(playerid, "PlacedBB"));
		SetPVarInt(playerid, "PlacedBB", INVALID_STREAMER_ID);
	}
 	DeletePVar(playerid, "BBX"); DeletePVar(playerid, "BBY"); DeletePVar(playerid, "BBZ");
	DeletePVar(playerid, "BBInt");
	DeletePVar(playerid, "BBVW");
	DeletePVar(playerid, "BBStation");
	DeletePVar(playerid, "EmisoraIDParlante");
	return 1;
}

LimpiarEstado(playerid)
{
	if(PlayerInfo[playerid][pTieneEstado] == 1) {DestroyDynamic3DTextLabelEx(estado1[playerid]);}
}


NombreBandaAceptado(const inputtext[])
{

	for(new s = 0, l = strlen(inputtext); s < l; s ++)
	{
	    switch (inputtext[s])
		{
			case 'A' .. 'Z': continue;
			case 'a' .. 'z': continue;
			case '0' .. '9': continue;
			case '�','�','�','�','�',' ','$','�','_','-','�','!','"','#','.','@','&','[',']','*','(',')','�','�','�','�','�': continue;
			default: return 0;
		}
	}
	return 1;
}
Funcion:SelectUsersIP(playerid)
{
	new dialog[45*15], miembroson = 0, sotoplayo[80];
	new nivel, name[32], online, Conexion;
	dialog = "Nombre\tNivel\t�lt. conexi�n\n";
	new h = cache_num_rows();
	for(new i = 0; i < h; i++)
    {

        cache_get_value_name_int(i, "Nivel", nivel);
		cache_get_value_name_int(i, "Online", online);
        cache_get_value_name(i, "Username", name);
		cache_get_value_name_int(i, "Conexion", Conexion);

		if(online == 0) format(dialog, sizeof dialog, "%s%s\t%d\t%s\n", dialog,name,nivel,FormatTimeleft(gettimeVariable - Conexion));
		else{
            miembroson ++;
            format(dialog, sizeof dialog, "%s%s\t%d\t{80D465}On"CB"\n", dialog,name, nivel);
        }
	}

	format(sotoplayo, sizeof sotoplayo,"Conectados: "CR"%d"CB"/"CR"%d"CB"." , miembroson, h);
	MostrarDialog(playerid, INFOMEDICO, DIALOG_STYLE_TABLIST_HEADERS, sotoplayo, dialog, "Aceptar", "");
	return 1;
}

Funcion:EliminarLabelBienvenida(playerid)
{
	if(PlayerBienvenida[playerid])
	{
		DeletePlayer3DTextLabel(playerid, bienvenida[playerid]);
		PlayerBienvenida[playerid] = false;
		PlayerInfo[playerid][pGPS] =1;
        Mensaje(playerid,-1,""CR""NameServer""CB" te ha regalo una estad�sticas iniciales est�s mismas son temporales, usa "CR"/inventario"CB".");
        PrimerosPasos[playerid] = 0;
        Inventario(playerid,playerid);
	}
}
Funcion:VerCuenta(playerid)
{
	new dialog[2000],Conexion,admin,id,name[32],online, count = 0;
	dialog = "ID\tNombre\tAdmin\t�lt. conexi�n\n";
	new h = cache_num_rows();
 	for(new i = 0; i < h; i++)
	{
		cache_get_value_name_int(i, "ID", id);
	    cache_get_value_name(i, "Username", name);
	    cache_get_value_name_int(i, "Admin", admin);
        cache_get_value_name_int(i, "Conexion",Conexion);
        cache_get_value_name_int(i, "Online",online);
		User_Temp[playerid][Cercanos][count] = id;
		count ++;
        if(online == 0) format(dialog, sizeof dialog, "%s%d\t%s\t%s\t%s\n", dialog,id,name, RangoAdmin[admin],FormatTimeleft(gettimeVariable - Conexion));
        else format(dialog, sizeof dialog, "%s%d\t%s\t%s\t{80D465}Conectado"CB"\n", dialog,id,name, RangoAdmin[admin]);

	}

	new ads[40];
	format(ads, sizeof ads, "Usuarios con nombre parecido: %d", h);
    MostrarDialog(playerid, DIALOG_BUSCAR_ADMIN, DIALOG_STYLE_TABLIST_HEADERS, ads, dialog, "Informaci�n", "Salir");
	return 1;
}


Funcion:VerInfoCuenta(playerid)
{
	new line_str[1000],Conexion,admin,name[32],online, coins, wz, baneado, email[50], id;

 	if(cache_num_rows())
	{
		cache_get_value_name_int(0, "ID", id);
	    cache_get_value_name(0, "Username", name);
	    cache_get_value_name_int(0, "Admin", admin);
        cache_get_value_name_int(0, "Conexion", Conexion);
        cache_get_value_name_int(0, "Online", online);
		cache_get_value_name_int(0, "Creditos", coins);
		cache_get_value_name_int(0, "Moneda", wz);
		cache_get_value_name_int(0, "Baneado", baneado);
		cache_get_value_name(0, "Email", email);
		new conex[10];
		if(online)
		{
			conex = "Conectado";
		}
		else
		{
			conex[0] = Conexion;
		}
		if(baneado)
		{
			new quienban[32], razonban[128];
			cache_get_value_name(0, "QuienBan", quienban);
			cache_get_value_name(0, "Banpor", razonban);
			format(line_str, sizeof(line_str), ""CB"\tInformaci�n general\n\nNombre: "CR"%s"CB"\nRango staff: "CR"%s"CB"\n�ltima conexi�n: "CR"%s"CB"\nEmail: "CR"%s"CB"\nBaneado: {C43735}S�"CB"\nBaneante: "CR"%s"CB"\nRaz�n de baneo: "CR"%s"CB"\n\n\n\tItems importantes\n\nCoins: "CR"%d"CB"\n"Moneda1": "CR"%d"CB"\n", name, RangoAdmin[admin], FormatTimeleft(gettimeVariable - conex[0]), email, quienban, razonban, coins, wz);
			User_Temp[playerid][PlayerSelect] = id;
			MostrarDialog(playerid, DIALOG_ACCION_USER, DIALOG_STYLE_MSGBOX, "Informaci�n del usuario", line_str, "Desbanear", "Salir");
		}
		else
		{
			format(line_str, sizeof(line_str), ""CB"\tInformaci�n general\n\nNombre: "CR"%s"CB"\nRango staff: "CR"%s"CB"\n�ltima conexi�n: "CR"%s"CB"\nEmail: "CR"%s"CB"\nBaneado: "CR"No"CB"\n\n\n\tItems importantes\n\nCoins: "CR"%d"CB"\n"Moneda1": "CR"%d"CB"\n", name, RangoAdmin[admin], FormatTimeleft(gettimeVariable - conex[0]), email, coins, wz);
			MostrarDialog(playerid, DIALOG_INFO, DIALOG_STYLE_MSGBOX, "Informaci�n del usuario", line_str, "Aceptar", "");
		}


	}

	return 1;
}
CreatePlayerVehicle(playerid, modelo, Float: x, Float: y, Float: z, Float: angle, color1, color2)
{

	new mensaje[10], value = random(999);
	format(mensaje, 10,""Moneda1"RP %d",value);
	new query[900],slot = CompraSlot(playerid), Float:CompraPos[4];
	if(slot != -1)
 	{
		VehicleInfo[playerid][slot][vModelo] = modelo;
		VehicleInfo[playerid][slot][vColor1] = color1;
		VehicleInfo[playerid][slot][vColor2] = color2;
		VehicleInfo[playerid][slot][vPrecio] = 35;
		VehicleInfo[playerid][slot][vMonedaa] = 1;
		VehicleInfo[playerid][slot][v0_interior] = 0;
		VehicleInfo[playerid][slot][v0_vw] = 0;
		Patente[playerid][slot] = mensaje;
		for(new i = 1; i < 11; i++) EspacioBaul[playerid][slot][i] = 0;
		for(new c = 0; c < 13; c++) Componentes[playerid][c][slot] = 0;
		switch(modelo)
		{
			case 453,446,493,452,454,484,595,473:
			{
				new rand = random(sizeof(ConceBSpawn));
				CompraPos[0] = ConceBSpawn[rand][0],CompraPos[1] = ConceBSpawn[rand][1],CompraPos[2] = ConceBSpawn[rand][2],CompraPos[3] = ConceBSpawn[rand][3];
			}
			case 487:
			{
				new rand = random(sizeof(ConceHeliSpawn));
				CompraPos[0] = ConceHeliSpawn[rand][0],CompraPos[1] = ConceHeliSpawn[rand][1],CompraPos[2] = ConceHeliSpawn[rand][2],CompraPos[3] = ConceHeliSpawn[rand][3];
			}
		    default:
		    {
				new rand = random(sizeof(ConceSpawn));
		    	CompraPos[0] = ConceSpawn[rand][0],CompraPos[1] = ConceSpawn[rand][1],CompraPos[2] = ConceSpawn[rand][2],CompraPos[3] = ConceSpawn[rand][3];
		    }
		}
		mysql_format(Conecction, query, 900, "INSERT INTO `p_autos` (UserID,Modelo,Segurov,X,Y,Z,A,Color1,Color2,VidaV,Precio,vMoneda,Patente) VALUES ('%d','%d','0','%f','%f','%f','%f','%d','%d','1000.0','%d','1','%e')",PlayerInfo[playerid][p_DBID],modelo,CompraPos[0],CompraPos[1],CompraPos[2],CompraPos[3],color1,color2,35,mensaje);
		mysql_tquery(Conecction, query, "VehiculoRegistrado","dd",playerid,slot);
		autos[slot][playerid] = CreateVehicle(modelo,x,y,z,angle,color1,color2,-1);
		VehicleFuel[autos[slot][playerid]] = CombustibleCoche(autos[slot][playerid]);
		VehicleInfo[playerid][slot][vGas] = CombustibleCoche(autos[slot][playerid]);
		alarma[autos[slot][playerid]] = 0;
		bloqueado[autos[slot][playerid]] = 0;
		SetVehicleNumberPlate(autos[slot][playerid], Patente[playerid][slot]);
		va_SendClientMessage(playerid,-1, "La patente de tu veh�culo es {00CCFF}%s{FFFFFF}.", Patente[playerid][slot]);
		Mensaje(playerid, -1, "En caso de que tu veh�culo sea robado, llama a la polic�a y comun�cales la patente.");
		SetTimerEx("EstacionarCoche", 2500, false, "dd", playerid, 0);
		PutPlayerInVehicleAC(playerid, autos[slot][playerid], 0);
 	 	MostrarInfoVehiculo(playerid);
  		MostrarVelocimetro(playerid);
		GuardarCuenta(playerid);
	}
	return 1;
}
static LimpiarVarsVenta(playerid)
{
	User_Temp[playerid][PlayerSelect] = INVALID_PLAYER_ID;
	User_Temp[playerid][MonedaSelect] = 0;
	User_Temp[playerid][VehSelect] = 0;
	User_Temp[playerid][PrecioSelect] = 0;
	User_Temp[playerid][PlayerVendedor] = INVALID_PLAYER_ID;

	/*for(new i; i < 29; i++)
	{
		User_Temp[playerid][Cercanos][i] = INVALID_PLAYER_ID;
	}*/
	return 1;
}
static VenderCasaMuni(playerid)
{
	for(new n = 0; n < MAX_PCASAS; n++)
	{
		if(PlayerInfo[playerid][CasaID][n] > 0)
		{
			MostrarDialog(playerid, VENDERCASA, DIALOG_STYLE_MSGBOX,"Advertencia","Por vender tu propiedad en este lugar se te pagara la mitad de su precio original, �Quieres continuar?","Aceptar","Cancelar");
			break;
		}
	}
	return 1;
}

static VenderCasaJugador(playerid)
{

	new casa[140*MAX_PCASAS];
	/*for(new k = 0; k < MAX_PCASAS; k++)
	{
		if(PlayerInfo[playerid][CasaID][k] == 0) continue;
		foreach(new p : Propiedades)
		{
			if(PropInfo[p][propiedad_ID] == PlayerInfo[playerid][CasaID][k])
			{
				switch(PropInfo[p][pEnVentaPor])
				{
					case 0: format(casa,sizeof(casa),"%s Propiedad ubicada en %s. (Valor de la propiedad: "CR"$%s"CB")\n",casa,PropInfo[p][pLocalizacion],ConvertirNumero(PropInfo[p][pPrecio]));
					case 1: format(casa,sizeof(casa),"%s Propiedad ubicada en %s. (Valor de la propiedad: "CR"%s"Moneda1""CB")\n",casa,PropInfo[p][pLocalizacion],ConvertirNumero(PropInfo[p][pPrecio]));
					case 2: format(casa,sizeof(casa),"%s Propiedad ubicada en %s. (Valor de la propiedad: {D1A231}%s coins"CB")\n",casa,PropInfo[p][pLocalizacion],ConvertirNumero(PropInfo[p][pPrecio]));
				}
			}
		}
	}*/

	for(new i = 0; i < MAX_PCASAS; i++)
	{
		if(PlayerInfo[playerid][CasaID][i] == 0) continue;
		new p = PlayerInfo[playerid][CasaID][i];
		switch(PropInfo[p][pEnVentaPor])
		{
			case 0: format(casa, sizeof(casa), "%sUbicaci�n: "CR"%s"CB" | Interior: "CR"%d"CB" | Valor: "CR"$%s"CB" | ID: %d\n",casa,PropInfo[p][pLocalizacion],PropInfo[p][pInterior], ConvertirNumero(PropInfo[p][pPrecio]), p);
			case 1: format(casa, sizeof(casa), "%sUbicaci�n: "CR"%s"CB" | Interior: "CR"%d"CB" | Valor: "CR"%s"#Moneda1""CB" | ID: %d\n",casa,PropInfo[p][pLocalizacion],PropInfo[p][pInterior], ConvertirNumero(PropInfo[p][pPrecio]), p);
			case 2: format(casa, sizeof(casa), "%sUbicaci�n: "CR"%s"CB" | Interior: "CR"%d"CB" | Valor: {D1A231}%s Coins"CB" | ID: %d\n",casa,PropInfo[p][pLocalizacion],PropInfo[p][pInterior], ConvertirNumero(PropInfo[p][pPrecio]), p);
		}

	}
	MostrarDialog(playerid,SELECT_CASA,DIALOG_STYLE_LIST,"Selecciona la propiedad que deseas vender",casa,"Vender","Cancelar");

	return 1;
}

static VenderVehJugador(playerid)
{
	new pvehicle = 0;
	for(new a = 0; a < MAX_PAUTOS; a++) if(autos[a][playerid] > 0) pvehicle++;
	if(pvehicle != 0)
	{

		new sellcar[128*MAX_PAUTOS];
		for(new i = 0; i < MAX_PAUTOS; i++)
		{
			if(VehicleInfo[playerid][i][vModelo] < 400) continue;
			format(sellcar, sizeof(sellcar), "%s Veh�culo: {F6E200}%s"CB" | Patente: "CR"%s"CB" | Comprado por: "CR"%s%s\n",sellcar,GetVehicleName(autos[i][playerid]),Patente[playerid][i],ConvertirNumero(VehicleInfo[playerid][i][vPrecio]), MonedaVenta(VehicleInfo[playerid][i][vMonedaa]));
		}
		MostrarDialog(playerid, SELECT_VEH, DIALOG_STYLE_LIST, "�Cual veh�culo que deseas vender?", sellcar, "Vender","Cancelar");
	}
	return 1;
}

static VenderVehMuni(playerid)
{
	for(new a = 0; a < MAX_PAUTOS; a++)
	{
		if(autos[a][playerid] > 0)
		{
			MostrarDialog(playerid, VENDERAUTO, DIALOG_STYLE_MSGBOX, "Informaci�n sobre la venta de veh�culos", "Te vamos a pagar la mitad de la cantidad del precio de venta actual del veh�culo.\n�Quieres vender el veh�culo?", "Si","No");
			break;
		}
	}
	return 1;
}



Funcion:CargarAutoComprado(playerid, slot, dbid)
{
	new Query[200];
	mysql_format(Conecction, Query, sizeof(Query), "SELECT * FROM `p_autos` WHERE `UserID` = '%d' AND `ID` = '%d' LIMIT 1",PlayerInfo[playerid][p_DBID], dbid);
	mysql_tquery(Conecction, Query, "CargarVehCompra", "ii",slot,playerid);
	ShowTDN(playerid,"~p~Felicidades~w~, compraste un veh�culo, usa ~p~/localizar~w~ para ubicarlo.");
	GuardarCuenta(playerid);

	return 1;
}


static DarItemJugador(ID,cantidad,Tipo)
{
	new tipo2[23], cadena[128];
	switch(Tipo)
	{
	    case 0: tipo2 = "Dinero";
	    case 1: tipo2 = "Dinero Bancario";
	    case 2: tipo2 = ""Moneda1"";
	    case 3: tipo2 = "Coins";
	    case 4: tipo2 = "Piezas de arma";
	    case 5: tipo2 = "Crack";
	    case 6: tipo2 = "Remedios";
	    case 7: tipo2 = "Cocaina";
	    case 8: tipo2 = "Hongos";
	    case 9: tipo2 = "Marihuana";
	    case 10: tipo2 = "Semillas";
	    case 11: tipo2 = "Experiencia";
	}
	if(ID == INVALID_PLAYER_ID) //todos
	{
		format(cadena,128,"~p~Felicidades~w~, recibiste ~p~%d %s~w~ de parte de la administraci�n.",cantidad, tipo2);
		foreach(new i : Player)
		{

			switch(Tipo)
			{
				case 0: DarDinero(i,cantidad);
				case 1: PlayerInfo[i][pBanco] += cantidad;
				case 2: PlayerInfo[i][Moneda] += cantidad;
				case 3: PlayerInfo[i][Credits] += cantidad;
				case 4: PlayerInfo[i][pMateriales] += cantidad;
				case 5: PlayerInfo[i][pCrack] += cantidad;
				case 6: PlayerInfo[i][pMedicamentos] += cantidad;
				case 7: PlayerInfo[i][pCocaina] += cantidad;
				case 8: PlayerInfo[i][pHongos] += cantidad;
				case 9: PlayerInfo[i][pMarihuana] += cantidad;
				case 10: PlayerInfo[i][pSemillas] += cantidad;
				case 11: PlayerInfo[i][jExperiencia] += cantidad;
			}

			ShowTDN(i,cadena);
			//MostrarDialog(i,DRECARGA,DIALOG_STYLE_MSGBOX,"Informaci�n",cadena,"Aceptar","");
		}
		format(cadena, 128, "Notificaci�n: Un administrador due�o di� %s a todos los usuarios conectados.", tipo2);
		MensajeAdmin(COLOR_CHEAT, cadena, 3);
	}
    else //jugador
    {
	    if(!IsPlayerConnected(ID)) return 1;
		switch(Tipo)
		{
			case 0: DarDinero(ID,cantidad);
			case 1: PlayerInfo[ID][pBanco] += cantidad;
			case 2: PlayerInfo[ID][Moneda] += cantidad;
			case 3: PlayerInfo[ID][Credits] += cantidad;
			case 4: PlayerInfo[ID][pMateriales] += cantidad;
			case 5: PlayerInfo[ID][pCrack] += cantidad;
            case 6: PlayerInfo[ID][pMedicamentos] += cantidad;
            case 7: PlayerInfo[ID][pCocaina] += cantidad;
            case 8: PlayerInfo[ID][pHongos] += cantidad;
			case 9: PlayerInfo[ID][pMarihuana] += cantidad;
			case 10: PlayerInfo[ID][pSemillas] += cantidad;
			case 11: PlayerInfo[ID][jExperiencia] += cantidad;
		}
		format(cadena,128,""CB"Has recibido "CR"%d de %s"CB" por parte de la administracion.",cantidad,tipo2);
		MostrarDialog(ID,DRECARGA,DIALOG_STYLE_MSGBOX,"Informaci�n",cadena,"Aceptar","");
		format(cadena, 128, "Notificaci�n: Un administrador due�o di� %d %s a %s[id: %d].",cantidad, tipo2, NombreJugador(ID), ID);
		MensajeAdmin(COLOR_CHEAT, cadena, 3);
    }
    return 1;
}
RandomSpawnEvento(playerid)
{
	new randomspawn = random(7);
	switch(randomspawn)
	{
	    case 0: SetPosEx(playerid, 1359.6388,-47.8120,1000.9257, 90, 1, 0);
	    case 1: SetPosEx(playerid, 1359.2595,1.3171,1000.9219, 90, 1, 0);
	    case 2: SetPosEx(playerid, 1416.1714,6.3878,1000.9219, 90, 1, 0);
	    case 3: SetPosEx(playerid, 1419.5099,-48.8855,1000.9316, 90, 1, 0);
	    case 4: SetPosEx(playerid, 1390.3486,-26.0595,1000.9199, 90, 1, 0);
	    case 5: SetPosEx(playerid, 1388.1396,-48.1267,1000.9249, 90, 1, 0);
	    case 6: SetPosEx(playerid, 1382.5278,6.7028,1000.9159, 90, 1, 0);
	}
	return 1;
}
Funcion:AbrirCaja(playerid)
{
	RoboCaja[playerid] = 0;
	ClearAnimations(playerid);
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	DestroyDynamicObjectEx(CajaFuerte);
	DestroyDynamic3DTextLabelEx(CajaFuerteTX);
	Robado[0] = 0;
    Robado[1] = 0;
	Robado[2] = 0;
	CajaAbierta = 1;
    CajaFuerte   = CreateDynamicObject(1829, 820.41010, 8.37117, 1003.60370,   0.00000, 0.00000, 179.27594);
 	CajaFuerteTX = CreateDynamic3DTextLabel(""CB"CAJA FUERTE ABIERTA\nUsa "CR"/robar cajafuerte"CB".",0xFFFFFFFF,820.41010, 8.37117, 1003.60370,10.0);
  	SetTimer("ReactivarCaja",1800000,false);
	DarEstrella(playerid, 3);
	Mensaje(playerid,-1,"{E76924}�ROBA LA CAJA ANTES QUE LA POLICIA TE ATRAPE!");
	DescongelarEx(playerid);

	TimerCCaja[playerid] = SetTimerEx("QuitarCcaja",600000,false,"i",playerid);
	Mensaje(playerid, -1, "Pierde a la polic�a por 10 minutos");
	new RoboEl[168];
	format(RoboEl,sizeof(RoboEl),""CB"Una caja fuerte ha sido descodificada por "CR"%s"CB" en el banco cercano a LSPD.",NombreJugador(playerid));
	MensajeAll(-1,RoboEl);
	return 1;
}
Funcion:AbrirCaja2(playerid)
{
	RoboCaja[playerid] = 0;
	ClearAnimations(playerid);
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	DestroyDynamicObjectEx(CajaFuerte2);
	DestroyDynamic3DTextLabelEx(CajaFuerteTX2);
	Robado2[0] = 0;
    Robado2[1] = 0;
	Robado2[2] = 0;
	CajaAbierta2 = 1;
    CajaFuerte2   = CreateDynamicObject(1829, 2306.23193, -5.85020, 26.18000,   0.07200, 0.00000, 90.00000);
  	CajaFuerteTX2 = CreateDynamic3DTextLabel(""CB"CAJA FUERTE ABIERTA\nUsa "CR"/robar cajafuerte"CB".",0xFFFFFFFF,2306.23193, -5.85020, 26.18000,10.0);
  	SetTimer("ReactivarCaja2",1800000,false);
	DarEstrella(playerid, 3);
	Mensaje(playerid,-1,"{E76924}�ROBA LA CAJA ANTES QUE LA POLICIA TE ATRAPE!");
	DescongelarEx(playerid);
	TimerCCaja[playerid] = SetTimerEx("QuitarCcaja",600000,false,"i",playerid);
	Mensaje(playerid, -1, "Pierde a la polic�a por 10 minutos");
	new RoboE2[144];
	format(RoboE2,sizeof(RoboE2),""CB"Una caja fuerte ha sido descodificada por "CR"%s"CB" en el Banco de San Fierro.",NombreJugador(playerid));
	MensajeAll(-1,RoboE2);

    return 1;
}

Funcion:AbrirCaja3(playerid)
{
	RoboCaja[playerid] = 0;
	ClearAnimations(playerid);
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	DestroyDynamicObjectEx(CajaFuerte3);
	DestroyDynamic3DTextLabelEx(CajaFuerteTX3);
	Robado3[0] = 0;
    Robado3[1] = 0;
	Robado3[2] = 0;
	CajaAbierta3 = 1;
    CajaFuerte3   = CreateDynamicObject(1829, -221.22530, 1406.87146, 27.19990,   0.00000, 0.00000, 0.00000); //caja abierta
 	CajaFuerteTX3 = CreateDynamic3DTextLabel(""CB"CAJA FUERTE ABIERTA\nUsa "CR"/robar cajafuerte"CB".",0xFFFFFFFF,-221.22530, 1406.87146, 27.19990,10.0);
  	SetTimer("ReactivarCaja3",1800000,false);
	DarEstrella(playerid, 3);
	Mensaje(playerid,-1,"{E76924}�ROBA LA CAJA ANTES QUE LA POLICIA TE ATRAPE!");
	DescongelarEx(playerid);
	TimerCCaja[playerid] = SetTimerEx("QuitarCcaja",600000,false,"i",playerid);
	Mensaje(playerid, -1, "Pierde a la polic�a por 10 minutos");
	new RoboE3[168];
	format(RoboE3,sizeof(RoboE3),""CB"Una caja fuerte ha sido descodificada por "CR"%s"CB" en el Bar de Cantera Las Venturas.",NombreJugador(playerid));
	MensajeAll(-1,RoboE3);

    return 1;
}

Funcion:QuitarCcaja(playerid)
{
	DarEstrella(playerid,0);
}

Funcion:ReactivarCaja2()
{
    CajaAbierta2 = 0;
    RobadaTM2 = 0;
	Robado2[0] = 0;
	Robado2[1] = 0;
	Robado2[2] = 0;
	DestroyDynamicObjectEx(CajaFuerte2);
	CajaFuerte2 = CreateDynamicObject(2332, 2306.23193, -5.85020, 26.18000,   0.07200, 0.00000, 90.00000);
	DestroyDynamic3DTextLabelEx(CajaFuerteTX2);
	CajaFuerteTX2 = CreateDynamic3DTextLabel(""CB"CAJA FUERTE CERRADA"CR"\n/decodificar cajafuerte",-1,2306.23193, -5.85020, 26.18000,10.0);
	MensajeAll(-1,"El banco de "CR"San Fierro"CB" se ha recuperado del reciente robo y sigue trabajando de normalidad.");
	return 1;
}

Funcion:ReactivarCaja3()
{
    CajaAbierta3 = 0;
    RobadaTM3 = 0;
	Robado3[0] = 0;
	Robado3[1] = 0;
	Robado3[2] = 0;
	DestroyDynamicObjectEx(CajaFuerte3);
	CajaFuerte3 = CreateDynamicObject(2332, -221.22530, 1406.87146, 27.19990,   0.00000, 0.00000, 0.00000); //caja cerrada
	DestroyDynamic3DTextLabelEx(CajaFuerteTX3);
	CajaFuerteTX3 = CreateDynamic3DTextLabel(""CB"CAJA FUERTE CERRADA"CR"\n/decodificar cajafuerte",-1,-221.22530, 1406.87146, 27.19990,10.0);
	MensajeAll(-1,"El "CR"Bar de Cantera Las Venturas"CB" se ha recuperado de un robo reciente..");
	return 1;
}

Funcion:ReactivarCaja()
{
    CajaAbierta = 0;
    RobadaTM = 0;
	Robado[0] = 0;
	Robado[1] = 0;
	Robado[2] = 0;
	DestroyDynamicObjectEx(CajaFuerte);
	CajaFuerte = CreateDynamicObject(2332, 820.41010, 8.37117, 1003.60370,   0.00000, 0.00000, 179.27594);
	DestroyDynamic3DTextLabelEx(CajaFuerteTX);
	CajaFuerteTX = CreateDynamic3DTextLabel(""CB"CAJA FUERTE CERRADA"CR"\n/decodificar cajafuerte",-1,820.41010, 8.37117, 1003.60370,10.0);
	MensajeAll(-1,"El banco ubicado en la cercan�as de la "CR"comisaria de Los Santos"CB" se ha recuperado de un robo.");
	return 1;
}

static RobarCaja(playerid)
{
	if(CajaAbierta != 1) return Mensaje(playerid,-1,"�Esta CAJA FUERTE no est� abierta!!"); //funka si esta en 0
	if(Robado[0] == 0)
	{
  		RandomRobar(playerid,0);
	}
	else if(Robado[1] == 0)
	{
  		RandomRobar(playerid,1);
	}
	else if(Robado[2] == 1) return Mensaje(playerid,-1,"�Ya no queda m�s dinero!");
	{
  		RandomRobar(playerid,2);
	}
	return 1;
}

static RobarCaja2(playerid)
{
	if(CajaAbierta2 != 1) return Mensaje(playerid,-1,"�Esta CAJA FUERTE no est� abierta!!"); //funka si esta en 0
	if(Robado2[0] == 0)
	{
  		RandomRobar2(playerid,0);
	}
	else if(Robado2[1] == 0)
	{
  		RandomRobar2(playerid,1);
	}
	else if(Robado2[2] == 1) return Mensaje(playerid,-1,"�Ya no queda m�s dinero!");
	{
  		RandomRobar2(playerid,2);
	}
	return 1;
}


static RobarCaja3(playerid)
{
	if(CajaAbierta3 != 1) return Mensaje(playerid,-1,"�Esta CAJA FUERTE no est� abierta!!"); //funka si esta en 0
	if(Robado3[0] == 0)
	{
  		RandomRobar3(playerid,0);
	}
	else if(Robado3[1] == 0)
	{
  		RandomRobar3(playerid,1);
	}
	else if(Robado3[2] == 1) return Mensaje(playerid,-1,"�Ya no queda m�s dinero!");
	{
  		RandomRobar3(playerid,2);
	}
	return 1;
}



static RandomRobar(playerid,i)
{
	ClearAnimations(playerid);
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
    new dineror = random(10);
	switch(dineror)
	{
	    case 0:
		{
			DarDinero(playerid,10000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}10000$");
			Robado[i] = 1;
		}
	    case 1:
		{
			DarDinero(playerid,15000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}15000$");
			Robado[i] = 1;
		}
		case 2:
		{
			DarDinero(playerid,20000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}20000$");
			Robado[i] = 1;
		}
		case 3:
		{
			DarDinero(playerid,5000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}5000$");
			Robado[i] = 1;
		}
		case 4:
		{
			DarDinero(playerid,10000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}10000$");
			Robado[i] = 1;
		}
		case 5:
		{
			DarDinero(playerid,10000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}10000$");
			Robado[i] = 1;
		}
		case 6:
		{
			DarDinero(playerid,10000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}10000$");
			Robado[i] = 1;
		}
		case 7:
		{
			DarDinero(playerid,10000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}10000$");
			Robado[i] = 1;
		}
		case 8:
		{
			DarDinero(playerid,10000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}10000$");
			Robado[i] = 1;
		}
		case 9:
		{
			DarDinero(playerid,100000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}100000$");
			Robado[i] = 1;
		}
	}
	return 1;
}

static RandomRobar2(playerid,i)
{
	ClearAnimations(playerid);
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);

    new dineror2 = random(10);
	switch(dineror2)
	{
	    case 0:
		{
			DarDinero(playerid,10000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}10000$");
			Robado2[i] = 1;
		}
	    case 1:
		{
			DarDinero(playerid,15000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}15000$");
			Robado2[i] = 1;
		}
		case 2:
		{
			DarDinero(playerid,20000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}20000$");
			Robado2[i] = 1;
		}
		case 3:
		{
			DarDinero(playerid,5000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}5000$");
			Robado2[i] = 1;
		}
		case 4:
		{
			DarDinero(playerid,10000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}10000$");
			Robado2[i] = 1;
		}
		case 5:
		{
			DarDinero(playerid,10000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}10000$");
			Robado2[i] = 1;
		}
		case 6:
		{
			DarDinero(playerid,10000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}10000$");
			Robado2[i] = 1;
		}
		case 7:
		{
			DarDinero(playerid,10000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}10000$");
			Robado2[i] = 1;
		}
		case 8:
		{
			DarDinero(playerid,10000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}10000$");
			Robado2[i] = 1;
		}
		case 9:
		{
			DarDinero(playerid,100000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}100000$");
			Robado2[i] = 1;
		}
	}
	return 1;
}


static RandomRobar3(playerid,i)
{
	ClearAnimations(playerid);
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
    new dineror3 = random(10);
	switch(dineror3)
	{
	    case 0:
		{
			DarDinero(playerid,10000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}10000$");
			Robado3[i] = 1;
		}
	    case 1:
		{
			DarDinero(playerid,15000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}15000$");
			Robado3[i] = 1;
		}
		case 2:
		{
			DarDinero(playerid,20000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}20000$");
			Robado3[i] = 1;
		}
		case 3:
		{
			DarDinero(playerid,5000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}5000$");
			Robado3[i] = 1;
		}
		case 4:
		{
			DarDinero(playerid,10000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}10000$");
			Robado3[i] = 1;
		}
		case 5:
		{
			DarDinero(playerid,10000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}10000$");
			Robado3[i] = 1;
		}
		case 6:
		{
			DarDinero(playerid,10000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}10000$");
			Robado3[i] = 1;
		}
		case 7:
		{
			DarDinero(playerid,10000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}10000$");
			Robado3[i] = 1;
		}
		case 8:
		{
			DarDinero(playerid,10000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}10000$");
			Robado3[i] = 1;
		}
		case 9:
		{
			DarDinero(playerid,100000);
			Mensaje(playerid,-1,"{E76924}ESCAPA DE LA ZONA YA TIENES EL DINERO!! {74F20C}100000$");
			Robado3[i] = 1;
		}
	}
	return 1;
}

static DialogReferidos(playerid)
{
	new str[456+1];
	format(str, sizeof(str), "{FFFFFF}Tu c�digo de referido es: {80D465}%d{FFFFFF}.\nComp�rtelo con tu amigo para que ganes recompensas al invitarlo.\n\n- Tu amigo no puede tener tu misma ip.\n- Tu amigo no puede usar VPN/Proxy.\n- Tu amigo deber� llegar al nivel 7 para que recibas tus recompensas.\n\n\n Las recompensas por cada amigo que invites son:\n\n{00FF00}100 {FFFFFF}medicamentos.\n{00FF00}200000 {FFFFFF}d�lares.\n{00FF00}50 {FFFFFF}Crack.\n{00FF00}10 {F8FC08}coins{FFFFFF}.", PlayerInfo[playerid][p_DBID]+2153);
	return MostrarDialog(playerid, DIALOG_SREFERIDOS, DIALOG_STYLE_MSGBOX, "Sistema de referidos.", str, "Referidos", "Cerrar");
}

static DialogPrendas(playerid)
{
	return MostrarDialog(playerid, DIALOG_PRENDAS, DIALOG_STYLE_LIST, "Men� de prendas", ""CR"�"CB" Poner prenda\n"CR"�"CB" Acomodar prenda\n"CR"�"CB" Quitar prenda\n"CR"�"CB" Cambiar color\n"CR"�"CB" Editar parte del cuerpo\n"CR"�"CB" {FF4646}Eliminar prenda", "Continuar", "Salir");
}
DialogTwitter(playerid)
{
	new string[128];
 	if(AdEstado == 1) return Mensaje(playerid,-1,"El canal de twitter esta deshabilitado temporalmente.");
  	if(PlayerInfo[playerid][pNumero] == 0) return Mensaje(playerid,-1,"No tienes un m�vil.");
	if(MostrarTwitter[playerid] == 0) return Mensaje(playerid,-1,"Tienes desactivado el canal de twitter, para activarlo utiliza /config");
	if(PlayerInfo[playerid][pTiempoJail] > 0) return Mensaje(playerid, 0x3AA000FF, "No puedes usar el canal de twitter mientras est�s sancionado.");
	if(gettimeVariable < PlayerTemp[playerid][TiempoTwitter])
	{
		new numero = PlayerTemp[playerid][TiempoTwitter] - gettimeVariable;
		format(string, sizeof(string), "No se te permite hablar por el canal de twitter. Espera "CR"%ds"CB" para enviar otro.",numero);
      	Mensaje(playerid, -1,string);
      	return 1;
	}
	MostrarDialog(playerid, Twiiter, DIALOG_STYLE_LIST, "Red Social {2FC0FF}Twitter",
	""CB"Tweet Personal.\n\
	"CB"Tweet {FF0000}An�nimo.\n\
	"CB"Tweet "CR"Anuncio.",
	"Aceptar", "Cancelar");
	return 1;
}
static DesbanearIP(const ip[])
{
	new Query[100];
	mysql_format(Conecction, Query, sizeof(Query), "DELETE FROM banips WHERE IP = INET_ATON('%e') LIMIT 1", ip);
	mysql_tquery(Conecction, Query);
	return 1;
}


CMD:desban(playerid, params[])
{
	new pName[25];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(sscanf(params, "s[25]", pName) ) return Mensaje(playerid,COLORCARGO0,"Uso: /desban [Nombre_Apellido]");
	new DB_Query[128];
	mysql_format(Conecction,DB_Query, sizeof DB_Query, "SELECT `ID` FROM `usuarios` WHERE `Username`='%e' LIMIT 1", pName);
	mysql_tquery(Conecction, DB_Query, "SelectJugadorADesban", "ds", playerid, pName);
	return 1;
}

Funcion:SelectJugadorADesban(playerid, const userName[])
{
	if(cache_num_rows())
	{
		new idUser;
		cache_get_value_name_int(0, "ID", idUser);
		new query[300];
		mysql_format(Conecction, query, sizeof(query), "INSERT INTO `registros_admin` (Responsable, Jugador, Razon, Accion) VALUES ('%d','%d','Desbaneo','4')",PlayerInfo[playerid][p_DBID],idUser);
		mysql_tquery(Conecction, query);
		DesbanUser(userName);
		format(query, sizeof(query), "El jugador {D51D00}%s "CB"fue desbaneado por %s"CB".",userName,NombreJugador(playerid));
		MensajeAdmin(-1, query, PlayerInfo[playerid][pAdmin]);
		Mensaje(playerid, -1, "El usuario ha sido desbaneado.");
	}
	else Mensaje(playerid, -1, "No se encontr� a un usuario con ese nombre.");
	return 1;
}

static DesbanUser(const name[])
{
	new query[70+MAX_PLAYER_NAME+1];
	mysql_format(Conecction, query, sizeof(query), "UPDATE `usuarios` SET `Baneado`='0' WHERE `Username`='%e' LIMIT 1", name);
	mysql_tquery(Conecction, query);
	return 1;
}
public OnYoutubeSearch(playerid)
{

	new dialog[35*11];
	for(new i = 0; i < MAX_SEARCH_RESULTS; i++)
	{
		if(strlen(SearchResults[playerid][i][Title]) > 45)
		{
			strmid(SearchResults[playerid][i][Title], SearchResults[playerid][i][Title], 0, 45);

			format(SearchResults[playerid][i][Title], 55, "%s...",SearchResults[playerid][i][Title]);
		}
		format(dialog, sizeof dialog, "%s%s\n", dialog,SearchResults[playerid][i][Title]);
	}
	return MostrarDialog(playerid, DIALOG_YOUTUBE, DIALOG_STYLE_TABLIST, "Resultados:", dialog, "Reproducir", "Cancelar");
}


Funcion:ReproducirAudioParlante(index)
{
	new playerid = Youtube[index][PlayFor];
	if(GetPVarInt(playerid, "PlacedBB") != INVALID_STREAMER_ID)
	{
		foreach(new i : Player)
		{
			if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")) && ShowSound[i] == 1)
			{
				PlayAudioStreamForPlayer(i, Youtube[index][StreamLink], GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
			}
		}
		SetPVarString(playerid, "BBStation", Youtube[index][StreamLink]);

	}
	return 1;
}

Funcion:ObtenerProxy(playerid)
{
    if(!IsPlayerNPC(playerid))
    {
	    new string[60];
	    new s_ip[16];
	    GetPlayerIp(playerid, s_ip, 16);
		format(string, sizeof(string), "ip-api.com/json/%s?fields=16908817",s_ip);
		HTTP(playerid, HTTP_GET, string, "", "RespuestaProxy");
	}
	return 1;
}

Funcion:RespuestaProxy(index, response_code, data[])
{
	if(IsPlayerConnected(index))
	{
		if(response_code == 200)
		{

            new JSONNode:response = json_parse_string(data), t_Pais[32];
			json_get_string(response, t_ISP[index], 64, "isp");
			json_get_string(response, t_Pais, 32, "country");
			json_get_string(response, PlayerInfo[index][pCiudad], 32, "city");
			if(json_get_bool(response, "hosting") == true || json_get_bool(response, "proxy") == true) UsandoVPN[index] = true;
			json_close(response);
			if(UsandoVPN[index] && AntiVPN)
			{
				Mensaje(index,-1, "� En este servidor no se permite el uso de VPN, desact�valo y vuelve a conectarte.");
				Mensaje(index,-1, "� Si tienes alguna duda reportala por discord: https://discord."WebName""CB".");
				new pPing = GetPlayerPing(index) + 150;
				SetTimerEx("KickTimer", (pPing > 300 ? 300 : pPing), false, "i", index);
				return 1;
			}
			new plrIP2[16];
			GetPlayerIp(index, plrIP2, sizeof(plrIP2));
			if(strcmp("127.0.0.1", plrIP2, true) != 0)
			{
				if(PlayerInfo[index][pAdmin] > 0 && strcmp(PlayerInfo[index][pPais], t_Pais, true ) != 0)
				{
					new query[128];
					mysql_format(Conecction, query, sizeof(query), "UPDATE usuarios SET `Bloqueado`='1' WHERE `ID`='%d' LIMIT 1",PlayerInfo[index][p_DBID]);
					mysql_tquery(Conecction, query);
					new pPing = GetPlayerPing(index) + 150;
					SetTimerEx("KickTimer", (pPing > 300 ? 300 : pPing), false, "i", index);
					return 1;
				}
			}
			format(PlayerInfo[index][pPais], 32, "%s", t_Pais);
			new Query[260];
			new hour,minuite,second;
			gettime(hour,minuite,second);
			mysql_format(Conecction, Query, sizeof(Query),"INSERT INTO `log_ingresos` (`UserID`, `Pais`, `IP` , `Host`, `Fecha`) VALUES ('%d', '%e', '%e', '%e', CURRENT_TIMESTAMP())", PlayerInfo[index][p_DBID], PlayerInfo[index][pPais], PlayerInfo[index][IP], t_ISP[index]);
			mysql_tquery(Conecction, Query);
			mysql_format(Conecction, Query, sizeof(Query),"UPDATE `usuarios` SET `IP`='%e',`Pais`='%e' WHERE `ID`='%d' LIMIT 1", plrIP2, PlayerInfo[index][pPais], PlayerInfo[index][p_DBID]);
			mysql_tquery(Conecction, Query);
			SetPlayerTime(index,hour,minuite);

			if(PlayerInfo[index][pAdmin] < ADMIN_LVL_ADM && UsandoVPN[index])
			{
				new string[128];
				format(string, 128, "Notificaci�n: %s[%d] ha ingresado con VPN [%s - %s - %d]", NombreJugador(index), index, plrIP2, PlayerInfo[index][pPais], GetPlayerPing(index));
				MensajeAdmin(COLOR_CHEAT, string, ADMIN_LVL_SUBDUE);
			}
		}
	}
	return 1;
}
public OnRconLoginAttempt(ip[], password[], success)
{

    new pIP[16+1];
    if(success)
    {
        foreach(new i : Player)
        {
            GetPlayerIp(i, pIP, sizeof(pIP));
            if(EsFundador(i) && !strcmp(ip, pIP, true))
            {
                SendClientMessage(i, -1, "Estas autorizado para continuar.");
            }
            else
            {
                SendClientMessage(i, -1, "No estas autorizado para utilizar este comando.");
                ExpulsarJugador(i,"User-Invalid-Rcon");
            }
            break;
        }
    }
    else
	{
        printf("RCON INCORRECTA IP: %s, USANDO LA CONTRASE�A: %s",ip, password);
        foreach(new i : Player)
        {
            GetPlayerIp(i, pIP, sizeof(pIP));
            if(!strcmp(ip, pIP, true))
            {
                SendClientMessage(i, -1, "Contrase�a RCON incorrecta");
                ExpulsarJugador(i, "RCON Incorrecta");
            }
        }
    }
    return 1;
}


static IsPlayerAndroid(playerid) return IsPlayerMobile(playerid);
#if defined ChatDeVoz
public SV_VOID:OnPlayerActivationKeyPress(
	SV_UINT:playerid,
	SV_UINT:keyid
) {
	if (keyid == 0x42 && lstream[playerid]) SvAttachSpeakerToStream(lstream[playerid], playerid);
	if (keyid == 0x5A && gstream) SvAttachSpeakerToStream(gstream, playerid);
}

public SV_VOID:OnPlayerActivationKeyRelease(
	SV_UINT:playerid,
	SV_UINT:keyid
) {
	if (keyid == 0x42 && lstream[playerid]) SvDetachSpeakerFromStream(lstream[playerid], playerid);
	if (keyid == 0x5A && gstream) SvDetachSpeakerFromStream(gstream, playerid);
}
#endif
public OnPlayerRequestClass(playerid, classid)
{
    #if DEBUG_GM == 1
	printf("(OnPlayerRequestClass) PlayerID: %d | ClassID: %d", playerid, classid);
	#endif
	if(IsPlayerNPC(playerid)) return 1;
	if(JugadorLogeado[playerid] == 1)
	{
	    SetSpawnInfo(playerid,NO_TEAM,PlayerInfo[playerid][jRopa],DeathX[playerid], DeathY[playerid], DeathZ[playerid],0,0,0,0,0,0,0);
		SpawnPlayer(playerid);
	}
	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
    #if DEBUG_GM == 1
	printf("(OnPlayerRequestSpawn) PlayerID: %d", playerid);
	#endif
	if(IsPlayerNPC(playerid)) return 1;
	if(JugadorLogeado[playerid] == 1)
	{
	    SetSpawnInfo(playerid,NO_TEAM,PlayerInfo[playerid][jRopa],DeathX[playerid], DeathY[playerid], DeathZ[playerid],0,0,0,0,0,0,0);
		SpawnPlayer(playerid);
	}
	return 0;
}

public OnTrailerUpdate(playerid, vehicleid)
{
	if(PlayerInfo[playerid][pAdmin] < 6) ExpulsarJugador(playerid,"cheat de veh�culos (3)");
    return 0;
}

Funcion:DestroyDynamicObjectEx(&objeto)
{
	if(objeto != INVALID_STREAMER_ID && IsValidDynamicObject(objeto)) DestroyDynamicObject(objeto);
	objeto = INVALID_STREAMER_ID;
	return INVALID_STREAMER_ID;
}



Funcion:ApagarMotorKey(playerid)
{
	if(IsPlayerInAnyVehicle(playerid))
	{
		new carid,pName[32];
		GetPlayerName(playerid, pName, 32);
		carid = GetPlayerVehicleID(playerid);
		AccionesRol(playerid,"detuvo el motor de su veh�culo.", 20);
		GetVehicleParamsEx(carid, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(carid, 0, lights, alarm, doors, bonnet, boot, objective);
		MotorAuto[carid] = 0;
		TiempoMotor[playerid] = gettimeVariable + 1;
	}
	return 1;
}

Funcion:CongelarEx(playerid)
{
	TogglePlayerControllable(playerid, false);
	PlayerTemp[playerid][pt_Congelado] = true;
	GetPlayerPos(playerid, PosJugador[playerid][0],PosJugador[playerid][1],PosJugador[playerid][2]);
	return 1;
}

Funcion:DescongelarEx(playerid)
{
	TogglePlayerControllable(playerid, true);
	PlayerTemp[playerid][pt_Congelado] = false;
	return 1;
}

Funcion:QuitarDinero(playerid,cantidad)
{
	if(cantidad < 0) return 1;
	PlayerInfo[playerid][jDinero] -= cantidad;
	GivePlayerMoney(playerid,-cantidad);
	return 1;
}

Funcion:QuitarDineroTransfender(playerid,cantidad)
{
	if(cantidad < 0) return 1;
	PlayerInfo[playerid][jDinero] -= cantidad;
	return 1;
}


public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{

	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		if(gettimeVariable > TiempoPick[playerid])
		{
			for(new i=0;i<6;i++)
			{
				if(PlayerInfo[playerid][jMiembro] == 1 && PlayerInfo[playerid][pDuty] == 1)
				{
					if(i<sizeof(IconoAutosPoli))
					{
						if(pickupid == IconoAutosPoli[i])
						{
							if(EstaEn(playerid,6,1590.3337,-1620.1376,13.3828))
							{
								new autossapd[] = {
									596,
									523,
									431,
									599,
									427,
									601,
									541
								};
								TiempoPick[playerid] = gettimeVariable + 20;
								return ShowModelSelectionMenuEx(playerid, autossapd, sizeof(autossapd), "Unidades LSPD", AutosSAPDLSPD, 16.0, 0.0, -55.0);
							}
							else if(EstaEn(playerid,6,2257.9387,2452.7776,10.8203) || EstaEn(playerid,6,261.1901,1438.9509,10.5859))
							{
								new autossapd[] = {
									598,
									523,
									431,
									599,
									427,
									601,
									541
								};
								TiempoPick[playerid] = gettimeVariable + 20;
								return ShowModelSelectionMenuEx(playerid, autossapd, sizeof(autossapd), "Unidades LVPD", AutosSAPDLSPD, 16.0, 0.0, -55.0);
							}

							else if(EstaEn(playerid,6,-1597.6935,661.8955,7.1875))
							{
								new autossapd[] = {
									597,
									523,
									431,
									599,
									427,
									601,
									541
								};
								TiempoPick[playerid] = gettimeVariable + 20;
								return ShowModelSelectionMenuEx(playerid, autossapd, sizeof(autossapd), "Unidades SFPD", AutosSAPDLSPD, 16.0, 0.0, -55.0);
							}
						}
					}
				}
				if(pickupid == IconoRopa[i])
				{
					if(FaccLegal(playerid)) return Mensaje(playerid,-1, "No puedes comprar ropa estando de servicio");
					switch(PlayerInfo[playerid][jSexo])
					{
						case 1: ShowModelSelectionMenu(playerid, RopaHombre, "Conjuntos"),TipoRopa[playerid] = 1;
						case 2: ShowModelSelectionMenu(playerid, RopaMujer, "Conjuntos"),TipoRopa[playerid] = 1;
					}
					TiempoPick[playerid] = gettimeVariable + 20;
					return 1;
				}
			}
		}
	}
	return 1;
}

Funcion:ActualizarSpec(playerid)
{
	foreach(new i : Admin)
	{
		if(SpecJugador[i] == playerid)
		{
			SetPlayerInterior(i, GetPlayerInterior(playerid));
			SetPlayerVirtualWorld(i, GetPlayerVirtualWorld(playerid));
		}
	}
	return true;
}

Funcion:TextoMarcelo(playerid)
{
	new texto = random(7);
	switch(texto)
	{
		case 0: SetPlayerChatBubble(playerid, "No puede pasar, personal autorizado solamente.", -1, 30.0, 5000);
		case 1: SetPlayerChatBubble(playerid, "Fuego a discreci�n, disparar a matar.", -1, 30.0, 5000);
		case 2: SetPlayerChatBubble(playerid, "Si no se va en este momento, tendr� que llevarlo al calabozo.", -1, 30.0, 5000);
		case 3: SetPlayerChatBubble(playerid, "�Salga de aqu� ahora mismo!", -1, 30.0, 5000);
		case 4: SetPlayerChatBubble(playerid, "Largo, �vete!", -1, 30.0, 5000);
		case 5: SetPlayerChatBubble(playerid, "Se�or, salga de aqu�.", -1, 30.0, 5000);
		case 6: SetPlayerChatBubble(playerid, "Agachate y conocelo.", -1, 30.0, 5000);
	}
	return 1;
}

Funcion:MostrarAyudaComandos(playerid)
{
 	PlayerTextDrawSetString(playerid,IndicacionesT[playerid],"Pulsa_la_tecla_~b~T~w~_para hablar_o_ingresar_~y~comandos~w~.");
	TextDrawShowForPlayer(playerid,MisionT2[5]);
	PlayerTextDrawShow(playerid,IndicacionesT[playerid]);
    PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
	AyudaActiva[playerid] = 1;
	return 1;
}
Funcion:AudioLogin(playerid)
{
	new string[45];
	format(string,sizeof string, "https://"WebName"/sonidos/intro%d.mp3", random(4)+1);
	InterpolateCameraPos(playerid, 722.365478, -841.458435, 125.105911, 1385.608642, -1554.864257, 96.441055, 26000);
	InterpolateCameraLookAt(playerid, 724.793762, -845.795166, 124.561676, 1388.558471, -1558.115356, 94.047637, 26000);
	return 1;
}
Funcion:SacarAyudaComandos(playerid)
{
 	if(AyudaActiva[playerid] == 1)
 	{
		TextDrawHideForPlayer(playerid,MisionT2[5]);
		PlayerTextDrawHide(playerid,IndicacionesT[playerid]);
		AyudaActiva[playerid] = 0;
	}
	return 1;
}

Funcion:FuncionActionQueue()
{
   	mysql_tquery(Conecction, "SELECT * FROM `acciones_web`", "OnQueryFinish");
	return 1;
}
ptask TimerDeMinuto[60000](playerid)
{
	if(PlayerInfo[playerid][jMiembro] > 2 && PlayerTemp[playerid][Refuerzos] == 0)
	{
		new color;
		sscanf(BandasInfo[PlayerInfo[playerid][jMiembro]][BColor],"x",color);
		MarcarJugador(playerid,((color << 8) | 0x00) & ~0x00,PlayerInfo[playerid][jMiembro]);
	}
	TimerParlantes(playerid);
	return 1;
}


static TimerParlantes(i)
{
	new Float:vida;
	
	if(GetPVarInt(i, "PlacedBB") != INVALID_STREAMER_ID)
	{
		if(!IsPlayerInRangeOfPoint(i, 50.0, GetPVarFloat(i, "BBX"), GetPVarFloat(i, "BBY"), GetPVarFloat(i, "BBZ")))
		{
			PickUpBoombox(i);
			Mensaje(i, COLOR_GREY, "Te has alejado de tu m�sica por ende tu parlante fue guardado.");
		}
	}
	if(ViajeAvion[i] == 1)
	{
		new string[50], llegaavion;
		llegaavion = 301 - contadoravion;
		if(llegaavion < 60) format(string, sizeof(string), "El avi�n arribar� en "CR"%ds"CB".", llegaavion);
		else if(llegaavion >= 60) format(string, sizeof(string), "El avi�n arribar� en "CR"%dm %ds"CB".", llegaavion/60, llegaavion%(60));
		Mensaje(i, -1, string);
	}
	if(PlayerInfo[i][pSed] == 100 && PlayerInfo[i][pAdmin] < 3)
	{
		GetPlayerHealth(i,vida);
		EstablecerVida(i,vida-2);
		Mensaje(i, -1, "Te est�s muriendo de sed...");
	}
	if(PlayerInfo[i][pHambre] == 100 && PlayerInfo[i][pAdmin] < 3)
	{
		GetPlayerHealth(i,vida);
		EstablecerVida(i,vida-2);
		Mensaje(i, -1, "Te est�s muriendo de hambre...");
	}
	if(GetPlayerInterior(i) == 0 && GetPlayerVirtualWorld(i) > 0 && Curando[i] == 0 && PlayerTemp[i][CJ] == 0 && EnTuning[i] == false)
	{
		if(gettimeVariable > TiempoEntrarF[i]) SetPlayerVirtualWorld(i, 0);
	}
	if(PlayerTemp[i][ArrestadoTienda] != 1 && PlayerTemp[i][CargosRobo] != 0 && PlayerInfo[i][pCargos] < 3)
	{
		if(gettimeVariable > PlayerTemp[i][CargosRobo])
		{
			foreach(new c : Player)
			{
				if(FaccLegal2(c) && FaccLegal(c) && EstaEnP(i,c,50.00))
				{
					PlayerTemp[i][CargosRobo] = gettimeVariable + 60;
					Mensaje(i,-1,"La "CR"polic�a"CB" est� muy cerca, "CR"tienes que escapar"CB" para perder los cargos.");
					return 1;
				}
			}
			Mensaje(i,-1,"La "CR"polic�a"CB" dej� de buscarte, ahora "CR"puedes robar"CB" otro negocio.");
			PlayerPlaySound(i,1085,0.0,0.0,0.0);
			PlayerTemp[i][CargosRobo] = 0;
			DarEstrella(i,0);
		}
	}
	
	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
    #if DEBUG_GM == 1
    printf("(OnVehiclePaintjob) PlayerID: %d | VehicleID: %d | PaintJobID: %d", playerid, vehicleid, paintjobid);
    #endif
	TimerRC[playerid] = gettimeVariable + 15;
	new autoid = GetPlayerVehicleID(playerid);
	new slot = GetPlayerVehicle(playerid, autoid);
	if(slot != -1)
	{
		if(IsPlayerInVehicle(playerid, autos[slot][playerid]))
		{
			new query[200];
			VehicleInfo[playerid][slot][vPJ] = paintjobid;
			mysql_format(Conecction, query, sizeof(query), "UPDATE `p_autos` SET `PaintJob`='%d' WHERE `ID`='%d'",paintjobid,VehicleInfo[playerid][slot][v_DBID]);
			mysql_tquery(Conecction, query);
		}
	}
	return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
    #if DEBUG_GM == 1
    printf("(OnVehicleRespray) PlayerID: %d | VehicleID: %d", playerid, vehicleid);
    #endif
	TimerRC[playerid] = gettimeVariable + 15;
	new query[250];
	new autoid = GetPlayerVehicleID(playerid);
	new slot = GetPlayerVehicle(playerid, autoid);
	if(slot != -1)
	{
		if(IsPlayerInVehicle(playerid, autos[slot][playerid]))
		{
			InternalVehicleInfo[vehicleid][E_IVI_Color1] = color1;
			InternalVehicleInfo[vehicleid][E_IVI_Color2] = color2;
			VehicleInfo[playerid][slot][vColor1] = color1;
			VehicleInfo[playerid][slot][vColor2] = color2;
			QuitarVelocimetro(playerid);
			MostrarVelocimetro(playerid);
            mysql_format(Conecction, query, sizeof(query), "UPDATE `p_autos` SET `Color1`='%d',`Color2`='%d' WHERE `ID`='%d'",color1,color2,VehicleInfo[playerid][slot][v_DBID]);
			mysql_tquery(Conecction, query);
		}
	}
	return 1;
}

public OnEnterExitModShop(playerid, enterexit, interiorid)
{
    #if DEBUG_GM == 1
    printf("(OnEnterExitModShop) PlayerID: %d | EnterExit: %d", playerid, enterexit);
    #endif
	if(!enterexit)
	{
		TimerTP[playerid] = gettimeVariable + 5;
		new autoid = GetPlayerVehicleID(playerid);
		new slot = GetPlayerVehicle(playerid, autoid);
		if(slot != -1)
		{
			if(IsPlayerInVehicle(playerid, autos[slot][playerid]))
			{
				new query[900];
				for(new i = 0; i < 13; i++)
				{
					if(ComponenteValido((GetVehicleModel(autoid)), GetVehicleComponentInSlot(autos[slot][playerid],i))) Componentes[playerid][i][slot] = GetVehicleComponentInSlot(autos[slot][playerid], i);
					else Componentes[playerid][i][slot] = 0;
				}
				mysql_format(Conecction, query, sizeof(query), "UPDATE `p_autos` SET `Componentes0`='%d',`Componentes1`='%d',`Componentes2`='%d',`Componentes3`='%d',`Componentes4`='%d',`Componentes5`='%d',`Componentes6`='%d',`Componentes7`='%d',`Componentes8`='%d',`Componentes9`='%d',`Componentes10`='%d',`Componentes11`='%d',`Componentes12`='%d',`Componentes13`='%d' WHERE `ID`='%d'", Componentes[playerid][0][slot], Componentes[playerid][1][slot], Componentes[playerid][2][slot], Componentes[playerid][3][slot], Componentes[playerid][4][slot], Componentes[playerid][5][slot], Componentes[playerid][6][slot], Componentes[playerid][7][slot], Componentes[playerid][8][slot], Componentes[playerid][9][slot], Componentes[playerid][10][slot], Componentes[playerid][11][slot], Componentes[playerid][12][slot], Componentes[playerid][13][slot], VehicleInfo[playerid][slot][v_DBID]);
				mysql_tquery(Conecction, query);
			}
		}
	}
	return 1;
}

Funcion:Auto(playerid, slot, tipo)
{
	if(!IsPlayerConnected(playerid)) return 1;
	if(JugadorLogeado[playerid] != 1) return 1;
	if(tipo == 3)
	{
		va_SendClientMessage(playerid,-1, "Tu "CR"%s"CB" fue remolcado al �ltimo lugar donde lo estacionaste.", GetVehicleName(autos[slot][playerid]));
		DestroyVehicle(autos[slot][playerid]);
		if(VehicleInfo[playerid][slot][pOX] == 0 || VehicleInfo[playerid][slot][pOY] == 0)
		{
			new Float:CompraPos[4];
			switch(VehicleInfo[playerid][slot][vModelo])
			{
				case 430,446,452,453,454,472,473,484,493,595:
				{
					new rand = random(sizeof(ConceBSpawn));
					CompraPos[0] = ConceBSpawn[rand][0],CompraPos[1] = ConceBSpawn[rand][1],CompraPos[2] = ConceBSpawn[rand][2],CompraPos[3] = ConceBSpawn[rand][3];
				}

				case 592,577,511,512,593,520,553,476,519,460,513,548,425,417,487,488,497,563,447,469:
				{
					new rand = random(sizeof(ConceHeliSpawn));
					CompraPos[0] = ConceHeliSpawn[rand][0],CompraPos[1] = ConceHeliSpawn[rand][1],CompraPos[2] = ConceHeliSpawn[rand][2],CompraPos[3] = ConceHeliSpawn[rand][3];
				}
				default:
				{
					new rand = random(sizeof(ConceSpawn));
					CompraPos[0] = ConceSpawn[rand][0],CompraPos[1] = ConceSpawn[rand][1],CompraPos[2] = ConceSpawn[rand][2],CompraPos[3] = ConceSpawn[rand][3];
				}
			}
			VehicleInfo[playerid][slot][pOX] = CompraPos[0];
			VehicleInfo[playerid][slot][pOY] = CompraPos[1];
			VehicleInfo[playerid][slot][pOZ] = CompraPos[2];
			VehicleInfo[playerid][slot][pOA] = CompraPos[3];
		}
		if(VehicleInfo[playerid][slot][pVidaVE] == 0)
		{
			VehicleInfo[playerid][slot][pVidaVE] = 1000;
		}
		autos[slot][playerid] = CreateVehicle(VehicleInfo[playerid][slot][vModelo],VehicleInfo[playerid][slot][pOX],VehicleInfo[playerid][slot][pOY],VehicleInfo[playerid][slot][pOZ],VehicleInfo[playerid][slot][pOA],VehicleInfo[playerid][slot][vColor1],VehicleInfo[playerid][slot][vColor2],-1);
		LinkVehicleToInteriorAC(autos[slot][playerid], VehicleInfo[playerid][slot][v0_interior]);
		SetVehicleVirtualWorld(autos[slot][playerid], VehicleInfo[playerid][slot][v0_vw]);
		SetVehicleHealthAC(autos[slot][playerid], VehicleInfo[playerid][slot][pVidaVE]);
	}
	else if(tipo == 4)
	{
		new nivel = randomEx(1,10), rand = random(sizeof(EstaCamioneroSpawn));
		if(autos[slot][playerid] != INVALID_VEHICLE_ID) DestroyVehicle(autos[slot][playerid]);
		autos[slot][playerid] = CreateVehicle(VehicleInfo[playerid][slot][vModelo],EstaCamioneroSpawn[rand][0],EstaCamioneroSpawn[rand][1],DarNivelEstacionamiento(nivel),EstaCamioneroSpawn[rand][3],VehicleInfo[playerid][slot][vColor1],VehicleInfo[playerid][slot][vColor2],-1);
		va_SendClientMessage(playerid,-1, "Tu "CR"%s"CB" ha sido guardado en el {8baab7}nivel %d"CB" del estacionamiento de "CR"Easter Basin Docks"CB".", GetVehicleName(autos[slot][playerid]),nivel);
		LinkVehicleToInteriorAC(autos[slot][playerid], 100);
		SetVehicleVirtualWorld(autos[slot][playerid], tipo);
		SetVehicleHealthAC(autos[slot][playerid], 1000.0);
	}
	else if(tipo == 5 || tipo == 6)
	{
		new rand = random(sizeof(EstacionamientoSpawn));
		DestroyVehicle(autos[slot][playerid]);
		autos[slot][playerid] = CreateVehicle(VehicleInfo[playerid][slot][vModelo],EstacionamientoSpawn[rand][0],EstacionamientoSpawn[rand][1],EstacionamientoSpawn[rand][2],EstacionamientoSpawn[rand][3],VehicleInfo[playerid][slot][vColor1],VehicleInfo[playerid][slot][vColor2],-1);
		switch(tipo)
		{
			case 5: va_SendClientMessage(playerid,-1, "Tu "CR"%s"CB" fue trasladado al estacionamiento de "CR"Commerce"CB".",GetVehicleName(autos[slot][playerid]));
			case 6: va_SendClientMessage(playerid,-1, "Tu "CR"%s"CB" fue trasladado al estacionamiento del Sal�n de Eventos.",GetVehicleName(autos[slot][playerid]));
		}
		LinkVehicleToInteriorAC(autos[slot][playerid], 1);
		SetVehicleVirtualWorld(autos[slot][playerid], tipo);
		SetVehicleHealthAC(autos[slot][playerid], 1000.0);
	}
	else
	{
		if(VehicleInfo[playerid][slot][pVidaV] == 0)
		{
			VehicleInfo[playerid][slot][pVidaV] = 1000;
		}
		autos[slot][playerid] = CreateVehicle(VehicleInfo[playerid][slot][vModelo],VehicleInfo[playerid][slot][vX],VehicleInfo[playerid][slot][vY],VehicleInfo[playerid][slot][vZ],VehicleInfo[playerid][slot][vA],VehicleInfo[playerid][slot][vColor1],VehicleInfo[playerid][slot][vColor2],-1);
		LinkVehicleToInteriorAC(autos[slot][playerid], VehicleInfo[playerid][slot][vinterior]);
		SetVehicleVirtualWorld(autos[slot][playerid], VehicleInfo[playerid][slot][vvw]);
		SetVehicleHealthAC(autos[slot][playerid], VehicleInfo[playerid][slot][pVidaV]);
	}
	SetVehicleNumberPlate(autos[slot][playerid], Patente[playerid][slot]);
	VehicleFuel[autos[slot][playerid]] = VehicleInfo[playerid][slot][vGas];
	for(new i = 0; i < 13; i++) if(ComponenteValido(VehicleInfo[playerid][slot][vModelo],Componentes[playerid][i][slot])) AddVehicleComponent(autos[slot][playerid], Componentes[playerid][i][slot]);
	UpdateVehicleDamageStatus(autos[slot][playerid], VehicleInfo[playerid][slot][VE1], VehicleInfo[playerid][slot][VE2], VehicleInfo[playerid][slot][VE3], VehicleInfo[playerid][slot][VE4]);
	if(VehicleInfo[playerid][slot][vPJ] >= 0) ChangeVehiclePaintjob(autos[slot][playerid], VehicleInfo[playerid][slot][vPJ]);
	if(VehicleInfo[playerid][slot][vSeguro] == 1)
	{
		bloqueado[autos[slot][playerid]] = 1;
		GetVehicleParamsEx(autos[slot][playerid], engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(autos[slot][playerid], engine, lights, alarm, 1, bonnet, boot, objective);
	}
	else if(VehicleInfo[playerid][slot][vSeguro] == 0)
	{
		bloqueado[autos[slot][playerid]] = 0;
		GetVehicleParamsEx(autos[slot][playerid], engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(autos[slot][playerid], engine, lights, alarm, 0, bonnet, boot, objective);
	}
	if(VehicleInfo[playerid][slot][vAlarma] == 1) alarma[autos[slot][playerid]] = 1;
	else if(VehicleInfo[playerid][slot][vAlarma] == 0) alarma[autos[slot][playerid]] = 0;
	ChangeVehicleColorAC(autos[slot][playerid], VehicleInfo[playerid][slot][vColor1], VehicleInfo[playerid][slot][vColor2]);
	EmisoraEscuchando[autos[slot][playerid]] = -1;
	Baul[autos[slot][playerid]] = 0;
	MotorAuto[autos[slot][playerid]] = 0;
	SinGaso[autos[slot][playerid]] = 0;
	Balde[autos[slot][playerid]] = 0;
	Luces[autos[slot][playerid]] = 0;
	for(new x = 0; x != MAX_TOBJETOS; x ++) if(TuningObjetos[playerid][slot][x][vobject_VALID]) if(TuningObjetos[playerid][slot][x][vobject_OBJECT_ID] != INVALID_STREAMER_ID) ActualizarTuningObjeto(playerid,slot,x);
	return 1;
}
/*
public Autos(playerid, slot)
{
	if(!IsPlayerConnected(playerid)) return 1;
	if(JugadorLogeado[playerid] != 1) return 1;
 	
	
	new Query[100];
	if(slot != -1)
	{
		Auto(playerid,slot,0);
		mysql_format(Conecction, Query, sizeof(Query), "SELECT * FROM `v_tuning` WHERE `VehicleID` = '%d' LIMIT %d;",VehicleInfo[playerid][i][v_DBID],MAX_TOBJETOS);
		mysql_tquery(Conecction, Query, "LoadVehicleObjects", "ii", playerid, i);
		return 1;
	}
	else{
		for(new i = 0; i < MAX_PAUTOS; i++)
		{
			if(VehicleInfo[playerid][i][vModelo]  > 0)
			{
				Auto(playerid,i,0);
				mysql_format(Conecction, Query, sizeof(Query), "SELECT * FROM `v_tuning` WHERE `VehicleID` = '%d' LIMIT %d;",VehicleInfo[playerid][i][v_DBID],MAX_TOBJETOS);
				mysql_tquery(Conecction, Query, "LoadVehicleObjects", "ii", playerid, i);
			}
		}
	}
  	
	return 1;
}*/

Funcion:Conteos(Tiempo)
{
    if(Tiempo >= 1)
    {
        new Mensajes[6];
        format(Mensajes, sizeof(Mensajes), "~r~%d", Tiempo);
  		foreach(new i : Player) { GameTextForPlayer(i, Mensajes, 1000, 3); }
        SetTimerEx("Conteos", 1000, false, "i", Tiempo-1);
    }
	else { foreach(new i : Player) { GameTextForPlayer(i, "~g~YA!", 1000, 3); EnConteo = false; } }
    return 1;
}

Funcion:SaveAccount(playerid)
{
    if(GetPlayerScore(playerid) == 0) return 1;
    if(LogeoCorrecto[playerid] == 0) return 1;
	if(JugadorLogeado[playerid] == 1)
	{
 		if(PlayerTemp[playerid][pt_TempName]) return 1;
		JugadorLogeado[playerid] = 0;
		new query[3600];
		new Float:x,Float:y,Float:z,Float:z_a,Float:VidaV,inte,vw;
		new day,month,year;
		getdate(year,month,day);
		for(new a = 0; a < MAX_PAUTOS; a++)
  		{
			if(autos[a][playerid] > 0)
			{
				GetVehicleDamageStatus(autos[a][playerid], VehicleInfo[playerid][a][VE1], VehicleInfo[playerid][a][VE2], VehicleInfo[playerid][a][VE3], VehicleInfo[playerid][a][VE4]);
				VehicleInfo[playerid][a][vGas] = VehicleFuel[autos[a][playerid]];
				GetVehicleHealth(autos[a][playerid], VidaV);
				GetVehiclePos(autos[a][playerid], x,y,z);
				VehicleInfo[playerid][a][vX] = x;
				VehicleInfo[playerid][a][vY] = y;
				VehicleInfo[playerid][a][vZ] = z;
				GetVehicleZAngle(autos[a][playerid], z_a);
				VehicleInfo[playerid][a][vA] = z_a;
				VehicleInfo[playerid][a][pVidaV] = VidaV;
				inte = GetVehicleInterior(autos[a][playerid]);
				vw = GetVehicleVirtualWorld(autos[a][playerid]);
				VehicleInfo[playerid][a][vinterior] = inte;
				VehicleInfo[playerid][a][vvw] = vw;
				DestroyVehicle(autos[a][playerid]);
				Baul[autos[a][playerid]] = 0;
				bloqueado[autos[a][playerid]] = 0;
				Luces[autos[a][playerid]] = 0;
				MotorAuto[autos[a][playerid]] = 0;
				alarma[autos[a][playerid]] = 0;
				mysql_format(Conecction, query, sizeof(query),"UPDATE `p_autos` SET VE1='%d', VE2='%d', VE3='%d', VE4='%d', vGas='%d', VidaV='%f', X='%f', Y='%f', Z='%f', A='%f', Ointerior='%d', Ovw='%d'",VehicleInfo[playerid][a][VE1],VehicleInfo[playerid][a][VE2],VehicleInfo[playerid][a][VE3],VehicleInfo[playerid][a][VE4],VehicleInfo[playerid][a][vGas],VehicleInfo[playerid][a][pVidaV],VehicleInfo[playerid][a][vX],VehicleInfo[playerid][a][vY],VehicleInfo[playerid][a][vZ],VehicleInfo[playerid][a][vA],VehicleInfo[playerid][a][v0_interior],VehicleInfo[playerid][a][v0_vw]);
				mysql_format(Conecction, query, sizeof(query),"%s, vTraba='%d', Segurov='%d', OX='%f', OY='%f', OZ='%f', OA='%f', vinterior='%d', vvw='%d', Alarm='%d', Alarma='%d', Motor='%d' WHERE `ID`='%d' LIMIT 1",query,VehicleInfo[playerid][a][vTraba],VehicleInfo[playerid][a][vSeguro],VehicleInfo[playerid][a][pOX],VehicleInfo[playerid][a][pOY],VehicleInfo[playerid][a][pOZ],VehicleInfo[playerid][a][pOA],VehicleInfo[playerid][a][vinterior],VehicleInfo[playerid][a][vvw],VehicleInfo[playerid][a][vAlarm],VehicleInfo[playerid][a][vAlarma],VehicleInfo[playerid][a][Aceleracion],VehicleInfo[playerid][a][v_DBID]);
				mysql_tquery(Conecction, query);
	  		}
  		}
		if(PlayerInfo[playerid][jDinero] < 0) PlayerInfo[playerid][jDinero] = 0;
		if(PlayerInfo[playerid][pBanco] < 0) PlayerInfo[playerid][pBanco] = 0;
		PlayerInfo[playerid][pInterior] = GetPlayerInterior(playerid);
		PlayerInfo[playerid][pMundoVirtual] = GetPlayerVirtualWorld(playerid);
	    //if(PlayerTemp[playerid][CJ] == 1 && PlayerInfo[playerid][pMundoVirtual] == VWTemporal[playerid]) PlayerInfo[playerid][pMundoVirtual] = VWTemporal[playerid];
		///if(PlayerTemp[playerid][CJ] == 1) PlayerInfo[playerid][pMundoVirtual] = 0;
		GetPlayerPos(playerid, PlayerInfo[playerid][jPos_x], PlayerInfo[playerid][jPos_y], PlayerInfo[playerid][jPos_z]);
		if(EnClub[playerid] != 0)
		{
			EnClub[playerid] = 0;
			PlayerInfo[playerid][jPos_x] = 1204.8699;
			PlayerInfo[playerid][jPos_y] = 12.5584;
			PlayerInfo[playerid][jPos_z] = 1000.921;
			PlayerInfo[playerid][pInterior] = 2;
			PlayerInfo[playerid][pMundoVirtual] = 5;
 		}
		GetPlayerHealth(playerid, PlayerInfo[playerid][jVida]);
		GetPlayerArmour(playerid, PlayerInfo[playerid][jArmadura]);
		if(PlayerTemp[playerid][VidaDetectado][0] == 1) PlayerInfo[playerid][jVida] = 25;
		if(PlayerTemp[playerid][VidaDetectado][1] == 1)	PlayerInfo[playerid][jArmadura] = 0;
		new hour,minute,second;
		gettime(hour, minute, second);
		new timeonline = PlayerInfo[playerid][TimeOn] + TiempoConectado[playerid];
		PlayerInfo[playerid][jConexion] = gettimeVariable;
		mysql_format(Conecction, query, sizeof(query), "UPDATE `usuarios` SET Online='0',Interior='%d',MundoVirtual='%d',Posx='%f',Posy='%f',Posz='%f',Vida='%f',Chaleco='%f',Admin='%d', Maper='%d', Nivel='%d',Money='%d',Banco='%d',GPS='%d',Radio='%d',Sexo='%d',Numero='%d',Materiales='%d',TiempoJail='%d',Trabajo3='%d',Trabajo2='%d',Trabajo='%d',Faccion='%d',TipoCarcel='%d',SocioHP='%d',Hambre='%d',CanalDudas='%d',ShowCone='%d',ShowGuia='%d',SedOculta='%d'",PlayerInfo[playerid][pInterior],PlayerInfo[playerid][pMundoVirtual],PlayerInfo[playerid][jPos_x],PlayerInfo[playerid][jPos_y],PlayerInfo[playerid][jPos_z],PlayerInfo[playerid][jVida],PlayerInfo[playerid][jArmadura],PlayerInfo[playerid][pAdmin],PlayerInfo[playerid][pMaper],PlayerInfo[playerid][jNivel],PlayerInfo[playerid][jDinero],PlayerInfo[playerid][pBanco],PlayerInfo[playerid][pGPS],PlayerInfo[playerid][pRadio],PlayerInfo[playerid][jSexo],PlayerInfo[playerid][pNumero],PlayerInfo[playerid][pMateriales],PlayerInfo[playerid][pTiempoJail],PlayerInfo[playerid][Trabajo][2],PlayerInfo[playerid][Trabajo][1],PlayerInfo[playerid][Trabajo][0],PlayerInfo[playerid][jMiembro],PlayerInfo[playerid][pTipoCarcel],PlayerInfo[playerid][pSocioHP],PlayerInfo[playerid][pHambre],CanalDudas[playerid],ShowCone[playerid],ShowGuia[playerid],SedOculta[playerid]);
		mysql_format(Conecction, query, sizeof(query), "%s, Licencia='%d',Semillas='%d',Marihuana='%d',IP='%e',Agonizando='%d',CasaID1='%d',CasaID2='%d',Moneda='%d',Creditos='%d',TiempoPD='%d',arrestado='%d',Sanciones='%d',horasjugadas='%d',TieneEmisora='%d',NombreEmisora='%e',Cargos='%d',SkinTrabajo='%d',Duty='%d',WP0='%d',WP1='%d',WP2='%d',WP3='%d',WP4='%d',WP5='%d',Ciudad='%e',ShowMutes='%d',ShowSound='%d',ShowVelo='%d'", query,PlayerInfo[playerid][pLicencia],PlayerInfo[playerid][pSemillas],PlayerInfo[playerid][pMarihuana],PlayerInfo[playerid][IP],PlayerInfo[playerid][Agonizando],PlayerInfo[playerid][CasaID][0],PlayerInfo[playerid][CasaID][1],PlayerInfo[playerid][Moneda],PlayerInfo[playerid][Credits],TiempoPD[playerid],PlayerInfo[playerid][arrestado],PlayerInfo[playerid][sancionado],PlayerInfo[playerid][horasjugadas],Emisoras[playerid][TieneEmisora],Emisoras[playerid][NombreEmisora],PlayerInfo[playerid][pCargos],PlayerInfo[playerid][pModelo],PlayerInfo[playerid][pDuty],PlayerInfo[playerid][pWP0],PlayerInfo[playerid][pWP1],PlayerInfo[playerid][pWP2],PlayerInfo[playerid][pWP3],PlayerInfo[playerid][pWP4],PlayerInfo[playerid][pWP5],PlayerInfo[playerid][pCiudad],ShowMutes[playerid],ShowSound[playerid],ShowVelo[playerid]);
		mysql_format(Conecction, query, sizeof(query), "%s, WP6='%d',WP7='%d',WP8='%d',WP9='%d',WP10='%d',WP11='%d',WP12='%d',Experiencia='%d',PuntosCarrera='%d',Conexion='%d',Sed='%d',RopaBasu='%d',RopaMedi='%d',RopaMeca='%d',RopaMine='%d',Martillo='%d',Destornillador='%d',Barreta='%d',Balde='%d',Regalo='%d',Patines='%d',TiempoCarcelS='%d',NivelTransportista='%d',ExpTransportista='%d',TimeOn='%d'", query,PlayerInfo[playerid][pWP6],PlayerInfo[playerid][pWP7],PlayerInfo[playerid][pWP8],PlayerInfo[playerid][pWP9],PlayerInfo[playerid][pWP10],PlayerInfo[playerid][pWP11],PlayerInfo[playerid][pWP12],PlayerInfo[playerid][jExperiencia],PlayerInfo[playerid][pPuntosCarrera],PlayerInfo[playerid][jConexion],PlayerInfo[playerid][pSed],RopaBasu[playerid],RopaMedi[playerid],RopaMeca[playerid],RopaMine[playerid],PlayerInfo[playerid][jMartillo],PlayerInfo[playerid][jDestornillador],PlayerInfo[playerid][jBarreta],PlayerInfo[playerid][jBalde],PlayerInfo[playerid][jRegalo],PlayerInfo[playerid][pPatines],PlayerInfo[playerid][pTiempoCarcel],PlayerInfo[playerid][pNivelTransportista],PlayerInfo[playerid][pExpTransportista],timeonline);
        mysql_format(Conecction, query, sizeof(query), "%s, Caramelos='%d', AvisoTerritorio='%d',ShowTerritorio='%d',CasaID3='%d',CasaID4='%d',MostrarTwitter='%d',DutyM='%d',C4='%d'", query,PlayerInfo[playerid][pCaramelos],AvisoTerritorio[playerid],ShowTerritorio[playerid],PlayerInfo[playerid][CasaID][2],PlayerInfo[playerid][CasaID][3],MostrarTwitter[playerid],PlayerInfo[playerid][pDutyM],PlayerInfo[playerid][pC4]);
		mysql_format(Conecction, query, sizeof(query), "%s, Agenda='%d',Crack='%d',Medicamentos='%d',VIP='%d',Rango='%d',Repuestos='%d',NMute='%d',NivelPescador='%d',ExpPescador='%d',NivelArmero='%d',ExpArmero='%d',NivelCamionero='%d',ExpCamionero='%d',NivelBasurero='%d',ExpBasurero='%d',NivelPiloto='%d',ExpPiloto='%d',NivelLadron='%d',ExpLadron='%d',NivelMinero='%d',ExpMinero='%d'", query,PlayerInfo[playerid][pAgenda],PlayerInfo[playerid][pCrack],PlayerInfo[playerid][pMedicamentos],PlayerInfo[playerid][VIP],PlayerInfo[playerid][pRango],PlayerInfo[playerid][Repuestos],TiempoDuda[playerid],PlayerInfo[playerid][pNivelPescador],PlayerInfo[playerid][pExpPescador],PlayerInfo[playerid][pNivelArmero],PlayerInfo[playerid][pExpArmero],PlayerInfo[playerid][pNivelCamionero],PlayerInfo[playerid][pExpCamionero],PlayerInfo[playerid][pNivelBasurero],PlayerInfo[playerid][pExpBasurero],PlayerInfo[playerid][pNivelMecanico],PlayerInfo[playerid][pExpPiloto],PlayerInfo[playerid][pNivelLadron],PlayerInfo[playerid][pExpLadron],PlayerInfo[playerid][pNivelMinero],PlayerInfo[playerid][pExpMinero]);
		mysql_format(Conecction, query, sizeof(query), "%s, Afinidad1='%d',Afinidad2='%d',Afinidad3='%d',Afinidad4='%d',Afinidad5='%d',Afinidad6='%d',NivelMedico='%d',ExpMedico='%d',AMute='%d',TiendaInt='%d',TiendaVw='%d',TiendasX='%f',TiendasY='%f',EstiloCaminar='%d',EstadoLaser='%d',ColorLaser='%d',Acento='%d',Estado='%e',MEstado='%d',Cocaina='%d',Hongos='%d',AcentoP='%e',Asesinatos='%d',KitMedico='%d',AutoLogin='%d' WHERE `ID`='%d'", query, Afinidad[0][playerid],Afinidad[1][playerid],Afinidad[2][playerid],Afinidad[3][playerid],Afinidad[4][playerid],Afinidad[5][playerid],PlayerInfo[playerid][pNivelMedico],PlayerInfo[playerid][pExpMedico],PlayerTemp[playerid][TiempoTwitter],PlayerInfo[playerid][TiendaInt],PlayerInfo[playerid][TiendaVw],PlayerInfo[playerid][TiendasX],PlayerInfo[playerid][TiendasY],WalkStyle[playerid],PlayerInfo[playerid][pEstadoLaser],PlayerInfo[playerid][pColorLaser],PlayerInfo[playerid][pAcento],PlayerInfo[playerid][pFraseEstado],PlayerInfo[playerid][pTieneEstado],PlayerInfo[playerid][pCocaina],PlayerInfo[playerid][pHongos],PlayerInfo[playerid][AcentoP],PlayerInfo[playerid][pAsesinatos],PlayerInfo[playerid][pKitm],PlayerInfo[playerid][AutoLogin],PlayerInfo[playerid][p_DBID]);
		mysql_tquery(Conecction, query);
	}
	return 1;
}


Funcion:DarDinero(playerid,cantidad)
{
	if(cantidad < 0) return 1;
	PlayerInfo[playerid][jDinero] += cantidad;
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid,PlayerInfo[playerid][jDinero]);
	return 1;
}

static EnviarMensajeProx(i, Float:oldposx, Float:oldposy, Float:oldposz, Float:radi,col1,col2,col3,col4,col5, const string[])
{
	new Float:posx, Float:posy, Float:posz;
	new Float:tempposx, Float:tempposy, Float:tempposz;

	GetPlayerPos(i, posx, posy, posz);
	tempposx = (oldposx -posx);
	tempposy = (oldposy -posy);
	tempposz = (oldposz -posz);
	if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16))) Mensaje(i, col1, string);
	else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8))) Mensaje(i, col2, string);
	else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4))) Mensaje(i, col3, string);
	else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2))) Mensaje(i, col4, string);
	else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) Mensaje(i, col5, string);
}

static ProxDetector(Float:radi, playerid, const string[],col1,col2,col3,col4,col5)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		//new vw = GetPlayerVirtualWorld(playerid);
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		foreach(new i : StreamedPlayer[playerid])
		{
			/*if(vw == GetPlayerVirtualWorld(i))
			{
				EnviarMensajeProx(i,oldposx,oldposy,oldposz,radi,col1,col2,col3,col4,col5, string);
			}*/
			EnviarMensajeProx(i,oldposx,oldposy,oldposz,radi,col1,col2,col3,col4,col5, string);
		}
		foreach(new i : Admin)
		{
			if(i != playerid && GetPlayerState(i) == PLAYER_STATE_SPECTATING) EnviarMensajeProx(i,oldposx,oldposy,oldposz,radi,col1,col2,col3,col4,col5, string);
		}
		Mensaje(playerid, col1, string);
	}
	return 1;
}

Funcion:Revisado(playerid,id)
{
	new var = -1,Float:Pos[3];
	for(new a = 0; a < MAX_PAUTOS; a++)
 	{
  		if(!IsValidVehicle(autos[a][id])) continue;
		GetVehiclePos(autos[a][id], Pos[0], Pos[1], Pos[2]);
  		if(EstaEn(playerid, 5.0, Pos[0], Pos[1], Pos[2])) var = a;
	}
	if(var == -1)
	{
	 	PlayerTemp[playerid][TimerRevisar] = 0;
		BarraJob(playerid,2);
		Mensaje(playerid, -1, "Tienes que estar m�s cerca del ba�l.");
		return 1;
	}
	if(PlayerTemp[playerid][TimerRevisar] > 5)
	{
		BarraJob(playerid,2);
		PlayerTemp[playerid][TimerRevisar] = 0;
		if(Baul[autos[var][id]] == 1)
		{
			
			if(IsPlayerInAnyVehicle(playerid)) return 1;
			VerBaul[playerid] = id;
			new counter = 4/*,contador = 1*/;
			if(BAUL6(autos[var][id])) counter = 6;
			if(BAUL8(autos[var][id])) counter = 8;
			if(MOTO(autos[var][id])) counter = 2;
			
			switch(PlayerInfo[VerBaul[playerid]][VIP])
			{
				case 2: counter ++;
				case 3: counter += 2;
			}
			new dialog[50*10];
			for(new i = 1; i <= counter; i++)
			{
				if(EspacioBaul[VerBaul[playerid]][var][i] != 0) format(dialog, sizeof(dialog), "%s"CR"[%d]{FFFFFF} - %s\n",dialog,i,GetWeaponNameEx(EspacioBaul[VerBaul[playerid]][var][i]));	
				else format(dialog, sizeof(dialog), "%s{BFBFBF}Espacio disponible\n",dialog);
								
			}
			BaulVar[playerid] = var;
			MostrarDialog(playerid, DIALOG_BAUL,DIALOG_STYLE_LIST, "Ba�l del veh�culo", dialog, "Aceptar", "Salir");


			/*counter = counter/2;
			for(new i = 1; i <= counter; i++)
			{
				format(string, sizeof(string), "Lugar "CR"%d"CB": %s {AFAFAF}| Lugar "CR"%d"CB": %s",contador,GetWeaponNameEx(EspacioBaul[VerBaul[playerid]][var][contador]),contador+1,GetWeaponNameEx(EspacioBaul[VerBaul[playerid]][var][contador+1]));
				Mensaje(playerid,0xAFAFAFFF,string);
				contador += 2;
			}

			switch(PlayerInfo[VerBaul[playerid]][VIP])
			{
				case 2: format(string,sizeof(string),"Lugar "CR"%d"CB": %s",contador,GetWeaponNameEx(EspacioBaul[VerBaul[playerid]][var][contador])), Mensaje(playerid,0xAFAFAFFF,string);
				case 3: format(string,sizeof(string),"Lugar "CR"%d"CB": %s {AFAFAF}| Lugar "CR"%d"CB": %s",contador,GetWeaponNameEx(EspacioBaul[VerBaul[playerid]][var][contador]),contador+1,GetWeaponNameEx(EspacioBaul[VerBaul[playerid]][var][contador+1])), Mensaje(playerid,0xAFAFAFFF,string);
			}*/

			
			
		}
		else return Mensaje(playerid,-1,"Han cerrado el baul del veh�culo");
	}
	else
	{
		SetTimerEx("Revisado",1000,false,"dd",playerid,id);
		UpdateBarraJob(playerid,PlayerTemp[playerid][TimerRevisar]);
		PlayerTemp[playerid][TimerRevisar]++;
	}
	return 1;
}

static DarEstrella(playerid, star)
{
    PlayerInfo[playerid][pCargos] = star;
	return SetPlayerWantedLevel(playerid,star);
}

Funcion:BajarCargo(playerid)
{
	if(PlayerInfo[playerid][pCargos] == 1)
	{
		
		DarEstrella(playerid,0);
		CagoSeguro[playerid] = 0;
	}
}

Funcion:AdvertGolpes(playerid)
{
	if(GolpesAdv[playerid] == 1) GolpesAdv[playerid] = 0;
}

Funcion:Advert(playerid)
{
	if(Advertido[playerid] == 1) Advertido[playerid] = 0;
}

Funcion:Reparando(playerid,reparaid,vehicleid)
{
	BarraJob(playerid,2);
	PlayerTemp[playerid][TimerReparar] = 0;
	LlamadaMeca[reparaid] = 0;
    AceptoRepara[reparaid] = 0;
	TimerRC[reparaid] = gettimeVariable + 15;
    SetVehicleHealthAC(vehicleid, 1000.0);
    if(AVION(vehicleid)) RepairVehicle(vehicleid);
	LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	SetPlayerColor(reparaid, COLORCARGO0);
	if(playerid == reparaid) return 1;
	if(PlayerInfo[playerid][pExpPiloto] < 49)
	{
		if(PlayerInfo[playerid][VIP] > 0)
		{
			new pago = random(3);
			switch(pago)
			{
				case 0,1:
				{
					PlayerInfo[playerid][pExpPiloto]++;
					Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad.");
				}
				case 2:
				{
					PlayerInfo[playerid][pExpPiloto]+= 2;
					Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad.");
				}
			}
		}
		else if(PlayerInfo[playerid][VIP] > 2)
		{
			new pago = random(3);
			switch(pago)
			{
				case 0,1:
				{
					PlayerInfo[playerid][pExpPiloto]++;
					Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 punto de habilidad.");
				}
				case 2:
				{
					PlayerInfo[playerid][pExpPiloto]+= 3;
					Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +3 puntos de habilidad.");
				}
			}
		}
		else
		{
			PlayerInfo[playerid][pExpPiloto]++;
			Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad.");
		}
	}
	else if(PlayerInfo[playerid][pExpPiloto] >= 49)
	{
		PlayerInfo[playerid][pExpPiloto] = 0;
		PlayerInfo[playerid][pNivelMecanico]++;
		ShowTDN(playerid, "~p~Felicidades~w~, has aumentado tu nivel de mec�nico.");
	}
	return 1;
}

Funcion:LlamadaCops(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new string[200];
		Mensaje(playerid,-1,"{3399FF}[Central de polic�a]"CB" Romina: Hola, ya le transfiero con un oficial, aguarde un momento por favor.");
		format(string, 200,"{3399FF}[Central de polic�a]"CB" Romina: Hola, %s (%d) esta llamando al 911.",NombreJugador(playerid), playerid);
		SendRadioMessage(1,-1,string,INVALID_PLAYER_ID, 1);
		SendRadioMessage(1,-1,"Cualquier oficial disponible, por favor "CR"/atender"CB" la llamada",INVALID_PLAYER_ID, 1);
		ReportCrimen(playerid,6);
	}
	return true;
}

Funcion:LlamadaGrua(playerid)
{
	Mensaje(playerid,-1,"{00d8ff}[Servicio de gr�a]"CB" Ang�lica: Hola, �quieres utilizar nuestro servicio de gr�as?");
	MostrarDialog(playerid, LLAMAGRUA, DIALOG_STYLE_MSGBOX, "Informaci�n sobre el servicio de gr�a", ""CB"El servicio de gr�a sirve para recuperar el veh�culo, en caso de que haya quedado\nen un lugar inaccesible.\nPor ejemplo: En el agua, dentro del estacionamiento de una propiedad, en una pileta, etc.\n\n"CR"�Quieres utilizar el servicio?", "Si","No");
	return true;
}

Funcion:LlamadaGrua2(playerid)
{
	Mensaje(playerid, -1, "{00d8ff}[Servicio de gr�a]"CB" Ang�lica: Perfecto, �a d�nde quiere que llevemos su veh�culo?");
	MostrarDialog(playerid, LLAMAGRUA2, DIALOG_STYLE_LIST,"Lugar de entrega","Estacionamiento actual\nEstacionamiento municipal\nA mi posici�n actual","Recuperar","Cancelar");
	return true;
}

Funcion:LlamadaGrua3(playerid)
{
	Mensaje(playerid, -1, "{00d8ff}[Servicio de gr�a]"CB" Ang�lica: �Podr�a decirme la matr�cula?");
	new string[150*MAX_PAUTOS];
    for(new i = 0; i < MAX_PAUTOS; i++)
    {
        if(!IsValidVehicle(autos[i][playerid])) continue;
        format(string, sizeof(string), "%s Veh�culo: {F6E200}%s"CB" | Patente: "CR"%s"CB" | Costo del servicio: {F81414}$%s\n",string,GetVehicleName(autos[i][playerid]),Patente[playerid][i],ConvertirNumero(VehicleInfo[playerid][i][vPrecio]/100));
    }
	MostrarDialog(playerid, LLAMAGRUA3, DIALOG_STYLE_LIST, "Veh�culo que deseas recuperar con el servicio de gr�a", string, "Recuperar","Cancelar");
	return true;
}

Funcion:llamada(playerid)
{
	PlayerPlaySound(playerid, 3401, 0.0, 0.0, 0.0);
	llamadasonido1[playerid] = SetTimerEx("llamada2", 950, false, "i", playerid);
	return 1;
}

Funcion:llamada2(playerid)
{
	PlayerPlaySound(playerid, 3402, 0.0, 0.0, 0.0);
	llamadasonido2[playerid] = SetTimerEx("llamada", 850, false, "i", playerid);
	return 1;
}

Funcion:finllamada(playerid)
{
	KillTimer(llamadasonido1[playerid]);
	KillTimer(llamadasonido2[playerid]);
	PlayerPlaySound(playerid, 3402, 0.0, 0.0, 0.0);
	return 1;
}

Funcion:finllamadax(playerid)
{
	KillTimer(llamadasonido1[playerid]);
	KillTimer(llamadasonido2[playerid]);
	PlayerPlaySound(playerid, 3402, 0.0, 0.0, 0.0);
	return 1;
}

Funcion:ColgarLaLlamada(playerid)
{
	Mensaje(playerid,-1,"Cortaste la comunicaci�n.");
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
	PlayerInfo[playerid][MobileSub] = -1;
	EnLlamada[playerid] = 0;
	finllamada(playerid);
	return 1;
}

Funcion:ColgarLlamada(playerid)
{
	if(PlayerInfo[playerid][MobileSub] == 2540)
	{
		Mensaje(playerid,-1,"Colgaron la llamada.");
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		PlayerInfo[playerid][MobileSub] = -1;
		EnLlamada[playerid] = 0;
		finllamada(playerid);
		return 1;
	}
	else return 1;
}

Funcion:LlamadaCancelada(playerid)
{
	Mensaje(playerid, COLOR_SMS, "Lo llamaremos de vuelta en unas horas (5 minutos aproximadamente)");
	ColgarLaLlamada(playerid);
	return 1;
}

Funcion:LlamadaAceptada(playerid)
{
	Mensaje(playerid, COLOR_SMS, "Lo estan esperando, llegue con su cami�n con buen estado.");
	PlayerTemp[playerid][pt_Transportista] = true;
	switch(Viaje[playerid])
	{
		case 1: { PuntoTraX[playerid] = 586.4625;    PuntoTraY[playerid] = 856.0408;    PuntoTraZ[playerid] = -42.9917; }
		case 2: { PuntoTraX[playerid] = 1333.2310;   PuntoTraY[playerid] = 288.1360;    PuntoTraZ[playerid] = 19.5547;  }
		case 3: { PuntoTraX[playerid] = -1994.5979;  PuntoTraY[playerid] = -2425.1882;  PuntoTraZ[playerid] = 30.6250;  }
		case 4: { PuntoTraX[playerid] = 684.6442;    PuntoTraY[playerid] = 892.3171;    PuntoTraZ[playerid] = -39.6411; }
		case 5: { PuntoTraX[playerid] = 1024.1267;   PuntoTraY[playerid] = 2113.9292;   PuntoTraZ[playerid] = 10.8203;  }
		case 6: { PuntoTraX[playerid] = -1741.2456;  PuntoTraY[playerid] = 1427.5416;   PuntoTraZ[playerid] = 7.1875;   }
		case 7: { PuntoTraX[playerid] = 341.7177;    PuntoTraY[playerid] = 869.3250;    PuntoTraZ[playerid] = 20.4063;  }
		case 8: { PuntoTraX[playerid] = -2460.8755;  PuntoTraY[playerid] = 2286.8108;   PuntoTraZ[playerid] = 4.9844;   }
		case 9: { PuntoTraX[playerid] = -2471.3093;  PuntoTraY[playerid] = 2303.9348;   PuntoTraZ[playerid] = 4.9844;   }
		case 10: { PuntoTraX[playerid] = -2471.3215; PuntoTraY[playerid] = 2298.7263;   PuntoTraZ[playerid] = 4.9844;   }
		case 11: { PuntoTraX[playerid] = 2905.2002;  PuntoTraY[playerid] = 1734.8521;   PuntoTraZ[playerid] = 10.7633;  }
		case 12: { PuntoTraX[playerid] = 210.1600;   PuntoTraY[playerid] = -29.2991;    PuntoTraZ[playerid] = 1.5781;   }
	}
	CrearCheckpoint(playerid,PuntoTraX[playerid],PuntoTraY[playerid],PuntoTraZ[playerid], 7.0);
	tviaje[playerid] = 1;
    ColgarLaLlamada(playerid);
}

Funcion:LlamadaGrua4(playerid, idveh)
{
	if(!IsValidVehicle(autos[idveh][playerid])) return Mensaje(playerid,-1,"Ocurri� un error, intenta reloguear.");
	if(SiHayPersonaEnVehiculo(autos[idveh][playerid]) != 0)
	{
		Mensaje(playerid,-1,"{00d8ff}[Servicio de gr�a]"CB" Ang�lica: Encontramos una persona dentro del veh�culo, no podemos remolcarlo.");
		Mensaje(playerid,-1,"{00d8ff}[Servicio de gr�a]"CB" Ang�lica: Llama a la polic�a si crees que tu veh�culo ha sido robado.");
		ColgarLaLlamada(playerid);
		return 1;
	}
	if(tipogruallama[playerid] == 3)
	{
		if(MARITIMO(autos[idveh][playerid]))
		{
			return ShowTDN(playerid, "~r~Error: ~w~No puedes pedir veh�culos acu�ticos a tu posici�n.");
		}
		for(new i = 0; i < MAX_PAUTOS; i++)
		{
			if(GetVehicleModel(autos[i][playerid]) < 400) continue;
			new Float:POS[3];
			GetVehiclePos(autos[i][playerid], POS[0], POS[1], POS[2]);
			new Float:distancia = GetPlayerDistanceFromPoint(playerid, POS[0], POS[1], POS[2]);
			if(distancia < 25)
			{
				if(GetVehicleVirtualWorld(autos[i][playerid]) == GetPlayerVirtualWorld(playerid))
				{
					ColgarLaLlamada(playerid);
					ShowTDN(playerid, "~r~Error: ~w~Est�s muy cerca de un veh�culo tuyo.");
					return 1;
				}
			}
		}
	}
	va_SendClientMessage(playerid,-1,"{00d8ff}[Servicio de gr�a]"CB" Ang�lica: Acabamos de enviar una gr�a a buscar tu %s matr�cula %s.", GetVehicleName(autos[idveh][playerid]), Patente[playerid][idveh]);
	if(VehicleInfo[playerid][idveh][vPrecio]/100 > 0)
	{
		va_SendClientMessage(playerid,-1,"{00d8ff}[Servicio de gr�a]"CB" Ang�lica: Se cobr� $%s de tu cuenta bancaria.", ConvertirNumero(VehicleInfo[playerid][idveh][vPrecio]/100));
	   	PlayerInfo[playerid][pBanco] = PlayerInfo[playerid][pBanco] - VehicleInfo[playerid][idveh][vPrecio]/100;
  	}
	Mensaje(playerid, -1, "{00d8ff}[Servicio de gr�a]"CB" Ang�lica: Muchas gracias por utilizar nuestro servicio.");
 	switch(tipogruallama[playerid])
  	{
		case 1: Respawnear(autos[idveh][playerid]);
		case 3:
		{
			
			if(PlayerInfo[playerid][VIP] < 3){
				ColgarLaLlamada(playerid);
				return Mensaje(playerid, -1, "Necesitas una membres�a VIP "CR"3"CB" para poder usar esta opci�n.");
			}
			if(GetPlayerInterior(playerid) != 0) return Mensaje(playerid, -1, "No puedes pedir esto en este momento.");
			if(GetPlayerVirtualWorld(playerid) != 0) return Mensaje(playerid, -1, "No puedes pedir un veh�culo en este momento.");
			new Float:Pos[4];
			GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
			GetPlayerFacingAngle(playerid, Pos[3]);
			SetPosVeh(autos[idveh][playerid],Pos[0],Pos[1],Pos[2]+0.3,Pos[3],0,0);
            
		}
		case 2:
		{
			SetVehicleHealthAC(autos[idveh][playerid], 1000.0);
			VehicleFuel[autos[idveh][playerid]] = CombustibleCoche(autos[idveh][playerid]);
			VehicleInfo[playerid][idveh][v0_interior] = 0;
			VehicleInfo[playerid][idveh][v0_vw] = 0;
			if(MARITIMO(autos[idveh][playerid]))
			{
				new lugar = random(4);
				switch(lugar)
				{
					case 0: { VehicleInfo[playerid][idveh][pOX] = 2634.2881; VehicleInfo[playerid][idveh][pOY] = -2486.2009; VehicleInfo[playerid][idveh][pOZ] = -0.7707; VehicleInfo[playerid][idveh][pOA] = 2.5868; }
					case 1: { VehicleInfo[playerid][idveh][pOX] = 2623.3982; VehicleInfo[playerid][idveh][pOY] = -2488.3628; VehicleInfo[playerid][idveh][pOZ] = -0.6238; VehicleInfo[playerid][idveh][pOA] = 2.1582; }
					case 2: { VehicleInfo[playerid][idveh][pOX] = 2607.7522; VehicleInfo[playerid][idveh][pOY] = -2487.5833; VehicleInfo[playerid][idveh][pOZ] = -0.4461; VehicleInfo[playerid][idveh][pOA] = 0.4526; }
					case 3: { VehicleInfo[playerid][idveh][pOX] = 2594.8560; VehicleInfo[playerid][idveh][pOY] = -2484.1121; VehicleInfo[playerid][idveh][pOZ] = -0.3442; VehicleInfo[playerid][idveh][pOA] = 357.9986; }
				}
				SetPosVeh(autos[idveh][playerid],VehicleInfo[playerid][idveh][pOX],VehicleInfo[playerid][idveh][pOY],VehicleInfo[playerid][idveh][pOZ],VehicleInfo[playerid][idveh][pOA],0,0);
			}
			else
			{
				new rand = random(sizeof(MunicipioSpawn));
				new Float:posy,Float:posz, Float:sizex, Float:sizey, Float:sizez;
				GetVehicleModelInfo(GetVehicleModel(autos[idveh][playerid]), VEHICLE_MODEL_INFO_SIZE, sizex, sizey, sizez);
				posy = MunicipioSpawn[rand][1] - (floatsqroot(sizey + sizey + sizey) * floatsin(-MunicipioSpawn[rand][3], degrees));
				posz = MunicipioSpawn[rand][2];
				if(GetVehicleModel(autos[idveh][playerid]) == 515) posz = MunicipioSpawn[rand][2]+1.0;
				SetPosVeh(autos[idveh][playerid],MunicipioSpawn[rand][0],posy,posz,MunicipioSpawn[rand][3]+1,0,0);
			}
		}
	}
    ColgarLaLlamada(playerid);
	return true;
}


Funcion:CargarRemoves(playerid)
{

	// Remove mapeo especial LS
	RemoveBuildingForPlayer(playerid, 1308, 2358.350, -1982.790, 11.515, 0.250);
	RemoveBuildingForPlayer(playerid, 1308, 2338.229, -2001.280, 11.515, 0.250);
	RemoveBuildingForPlayer(playerid, 3744, 2313.050, -2008.540, 15.023, 50);
	RemoveBuildingForPlayer(playerid, 3574, 2331.379, -2001.670, 15.023, 50);
	RemoveBuildingForPlayer(playerid, 1260, 2336.909, -1987.630, 21.828, 0.250);
	RemoveBuildingForPlayer(playerid, 1266, 2336.909, -1987.630, 21.828, 0.250);

	// remove fabrica granja 2
	RemoveBuildingForPlayer(playerid, 3260, -1431.023, -968.320, 200.812, 80);
	RemoveBuildingForPlayer(playerid, 705, -985.906, -963.828, 128.109, 80);
	RemoveBuildingForPlayer(playerid, 790, -959.179, -972.937, 133.156, 80);
	RemoveBuildingForPlayer(playerid, 3276, -1066.648, -1313.539, 129.062, 0.250);
	RemoveBuildingForPlayer(playerid, 17074, -1430.132, -966.226, 199.812, 0.250);

	//Remove fabrica granja
	RemoveBuildingForPlayer(playerid, 3295, 1099.117, -358.476, 77.617, 0.250);
	RemoveBuildingForPlayer(playerid, 3376, 1070.476, -355.164, 77.335, 0.250);
	RemoveBuildingForPlayer(playerid, 1503, 1019.320, -282.789, 73.203, 0.250);
	RemoveBuildingForPlayer(playerid, 13451, 1146.140, -369.132, 49.328, 0.250);
	RemoveBuildingForPlayer(playerid, 3425, 1015.093, -361.101, 84.039, 0.250);
	RemoveBuildingForPlayer(playerid, 3375, 1070.476, -355.164, 77.335, 0.250);
	RemoveBuildingForPlayer(playerid, 13206, 1072.953, -289.179, 72.734, 0.250);
	RemoveBuildingForPlayer(playerid, 656, 1096.625, -294.414, 72.937, 100.0);
	RemoveBuildingForPlayer(playerid, 3286, 1099.117, -358.476, 77.617, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, 1107.117, -368.570, 73.843, 100.0);
	RemoveBuildingForPlayer(playerid, 3253, 1106.640, -319.875, 73.742, 0.250);
	RemoveBuildingForPlayer(playerid, 700, 1106.546, -328.164, 73.179, 100.0);
	RemoveBuildingForPlayer(playerid, 1308, 1101.289, -329.531, 72.898, 200.0);
	RemoveBuildingForPlayer(playerid, 3250, 1110.242, -298.945, 73.039, 0.250);
	RemoveBuildingForPlayer(playerid, 672, 1097.468, -314.210, 73.664, 0.250);
	RemoveBuildingForPlayer(playerid, 1408, 1120.539, -322.250, 73.570, 100.0);
	RemoveBuildingForPlayer(playerid, 3175, 1114.2969, -353.8203, 72.7969, 100.0);


	//ferreteria
    RemoveBuildingForPlayer(playerid, 17765, 2436.2188, -1788.5625, 15.0234, 0.25);
    RemoveBuildingForPlayer(playerid, 17523, 2436.2188, -1788.5625, 15.0234, 0.25);
	//edsa dillimore
	RemoveBuildingForPlayer(playerid, 13245, 666.7109, -565.1328, 17.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 13250, 622.9453, -577.0625, 21.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 13484, 738.3984, -553.9844, 21.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 1351, 670.8984, -605.9375, 15.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 782, 735.5313, -599.0156, 15.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 12855, 622.9453, -577.0625, 21.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1687, 625.0156, -579.7188, 25.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 1522, 626.5313, -571.0078, 16.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 12854, 666.4922, -571.1797, 17.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 1510, 664.2031, -567.6953, 16.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1512, 664.2109, -567.4141, 16.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 2362, 662.9219, -567.0547, 16.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1514, 665.2891, -567.2813, 16.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, 632.5781, -583.5938, 19.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 1686, 655.6641, -571.2109, 15.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 1686, 655.6641, -569.6016, 15.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 1691, 665.7500, -566.3047, 20.0313, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 630.7266, -578.7734, 15.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 12853, 666.7109, -565.1328, 17.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 1686, 655.6641, -558.9297, 15.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 1686, 655.6641, -560.5469, 15.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 1687, 611.0000, -562.9531, 25.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 780, 628.1953, -557.3438, 15.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 630.2188, -564.2500, 15.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 1687, 670.1016, -558.4063, 20.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 1691, 622.4922, -552.9141, 20.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 956, 662.4297, -552.1641, 15.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 1438, 670.1094, -550.6563, 15.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, 632.8438, -545.6016, 19.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 629.5781, -547.2188, 15.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, 662.1484, -538.5469, 19.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 780, 604.0156, -542.3438, 15.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 1351, 647.6641, -540.8359, 15.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 1438, 663.3750, -541.6250, 15.2891, 0.25);
	// taller tuning lv
	RemoveBuildingForPlayer(playerid, 8229, 1142.0313, 1362.5000, 12.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 1099.2656, 1243.3125, 23.9375, 0.25);

	//tienda dp nueva
	RemoveBuildingForPlayer(playerid, 3719, 693.6484, -1606.1953, 17.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 6237, 726.5000, -1658.6172, 9.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 733, 681.2656, -1612.4922, 12.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 1297, 683.5703, -1591.4453, 16.2422, 0.25);
	RemoveBuildingForPlayer(playerid, 3640, 693.6484, -1606.1953, 17.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 702.9453, -1598.4219, 12.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 759, 701.1953, -1598.8594, 12.9688, 500);

	//asd
	RemoveBuildingForPlayer(playerid, 3421, 2351.8281, -652.9219, 129.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 3414, 2351.8281, -652.9219, 129.1875, 0.25);
	//
	RemoveBuildingForPlayer(playerid, 13062, 266.3594, 20.1328, 5.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, 243.9531, 24.6172, 2.0156, 400);
	RemoveBuildingForPlayer(playerid, 1684, 276.8438, -2.4297, 2.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 13059, 266.3594, 20.1328, 5.4844, 0.25);
	//Fabrica 11 remove
	RemoveBuildingForPlayer(playerid, 700, -700.6563, 984.1406, 11.5547, 0.25);
	//ISLA NUEVA
	RemoveBuildingForPlayer(playerid, 790, -1989.7813, -2462.3281, 34.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 18568, -2061.1875, -2365.9531, 30.3281, 0.25);
	RemoveBuildingForPlayer(playerid, 790, -2035.7266, -2432.6563, 34.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 698, -2041.8281, -2448.4063, 34.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 18566, -2029.5547, -2389.0391, 30.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 18569, -2048.4297, -2373.6094, 30.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 18567, -2018.2500, -2400.5391, 30.5781, 0.25);
	//Fabricaxd
	RemoveBuildingForPlayer(playerid, 1232, -2761.8672, -278.0781, 8.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 10396, -2752.1016, -252.2422, 7.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 10397, -2752.1328, -252.2344, 10.0781, 0.25);
	//MANSION PAGA 1
	RemoveBuildingForPlayer(playerid, 13806, 1033.7734, -666.6953, 120.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 709, 1106.7344, -597.6406, 103.7188, 0.25);
	//Fabrica Montgomery 7
	RemoveBuildingForPlayer(playerid, 12988, 1354.550, 340.773, 17.554, 0.250);
	RemoveBuildingForPlayer(playerid, 13217, 1354.550, 340.773, 17.554, 0.250);
	RemoveBuildingForPlayer(playerid, 1440, 1361.920, 365.843, 20.046, 0.250);
	RemoveBuildingForPlayer(playerid, 1438, 1373.829, 365.734, 19.515, 0.250);
	RemoveBuildingForPlayer(playerid, 1438, 1339.849, 315.937, 19.515, 0.250);
	RemoveBuildingForPlayer(playerid, 1687, 1362.699, 307.015, 24.335, 0.250);
	RemoveBuildingForPlayer(playerid, 1690, 1355.939, 312.523, 24.203, 0.250);
	RemoveBuildingForPlayer(playerid, 13011, 1357.479, 318.148, 20.171, 0.250);
	//Fabrica Bayside 8
	RemoveBuildingForPlayer(playerid, 9260, -2291.610, 2311.530, 9.093, 0.250);
	RemoveBuildingForPlayer(playerid, 9380, -2291.610, 2311.530, 9.093, 0.250);
	RemoveBuildingForPlayer(playerid, 1297, -2279.379, 2327.149, 3.953, 0.250);
	RemoveBuildingForPlayer(playerid, 1297, -2245.120, 2298.760, 7.304, 0.250);
	RemoveBuildingForPlayer(playerid, 9241, -2227.540, 2326.879, 5.718, 0.250);
	RemoveBuildingForPlayer(playerid, 9383, -2227.540, 2326.879, 5.718, 0.250);
	RemoveBuildingForPlayer(playerid, 9245, -2235.550, 2361.770, 15.804, 0.250);
	RemoveBuildingForPlayer(playerid, 9381, -2235.550, 2361.770, 15.804, 0.250);
	RemoveBuildingForPlayer(playerid, 1635, -2226.060, 2360.830, 6.398, 0.250);
	RemoveBuildingForPlayer(playerid, 1440, -2244.229, 2361.199, 4.445, 0.250);
	RemoveBuildingForPlayer(playerid, 1431, -2245.709, 2363.300, 4.500, 0.250);
	RemoveBuildingForPlayer(playerid, 1264, -2246.770, 2364.489, 4.382, 0.250);
	RemoveBuildingForPlayer(playerid, 1264, -2246.810, 2365.760, 4.382, 0.250);
	RemoveBuildingForPlayer(playerid, 1264, -2247.629, 2364.860, 4.382, 0.250);
	//Job criminal
	RemoveBuildingForPlayer(playerid, 10252, -2175.7578, 661.9219, 50.1016, 0.25);
	// Removes burdel
	RemoveBuildingForPlayer(playerid, 2024, 960.2500, -58.0625, 1000.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 2118, 960.8672, -45.6484, 1000.5234, 0.25);
	//Fabrica5
	RemoveBuildingForPlayer(playerid, 7146, 2379.890, 2760.734, 13.398, 0.250);
	RemoveBuildingForPlayer(playerid, 1365, 2366.078, 2797.531, 10.953, 0.250);
	RemoveBuildingForPlayer(playerid, 1365, 2372.671, 2797.531, 10.953, 0.250);
	RemoveBuildingForPlayer(playerid, 7020, 2379.890, 2760.734, 13.398, 0.250);
	RemoveBuildingForPlayer(playerid, 1344, 2379.257, 2759.406, 10.632, 500);
	RemoveBuildingForPlayer(playerid, 1365, 2383.828, 2757.984, 10.953, 0.250);
	RemoveBuildingForPlayer(playerid, 1358, 2388.812, 2758.671, 11.007, 0.250);
 	//Removes Fabrica 4
	RemoveBuildingForPlayer(playerid, 11012, -2166.867, -236.507, 40.867, 0.250);
	RemoveBuildingForPlayer(playerid, 11088, -2166.875, -236.515, 40.859, 0.250);
	RemoveBuildingForPlayer(playerid, 11270, -2166.867, -236.507, 40.867, 0.250);
	RemoveBuildingForPlayer(playerid, 11271, -2127.546, -269.960, 41.000, 0.250);
	RemoveBuildingForPlayer(playerid, 11282, -2166.875, -236.515, 40.859, 0.250);
	RemoveBuildingForPlayer(playerid, 11081, -2127.546, -269.960, 41.000, 0.250);
	RemoveBuildingForPlayer(playerid, 11007, -2164.453, -248.000, 40.781, 0.250);
	RemoveBuildingForPlayer(playerid, 11085, -2164.453, -237.617, 41.406, 0.250);
	RemoveBuildingForPlayer(playerid, 11086, -2164.453, -237.390, 43.421, 0.250);
	RemoveBuildingForPlayer(playerid, 11087, -2143.226, -261.242, 38.093, 0.250);
	RemoveBuildingForPlayer(playerid, 11089, -2185.523, -263.929, 38.765, 0.250);
	RemoveBuildingForPlayer(playerid, 11090, -2158.820, -266.234, 36.226, 0.250);
	RemoveBuildingForPlayer(playerid, 1432, -2144.828, -244.765, 35.625, 0.250);
	RemoveBuildingForPlayer(playerid, 1438, -2188.695, -218.382, 35.507, 0.250);
	RemoveBuildingForPlayer(playerid, 1441, -2184.648, -226.875, 36.164, 0.250);
	RemoveBuildingForPlayer(playerid, 1449, -2160.640, -226.351, 36.023, 0.250);
	RemoveBuildingForPlayer(playerid, 1450, -2189.437, -220.492, 36.085, 0.250);
	RemoveBuildingForPlayer(playerid, 1518, -2147.179, -241.875, 36.742, 0.250);
	RemoveBuildingForPlayer(playerid, 918, -2182.445, -237.695, 35.875, 0.250);
	RemoveBuildingForPlayer(playerid, 931, -2154.203, -254.242, 36.578, 0.250);
	RemoveBuildingForPlayer(playerid, 936, -2139.507, -244.781, 35.992, 0.250);
	RemoveBuildingForPlayer(playerid, 937, -2147.210, -242.015, 35.992, 0.250);
	RemoveBuildingForPlayer(playerid, 939, -2179.335, -239.085, 37.960, 0.250);
	RemoveBuildingForPlayer(playerid, 941, -2175.054, -248.046, 35.992, 0.250);
	RemoveBuildingForPlayer(playerid, 942, -2159.062, -239.062, 37.960, 0.250);
	RemoveBuildingForPlayer(playerid, 941, -2171.500, -248.046, 35.992, 0.250);
	RemoveBuildingForPlayer(playerid, 941, -2167.968, -248.046, 35.992, 0.250);
	RemoveBuildingForPlayer(playerid, 941, -2164.328, -248.046, 35.992, 0.250);
	RemoveBuildingForPlayer(playerid, 941, -2161.015, -248.046, 35.992, 0.250);
	RemoveBuildingForPlayer(playerid, 941, -2157.445, -248.046, 35.992, 0.250);
	RemoveBuildingForPlayer(playerid, 920, -2139.617, -252.085, 35.992, 0.250);
	RemoveBuildingForPlayer(playerid, 943, -2156.070, -227.750, 36.281, 0.250);
	RemoveBuildingForPlayer(playerid, 944, -2188.523, -236.804, 36.398, 0.250);
	RemoveBuildingForPlayer(playerid, 942, -2174.828, -235.562, 37.960, 0.250);
	RemoveBuildingForPlayer(playerid, 944, -2153.796, -229.039, 36.398, 0.250);
	RemoveBuildingForPlayer(playerid, 944, -2146.265, -238.406, 36.398, 0.250);
	RemoveBuildingForPlayer(playerid, 942, -2140.335, -229.148, 37.960, 0.250);
	RemoveBuildingForPlayer(playerid, 939, -2140.226, -237.507, 37.960, 0.250);
	RemoveBuildingForPlayer(playerid, 944, -2171.101, -235.703, 36.398, 0.250);
	RemoveBuildingForPlayer(playerid, 944, -2145.164, -234.171, 36.398, 0.250);
	RemoveBuildingForPlayer(playerid, 944, -2146.023, -228.500, 36.398, 0.250);
	RemoveBuildingForPlayer(playerid, 944, -2149.875, -229.718, 36.398, 0.250);
	RemoveBuildingForPlayer(playerid, 942, -2164.203, -236.023, 37.960, 0.250);
	RemoveBuildingForPlayer(playerid, 931, -2142.554, -241.937, 36.578, 0.250);
	RemoveBuildingForPlayer(playerid, 918, -2153.085, -256.273, 35.875, 0.250);
	RemoveBuildingForPlayer(playerid, 944, -2177.539, -259.828, 36.398, 0.250);
	RemoveBuildingForPlayer(playerid, 944, -2175.750, -266.335, 36.398, 0.250);
	RemoveBuildingForPlayer(playerid, 943, -2150.507, -266.359, 36.281, 0.250);
	RemoveBuildingForPlayer(playerid, 945, -2157.156, -248.007, 45.132, 0.250);
	RemoveBuildingForPlayer(playerid, 945, -2164.101, -248.007, 45.132, 0.250);
	RemoveBuildingForPlayer(playerid, 945, -2167.781, -248.007, 45.132, 0.250);
	RemoveBuildingForPlayer(playerid, 945, -2171.226, -248.007, 45.132, 0.250);
	RemoveBuildingForPlayer(playerid, 945, -2174.796, -248.007, 45.132, 0.250);
	RemoveBuildingForPlayer(playerid, 945, -2160.703, -248.007, 45.132, 0.250);
	RemoveBuildingForPlayer(playerid, 1438, -2164.218, -231.156, 35.507, 0.250);
	RemoveBuildingForPlayer(playerid, 944, -2146.062, -251.007, 36.398, 0.250);
	RemoveBuildingForPlayer(playerid, 944, -2180.390, -247.460, 36.398, 0.250);
	RemoveBuildingForPlayer(playerid, 918, -2173.593, -268.078, 40.078, 0.250);
	RemoveBuildingForPlayer(playerid, 918, -2148.492, -230.804, 35.875, 0.250);
	RemoveBuildingForPlayer(playerid, 918, -2143.468, -230.343, 35.875, 0.250);
	RemoveBuildingForPlayer(playerid, 918, -2167.828, -246.085, 35.875, 0.250);
	RemoveBuildingForPlayer(playerid, 11103, -2180.703, -218.039, 37.976, 0.250);
	RemoveBuildingForPlayer(playerid, 11233, -2164.453, -255.390, 38.125, 0.250);
	RemoveBuildingForPlayer(playerid, 11234, -2180.453, -251.468, 37.992, 0.250);
	RemoveBuildingForPlayer(playerid, 11235, -2180.453, -261.289, 37.992, 0.250);
	RemoveBuildingForPlayer(playerid, 11236, -2164.453, -255.390, 38.125, 0.250);
	// ESTADIO SF EXTERIOR
	RemoveBuildingForPlayer(playerid, 792, -2200.5781, -387.5547, 34.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 11395, -2155.2031, -401.6172, 42.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1342, -2151.8438, -435.5625, 35.2891, 0.25);
	RemoveBuildingForPlayer(playerid, 1340, -2146.5156, -424.7734, 35.3281, 0.25);
	RemoveBuildingForPlayer(playerid, 792, -2140.8594, -387.5547, 34.4375, 0.25);
	// ESTADIO MONSTER
	RemoveBuildingForPlayer(playerid, 13595, -1398.4531, 995.7969, 1057.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 13651, -1404.2813, 932.8438, 1035.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 13653, -1398.4531, 995.7969, 1060.8125, 0.25);
	// REJAS LVPD
	RemoveBuildingForPlayer(playerid, 625, 1978.2031, 698.9141, 10.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1978.2031, 710.0156, 10.7109, 0.25);
	// COSO AEROPUERTO SF
	RemoveBuildingForPlayer(playerid, 3852, -1686.8828, -163.1484, 14.5078, 0.25);
	// POSTE LV
	RemoveBuildingForPlayer(playerid, 1290, 1497.8281, 843.1172, 11.7422, 0.25);
	// GASOLINERAS MAR
	RemoveBuildingForPlayer(playerid, 3880, -1628.7578, 156.8750, 0.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 3886, -1628.7578, 156.8750, 0.0625, 0.25);
	// POSTE LS
	RemoveBuildingForPlayer(playerid, 1290, 1053.3750, -1842.7188, 18.2266, 0.25);
	// AEROPUERTO ABANDONADO
	RemoveBuildingForPlayer(playerid, 3345, 400.1172, 2543.5703, 15.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 3172, 400.1172, 2543.5703, 15.4844, 0.25);
	// BARRERASF
	RemoveBuildingForPlayer(playerid, 968, -1736.7422, 31.8828, 3.5078, 0.25);
	// CASAS ADICIONALES
	RemoveBuildingForPlayer(playerid, 3276, -728.7500, 928.1641, 12.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -727.9688, 939.7891, 12.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -727.1875, 951.4141, 12.0625, 0.25);
	// MANSION PLAYA
	RemoveBuildingForPlayer(playerid, 3778, 553.3516, -1875.0000, 4.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 3778, 498.4844, -1875.0000, 4.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 3615, 498.4844, -1875.0000, 4.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 3615, 553.3516, -1875.0000, 4.7891, 0.25);
	// MANSION LV
	RemoveBuildingForPlayer(playerid, 11618, -688.1172, 939.1797, 11.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 11654, -681.8750, 965.8906, 11.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -698.9609, 909.6719, 11.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -687.3125, 909.6016, 11.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -710.6094, 909.7422, 11.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 11491, -688.1094, 928.1328, 12.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 669, -712.0703, 928.3047, 11.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 11490, -688.1172, 939.1797, 11.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 11631, -691.5938, 942.7188, 13.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 11663, -688.1172, 939.1797, 11.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 11666, -688.1406, 934.8203, 14.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 11664, -685.0938, 941.9141, 13.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 11665, -685.1719, 935.6953, 13.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 11492, -681.8750, 965.8906, 11.1250, 0.25);
	// MANSION FALLEN TREE
	RemoveBuildingForPlayer(playerid, 17349, -542.0078, -522.8438, 29.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 17019, -606.0313, -528.8203, 30.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 17012, -542.0078, -522.8438, 29.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1441, -503.6172, -540.5313, 25.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1415, -502.6094, -528.6484, 24.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, -502.1172, -521.0313, 25.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1441, -502.4063, -513.0156, 25.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1441, -554.4531, -496.1797, 25.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, -516.9453, -496.6484, 25.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, -503.1250, -509.0000, 25.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, -491.8594, -479.9219, 38.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 17020, -475.9766, -544.8516, 28.1172, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, -471.5547, -479.9219, 38.6250, 0.25);
	// FABRICA LV
	RemoveBuildingForPlayer(playerid, 985, 2497.4063, 2777.0703, 11.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 986, 2497.4063, 2769.1094, 11.5313, 0.25);
	// MANSION LV
	RemoveBuildingForPlayer(playerid, 8145, 1493.9297, 751.0156, 20.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 8146, 1544.6172, 676.2109, 20.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 8132, 1436.5938, 673.2578, 12.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 8131, 1544.6172, 676.2109, 20.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 8130, 1493.9297, 751.0156, 20.9141, 0.25);
	// LSPD
	RemoveBuildingForPlayer(playerid, 2204, 225.1094, 122.7422, 1009.2422, 0.25);
	RemoveBuildingForPlayer(playerid, 2204, 225.1094, 125.9688, 1009.2422, 0.25);
	RemoveBuildingForPlayer(playerid, 2210, 226.7891, 128.3984, 1009.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 1715, 228.3516, 124.1172, 1009.2188, 600);
	RemoveBuildingForPlayer(playerid, 1714, 237.8438, 109.8906, 1009.2734, 200);
	// COSAS GRANJA LS
	RemoveBuildingForPlayer(playerid, 17046, -351.9922, -1755.6484, 45.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 17047, -110.6406, -1200.2031, 44.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 17048, -228.2891, -1466.6406, 37.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 3338, -339.8906, -1655.7734, 23.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 3338, -287.8672, -1570.2500, 5.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 3338, -389.0234, -1751.9844, 4.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 3338, -194.4141, -1464.6953, 7.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 3338, -170.0313, -1359.1563, 1.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 3338, -113.4063, -1235.7266, 1.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 3338, -51.2891, -1163.2813, 0.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 3244, -194.4141, -1464.6953, 7.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 3244, -170.0313, -1359.1563, 1.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 3244, -113.4063, -1235.7266, 1.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 3244, -51.2891, -1163.2813, 0.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 3244, -389.0234, -1751.9844, 4.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 3244, -339.8906, -1655.7734, 23.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 3244, -287.8672, -1570.2500, 5.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 1454, -333.6953, -1434.8359, 15.4063, 300);

	// GASO LV
	RemoveBuildingForPlayer(playerid, 16678, -797.4453, 2756.0313, 45.2734, 0.25);
	//PIZZA
	RemoveBuildingForPlayer(playerid, 2638, 367.7891, -130.0313, 1001.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 2808, 367.8047, -132.7500, 1001.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 2638, 367.7891, -126.9453, 1001.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 2638, 367.7891, -123.8672, 1001.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 2639, 367.7813, -121.1563, 1001.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 2636, 372.9453, -129.0313, 1001.1328, 100.0);
	
	RemoveBuildingForPlayer(playerid, 2638, 379.5547, -126.9453, 1001.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 2638, 379.5547, -130.0313, 1001.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 2639, 379.5547, -132.7344, 1001.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 2638, 379.5547, -123.8672, 1001.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 2808, 379.5625, -121.1406, 1001.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 2637, 367.7891, -128.4844, 1000.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 2683, 367.8516, -128.4297, 1001.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2682, 368.0938, -128.4141, 1001.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 2682, 379.3516, -128.5625, 1001.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 2637, 379.5547, -128.4844, 1000.9141, 0.25);
	// ESTACIONAMIENT
	RemoveBuildingForPlayer(playerid, 10843, -1711.4688, -107.5703, 10.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 10892, -1711.4688, -107.5703, 10.6172, 0.25);
	// EM
	RemoveBuildingForPlayer(playerid, 3377, -207.6563, -246.7344, 1.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 3377, -196.7188, -246.1641, 1.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 3377, -224.5000, -183.9063, 1.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 3377, -200.3281, -189.7344, 1.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 3377, -200.3281, -189.7344, 3.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 3377, -176.6797, -195.3594, 1.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 3377, -156.9453, -266.9141, 4.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 3377, -149.9141, -324.3438, 1.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 3378, -149.9141, -324.3438, 1.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 3378, -156.9453, -266.9141, 4.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 3378, -207.6563, -246.7344, 1.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 3378, -196.7188, -246.1641, 1.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 3378, -176.6797, -195.3594, 1.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 3378, -200.3281, -189.7344, 1.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 3378, -200.3281, -189.7344, 3.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 3378, -224.5000, -183.9063, 1.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 12932, -117.9609, -337.4531, 3.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 12934, -184.5781, -289.8984, 3.7109, 0.25);
	// ESTADIO
	RemoveBuildingForPlayer(playerid, 13625, -1336.8281, -305.1094, 1053.3672, 0.25);
	// MARIHUANA
    RemoveBuildingForPlayer(playerid, 3261, -1042.4531, -1635.0547, 75.3594, 650);
    RemoveBuildingForPlayer(playerid, 3409, -1023.1328, -1636.3906, 75.3359, 600);

	// MERCADO, RUTAS, MECANICO, ETC
	RemoveBuildingForPlayer(playerid, 13191, 65.2578, -303.9844, 14.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 13192, 164.7109, -234.1875, 0.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 13195, 36.8281, -256.2266, 0.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 12861, 36.8281, -256.2266, 0.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 12805, 65.2578, -303.9844, 14.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 12956, 96.3281, -261.1953, 3.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 12860, 164.7109, -234.1875, 0.4766, 0.25);
	// RESTAURANTE

	RemoveBuildingForPlayer(playerid, 1432, -779.8750, 509.0547, 1370.8594, 200);
	// CASA
	RemoveBuildingForPlayer(playerid, 13744, 1272.5938, -803.1094, 86.3594, 0.25);
	// LVPD
	RemoveBuildingForPlayer(playerid, 14856, 198.4688, 168.6797, 1003.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 1771, 190.6406, 174.7422, 1002.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 1771, 194.8750, 174.7422, 1002.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 1771, 199.1328, 174.7422, 1002.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 1771, 188.4922, 162.0234, 1002.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 1771, 192.7266, 162.0234, 1002.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 1771, 196.9844, 162.0234, 1002.6875, 0.25);
	// MANSION LV
    RemoveBuildingForPlayer(playerid, 3297, -1667.2656, 2594.5469, 82.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 3242, -1667.2656, 2594.5469, 82.2344, 0.25);
	// COMBUSTIBLE AEREO LV
    RemoveBuildingForPlayer(playerid, 8376, 1325.2188, 1538.5469, 11.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 7980, 1325.2188, 1538.5469, 11.8984, 0.25);
	// BASURA
	RemoveBuildingForPlayer(playerid, 1438, -79.2578, -1593.4688, 1.5000, 0.25);
	// BLUE BERRY
	RemoveBuildingForPlayer(playerid, 1308, 9.0234, 15.1563, -5.7109, 0.25);
	// CANTERA
	RemoveBuildingForPlayer(playerid, 16359, 821.4063, 862.0781, 11.0391, 0.25);
	// REMOVE PARA CARCEL MAXIMA SEGURIDAD FC
	RemoveBuildingForPlayer(playerid, 3682, 247.9297, 1461.8594, 33.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 3682, 192.2734, 1456.1250, 33.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 3682, 199.7578, 1397.8828, 33.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 3683, 133.7422, 1356.9922, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3683, 166.7891, 1356.9922, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3683, 166.7891, 1392.1563, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3683, 133.7422, 1392.1563, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3683, 166.7891, 1426.9141, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3683, 133.7422, 1426.9141, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3288, 221.5703, 1374.9688, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3289, 212.0781, 1426.0313, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3290, 218.2578, 1467.5391, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3291, 246.5625, 1435.1953, 9.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3291, 246.5625, 1410.5391, 9.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3291, 246.5625, 1385.8906, 9.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3291, 246.5625, 1361.2422, 9.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3290, 190.9141, 1371.7734, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3289, 183.7422, 1444.8672, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3289, 222.5078, 1444.6953, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3289, 221.1797, 1390.2969, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3288, 223.1797, 1421.1875, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3683, 133.7422, 1459.6406, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3289, 207.5391, 1371.2422, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3424, 220.6484, 1355.1875, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3424, 221.7031, 1404.5078, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3424, 210.4141, 1444.8438, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3424, 262.5078, 1465.2031, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3259, 220.6484, 1355.1875, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3636, 133.7422, 1356.9922, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3636, 166.7891, 1356.9922, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3256, 190.9141, 1371.7734, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 16392, 150.0781, 1378.3438, 11.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 3636, 166.7891, 1392.1563, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3636, 133.7422, 1392.1563, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3258, 207.5391, 1371.2422, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 205.6484, 1394.1328, 10.1172, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 205.6484, 1392.1563, 16.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 205.6484, 1394.1328, 23.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 207.3594, 1390.5703, 19.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 206.5078, 1387.8516, 27.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 3673, 199.7578, 1397.8828, 33.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 3257, 221.5703, 1374.9688, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3258, 221.1797, 1390.2969, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 203.9531, 1409.9141, 16.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 3674, 199.3828, 1407.1172, 35.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 204.6406, 1409.8516, 11.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 206.5078, 1404.2344, 18.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 206.5078, 1400.6563, 22.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 3259, 221.7031, 1404.5078, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 207.3594, 1409.0000, 19.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 3257, 223.1797, 1421.1875, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3258, 212.0781, 1426.0313, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3636, 166.7891, 1426.9141, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3636, 133.7422, 1426.9141, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 16391, 239.2969, 1367.9922, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 3255, 246.5625, 1361.2422, 9.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3255, 246.5625, 1385.8906, 9.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3255, 246.5625, 1410.5391, 9.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3258, 183.7422, 1444.8672, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3259, 210.4141, 1444.8438, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3258, 222.5078, 1444.6953, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 16086, 232.2891, 1434.4844, 13.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 16393, 149.3750, 1452.9375, 11.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 16394, 238.2734, 1452.9375, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 3673, 192.2734, 1456.1250, 33.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 3674, 183.0391, 1455.7500, 35.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 3636, 133.7422, 1459.6406, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 196.0234, 1462.0156, 10.1172, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 198.0000, 1462.0156, 16.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 196.0234, 1462.0156, 23.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 180.2422, 1460.3203, 16.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 180.3047, 1461.0078, 11.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3256, 218.2578, 1467.5391, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 199.5859, 1463.7266, 19.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 181.1563, 1463.7266, 19.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 185.9219, 1462.8750, 18.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 202.3047, 1462.8750, 27.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 189.5000, 1462.8750, 22.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 3255, 246.5625, 1435.1953, 9.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 254.6797, 1451.8281, 27.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 253.8203, 1458.1094, 23.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 255.5313, 1454.5469, 19.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 253.8203, 1456.1328, 16.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 253.8203, 1458.1094, 10.1172, 0.25);
	RemoveBuildingForPlayer(playerid, 3259, 262.5078, 1465.2031, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 254.6797, 1468.2109, 18.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 3673, 247.9297, 1461.8594, 33.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 254.6797, 1464.6328, 22.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 3674, 247.5547, 1471.0938, 35.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 255.5313, 1472.9766, 19.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 252.8125, 1473.8281, 11.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 252.1250, 1473.8906, 16.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 16089, 342.1250, 1431.0938, 5.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 16090, 315.7734, 1431.0938, 5.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 16091, 289.7422, 1431.0938, 5.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 16087, 358.6797, 1430.4531, 11.6172, 0.25);
	// EXTERIOR MINERO
	RemoveBuildingForPlayer(playerid, 3276, -532.3438, 2345.5859, 72.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -543.3828, 2351.0469, 74.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -555.6484, 2354.7109, 76.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -522.3984, 2338.8672, 70.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 16054, -427.7734, 2238.2578, 44.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 3350, -429.0547, 2237.8359, 41.2109, 0.25);
	// PESQUERO
	RemoveBuildingForPlayer(playerid, 3707, 2720.3203, -2530.9141, 19.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 3708, 2720.3203, -2530.9141, 19.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 4269, 2882.0781, -2711.4531, -4.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 4403, 2882.0781, -2711.4531, -4.0000, 0.25);
	// GARAGE
	RemoveBuildingForPlayer(playerid, 14878, 302.2422, 312.7578, 998.5781, 0.25);
	// GASOLINERAS QUE EXPLOTAN
	RemoveBuildingForPlayer(playerid, 1676, 0.0, 0.0, 0.0, 6000.0);
	RemoveBuildingForPlayer(playerid, 1686, 0.0, 0.0, 0.0, 6000.0);
	// COMISARIA
	RemoveBuildingForPlayer(playerid, 2204, 225.1094, 122.7422, 1009.2422, 0.25);
	RemoveBuildingForPlayer(playerid, 2204, 225.1094, 125.9688, 1009.2422, 0.25);
	RemoveBuildingForPlayer(playerid, 2210, 226.7891, 128.3984, 1009.2109, 0.25);
	// FBI EXTERIOR
	RemoveBuildingForPlayer(playerid, 1307, 937.9375, -986.5391, 37.0313, 0.25);
	// FBI INTERIOR
	RemoveBuildingForPlayer(playerid, 1502, 341.1328, 168.7969, 1018.9766, 0.25);
	// AVENIDA HOSPITAL
    RemoveBuildingForPlayer(playerid, 673, 1405.7656, -1424.2500, 13.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1409.7969, -1429.2734, 14.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1411.6250, -1430.1328, 13.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1408.5313, -1425.3984, 14.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1409.8672, -1418.1328, 14.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1411.5703, -1416.5391, 12.9063, 0.25);
	// CASAS GANTON
	RemoveBuildingForPlayer(playerid, 3695, 2239.9297, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 3695, 2282.9922, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 3695, 2314.8203, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 3695, 2352.7188, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 3695, 2387.8203, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2229.0469, -1810.0313, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2226.1641, -1807.3281, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3584, 2239.9297, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2226.1641, -1775.5078, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2273.6953, -1810.0313, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3584, 2282.9922, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2267.8125, -1767.2734, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2273.3359, -1767.3438, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2285.7578, -1762.1250, 12.2891, 0.25);
	RemoveBuildingForPlayer(playerid, 3584, 2314.8203, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2304.7813, -1767.3828, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1307, 2322.6484, -1815.4141, 12.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2332.8281, -1817.7109, 12.1172, 0.25);
	RemoveBuildingForPlayer(playerid, 17887, 2343.6094, -1784.5078, 20.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 2349.6172, -1763.3438, 11.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3584, 2352.7188, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2376.6172, -1767.2734, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2374.1016, -1775.5078, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3584, 2387.8203, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2387.0234, -1763.6406, 12.1797, 0.25);
	// TIENDA DE OBJETOS
	RemoveBuildingForPlayer(playerid, 1412, 215.0000, -224.0000, 2.0234, 0.25);
	// MANSIONES SF
	RemoveBuildingForPlayer(playerid, 11024, -2076.2734, 359.3203, 44.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 3868, -2120.7656, 336.8672, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3868, -2103.3281, 336.8672, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3868, -2032.2891, 336.8672, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3868, -2022.0859, 347.1328, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3868, -2022.0859, 364.5781, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3868, -2032.2969, 380.7422, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3868, -2131.1797, 347.2813, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3868, -2131.1797, 364.7266, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3868, -2049.7344, 336.8672, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3867, -2131.1797, 347.2813, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3867, -2120.7656, 336.8672, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3867, -2103.3281, 336.8672, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3867, -2049.7344, 336.8672, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3867, -2032.2891, 336.8672, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3867, -2022.0859, 347.1328, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3867, -2131.1797, 364.7266, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 10949, -2076.2734, 359.3203, 44.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 3867, -2032.2969, 380.7422, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3867, -2022.0859, 364.5781, 49.1563, 0.25);
	// MANSIONES LS
	RemoveBuildingForPlayer(playerid, 3778, 337.4531, -1875.0000, 3.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3615, 337.4531, -1875.0000, 3.4063, 0.25);
	// SODAS
	RemoveBuildingForPlayer(playerid, 1302, 0.0, 0.0, 0.0, 6000.0);
	RemoveBuildingForPlayer(playerid, 1209, 0.0, 0.0, 0.0, 6000.0);
	RemoveBuildingForPlayer(playerid, 955, 0.0, 0.0, 0.0, 6000.0);
	RemoveBuildingForPlayer(playerid, 956, 0.0, 0.0, 0.0, 6000.0);
	RemoveBuildingForPlayer(playerid, 1775, 0.0, 0.0, 0.0, 6000.0);
	RemoveBuildingForPlayer(playerid, 1776, 0.0, 0.0, 0.0, 6000.0);
	RemoveBuildingForPlayer(playerid, 1977, 0.0, 0.0, 0.0, 6000.0);
	// CASA 12
	RemoveBuildingForPlayer(playerid, 3548, 1345.1172, 2612.5703, 12.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3443, 1345.1172, 2612.5703, 12.6875, 0.25);
	// CASA 11
	RemoveBuildingForPlayer(playerid, 3548, 1667.4375, 2612.5703, 12.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3443, 1667.4375, 2612.5703, 12.6875, 0.25);
	// CASA 10
	RemoveBuildingForPlayer(playerid, 3300, -1464.3438, 2656.5000, 56.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 3341, -1446.4531, 2639.3516, 54.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 3342, -1447.2344, 2653.3047, 54.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 11460, -1523.2891, 2618.5938, 65.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 672, -1454.2734, 2640.1406, 55.8281, 0.25);
	RemoveBuildingForPlayer(playerid, 11461, -1466.0313, 2637.5938, 54.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 669, -1457.8672, 2648.9922, 55.2422, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, -1436.1094, 2607.3906, 55.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3170, -1446.4531, 2639.3516, 54.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, -1438.6719, 2630.0234, 55.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 700, -1441.7891, 2647.3281, 55.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 3173, -1447.2344, 2653.3047, 54.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3285, -1464.3438, 2656.5000, 56.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, -1436.1016, 2655.4766, 55.1563, 0.25);
	// CASA 8
	RemoveBuildingForPlayer(playerid, 1535, 2482.6484, -1994.9609, 12.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 5341, 2489.5156, -1987.4219, 14.9453, 0.25);
	// CASA 7
	RemoveBuildingForPlayer(playerid, 3669, 1762.4453, -2096.7109, 15.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 3634, 1762.4453, -2096.7109, 15.0469, 0.25);
	// CASA 6
	RemoveBuildingForPlayer(playerid, 3840, -2728.2422, -159.9297, 8.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 3826, -2728.2422, -159.9297, 8.1406, 0.25);
	// CASA 5
	RemoveBuildingForPlayer(playerid, 3840, -2728.2734, -55.3281, 8.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 3826, -2728.2734, -55.3281, 8.1406, 0.25);
	// CASA 4
	RemoveBuildingForPlayer(playerid, 3654, 2372.6875, -1132.3359, 29.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 3649, 2372.6875, -1132.3359, 29.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 17907, 2426.1641, -1110.0938, 43.4844, 0.25);
	// CASA 2
	RemoveBuildingForPlayer(playerid, 3460, 940.3828, 1957.7109, 13.7656, 0.25);
	// CAMIONERO
	RemoveBuildingForPlayer(playerid, 10840, -1666.1250, -62.0781, 10.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 10912, -1666.1250, -62.0781, 10.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 10914, -1706.4766, 13.0156, 7.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 10831, -1706.4766, 13.0156, 7.4063, 0.25);
	// ALGO
	RemoveBuildingForPlayer(playerid, 1308, -1405.0391, -810.6563, 81.4922, 0.25);
	// BASURERO
	RemoveBuildingForPlayer(playerid, 693, -184.8750, -1587.8516, 8.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 790, -141.2813, -1618.9531, 5.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 790, -130.3203, -1602.4922, 5.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 670, -141.8906, -1584.0156, 6.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 670, -111.7734, -1553.6875, 2.7422, 0.25);
	// CASA DE ROBO
	RemoveBuildingForPlayer(playerid, 10511, -2276.3438, -14.9219, 40.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 10369, -2276.3438, -14.9219, 40.2969, 0.25);
	// AYUNTAMIENTO
	RemoveBuildingForPlayer(playerid, 4024, 1479.8672, -1790.3984, 56.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 4044, 1481.1875, -1785.0703, 22.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 1527, 1448.2344, -1755.8984, 14.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1432.3047, -1832.9141, 15.2891, 0.25);
	RemoveBuildingForPlayer(playerid, 4002, 1479.8672, -1790.3984, 56.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 3980, 1481.1875, -1785.0703, 22.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 4003, 1481.0781, -1747.0313, 33.5234, 0.25);
	// MATAS LSPD
	RemoveBuildingForPlayer(playerid, 6253, 1305.4688, -1619.7422, 13.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 6046, 1305.4688, -1619.7422, 13.3984, 0.25);
	// CONCE SF
	RemoveBuildingForPlayer(playerid, 792, -1995.4766, 298.0859, 34.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, -1996.7109, 238.7344, 48.6563, 0.25);
	// LSPD
	RemoveBuildingForPlayer(playerid, 1258, 1510.8906, -1607.3125, 13.6953, 0.25);
}

Funcion:CrearTextosPlayer(playerid)
{

	//Estacionamiento
	CreatePlayerObject(playerid, 7010, 1727.82605, -1891.48206, -41.05000,   0.00000, 0.00000, 359.88000, 1148829696);
	CreatePlayerObject(playerid, 7244, 1653.01001, -1860.55005, -51.76400,   0.00000, 0.00000, 0.00000, 1148829696);
	//Tuning
	CreatePlayerObject(playerid,11387,2584.4743700,-1322.0750700,1413.2097200,0.0000000,0.0000000,0.0000000); //
	//Salon de Eventos
	CreatePlayerObject(playerid, 13657, -1252.81006, 2055.30005, 1248.78003,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 13657, -1252.81995, 2099.14990, 1254.63000,   0.00000, 180.00000, 180.00000, 1148829696);
	CreatePlayerObject(playerid, 10766, -1304.91003, 2021.48999, 1269.75000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 10766, -1273.46997, 2017.13000, 1276.88000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 10766, -1265.25000, 1972.28003, 1269.75000,   0.00000, 0.00000, 0.00000, 1148829696);
	//Fabrica 4
	CreatePlayerObject(playerid,18981, -2178.432617, -216.894317, 33.810565, 0.000000, 270.000000, 0.000000, -1);
	CreatePlayerObject(playerid,18981, -2178.432617, -241.894424, 33.810565, 0.000000, 270.000000, 0.000000, -1);
	CreatePlayerObject(playerid,18981, -2178.432617, -266.894378, 33.810565, 0.000000, 270.000000, 0.000000, -1);
	CreatePlayerObject(playerid,18981, -2153.433105, -266.894378, 33.810565, 0.000000, 270.000000, 0.000000, -1);
	CreatePlayerObject(playerid,18981, -2128.434326, -266.894378, 33.810565, 0.000000, 270.000000, 0.000000, -1);
	CreatePlayerObject(playerid,18981, -2153.434082, -216.894317, 33.810565, 0.000000, 270.000000, 0.000000, -1);
	CreatePlayerObject(playerid,18981, -2128.434326, -216.894317, 33.810565, 0.000000, 270.000000, 0.000000, -1);
	CreatePlayerObject(playerid,18981, -2153.434326, -241.894424, 33.810565, 0.000000, 270.000000, 0.000000, -1);
	CreatePlayerObject(playerid,18981, -2128.436035, -241.894424, 33.810565, 0.000000, 270.000000, 0.000000, -1);
	// Isla
	CreatePlayerObject(playerid, 19529, 819.02002, -3555.72998, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 19529, 819.02002, -3680.72998, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 19540, 616.53003, -3048.27002, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 19540, 616.53003, -3313.25000, 4.87000,   0.00000, 0.00000, -90.00000, 1148829696);
	CreatePlayerObject(playerid, 19540, 881.51001, -3743.22998, 4.87000,   0.00000, 0.00000, 270.00000, 1148829696);
	CreatePlayerObject(playerid, 19540, 586.54999, -3048.27002, 4.87000,   0.00000, 0.00000, 90.00000, 1148829696);
	CreatePlayerObject(playerid, 19540, 741.53003, -3743.22998, 4.87000,   0.00000, 0.00000, 180.00000, 1148829696);
	CreatePlayerObject(playerid, 19540, 896.47998, -3033.30005, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 19540, 741.53003, -3493.22998, 4.87000,   0.00000, 0.00000, 90.00000, 1148829696);
	CreatePlayerObject(playerid, 19540, 586.54999, -3313.25000, 4.87000,   0.00000, 0.00000, 180.00000, 1148829696);
	CreatePlayerObject(playerid, 19540, 881.51001, -3493.22998, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 19540, 896.47998, -3328.26001, 4.87000,   0.00000, 0.00000, -90.00000, 1148829696);
	CreatePlayerObject(playerid, 19540, 741.53998, -3033.30005, 4.87000,   0.00000, 0.00000, 90.00000, 1148829696);
	CreatePlayerObject(playerid, 19540, 741.53998, -3328.26001, 4.87000,   0.00000, 0.00000, 180.00000, 1148829696);
	CreatePlayerObject(playerid, 19541, 616.53003, -3180.76001, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 19541, 888.98999, -3033.30005, 4.87000,   0.00000, 0.00000, 90.00000, 1148829696);
	CreatePlayerObject(playerid, 19541, 586.54999, -3180.76001, 4.87000,   0.00000, 0.00000, 180.00000, 1148829696);
	CreatePlayerObject(playerid, 19541, 896.47998, -3040.78003, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 19541, 741.53998, -3040.78003, 4.87000,   0.00000, 0.00000, 180.00000, 1148829696);
	CreatePlayerObject(playerid, 19541, 749.02002, -3033.30005, 4.87000,   0.00000, 0.00000, 90.00000, 1148829696);
	CreatePlayerObject(playerid, 19541, 594.04999, -3048.27002, 4.87000,   0.00000, 0.00000, 90.00000, 1148829696);
	CreatePlayerObject(playerid, 19541, 609.04999, -3048.27002, 4.87000,   0.00000, 0.00000, 90.00000, 1148829696);
	CreatePlayerObject(playerid, 19541, 896.47998, -3180.76001, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 19541, 741.53998, -3320.76001, 4.87000,   0.00000, 0.00000, 180.00000, 1148829696);
	CreatePlayerObject(playerid, 19541, 888.98999, -3328.26001, 4.87000,   0.00000, 0.00000, -90.00000, 1148829696);
	CreatePlayerObject(playerid, 19541, 609.04999, -3313.25000, 4.87000,   0.00000, 0.00000, -90.00000, 1148829696);
	CreatePlayerObject(playerid, 19541, 896.47998, -3320.76001, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 19541, 741.53998, -3180.76001, 4.87000,   0.00000, 0.00000, 180.00000, 1148829696);
	CreatePlayerObject(playerid, 19541, 749.02002, -3493.22998, 4.87000,   0.00000, 0.00000, 90.00000, 1148829696);
	CreatePlayerObject(playerid, 19541, 749.02002, -3328.26001, 4.87000,   0.00000, 0.00000, -90.00000, 1148829696);
	CreatePlayerObject(playerid, 19541, 594.04999, -3313.25000, 4.87000,   0.00000, 0.00000, -90.00000, 1148829696);
	CreatePlayerObject(playerid, 19541, 749.02002, -3743.22998, 4.87000,   0.00000, 0.00000, -90.00000, 1148829696);
	CreatePlayerObject(playerid, 19542, 896.47998, -3110.77002, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 19542, 741.53998, -3110.77002, 4.87000,   0.00000, 0.00000, 180.00000, 1148829696);
	CreatePlayerObject(playerid, 19542, 616.53003, -3250.76001, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 19542, 818.98999, -3328.26001, 4.87000,   0.00000, 0.00000, -90.00000, 1148829696);
	CreatePlayerObject(playerid, 19542, 741.53998, -3250.76001, 4.87000,   0.00000, 0.00000, 180.00000, 1148829696);
	CreatePlayerObject(playerid, 19542, 616.53003, -3110.77002, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 19542, 586.54999, -3250.76001, 4.87000,   0.00000, 0.00000, 180.00000, 1148829696);
	CreatePlayerObject(playerid, 19542, 586.54999, -3110.77002, 4.87000,   0.00000, 0.00000, 180.00000, 1148829696);
	CreatePlayerObject(playerid, 19542, 896.47998, -3250.76001, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 19542, 819.02002, -3033.30005, 4.87000,   0.00000, 0.00000, 90.00000, 1148829696);
	CreatePlayerObject(playerid, 19542, 819.02002, -3493.22998, 4.87000,   0.00000, 0.00000, 90.00000, 1148829696);
	CreatePlayerObject(playerid, 19542, 741.53003, -3555.72998, 4.87000,   0.00000, 0.00000, 180.00000, 1148829696);
	CreatePlayerObject(playerid, 19542, 881.51001, -3680.72998, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 19542, 819.02002, -3743.22998, 4.87000,   0.00000, 0.00000, -90.00000, 1148829696);
	CreatePlayerObject(playerid, 19542, 741.53003, -3680.72998, 4.87000,   0.00000, 0.00000, 180.00000, 1148829696);
	CreatePlayerObject(playerid, 19542, 881.51001, -3555.72998, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 8420, 815.82001, -3571.54004, 5.05000,   0.00000, 0.00000, -90.00000, 1148829696);
	CreatePlayerObject(playerid, 9062, 815.79785, -3649.03760, 5.05000,   0.00000, 0.00000, -90.00000, 1148829696);
	CreatePlayerObject(playerid, 19531, 819.02002, -3250.76001, 5.01000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 19531, 819.02002, -3110.78003, 5.01000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 19532, 888.98999, -3250.76001, 4.86000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 19532, 594.04999, -3110.77002, 4.86000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 19532, 594.04999, -3250.76001, 4.86000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 19532, 749.02002, -3250.76001, 4.86000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 19532, 749.02002, -3680.72998, 4.86000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 19532, 609.04999, -3110.77002, 4.86000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 19532, 749.02002, -3555.72998, 4.86000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 19532, 819.02002, -3180.76001, 4.86000,   0.00000, 0.00000, 90.00000, 1148829696);
	CreatePlayerObject(playerid, 19532, 819.02002, -3040.78003, 4.86000,   0.00000, 0.00000, 90.00000, 1148829696);
	CreatePlayerObject(playerid, 19532, 888.98999, -3110.77002, 4.86000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 19532, 818.98999, -3320.76001, 4.86000,   0.00000, 0.00000, -90.00000, 1148829696);
	CreatePlayerObject(playerid, 19532, 749.02002, -3110.77002, 4.86000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 19532, 609.04999, -3250.76001, 4.86000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 19788, 888.98999, -3320.76001, 4.86000,   0.00000, 0.00000, 0.00000, 1148829696);
	CreatePlayerObject(playerid, 19788, 889.02002, -3040.77002, 4.86000,   0.00000, 0.00000, 90.00000, 1148829696);
	CreatePlayerObject(playerid, 19788, 749.02002, -3040.78003, 4.86000,   0.00000, 0.00000, 180.00000, 1148829696);
	CreatePlayerObject(playerid, 18803, 749.02002, -3403.27002, 4.56000,   0.00000, 0.00000, 90.00000, 1148829696);
	CreatePlayerObject(playerid, 19534, 594.04999, -3180.76001, 4.86000,   0.00000, 0.00000, 180.00000, 1148829696);
	CreatePlayerObject(playerid, 19534, 749.02002, -3485.73999, 4.88000,   0.00000, 0.00000, -90.00000, 1148829696);
	CreatePlayerObject(playerid, 19534, 609.03998, -3180.76001, 4.86000,   0.00000, 0.00000, 180.00000, 1148829696);
	CreatePlayerObject(playerid, 19534, 623.97998, -3180.76001, 4.90000,   0.00000, 0.00000, 180.00000, 1148829696);
	CreatePlayerObject(playerid, 19534, 749.02002, -3180.76001, 4.86000,   0.00000, 0.00000, 180.00000, 1148829696);
	CreatePlayerObject(playerid, 18805, 666.76001, -3180.76001, -0.70000,   0.00000, -4.00000, 0.00000, 1148829696);

	pjnivel[playerid] = CreatePlayerTextDraw(playerid,303.999969, 428.503631, "Nivel 5 (0/6)");
	PlayerTextDrawLetterSize(playerid,pjnivel[playerid], 0.159333, 1.089777);
	PlayerTextDrawAlignment(playerid,pjnivel[playerid], 1);
	PlayerTextDrawColor(playerid,pjnivel[playerid], -1061109505);
	PlayerTextDrawSetShadow(playerid,pjnivel[playerid], 0);
	PlayerTextDrawSetOutline(playerid,pjnivel[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid,pjnivel[playerid], 51);
	PlayerTextDrawFont(playerid,pjnivel[playerid], 1);
	PlayerTextDrawSetProportional(playerid,pjnivel[playerid], 1);

	IndicacionesT[playerid] = CreatePlayerTextDraw(playerid, 325.625000, 396.083221, "Ve_al_estacionamiento.");
	PlayerTextDrawLetterSize(playerid, IndicacionesT[playerid], 0.319999, 1.300000);
	PlayerTextDrawTextSize(playerid, IndicacionesT[playerid], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, IndicacionesT[playerid], 2);
	PlayerTextDrawColor(playerid, IndicacionesT[playerid], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, IndicacionesT[playerid], 0);
	PlayerTextDrawBoxColor(playerid, IndicacionesT[playerid], 0x80808080);
	PlayerTextDrawSetShadow(playerid, IndicacionesT[playerid], 1);
	PlayerTextDrawSetOutline(playerid, IndicacionesT[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, IndicacionesT[playerid], 0x000000FF);
	PlayerTextDrawFont(playerid, IndicacionesT[playerid], 1);
	PlayerTextDrawSetProportional(playerid, IndicacionesT[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, IndicacionesT[playerid], 0);
	
	NotiConnect[playerid][0] = CreatePlayerTextDraw(playerid, 8.500000, 277.733428, "box");
	PlayerTextDrawLetterSize(playerid, NotiConnect[playerid][0], 0.000000, 3.699996);
	PlayerTextDrawTextSize(playerid, NotiConnect[playerid][0], 141.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, NotiConnect[playerid][0], 1);
	PlayerTextDrawColor(playerid, NotiConnect[playerid][0], -1);
	PlayerTextDrawUseBox(playerid, NotiConnect[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid, NotiConnect[playerid][0], 255);
	PlayerTextDrawSetShadow(playerid, NotiConnect[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, NotiConnect[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, NotiConnect[playerid][0], 255);
	PlayerTextDrawFont(playerid, NotiConnect[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, NotiConnect[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, NotiConnect[playerid][0], 0);

	NotiConnect[playerid][1] = CreatePlayerTextDraw(playerid, 72.500000, 301.700042, "~>~ se ha conectado");
	PlayerTextDrawLetterSize(playerid, NotiConnect[playerid][1], 0.156999, 0.878222);
	PlayerTextDrawAlignment(playerid, NotiConnect[playerid][1], 1);
	PlayerTextDrawColor(playerid, NotiConnect[playerid][1], 8388863);
	PlayerTextDrawSetShadow(playerid, NotiConnect[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, NotiConnect[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, NotiConnect[playerid][1], 255);
	PlayerTextDrawFont(playerid, NotiConnect[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, NotiConnect[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, NotiConnect[playerid][1], 0);

	NotiConnect[playerid][2] = CreatePlayerTextDraw(playerid, 29.500000, 275.866729, "Mi prima");
	PlayerTextDrawLetterSize(playerid, NotiConnect[playerid][2], 0.390000, 2.116445);
	PlayerTextDrawAlignment(playerid, NotiConnect[playerid][2], 1);
	PlayerTextDrawColor(playerid, NotiConnect[playerid][2], -1);
	PlayerTextDrawSetShadow(playerid, NotiConnect[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, NotiConnect[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, NotiConnect[playerid][2], 255);
	PlayerTextDrawFont(playerid, NotiConnect[playerid][2], 0);
	PlayerTextDrawSetProportional(playerid, NotiConnect[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, NotiConnect[playerid][2], 0);

	NotiConnect[playerid][3] = CreatePlayerTextDraw(playerid, -3.500000, 274.466735, "");
	PlayerTextDrawLetterSize(playerid, NotiConnect[playerid][3], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, NotiConnect[playerid][3], 45.000000, 36.000000);
	PlayerTextDrawAlignment(playerid, NotiConnect[playerid][3], 1);
	PlayerTextDrawColor(playerid, NotiConnect[playerid][3], -1);
	PlayerTextDrawSetShadow(playerid, NotiConnect[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, NotiConnect[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, NotiConnect[playerid][3], 0);
	PlayerTextDrawFont(playerid, NotiConnect[playerid][3], 5);
	PlayerTextDrawSetProportional(playerid, NotiConnect[playerid][3], 0);
	PlayerTextDrawSetShadow(playerid, NotiConnect[playerid][3], 0);
	PlayerTextDrawSetPreviewModel(playerid, NotiConnect[playerid][3], 0);
	PlayerTextDrawSetPreviewRot(playerid, NotiConnect[playerid][3], 0.000000, 0.000000, 10.000000, 1.000000);

    TextVelocimetroP[playerid][0] = CreatePlayerTextDraw(playerid, 165.625427, 340.132507, "0");
	PlayerTextDrawLetterSize(playerid, TextVelocimetroP[playerid][0], 0.762928, 4.335831);
	PlayerTextDrawAlignment(playerid, TextVelocimetroP[playerid][0], 1);
	PlayerTextDrawColor(playerid, TextVelocimetroP[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid, TextVelocimetroP[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, TextVelocimetroP[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, TextVelocimetroP[playerid][0], 255);
	PlayerTextDrawFont(playerid, TextVelocimetroP[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, TextVelocimetroP[playerid][0], 1);
 
	TextVelocimetroP[playerid][1] = CreatePlayerTextDraw(playerid, 198.868499, 389.932556, "100%");
	PlayerTextDrawLetterSize(playerid, TextVelocimetroP[playerid][1], 0.170423, 1.319998);
	PlayerTextDrawTextSize(playerid, TextVelocimetroP[playerid][1], -6.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, TextVelocimetroP[playerid][1], 1);
	PlayerTextDrawColor(playerid, TextVelocimetroP[playerid][1], -1061109505);
	PlayerTextDrawSetShadow(playerid, TextVelocimetroP[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, TextVelocimetroP[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, TextVelocimetroP[playerid][1], 255);
	PlayerTextDrawFont(playerid, TextVelocimetroP[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, TextVelocimetroP[playerid][1], 1);
 
	TextVelocimetroP[playerid][2] = CreatePlayerTextDraw(playerid, 249.142745, 390.166137, "100%~n~");
	PlayerTextDrawLetterSize(playerid, TextVelocimetroP[playerid][2], 0.170423, 1.319998);
	PlayerTextDrawTextSize(playerid, TextVelocimetroP[playerid][2], -6.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, TextVelocimetroP[playerid][2], 1);
	PlayerTextDrawColor(playerid, TextVelocimetroP[playerid][2], -1061109505);
	PlayerTextDrawSetShadow(playerid, TextVelocimetroP[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, TextVelocimetroP[playerid][2], 1);
	PlayerTextDrawBackgroundColor(playerid, TextVelocimetroP[playerid][2], 255);
	PlayerTextDrawFont(playerid, TextVelocimetroP[playerid][2], 2);
	PlayerTextDrawSetProportional(playerid, TextVelocimetroP[playerid][2], 1);
 
	TextVelocimetroP[playerid][3] = CreatePlayerTextDraw(playerid, 201.333175, 320.950012, "");
	PlayerTextDrawTextSize(playerid, TextVelocimetroP[playerid][3], 90.000000, 90.000000);
	PlayerTextDrawAlignment(playerid, TextVelocimetroP[playerid][3], 1);
	PlayerTextDrawColor(playerid, TextVelocimetroP[playerid][3], -1);
	PlayerTextDrawSetShadow(playerid, TextVelocimetroP[playerid][3], 0);
    PlayerTextDrawBackgroundColor(playerid, TextVelocimetroP[playerid][3], 0);
	PlayerTextDrawFont(playerid, TextVelocimetroP[playerid][3], 5);
	PlayerTextDrawSetProportional(playerid, TextVelocimetroP[playerid][3], 0);
	PlayerTextDrawSetPreviewModel(playerid, TextVelocimetroP[playerid][3], 562);
	PlayerTextDrawSetPreviewRot(playerid, TextVelocimetroP[playerid][3], -10.000000, 0.000000, -7.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, TextVelocimetroP[playerid][3], -1, -1);

    PlayerTextdraws[playerid][ptextdraw_HUD][0] = CreatePlayerTextDraw(playerid, 2.150000, 446.149994, "_"); //reputacion
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_HUD][0], COLOR_BARRA_REP);
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_HUD][0], 1.000000, -0.200000);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_HUD][0], 6.384615, 0.000000);

	PlayerTextdraws[playerid][ptextdraw_HUD][1] = CreatePlayerTextDraw(playerid, 549.500000, 26.650000, "_"); //hambre
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_HUD][1], 0xFF7800FF);
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_HUD][1], 1.000000, 0.130000);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_HUD][1], 547.000000, 0.000000);

	PlayerTextdraws[playerid][ptextdraw_HUD][2] = CreatePlayerTextDraw(playerid, 549.500000, 37.650002, "_"); //sed
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_HUD][2], 0x1784C9FF);
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_HUD][2], 1.000000, 0.130000);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_HUD][2], 547.000000, 0.000000);

	BarraTrabajo[playerid][0] = CreatePlayerTextDraw(playerid, 278.000000, 429.000000, "_");
	PlayerTextDrawUseBox(playerid, BarraTrabajo[playerid][0], 1);
	PlayerTextDrawTextSize(playerid, BarraTrabajo[playerid][0], 278.000000 + 91.500000, 0.0);
	PlayerTextDrawLetterSize(playerid, BarraTrabajo[playerid][0], 1.0, 3.200000 / 8.3);
	PlayerTextDrawBoxColor(playerid, BarraTrabajo[playerid][0], 0x00000000 | (16711935 & 0x000000FF));

	BarraTrabajo[playerid][1] = CreatePlayerTextDraw(playerid, 278.000000 + 1.84, 429.000000 + 2.20, "_");
	PlayerTextDrawUseBox(playerid, BarraTrabajo[playerid][1], 1);
	PlayerTextDrawTextSize(playerid, BarraTrabajo[playerid][1], 278.000000 + 91.500000 - 2.0, 0.0);
	PlayerTextDrawLetterSize(playerid, BarraTrabajo[playerid][1], 1.0, 3.200000 / 10 - 0.35);
	PlayerTextDrawBoxColor(playerid, BarraTrabajo[playerid][1], (16711935 & 0xFFFFFF00) | (0x66 & ((16711935 & 0x000000FF) / 2)));

	BarraTrabajo[playerid][2] = CreatePlayerTextDraw(playerid, 278.000000 + 1.84, 429.000000 + 2.20, "_");
	PlayerTextDrawTextSize(playerid, BarraTrabajo[playerid][2], pb_percent(278.000000, 91.500000, 100.0, 1.0), 0.0);
	PlayerTextDrawLetterSize(playerid, BarraTrabajo[playerid][2], 1.0, 3.200000 / 10 - 0.35);
	PlayerTextDrawBoxColor(playerid, BarraTrabajo[playerid][2], 16711935);

	LineasPutiNivel[playerid] = CreatePlayerTextDraw(playerid,228.000000, 386.000000, "------------------------------");
	PlayerTextDrawLetterSize(playerid, LineasPutiNivel[playerid], 0.439999, 2.299999);
	PlayerTextDrawTextSize(playerid, LineasPutiNivel[playerid], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, LineasPutiNivel[playerid], 0);
	PlayerTextDrawColor(playerid, LineasPutiNivel[playerid], 0x5C5C5CFF);
	PlayerTextDrawUseBox(playerid, LineasPutiNivel[playerid], 0);
	PlayerTextDrawBoxColor(playerid, LineasPutiNivel[playerid], 0x80808080);
	PlayerTextDrawSetShadow(playerid, LineasPutiNivel[playerid], 1);
	PlayerTextDrawSetOutline(playerid, LineasPutiNivel[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, LineasPutiNivel[playerid], 0x000000FF);
	PlayerTextDrawFont(playerid, LineasPutiNivel[playerid], 1);
	PlayerTextDrawSetProportional(playerid, LineasPutiNivel[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, LineasPutiNivel[playerid], 0);

	AfinidadconX[playerid] = CreatePlayerTextDraw(playerid, 214.000000, 368.000000, "Afinidad con Colegiala");
	PlayerTextDrawLetterSize(playerid, AfinidadconX[playerid], 0.440000, 1.400000);
	PlayerTextDrawTextSize(playerid, AfinidadconX[playerid], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, AfinidadconX[playerid], 0);
	PlayerTextDrawColor(playerid, AfinidadconX[playerid], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, AfinidadconX[playerid], 0);
	PlayerTextDrawBoxColor(playerid, AfinidadconX[playerid], 0x80808080);
	PlayerTextDrawSetShadow(playerid, AfinidadconX[playerid], 1);
	PlayerTextDrawSetOutline(playerid, AfinidadconX[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, AfinidadconX[playerid], 0x000000FF);
	PlayerTextDrawFont(playerid, AfinidadconX[playerid], 0);
	PlayerTextDrawSetProportional(playerid, AfinidadconX[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, AfinidadconX[playerid], 0);

	Radly[playerid] = CreatePlayerTextDraw(playerid, 228.000000, 386.000000, "-");
	PlayerTextDrawLetterSize(playerid, Radly[playerid], 0.440000, 2.300000);
	PlayerTextDrawTextSize(playerid, Radly[playerid], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, Radly[playerid], 0);
	PlayerTextDrawColor(playerid, Radly[playerid], 0xFF00FFFF);
	PlayerTextDrawUseBox(playerid, Radly[playerid], 0);
	PlayerTextDrawBoxColor(playerid, Radly[playerid], 0x80808080);
	PlayerTextDrawSetShadow(playerid, Radly[playerid], 1);
	PlayerTextDrawSetOutline(playerid, Radly[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Radly[playerid], 0x000000FF);
	PlayerTextDrawFont(playerid, Radly[playerid], 1);
	PlayerTextDrawSetProportional(playerid, Radly[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, Radly[playerid], 0);

	LogroTitulo[playerid] = CreatePlayerTextDraw(playerid, 260.000000, 326.000000, "Sobre ruedas");
	PlayerTextDrawLetterSize(playerid, LogroTitulo[playerid], 0.559999, 1.700000);
	PlayerTextDrawTextSize(playerid, LogroTitulo[playerid], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, LogroTitulo[playerid], 0);
	PlayerTextDrawColor(playerid, LogroTitulo[playerid], 0xCACA56FF);
	PlayerTextDrawUseBox(playerid, LogroTitulo[playerid], 0);
	PlayerTextDrawBoxColor(playerid, LogroTitulo[playerid], 0x80808080);
	PlayerTextDrawSetShadow(playerid, LogroTitulo[playerid], 1);
	PlayerTextDrawSetOutline(playerid, LogroTitulo[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, LogroTitulo[playerid], 0x000000FF);
	PlayerTextDrawFont(playerid, LogroTitulo[playerid], 0);
	PlayerTextDrawSetProportional(playerid, LogroTitulo[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, LogroTitulo[playerid], 0);

	LogroTexto1[playerid] = CreatePlayerTextDraw(playerid, 323.000000, 322.000000, "~n~_~n~_~n~Compra su primer vehiculo.~n~_");
	PlayerTextDrawLetterSize(playerid, LogroTexto1[playerid], 0.379999, 1.299999);
	PlayerTextDrawTextSize(playerid, LogroTexto1[playerid], 3.000000, 202.500000);
	PlayerTextDrawAlignment(playerid, LogroTexto1[playerid], 2);
	PlayerTextDrawColor(playerid, LogroTexto1[playerid], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, LogroTexto1[playerid], 1);
	PlayerTextDrawBoxColor(playerid, LogroTexto1[playerid], 0x000000FF);
	PlayerTextDrawSetShadow(playerid, LogroTexto1[playerid], 1);
	PlayerTextDrawSetOutline(playerid, LogroTexto1[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, LogroTexto1[playerid], 0x000000FF);
	PlayerTextDrawFont(playerid, LogroTexto1[playerid], 1);
	PlayerTextDrawSetProportional(playerid, LogroTexto1[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, LogroTexto1[playerid], 0);

	LogroLinea[playerid] = CreatePlayerTextDraw(playerid, 208.000000, 344.000000, ".");
	PlayerTextDrawLetterSize(playerid, LogroLinea[playerid], 22.180044, 0.600000);
	PlayerTextDrawTextSize(playerid, LogroLinea[playerid], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, LogroLinea[playerid], 0);
	PlayerTextDrawColor(playerid, LogroLinea[playerid], 0xCBB788FF);
	PlayerTextDrawUseBox(playerid, LogroLinea[playerid], 0);
	PlayerTextDrawBoxColor(playerid, LogroLinea[playerid], 0x80808080);
	PlayerTextDrawSetShadow(playerid, LogroLinea[playerid], 1);
	PlayerTextDrawSetOutline(playerid, LogroLinea[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, LogroLinea[playerid], 0x000000FF);
	PlayerTextDrawFont(playerid, LogroLinea[playerid], 1);
	PlayerTextDrawSetProportional(playerid, LogroLinea[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, LogroLinea[playerid], 0);

	LogroRueda[playerid] = CreatePlayerTextDraw(playerid, 204.000000, 304.000000, "LD_BEAT:cring");
	PlayerTextDrawLetterSize(playerid, LogroRueda[playerid], 0.500000, 1.000000);
	PlayerTextDrawTextSize(playerid, LogroRueda[playerid], 60.000000, 60.000000);
	PlayerTextDrawAlignment(playerid, LogroRueda[playerid], 0);
	PlayerTextDrawColor(playerid, LogroRueda[playerid], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, LogroRueda[playerid], 1);
	PlayerTextDrawBoxColor(playerid, LogroRueda[playerid], 0x000000FF);
	PlayerTextDrawSetShadow(playerid, LogroRueda[playerid], 1);
	PlayerTextDrawSetOutline(playerid, LogroRueda[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, LogroRueda[playerid], 0x00000000);
	PlayerTextDrawFont(playerid, LogroRueda[playerid], 4);
	PlayerTextDrawSetProportional(playerid, LogroRueda[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, LogroRueda[playerid], 0);

	LogroNumero[playerid] = CreatePlayerTextDraw(playerid, 234.000000, 326.000000, "10");
	PlayerTextDrawLetterSize(playerid, LogroNumero[playerid], 0.409999, 1.700000);
	PlayerTextDrawTextSize(playerid, LogroNumero[playerid], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, LogroNumero[playerid], 2);
	PlayerTextDrawColor(playerid, LogroNumero[playerid], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, LogroNumero[playerid], 0);
	PlayerTextDrawBoxColor(playerid, LogroNumero[playerid], 0x80808080);
	PlayerTextDrawSetShadow(playerid, LogroNumero[playerid], 1);
	PlayerTextDrawSetOutline(playerid, LogroNumero[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, LogroNumero[playerid], 0x000000FF);
	PlayerTextDrawFont(playerid, LogroNumero[playerid], 1);
	PlayerTextDrawSetProportional(playerid, LogroNumero[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, LogroNumero[playerid], 0);


	SelectionTD[playerid][0] = CreatePlayerTextDraw(playerid,209.000000, 170.000000, "sd"); //prenda 1
	PlayerTextDrawLetterSize(playerid, SelectionTD[playerid][0], 0.270000, 8.800002);
	PlayerTextDrawTextSize(playerid, SelectionTD[playerid][0], 87.000000, 93.000000);
	PlayerTextDrawAlignment(playerid, SelectionTD[playerid][0], 2);
	PlayerTextDrawColor(playerid, SelectionTD[playerid][0], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, SelectionTD[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid, SelectionTD[playerid][0], 0x000000FF);
	PlayerTextDrawSetShadow(playerid, SelectionTD[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, SelectionTD[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, SelectionTD[playerid][0], 0x0B0B0B99);
	PlayerTextDrawFont(playerid, SelectionTD[playerid][0], 5);
	PlayerTextDrawSetProportional(playerid, SelectionTD[playerid][0], 0);
	PlayerTextDrawSetSelectable(playerid, SelectionTD[playerid][0], 1);
	PlayerTextDrawSetPreviewModel(playerid, SelectionTD[playerid][0], 19382);
	PlayerTextDrawSetPreviewRot(playerid, SelectionTD[playerid][0], 0.000000, 0.000000, 0.000000, 1.000000);

	SelectionTD[playerid][1] = CreatePlayerTextDraw(playerid,298.000000, 170.000000, "sd"); //prenda 2
	PlayerTextDrawLetterSize(playerid, SelectionTD[playerid][1], 0.270000, 8.800002);
	PlayerTextDrawTextSize(playerid, SelectionTD[playerid][1], 87.000000, 93.000000);
	PlayerTextDrawAlignment(playerid, SelectionTD[playerid][1], 2);
	PlayerTextDrawColor(playerid, SelectionTD[playerid][1], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, SelectionTD[playerid][1], 1);
	PlayerTextDrawBoxColor(playerid, SelectionTD[playerid][1], 0x000000FF);
	PlayerTextDrawSetShadow(playerid, SelectionTD[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, SelectionTD[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, SelectionTD[playerid][1], 0x0B0B0B99);
	PlayerTextDrawFont(playerid, SelectionTD[playerid][1], 5);
	PlayerTextDrawSetProportional(playerid, SelectionTD[playerid][1], 0);
	PlayerTextDrawSetSelectable(playerid, SelectionTD[playerid][1], 1);
	PlayerTextDrawSetPreviewModel(playerid, SelectionTD[playerid][1], 19382);
	PlayerTextDrawSetPreviewRot(playerid, SelectionTD[playerid][1], 0.000000, 0.000000, 0.000000, 1.000000);

	SelectionTD[playerid][2] = CreatePlayerTextDraw(playerid,209.000000, 265.799988, "sd"); //prenda 3
	PlayerTextDrawLetterSize(playerid, SelectionTD[playerid][2], 0.270000, 8.800002);
	PlayerTextDrawTextSize(playerid, SelectionTD[playerid][2], 87.000000, 93.000000);
	PlayerTextDrawAlignment(playerid, SelectionTD[playerid][2], 2);
	PlayerTextDrawColor(playerid, SelectionTD[playerid][2], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, SelectionTD[playerid][2], 1);
	PlayerTextDrawBoxColor(playerid, SelectionTD[playerid][2], 0x000000FF);
	PlayerTextDrawSetShadow(playerid, SelectionTD[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, SelectionTD[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, SelectionTD[playerid][2], 0x0B0B0B99);
	PlayerTextDrawFont(playerid, SelectionTD[playerid][2], 5);
	PlayerTextDrawSetProportional(playerid, SelectionTD[playerid][2], 0);
	PlayerTextDrawSetSelectable(playerid, SelectionTD[playerid][2], 1);
	PlayerTextDrawSetPreviewModel(playerid, SelectionTD[playerid][2], 19382);
	PlayerTextDrawSetPreviewRot(playerid, SelectionTD[playerid][2], 0.000000, 0.000000, 0.000000, 1.000000);

	SelectionTD[playerid][3] = CreatePlayerTextDraw(playerid,298.000000, 265.799988, "sd"); //prenda 4
	PlayerTextDrawLetterSize(playerid, SelectionTD[playerid][3], 0.270000, 8.800002);
	PlayerTextDrawTextSize(playerid, SelectionTD[playerid][3], 87.000000, 93.000000);
	PlayerTextDrawAlignment(playerid, SelectionTD[playerid][3], 2);
	PlayerTextDrawColor(playerid, SelectionTD[playerid][3], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, SelectionTD[playerid][3], 1);
	PlayerTextDrawBoxColor(playerid, SelectionTD[playerid][3], 0x000000FF);
	PlayerTextDrawSetShadow(playerid, SelectionTD[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, SelectionTD[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, SelectionTD[playerid][3], 0x0B0B0B99);
	PlayerTextDrawFont(playerid, SelectionTD[playerid][3], 5);
	PlayerTextDrawSetProportional(playerid, SelectionTD[playerid][3], 0);
	PlayerTextDrawSetSelectable(playerid, SelectionTD[playerid][3], 1);
	PlayerTextDrawSetPreviewModel(playerid, SelectionTD[playerid][3], 19382);
	PlayerTextDrawSetPreviewRot(playerid, SelectionTD[playerid][3], 0.000000, 0.000000, 0.000000, 1.000000);

	TextoMenu[playerid] = CreatePlayerTextDraw(playerid,297.000000, 158.000000, "Prendas");
	PlayerTextDrawLetterSize(playerid, TextoMenu[playerid], 0.320000, 1.000000);
	PlayerTextDrawTextSize(playerid, TextoMenu[playerid], 27.000000, 178.000000);
	PlayerTextDrawAlignment(playerid, TextoMenu[playerid], 2);
	PlayerTextDrawColor(playerid, TextoMenu[playerid], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, TextoMenu[playerid], 1);
	PlayerTextDrawBoxColor(playerid, TextoMenu[playerid], 0x000000FF);
	PlayerTextDrawSetShadow(playerid, TextoMenu[playerid], 1);
	PlayerTextDrawSetOutline(playerid, TextoMenu[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, TextoMenu[playerid], 0x000000FF);
	PlayerTextDrawFont(playerid, TextoMenu[playerid], 1);
	PlayerTextDrawSetProportional(playerid, TextoMenu[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, TextoMenu[playerid], 0);

	CerrarPrenda[playerid] = CreatePlayerTextDraw(playerid,379.000000, 158.000000, "X");
	PlayerTextDrawLetterSize(playerid, CerrarPrenda[playerid], 0.290000, 1.000000);
	PlayerTextDrawTextSize(playerid, CerrarPrenda[playerid], 9.000000, 9.000000);
	PlayerTextDrawAlignment(playerid, CerrarPrenda[playerid], 2);
	PlayerTextDrawColor(playerid, CerrarPrenda[playerid], 0xFF0000FF);
	PlayerTextDrawUseBox(playerid, CerrarPrenda[playerid], 1);
	PlayerTextDrawBoxColor(playerid, CerrarPrenda[playerid], 0x000000FF);
	PlayerTextDrawSetShadow(playerid, CerrarPrenda[playerid], 1);
	PlayerTextDrawSetOutline(playerid, CerrarPrenda[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, CerrarPrenda[playerid], 0x0B0B0B99);
	PlayerTextDrawFont(playerid, CerrarPrenda[playerid], 1);
	PlayerTextDrawSetProportional(playerid, CerrarPrenda[playerid], 0);
	PlayerTextDrawSetSelectable(playerid, CerrarPrenda[playerid], 1);

	aTiempoCriminal[playerid] = CreatePlayerTextDraw(playerid, 303.750000, 414.583404, "00:00");
	PlayerTextDrawLetterSize(playerid, aTiempoCriminal[playerid], 0.450625, 2.895002);
	PlayerTextDrawAlignment(playerid, aTiempoCriminal[playerid], 1);
	PlayerTextDrawColor(playerid, aTiempoCriminal[playerid], -1);
	PlayerTextDrawSetShadow(playerid, aTiempoCriminal[playerid], 0);
	PlayerTextDrawSetOutline(playerid, aTiempoCriminal[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, aTiempoCriminal[playerid], 255);
	PlayerTextDrawFont(playerid, aTiempoCriminal[playerid], 2);
	PlayerTextDrawSetProportional(playerid, aTiempoCriminal[playerid], 1);
	PlayerTextDrawSetShadow(playerid, aTiempoCriminal[playerid], 0);

	tuningobj[playerid] = CreatePlayerTextDraw(playerid, 320.000000, 350.000000, "Objeto:_0/0~n~Precio:_0$");
	PlayerTextDrawLetterSize(playerid, tuningobj[playerid], 0.200333, 1.098074);
	PlayerTextDrawAlignment(playerid, tuningobj[playerid], 2);
	PlayerTextDrawColor(playerid, tuningobj[playerid], -121);
	PlayerTextDrawSetShadow(playerid, tuningobj[playerid], 0);
	PlayerTextDrawSetOutline(playerid, tuningobj[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, tuningobj[playerid], 255);
	PlayerTextDrawFont(playerid, tuningobj[playerid], 1);
	PlayerTextDrawSetProportional(playerid, tuningobj[playerid], 1);
	PlayerTextDrawSetShadow(playerid, tuningobj[playerid], 0);
}

Funcion:CargarPortones()
{
	mysql_tquery(Conecction, "SELECT * FROM portones LIMIT 20", "CargarPorton");
}

Funcion:RecargarPortones()
{
	for(new i = 0; i < MAX_PORTONES; i++)
	{
		if(PortonInfo[i][PortonObjetoID] > 0)
		{
			DestroyDynamic3DTextLabelEx(PortonInfo[i][PortonLabel]);
			DestroyDynamicObjectEx(PortonInfo[i][PortonObjetoID]);
			PortonInfo[i][PortonObjetoID] = 0;
			PortonInfo[i][PortonModelo] = 0;
		}
		
	}
	CargarPortones();

}

Funcion:CargarPorton()
{
	new rowsa = cache_num_rows();
	if(rowsa)
	{
		new string[128];
		for(new i = 0; i < rowsa; i++)
		{
			cache_get_value_name_float(i, "Xc", PortonInfo[i][pXc]);
			cache_get_value_name_float(i, "Yc", PortonInfo[i][pYc]);
			cache_get_value_name_float(i, "Zc", PortonInfo[i][pZc]);
			cache_get_value_name_float(i, "RXc", PortonInfo[i][pRXc]);
			cache_get_value_name_float(i, "RYc", PortonInfo[i][pRYc]);
			cache_get_value_name_float(i, "RZc", PortonInfo[i][pRZc]);
			cache_get_value_name_float(i, "Xa", PortonInfo[i][pXa]);
			cache_get_value_name_float(i, "Ya", PortonInfo[i][pYa]);
			cache_get_value_name_float(i, "Za", PortonInfo[i][pZa]);
			cache_get_value_name_float(i, "RXa", PortonInfo[i][pRXa]);
			cache_get_value_name_float(i, "RYa", PortonInfo[i][pRYa]);
			cache_get_value_name_float(i, "RZa", PortonInfo[i][pRZa]);
			cache_get_value_name_int(i, "faccion", PortonInfo[i][PortonFacc]);
			cache_get_value_name_int(i, "ID", PortonInfo[i][PortonId]);
			cache_get_value_name_int(i, "modelo", PortonInfo[i][PortonModelo]);
			if(PortonInfo[i][PortonModelo] > 0)
			{
				PortonInfo[i][PortonObjetoID] = CreateDynamicObject(PortonInfo[i][PortonModelo], PortonInfo[i][pXc], PortonInfo[i][pYc], PortonInfo[i][pZc], PortonInfo[i][pRXc], PortonInfo[i][pRYc], PortonInfo[i][pRZc]);
				format(string, sizeof string, "%s\n"CB"Pulsa "CR"'H'"CB" para abrir.", BandasInfo[PortonInfo[i][PortonFacc]][BNombre]);
				PortonInfo[i][PortonLabel] = CreateDynamic3DTextLabel(string,COLOR_BLANCO,PortonInfo[i][pXc], PortonInfo[i][pYc], PortonInfo[i][pZc],15.0);
			}
			
		}
	}
}

static CrearArbol()
{
	dynamicgift[0] = CreateDynamicObject(19057, 1505.810059, -1640.760010, 13.690000, 0.000000, 0.000000, 255.380005);
	dynamicgift[1] = CreateDynamicObject(19057, 1511.689941, -1609.859985, 13.690000, 0.000000, 0.000000, 329.329987);
	dynamicgift[2] = CreateDynamicObject(19054, 1513.250000, -1614.449951, 13.080000, 0.000000, 0.000000, 349.929993);
	dynamicgift[3] = CreateDynamicObject(19054, 1510.089966, -1613.780029, 13.080000, 0.000000, 0.000000, 331.790009);
	dynamicgift[4] = CreateDynamicObject(19054, 1509.060059, -1611.560059, 13.690000, 0.000000, 0.000000, 298.059998);
	dynamicgift[5] = CreateDynamicObject(19054, 1513.400024, -1609.510010, 13.600000, 0.000000, 90.000000, 19.879999);
	dynamicgift[6] = CreateDynamicObject(19056, 1509.920044, -1610.020020, 13.200000, 0.000000, 0.000000, 0.000000);
	dynamicgift[7] = CreateDynamicObject(19055, 1513.540039, -1610.910034, 13.690000, 0.000000, 0.000000, 355.399994);
	dynamicgift[8] = CreateDynamicObject(19055, 1511.829956, -1614.199951, 13.690000, 0.000000, 0.000000, 0.000000);
	dynamicgift[9] = CreateDynamicObject(19058, 1513.699951, -1612.959961, 13.690000, 0.000000, 0.000000, 328.510010);
	dynamicgift[10] = CreateDynamicObject(19076, 1182.839966, -1298.119995, 13.210000, 0.000000, 0.000000, 73.260002);
	dynamicgift[11] = CreateDynamicObject(19076, 1410.910034, -1168.979980, 22.809999, 0.000000, 0.000000, 0.000000);
	dynamicgift[12] = CreateDynamicObject(19076, 185.509995, -1409.060059, 45.000000, 0.000000, 0.000000, 0.000000);
	dynamicgift[13] = CreateDynamicObject(19076, 122.820000, -1574.250000, 9.030000, 0.000000, 0.000000, 0.000000);
	dynamicgift[14] = CreateDynamicObject(19076, 1760.829956, -1309.020020, 12.600000, 0.000000, 0.000000, 52.389999);
	dynamicgift[15] = CreateDynamicObject(19076, -1995.04041, 76.56133, 26.68150, 0.00000, 0.00000, 0.00000);
	dynamicgift[16] = CreateDynamicObject(19076, 1580.32629, 1859.10181, 9.75570, 0.00000, 0.00000, 0.00000);
	dynamicgift[17] = CreateDynamicObject(19076, 1511.589966, -1612.050049, 13.070000, 0.000000, 0.000000, 0.000000);
	dynamicgift3DText = CreateDynamic3DTextLabel(""CB"A partir del d�a 25 podr�s abrir tu "CR"/regalo"CB" de navidad",COLOR_BLANCO, 1511.589966, -1612.050049, 14.000000, 10.0);
}

Funcion:CargarTodo()
{
	SetTimer("MoverGlobo", 60000, false);
	CargarFacciones();
	
	if(ArbolStatus == 1)
	{
		CrearArbol();
	}

	//Textdraws
	/*IngresarPinTD[0] = TextDrawCreate(312.000000, 167.000000, "_");
	TextDrawFont(IngresarPinTD[0], 1);
	TextDrawLetterSize(IngresarPinTD[0], 0.600000, 16.200126);
	TextDrawTextSize(IngresarPinTD[0], 217.000000, 167.500000);
	TextDrawSetOutline(IngresarPinTD[0], 1);
	TextDrawSetShadow(IngresarPinTD[0], 0);
	TextDrawAlignment(IngresarPinTD[0], 2);
	TextDrawColor(IngresarPinTD[0], -1);
	TextDrawBackgroundColor(IngresarPinTD[0], 255);
	TextDrawBoxColor(IngresarPinTD[0], 135);
	TextDrawUseBox(IngresarPinTD[0], 1);
	TextDrawSetProportional(IngresarPinTD[0], 1);
	TextDrawSetSelectable(IngresarPinTD[0], 0);

	IngresarPinTD[1] = TextDrawCreate(311.000000, 274.000000, "0");
	TextDrawFont(IngresarPinTD[1], 2);
	TextDrawLetterSize(IngresarPinTD[1], 0.287499, 2.449999);
	TextDrawTextSize(IngresarPinTD[1], 16.500000, 91.500000);
	TextDrawSetOutline(IngresarPinTD[1], 1);
	TextDrawSetShadow(IngresarPinTD[1], 0);
	TextDrawAlignment(IngresarPinTD[1], 2);
	TextDrawColor(IngresarPinTD[1], -1);
	TextDrawBackgroundColor(IngresarPinTD[1], 255);
	TextDrawBoxColor(IngresarPinTD[1], -65336);
	TextDrawUseBox(IngresarPinTD[1], 1);
	TextDrawSetProportional(IngresarPinTD[1], 1);
	TextDrawSetSelectable(IngresarPinTD[1], 1);

	IngresarPinTD[2] = TextDrawCreate(262.000000, 241.000000, "1");
	TextDrawFont(IngresarPinTD[2], 2);
	TextDrawLetterSize(IngresarPinTD[2], 0.287499, 2.249999);
	TextDrawTextSize(IngresarPinTD[2], 16.500000, 39.500000);
	TextDrawSetOutline(IngresarPinTD[2], 1);
	TextDrawSetShadow(IngresarPinTD[2], 0);
	TextDrawAlignment(IngresarPinTD[2], 2);
	TextDrawColor(IngresarPinTD[2], -1);
	TextDrawBackgroundColor(IngresarPinTD[2], 255);
	TextDrawBoxColor(IngresarPinTD[2], -65336);
	TextDrawUseBox(IngresarPinTD[2], 1);
	TextDrawSetProportional(IngresarPinTD[2], 1);
	TextDrawSetSelectable(IngresarPinTD[2], 1);

	IngresarPinTD[3] = TextDrawCreate(313.000000, 241.000000, "2");
	TextDrawFont(IngresarPinTD[3], 2);
	TextDrawLetterSize(IngresarPinTD[3], 0.287499, 2.249999);
	TextDrawTextSize(IngresarPinTD[3], 16.500000, 39.500000);
	TextDrawSetOutline(IngresarPinTD[3], 1);
	TextDrawSetShadow(IngresarPinTD[3], 0);
	TextDrawAlignment(IngresarPinTD[3], 2);
	TextDrawColor(IngresarPinTD[3], -1);
	TextDrawBackgroundColor(IngresarPinTD[3], 255);
	TextDrawBoxColor(IngresarPinTD[3], -65336);
	TextDrawUseBox(IngresarPinTD[3], 1);
	TextDrawSetProportional(IngresarPinTD[3], 1);
	TextDrawSetSelectable(IngresarPinTD[3], 1);

	IngresarPinTD[4] = TextDrawCreate(364.000000, 240.000000, "3");
	TextDrawFont(IngresarPinTD[4], 2);
	TextDrawLetterSize(IngresarPinTD[4], 0.287499, 2.249999);
	TextDrawTextSize(IngresarPinTD[4], 16.500000, 39.500000);
	TextDrawSetOutline(IngresarPinTD[4], 1);
	TextDrawSetShadow(IngresarPinTD[4], 0);
	TextDrawAlignment(IngresarPinTD[4], 2);
	TextDrawColor(IngresarPinTD[4], -1);
	TextDrawBackgroundColor(IngresarPinTD[4], 255);
	TextDrawBoxColor(IngresarPinTD[4], -65336);
	TextDrawUseBox(IngresarPinTD[4], 1);
	TextDrawSetProportional(IngresarPinTD[4], 1);
	TextDrawSetSelectable(IngresarPinTD[4], 1);

	IngresarPinTD[5] = TextDrawCreate(262.000000, 209.000000, "4");
	TextDrawFont(IngresarPinTD[5], 2);
	TextDrawLetterSize(IngresarPinTD[5], 0.287499, 2.249999);
	TextDrawTextSize(IngresarPinTD[5], 16.500000, 39.500000);
	TextDrawSetOutline(IngresarPinTD[5], 1);
	TextDrawSetShadow(IngresarPinTD[5], 0);
	TextDrawAlignment(IngresarPinTD[5], 2);
	TextDrawColor(IngresarPinTD[5], -1);
	TextDrawBackgroundColor(IngresarPinTD[5], 255);
	TextDrawBoxColor(IngresarPinTD[5], -65336);
	TextDrawUseBox(IngresarPinTD[5], 1);
	TextDrawSetProportional(IngresarPinTD[5], 1);
	TextDrawSetSelectable(IngresarPinTD[5], 1);

	IngresarPinTD[6] = TextDrawCreate(313.000000, 209.000000, "5");
	TextDrawFont(IngresarPinTD[6], 2);
	TextDrawLetterSize(IngresarPinTD[6], 0.287499, 2.249999);
	TextDrawTextSize(IngresarPinTD[6], 16.500000, 39.500000);
	TextDrawSetOutline(IngresarPinTD[6], 1);
	TextDrawSetShadow(IngresarPinTD[6], 0);
	TextDrawAlignment(IngresarPinTD[6], 2);
	TextDrawColor(IngresarPinTD[6], -1);
	TextDrawBackgroundColor(IngresarPinTD[6], 255);
	TextDrawBoxColor(IngresarPinTD[6], -65336);
	TextDrawUseBox(IngresarPinTD[6], 1);
	TextDrawSetProportional(IngresarPinTD[6], 1);
	TextDrawSetSelectable(IngresarPinTD[6], 1);

	IngresarPinTD[7] = TextDrawCreate(364.000000, 209.000000, "6");
	TextDrawFont(IngresarPinTD[7], 2);
	TextDrawLetterSize(IngresarPinTD[7], 0.287499, 2.249999);
	TextDrawTextSize(IngresarPinTD[7], 16.500000, 39.500000);
	TextDrawSetOutline(IngresarPinTD[7], 1);
	TextDrawSetShadow(IngresarPinTD[7], 0);
	TextDrawAlignment(IngresarPinTD[7], 2);
	TextDrawColor(IngresarPinTD[7], -1);
	TextDrawBackgroundColor(IngresarPinTD[7], 255);
	TextDrawBoxColor(IngresarPinTD[7], -65336);
	TextDrawUseBox(IngresarPinTD[7], 1);
	TextDrawSetProportional(IngresarPinTD[7], 1);
	TextDrawSetSelectable(IngresarPinTD[7], 1);

	IngresarPinTD[8] = TextDrawCreate(364.000000, 178.000000, "9");
	TextDrawFont(IngresarPinTD[8], 2);
	TextDrawLetterSize(IngresarPinTD[8], 0.287499, 2.249999);
	TextDrawTextSize(IngresarPinTD[8], 16.500000, 39.500000);
	TextDrawSetOutline(IngresarPinTD[8], 1);
	TextDrawSetShadow(IngresarPinTD[8], 0);
	TextDrawAlignment(IngresarPinTD[8], 2);
	TextDrawColor(IngresarPinTD[8], -1);
	TextDrawBackgroundColor(IngresarPinTD[8], 255);
	TextDrawBoxColor(IngresarPinTD[8], -65336);
	TextDrawUseBox(IngresarPinTD[8], 1);
	TextDrawSetProportional(IngresarPinTD[8], 1);
	TextDrawSetSelectable(IngresarPinTD[8], 1);

	IngresarPinTD[9] = TextDrawCreate(313.000000, 178.000000, "8");
	TextDrawFont(IngresarPinTD[9], 2);
	TextDrawLetterSize(IngresarPinTD[9], 0.287499, 2.249999);
	TextDrawTextSize(IngresarPinTD[9], 16.500000, 39.500000);
	TextDrawSetOutline(IngresarPinTD[9], 1);
	TextDrawSetShadow(IngresarPinTD[9], 0);
	TextDrawAlignment(IngresarPinTD[9], 2);
	TextDrawColor(IngresarPinTD[9], -1);
	TextDrawBackgroundColor(IngresarPinTD[9], 255);
	TextDrawBoxColor(IngresarPinTD[9], -65336);
	TextDrawUseBox(IngresarPinTD[9], 1);
	TextDrawSetProportional(IngresarPinTD[9], 1);
	TextDrawSetSelectable(IngresarPinTD[9], 1);

	IngresarPinTD[10] = TextDrawCreate(263.000000, 177.000000, "7");
	TextDrawFont(IngresarPinTD[10], 2);
	TextDrawLetterSize(IngresarPinTD[10], 0.287499, 2.249999);
	TextDrawTextSize(IngresarPinTD[10], 16.500000, 39.500000);
	TextDrawSetOutline(IngresarPinTD[10], 1);
	TextDrawSetShadow(IngresarPinTD[10], 0);
	TextDrawAlignment(IngresarPinTD[10], 2);
	TextDrawColor(IngresarPinTD[10], -1);
	TextDrawBackgroundColor(IngresarPinTD[10], 255);
	TextDrawBoxColor(IngresarPinTD[10], -65336);
	TextDrawUseBox(IngresarPinTD[10], 1);
	TextDrawSetProportional(IngresarPinTD[10], 1);
	TextDrawSetSelectable(IngresarPinTD[10], 1);

	IngresarPinTD[11] = TextDrawCreate(312.000000, 126.000000, "Ingresa el pin");
	TextDrawFont(IngresarPinTD[11], 1);
	TextDrawLetterSize(IngresarPinTD[11], 0.591666, 2.300124);
	TextDrawTextSize(IngresarPinTD[11], 217.000000, 167.500000);
	TextDrawSetOutline(IngresarPinTD[11], 1);
	TextDrawSetShadow(IngresarPinTD[11], 0);
	TextDrawAlignment(IngresarPinTD[11], 2);
	TextDrawColor(IngresarPinTD[11], -1);
	TextDrawBackgroundColor(IngresarPinTD[11], 255);
	TextDrawBoxColor(IngresarPinTD[11], 135);
	TextDrawUseBox(IngresarPinTD[11], 1);
	TextDrawSetProportional(IngresarPinTD[11], 1);
	TextDrawSetSelectable(IngresarPinTD[11], 0);*/


	SafeZoneText[0] = TextDrawCreate(-2.357213, 195.833358, "box");
	TextDrawLetterSize(SafeZoneText[0], 0.000000, 1.472914);
	TextDrawTextSize(SafeZoneText[0], 90.000000, 0.000000);
	TextDrawAlignment(SafeZoneText[0], 1);
	TextDrawColor(SafeZoneText[0], -1);
	TextDrawUseBox(SafeZoneText[0], 1);
	TextDrawBoxColor(SafeZoneText[0], 102);
	TextDrawSetShadow(SafeZoneText[0], 0);
	TextDrawSetOutline(SafeZoneText[0], 0);
	TextDrawBackgroundColor(SafeZoneText[0], 255);
	TextDrawFont(SafeZoneText[0], 1);
	TextDrawSetProportional(SafeZoneText[0], 1);
	TextDrawSetShadow(SafeZoneText[0], 0);

	SafeZoneText[1] = TextDrawCreate(89.004394, 196.999984, Desbug("Est�s en zona segura"));
	TextDrawLetterSize(SafeZoneText[1], 0.241171, 1.092500);
	TextDrawAlignment(SafeZoneText[1], 3);
	TextDrawColor(SafeZoneText[1], -1);
	TextDrawSetShadow(SafeZoneText[1], 0);
	TextDrawSetOutline(SafeZoneText[1], 0);
	TextDrawBackgroundColor(SafeZoneText[1], 255);
	TextDrawFont(SafeZoneText[1], 1);
	TextDrawSetProportional(SafeZoneText[1], 1);
	TextDrawSetShadow(SafeZoneText[1], 0);

	SafeZoneText[2] = TextDrawCreate(0.453931, 195.833251, "box");
	TextDrawLetterSize(SafeZoneText[2], 0.000000, 1.472915);
	TextDrawTextSize(SafeZoneText[2], 2.000000, 0.000000);
	TextDrawAlignment(SafeZoneText[2], 1);
	TextDrawColor(SafeZoneText[2], -1);
	TextDrawUseBox(SafeZoneText[2], 1);
	TextDrawBoxColor(SafeZoneText[2], COLOR_SERVER);
	TextDrawSetShadow(SafeZoneText[2], 0);
	TextDrawSetOutline(SafeZoneText[2], 0);
	TextDrawBackgroundColor(SafeZoneText[2], 255);
	TextDrawFont(SafeZoneText[2], 1);
	TextDrawSetProportional(SafeZoneText[2], 1);
	TextDrawSetShadow(SafeZoneText[2], 0);

    TextVelocimetro[0] = TextDrawCreate(183.133331, 375.766021, "km/h");
	TextDrawLetterSize(TextVelocimetro[0], 0.269660, 1.564997);
	TextDrawAlignment(TextVelocimetro[0], 1);
	TextDrawColor(TextVelocimetro[0], -5963521);
	TextDrawSetShadow(TextVelocimetro[0], 0);
	TextDrawSetOutline(TextVelocimetro[0], 1);
	TextDrawBackgroundColor(TextVelocimetro[0], 255);
	TextDrawFont(TextVelocimetro[0], 2);
	TextDrawSetProportional(TextVelocimetro[0], 1);
 
	TextVelocimetro[1] = TextDrawCreate(167.109069, 389.849273, "Estado~n~");
	TextDrawLetterSize(TextVelocimetro[1], 0.170423, 1.319998);
	TextDrawTextSize(TextVelocimetro[1], -6.000000, 0.000000);
	TextDrawAlignment(TextVelocimetro[1], 1);
	TextDrawColor(TextVelocimetro[1], -1);
	TextDrawSetShadow(TextVelocimetro[1], 0);
	TextDrawBackgroundColor(TextVelocimetro[1], 255);
	TextDrawFont(TextVelocimetro[1], 2);
	TextDrawSetProportional(TextVelocimetro[1], 1);
 
	TextVelocimetro[2] = TextDrawCreate(218.614898, 390.382537, "Litros");
	TextDrawLetterSize(TextVelocimetro[2], 0.198534, 1.267498);
	TextDrawTextSize(TextVelocimetro[2], -6.000000, 0.000000);
	TextDrawAlignment(TextVelocimetro[2], 1);
	TextDrawColor(TextVelocimetro[2], -1);
	TextDrawSetShadow(TextVelocimetro[2], 0);
	TextDrawBackgroundColor(TextVelocimetro[2], 255);
	TextDrawFont(TextVelocimetro[2], 2);
	TextDrawSetProportional(TextVelocimetro[2], 1);

	Textdraws[textdraw_HUD][0] = TextDrawCreate(0.000000, 444.000000, "_"); //base barra reputacion
	TextDrawBoxColor(Textdraws[textdraw_HUD][0], 0x000000FF);
	TextDrawLetterSize(Textdraws[textdraw_HUD][0], 1.000000, 0.250000);
	TextDrawTextSize(Textdraws[textdraw_HUD][0], 640.000000, 0.000000);
	TextDrawUseBox(Textdraws[textdraw_HUD][0], 1);

	Textdraws[textdraw_HUD][1] = TextDrawCreate(2.150000, 446.149994, "_"); //fondo barra reputacion
	TextDrawBoxColor(Textdraws[textdraw_HUD][1], 0x66666666);
	TextDrawLetterSize(Textdraws[textdraw_HUD][1], 1.000000, -0.200000);
	TextDrawTextSize(Textdraws[textdraw_HUD][1], 637.849976, 0.000000);
	TextDrawUseBox(Textdraws[textdraw_HUD][1], 1);

	Textdraws[textdraw_HUD][2] = TextDrawCreate(547.349976, 24.500000, "_"); //base barra hambre
	TextDrawBoxColor(Textdraws[textdraw_HUD][2], 0x000000FF);
	TextDrawLetterSize(Textdraws[textdraw_HUD][2], 1.000000, 0.580000);
	TextDrawTextSize(Textdraws[textdraw_HUD][2], 606.65, 0.000000);
	TextDrawUseBox(Textdraws[textdraw_HUD][2], 1);

	Textdraws[textdraw_HUD][3] = TextDrawCreate(549.500000, 26.650000, "_"); //fondo barra hambre
	TextDrawBoxColor(Textdraws[textdraw_HUD][3], 0xB5550066);
	TextDrawLetterSize(Textdraws[textdraw_HUD][3], 1.000000, 0.130000);
	TextDrawTextSize(Textdraws[textdraw_HUD][3], 604.5, 0.000000);
	TextDrawUseBox(Textdraws[textdraw_HUD][3], 1);

	Textdraws[textdraw_HUD][4] = TextDrawCreate(547.349976, 35.500000, "_"); //base barra sed
	TextDrawBoxColor(Textdraws[textdraw_HUD][4], 0x000000FF);
	TextDrawLetterSize(Textdraws[textdraw_HUD][4], 1.000000, 0.580000);
	TextDrawTextSize(Textdraws[textdraw_HUD][4], 606.65, 0.000000);
	TextDrawUseBox(Textdraws[textdraw_HUD][4], 1);

	Textdraws[textdraw_HUD][5] = TextDrawCreate(549.500000, 37.650002, "_"); //fondo barra sed
	TextDrawBoxColor(Textdraws[textdraw_HUD][5], 0x134B9066);
	TextDrawLetterSize(Textdraws[textdraw_HUD][5], 1.000000, 0.130000);
	TextDrawTextSize(Textdraws[textdraw_HUD][5], 604.5, 0.000000);
	TextDrawUseBox(Textdraws[textdraw_HUD][5], 1);

    

	MisionT2[0] = TextDrawCreate(281.250000, 1.583347, "~>~ Buscando integrantes para ~y~Asalto al Blindado~w~ - Ladrones: ~g~9/9~w~ - Guardias: ~g~6/6~w~ - Mafiosos: ~g~4/4");
	TextDrawLetterSize(MisionT2[0], 0.217499, 0.993331);
	TextDrawTextSize(MisionT2[0], 641.000000, 0.000000);
	TextDrawAlignment(MisionT2[0], 1);
	TextDrawColor(MisionT2[0], -1);
	TextDrawUseBox(MisionT2[0], 1);
	TextDrawBoxColor(MisionT2[0], 255);
	TextDrawSetShadow(MisionT2[0], 0);
	TextDrawSetOutline(MisionT2[0], 0);
	TextDrawBackgroundColor(MisionT2[0], 0x000000FF);
	TextDrawFont(MisionT2[0], 1);
	TextDrawSetProportional(MisionT2[0], 1);
	TextDrawSetShadow(MisionT2[0], 0);

	MisionT2[1] = TextDrawCreate(234.375000, 395.916717, "_Esperando a los integrantes");
	TextDrawLetterSize(MisionT2[1], 0.371874, 1.214998);
	TextDrawTextSize(MisionT2[1], 421.000000, 0.000000);
	TextDrawAlignment(MisionT2[1], 1);
	TextDrawColor(MisionT2[1], -1);
	TextDrawUseBox(MisionT2[1], 1);
	TextDrawBoxColor(MisionT2[1], 255);
	TextDrawSetShadow(MisionT2[1], 0);
	TextDrawSetOutline(MisionT2[1], 0);
	TextDrawBackgroundColor(MisionT2[1], 255);
	TextDrawFont(MisionT2[1], 1);
	TextDrawSetProportional(MisionT2[1], 1);
	TextDrawSetShadow(MisionT2[1], 0);

	MisionT2[2] = TextDrawCreate(238.125000, 394.750213, "~w~..................");
	TextDrawLetterSize(MisionT2[2], 0.995625, 2.883330);
	TextDrawAlignment(MisionT2[2], 1);
	TextDrawColor(MisionT2[2], -1);
	TextDrawSetShadow(MisionT2[2], 0);
	TextDrawSetOutline(MisionT2[2], -2);
	TextDrawBackgroundColor(MisionT2[2], 255);
	TextDrawFont(MisionT2[2], 1);
	TextDrawSetProportional(MisionT2[2], 1);
	TextDrawSetShadow(MisionT2[2], 0);

	MisionT2[3] = TextDrawCreate(236.875000, 411.083221, "box");
	TextDrawLetterSize(MisionT2[3], 0.000000, 0.937500);
	TextDrawTextSize(MisionT2[3], 419.000000, 0.000000);
	TextDrawAlignment(MisionT2[3], 1);
	TextDrawColor(MisionT2[3], -1);
	TextDrawUseBox(MisionT2[3], 1);
	TextDrawBoxColor(MisionT2[3], 255);
	TextDrawSetShadow(MisionT2[3], 0);
	TextDrawSetOutline(MisionT2[3], 0);
	TextDrawBackgroundColor(MisionT2[3], 255);
	TextDrawFont(MisionT2[3], 1);
	TextDrawSetProportional(MisionT2[3], 1);
	TextDrawSetShadow(MisionT2[3], 0);

	MisionT2[4] = TextDrawCreate(456.500000, 0.606612, "~>~ Ladrones: ~r~8~w~ - Guardias: ~b~5~w~ - Mafiosos: ~g~4");
	TextDrawLetterSize(MisionT2[4], 0.238747, 0.999633);
	TextDrawAlignment(MisionT2[4], 1);
	TextDrawColor(MisionT2[4], -1);
	TextDrawSetShadow(MisionT2[4], 0);
	TextDrawSetOutline(MisionT2[4], 1);
	TextDrawBackgroundColor(MisionT2[4], 51);
	TextDrawFont(MisionT2[4], 1);
	TextDrawSetProportional(MisionT2[4], 1);

	MisionT2[5] = TextDrawCreate(155.000000, 388.916595, "l");
	TextDrawLetterSize(MisionT2[5], 37.868110, 2.790832);
	TextDrawAlignment(MisionT2[5], 1);
	TextDrawColor(MisionT2[5], 43);
	TextDrawSetShadow(MisionT2[5], 0);
	TextDrawSetOutline(MisionT2[5], 0);
	TextDrawBackgroundColor(MisionT2[5], 255);
	TextDrawFont(MisionT2[5], 1);
	TextDrawSetProportional(MisionT2[5], 1);
	TextDrawSetShadow(MisionT2[5], 0);

	MisionT2[6] = TextDrawCreate(703.500000, 1.500000, "usebox");
	TextDrawLetterSize(MisionT2[6], 0.000000, 0.964443);
	TextDrawTextSize(MisionT2[6], 449.000000, 0.000000);
	TextDrawAlignment(MisionT2[6], 1);
	TextDrawColor(MisionT2[6], 0);
	TextDrawUseBox(MisionT2[6], true);
	TextDrawBoxColor(MisionT2[6], 255);
	TextDrawSetShadow(MisionT2[6], 0);
	TextDrawSetOutline(MisionT2[6], 0);
	TextDrawFont(MisionT2[6], 0);

	MinutoAsalto[0] = TextDrawCreate(303.750000, 414.583404, "00:00");
	TextDrawLetterSize(MinutoAsalto[0], 0.450625, 2.895002);
	TextDrawAlignment(MinutoAsalto[0], 1);
	TextDrawColor(MinutoAsalto[0], -1);
	TextDrawSetShadow(MinutoAsalto[0], 0);
	TextDrawSetOutline(MinutoAsalto[0], 1);
	TextDrawBackgroundColor(MinutoAsalto[0], 255);
	TextDrawFont(MinutoAsalto[0], 2);
	TextDrawSetProportional(MinutoAsalto[0], 1);
	TextDrawSetShadow(MinutoAsalto[0], 0);

	MinutoAsalto[1] = TextDrawCreate(303.750000, 414.583404, "00:00");
	TextDrawLetterSize(MinutoAsalto[1], 0.450625, 2.895002);
	TextDrawAlignment(MinutoAsalto[1], 1);
	TextDrawColor(MinutoAsalto[1], -1);
	TextDrawSetShadow(MinutoAsalto[1], 0);
	TextDrawSetOutline(MinutoAsalto[1], 1);
	TextDrawBackgroundColor(MinutoAsalto[1], 255);
	TextDrawFont(MinutoAsalto[1], 2);
	TextDrawSetProportional(MinutoAsalto[1], 1);
	TextDrawSetShadow(MinutoAsalto[1], 0);

	MinutoAsalto[2] = TextDrawCreate(303.750000, 414.583404, "00:00");
	TextDrawLetterSize(MinutoAsalto[2], 0.450625, 2.895002);
	TextDrawAlignment(MinutoAsalto[2], 1);
	TextDrawColor(MinutoAsalto[2], -1);
	TextDrawSetShadow(MinutoAsalto[2], 0);
	TextDrawSetOutline(MinutoAsalto[2], 1);
	TextDrawBackgroundColor(MinutoAsalto[2], 255);
	TextDrawFont(MinutoAsalto[2], 2);
	TextDrawSetProportional(MinutoAsalto[2], 1);
	TextDrawSetShadow(MinutoAsalto[2], 0);

	EsperarT[0] = TextDrawCreate(-19.375000, -9.500019, "box");
	TextDrawLetterSize(EsperarT[0], 0.000000, 52.812500);
	TextDrawTextSize(EsperarT[0], 643.000000, 0.000000);
	TextDrawAlignment(EsperarT[0], 1);
	TextDrawColor(EsperarT[0], -1);
	TextDrawUseBox(EsperarT[0], 1);
	TextDrawBoxColor(EsperarT[0], 255);
	TextDrawSetShadow(EsperarT[0], 0);
	TextDrawSetOutline(EsperarT[0], 0);
	TextDrawBackgroundColor(EsperarT[0], 255);
	TextDrawFont(EsperarT[0], 1);
	TextDrawSetProportional(EsperarT[0], 1);
	TextDrawSetShadow(EsperarT[0], 0);

	EsperarT[1] = TextDrawCreate(221.250000, 227.333374, "Luego_de_algunos_minutos...");
	TextDrawLetterSize(EsperarT[1], 0.424375, 0.748333);
	TextDrawAlignment(EsperarT[1], 1);
	TextDrawColor(EsperarT[1], -1);
	TextDrawSetShadow(EsperarT[1], 0);
	TextDrawSetOutline(EsperarT[1], 0);
	TextDrawBackgroundColor(EsperarT[1], 255);
	TextDrawFont(EsperarT[1], 3);
	TextDrawSetProportional(EsperarT[1], 1);
	TextDrawSetShadow(EsperarT[1], 0);

	MisionT[0] = TextDrawCreate(645.000000, 1.000000, "_");
	TextDrawLetterSize(MisionT[0], 0.500000, 11.200003);
	TextDrawTextSize(MisionT[0], -4.000000, 3.000000);
	TextDrawAlignment(MisionT[0], 0);
	TextDrawColor(MisionT[0], 0xFFFFFFFF);
	TextDrawUseBox(MisionT[0], 1);
	TextDrawBoxColor(MisionT[0], 0x000000FF);
	TextDrawSetShadow(MisionT[0], 1);
	TextDrawSetOutline(MisionT[0], 0);
	TextDrawBackgroundColor(MisionT[0], 0x000000FF);
	TextDrawFont(MisionT[0], 1);
	TextDrawSetProportional(MisionT[0], 1);
	TextDrawSetSelectable(MisionT[0], 0);

	MisionT[1] = TextDrawCreate(278.125000, 10.333345, "Iniciando_misi�n...");
	TextDrawLetterSize(MisionT[1], 0.309374, 0.870832);
	TextDrawAlignment(MisionT[1], 1);
	TextDrawColor(MisionT[1], 8388863);
	TextDrawSetShadow(MisionT[1], 0);
	TextDrawSetOutline(MisionT[1], 0);
	TextDrawBackgroundColor(MisionT[1], 255);
	TextDrawFont(MisionT[1], 1);
	TextDrawSetProportional(MisionT[1], 1);
	TextDrawSetShadow(MisionT[1], 0);

	MisionT[2] = TextDrawCreate(315.000000, 35.000000, "Asalto al blindado");
	TextDrawLetterSize(MisionT[2], 0.890000, 2.400000);
	TextDrawTextSize(MisionT[2], 1280.000000, 1280.000000);
	TextDrawAlignment(MisionT[2], 2);
	TextDrawColor(MisionT[2], 0xFFFFFFFF);
	TextDrawUseBox(MisionT[2], 0);
	TextDrawBoxColor(MisionT[2], 0x80808080);
	TextDrawSetShadow(MisionT[2], 1);
	TextDrawSetOutline(MisionT[2], 0);
	TextDrawBackgroundColor(MisionT[2], 0x000000FF);
	TextDrawFont(MisionT[2], 0);
	TextDrawSetProportional(MisionT[2], 1);
	TextDrawSetSelectable(MisionT[2], 0);

	MisionT[3] = TextDrawCreate(222.000000, 28.000000, ".");
	TextDrawLetterSize(MisionT[3], 18.750036, 1.000000);
	TextDrawTextSize(MisionT[3], 1280.000000, 1280.000000);
	TextDrawAlignment(MisionT[3], 0);
	TextDrawColor(MisionT[3], 0xFFFFFFFF);
	TextDrawUseBox(MisionT[3], 0);
	TextDrawBoxColor(MisionT[3], 0x80808080);
	TextDrawSetShadow(MisionT[3], 1);
	TextDrawSetOutline(MisionT[3], 0);
	TextDrawBackgroundColor(MisionT[3], 0x000000FF);
	TextDrawFont(MisionT[3], 1);
	TextDrawSetProportional(MisionT[3], 1);
	TextDrawSetSelectable(MisionT[3], 0);

	MisionT[4] = TextDrawCreate(299.000000, 62.000000, "_");
	TextDrawLetterSize(MisionT[4], 0.480000, 1.120000);
	TextDrawTextSize(MisionT[4], 40.000000, 40.000000);
	TextDrawAlignment(MisionT[4], 0);
	TextDrawColor(MisionT[4], 0xE1E1E1FF);
	TextDrawUseBox(MisionT[4], 1);
	TextDrawBoxColor(MisionT[4], 0x000000FF);
	TextDrawSetShadow(MisionT[4], 2);
	TextDrawSetOutline(MisionT[4], 0);
	TextDrawBackgroundColor(MisionT[4], 0x000000FF);
	TextDrawFont(MisionT[4], 5);
	TextDrawSetProportional(MisionT[4], 1);
	TextDrawSetSelectable(MisionT[4], 0);
	TextDrawSetPreviewModel(MisionT[4], 428);
	TextDrawSetPreviewRot(MisionT[4], 0.000000, 0.000000, 0.000000, 0.600000);

	MisionT[5] = TextDrawCreate(-17.500000, 333.500091, "box");
	TextDrawLetterSize(MisionT[5], 0.000000, 13.500000);
	TextDrawTextSize(MisionT[5], 663.000000, 0.000000);
	TextDrawAlignment(MisionT[5], 1);
	TextDrawColor(MisionT[5], -1);
	TextDrawUseBox(MisionT[5], 1);
	TextDrawBoxColor(MisionT[5], 255);
	TextDrawSetShadow(MisionT[5], 0);
	TextDrawSetOutline(MisionT[5], 0);
	TextDrawBackgroundColor(MisionT[5], 255);
	TextDrawFont(MisionT[5], 1);
	TextDrawSetProportional(MisionT[5], 1);
	TextDrawSetShadow(MisionT[5], 0);

	MisionT[6] = TextDrawCreate(320.000000, 350.000000, "~w~Ladrones: ~r~Ana_Lyzz(292)~w~, ~r~Uris_acosta(217)~w~, ~r~Juansito_Montana(174)~w~, ~r~Pier_Blazer(128)~w~, ~r~Sofia_Tores(45)~w~, ~r~Daryl_Mountgree(374)~w~, ~r~Axel_Noguera(398)~w~, ~r~Edward_Montana(470)~w~, ~r~Ignacio_Perini(463)");
	TextDrawLetterSize(MisionT[6], 0.180000, 1.100000);
	TextDrawTextSize(MisionT[6], 1280.000000, 1280.000000);
	TextDrawAlignment(MisionT[6], 2);
	TextDrawColor(MisionT[6], 0xC6C6C4FF);
	TextDrawUseBox(MisionT[6], 0);
	TextDrawBoxColor(MisionT[6], 0x80808080);
	TextDrawSetShadow(MisionT[6], 1);
	TextDrawSetOutline(MisionT[6], 0);
	TextDrawBackgroundColor(MisionT[6], 0x000000FF);
	TextDrawFont(MisionT[6], 1);
	TextDrawSetProportional(MisionT[6], 1);
	TextDrawSetSelectable(MisionT[6], 0);

	MisionT[7] = TextDrawCreate(320.000000, 372.000000, "~w~Guardias: ~b~Gonzalo_Cappello(91)~w~, ~b~Otto_Chavez(136)~w~, ~b~Guzzi_Beltran(299)~w~, ~b~Daniel_Norbit(100)~w~, ~b~Isabel_Cheycov(235)~w~, ~b~Maicol_Woodz(272)");
	TextDrawLetterSize(MisionT[7], 0.180000, 1.100000);
	TextDrawTextSize(MisionT[7], 1280.000000, 1280.000000);
	TextDrawAlignment(MisionT[7], 2);
	TextDrawColor(MisionT[7], 0xC6C6C4FF);
	TextDrawUseBox(MisionT[7], 0);
	TextDrawBoxColor(MisionT[7], 0x80808080);
	TextDrawSetShadow(MisionT[7], 1);
	TextDrawSetOutline(MisionT[7], 0);
	TextDrawBackgroundColor(MisionT[7], 0x000000FF);
	TextDrawFont(MisionT[7], 1);
	TextDrawSetProportional(MisionT[7], 1);
	TextDrawSetSelectable(MisionT[7], 0);

	MisionT[8] = TextDrawCreate(320.000000, 393.000000, "~w~Mafiosos:~g~ Sebastian_Mandela(74)~w~, ~g~Juanqui_Noblecilla(242)~w~, ~g~Frederick_Regnault(183)~w~, ~g~Leo_Vecctorial(400)");
	TextDrawLetterSize(MisionT[8], 0.180000, 1.100000);
	TextDrawTextSize(MisionT[8], 1280.000000, 1280.000000);
	TextDrawAlignment(MisionT[8], 2);
	TextDrawColor(MisionT[8], 0xC6C6C4FF);
	TextDrawUseBox(MisionT[8], 0);
	TextDrawBoxColor(MisionT[8], 0x80808080);
	TextDrawSetShadow(MisionT[8], 1);
	TextDrawSetOutline(MisionT[8], 0);
	TextDrawBackgroundColor(MisionT[8], 0x000000FF);
	TextDrawFont(MisionT[8], 1);
	TextDrawSetProportional(MisionT[8], 1);
	TextDrawSetSelectable(MisionT[8], 0);

	MisionT[9] = TextDrawCreate(222.000000, 54.000000, ".");
	TextDrawLetterSize(MisionT[9], 18.750036, 1.000000);
	TextDrawTextSize(MisionT[9], 1280.000000, 1280.000000);
	TextDrawAlignment(MisionT[9], 0);
	TextDrawColor(MisionT[9], 0xFFFFFFFF);
	TextDrawUseBox(MisionT[9], 0);
	TextDrawBoxColor(MisionT[9], 0x80808080);
	TextDrawSetShadow(MisionT[9], 1);
	TextDrawSetOutline(MisionT[9], 0);
	TextDrawBackgroundColor(MisionT[9], 0x000000FF);
	TextDrawFont(MisionT[9], 1);
	TextDrawSetProportional(MisionT[9], 1);
	TextDrawSetSelectable(MisionT[9], 0);

	RefuerzosT[0] = TextDrawCreate(263.125000, 346.333312, "box");
	TextDrawLetterSize(RefuerzosT[0], 0.000000, 1.375000);
	TextDrawTextSize(RefuerzosT[0], 396.000000, 0.000000);
	TextDrawAlignment(RefuerzosT[0], 1);
	TextDrawColor(RefuerzosT[0], -1);
	TextDrawUseBox(RefuerzosT[0], 1);
	TextDrawBoxColor(RefuerzosT[0], 255);
	TextDrawSetShadow(RefuerzosT[0], 0);
	TextDrawSetOutline(RefuerzosT[0], 0);
	TextDrawBackgroundColor(RefuerzosT[0], 255);
	TextDrawFont(RefuerzosT[0], 1);
	TextDrawSetProportional(RefuerzosT[0], 1);
	TextDrawSetShadow(RefuerzosT[0], 0);

	RefuerzosT[1] = TextDrawCreate(262.500000, 340.500061, ".");
	TextDrawLetterSize(RefuerzosT[1], 0.514374, 1.780833);
	TextDrawAlignment(RefuerzosT[1], 1);
	TextDrawColor(RefuerzosT[1], -16776961);
	TextDrawSetShadow(RefuerzosT[1], 0);
	TextDrawSetOutline(RefuerzosT[1], 0);
	TextDrawBackgroundColor(RefuerzosT[1], 255);
	TextDrawFont(RefuerzosT[1], 1);
	TextDrawSetProportional(RefuerzosT[1], 1);
	TextDrawSetShadow(RefuerzosT[1], 0);

	RefuerzosT[2] = TextDrawCreate(268.125000, 345.166900, ")");
	TextDrawLetterSize(RefuerzosT[2], 0.398748, 1.249999);
	TextDrawAlignment(RefuerzosT[2], 1);
	TextDrawColor(RefuerzosT[2], -16776961);
	TextDrawSetShadow(RefuerzosT[2], 0);
	TextDrawSetOutline(RefuerzosT[2], 0);
	TextDrawBackgroundColor(RefuerzosT[2], 255);
	TextDrawFont(RefuerzosT[2], 1);
	TextDrawSetProportional(RefuerzosT[2], 1);
	TextDrawSetShadow(RefuerzosT[2], 0);

	RefuerzosT[3] = TextDrawCreate(272.500000, 341.666839, ")");
	TextDrawLetterSize(RefuerzosT[3], 0.411249, 1.874166);
	TextDrawAlignment(RefuerzosT[3], 1);
	TextDrawColor(RefuerzosT[3], -16776961);
	TextDrawSetShadow(RefuerzosT[3], 0);
	TextDrawSetOutline(RefuerzosT[3], 0);
	TextDrawBackgroundColor(RefuerzosT[3], 255);
	TextDrawFont(RefuerzosT[3], 1);
	TextDrawSetProportional(RefuerzosT[3], 1);
	TextDrawSetShadow(RefuerzosT[3], 0);

	RefuerzosT[4] = TextDrawCreate(281.250000, 346.333374, "Enviando_alertas");
	TextDrawLetterSize(RefuerzosT[4], 0.418750, 1.121665);
	TextDrawAlignment(RefuerzosT[4], 1);
	TextDrawColor(RefuerzosT[4], -1);
	TextDrawSetShadow(RefuerzosT[4], 0);
	TextDrawSetOutline(RefuerzosT[4], 0);
	TextDrawBackgroundColor(RefuerzosT[4], 255);
	TextDrawFont(RefuerzosT[4], 1);
	TextDrawSetProportional(RefuerzosT[4], 1);
	TextDrawSetShadow(RefuerzosT[4], 0);
	
	DMTD2 = TextDrawCreate(437.000000, 430.000000, "www.VortexZone.net - Servidor RP 1");
	TextDrawLetterSize(DMTD2, 0.289999, 1.200000);
	TextDrawTextSize(DMTD2, 1280.000000, 1280.000000);
	TextDrawAlignment(DMTD2, 0);
	TextDrawColor(DMTD2, 0xFFFFFFFF);
	TextDrawUseBox(DMTD2, 0);
	TextDrawBoxColor(DMTD2, 0x80808080);
	TextDrawSetShadow(DMTD2, 1);
	TextDrawSetOutline(DMTD2, 0);
	TextDrawBackgroundColor(DMTD2, 0x000000FF);
	TextDrawFont(DMTD2, 1);
	TextDrawSetProportional(DMTD2, 1);
	TextDrawSetSelectable(DMTD2, 0);
	
	DMTD2 = TextDrawCreate(437.000000, 430.000000, "www.VortexZone.net - Servidor RP 1");
    TextDrawLetterSize(DMTD2, 0.289999, 1.200000);
    TextDrawTextSize(DMTD2, 1280.000000, 1280.000000);
    TextDrawAlignment(DMTD2, 0);
    TextDrawColor(DMTD2, 0xFFFFFFFF);
    TextDrawUseBox(DMTD2, 0);
    TextDrawBoxColor(DMTD2, 0x80808080);
    TextDrawSetShadow(DMTD2, 1);
    TextDrawSetOutline(DMTD2, 0);
    TextDrawBackgroundColor(DMTD2, 0x000000FF);
    TextDrawFont(DMTD2, 1);
    TextDrawSetProportional(DMTD2, 1);
    TextDrawSetSelectable(DMTD2, 0);

	
	/*TDLogin[0] = TextDrawCreate(326.666687, 152.907409, "usebox");
	TextDrawLetterSize(TDLogin[0], 0.000000, 21.806791);
	TextDrawTextSize(TDLogin[0], 192.333328, 0.000000);
	TextDrawAlignment(TDLogin[0], 1);
	TextDrawColor(TDLogin[0], 255);
	TextDrawUseBox(TDLogin[0], true);
	TextDrawBoxColor(TDLogin[0], 16);
	TextDrawSetShadow(TDLogin[0], 0);
	TextDrawSetOutline(TDLogin[0], 0);
	TextDrawBackgroundColor(TDLogin[0], -122);
	TextDrawFont(TDLogin[0], 0);

	TDLogin[1] = TextDrawCreate(480.000000, 152.077774, "usebox");
	TextDrawLetterSize(TDLogin[1], 0.000000, 22.175516);
	TextDrawTextSize(TDLogin[1], 347.333343, 0.000000);
	TextDrawAlignment(TDLogin[1], 1);
	TextDrawColor(TDLogin[1], 133);
	TextDrawUseBox(TDLogin[1], true);
	TextDrawBoxColor(TDLogin[1], 16);
	TextDrawSetShadow(TDLogin[1], 0);
	TextDrawSetOutline(TDLogin[1], 0);
	TextDrawBackgroundColor(TDLogin[1], 133);
	TextDrawFont(TDLogin[1], 0);

	TDLogin[2] = TextDrawCreate(325.333251, 151.407379, "LD_SPAC:white");
	TextDrawLetterSize(TDLogin[2], 0.000000, 0.000000);
	TextDrawTextSize(TDLogin[2], -132.000000, -8.711105);
	TextDrawAlignment(TDLogin[2], 1);
	TextDrawColor(TDLogin[2], -2080311041);
	TextDrawSetShadow(TDLogin[2], 0);
	TextDrawSetOutline(TDLogin[2], 0);
	TextDrawFont(TDLogin[2], 4);

	TDLogin[3] = TextDrawCreate(348.666656, 143.111114, "LD_SPAC:white");
	TextDrawLetterSize(TDLogin[3], 0.000000, 0.000000);
	TextDrawTextSize(TDLogin[3], 129.666656, 7.466659);
	TextDrawAlignment(TDLogin[3], 1);
	TextDrawColor(TDLogin[3], -2080311041);
	TextDrawSetShadow(TDLogin[3], 0);
	TextDrawSetOutline(TDLogin[3], 0);
	TextDrawFont(TDLogin[3], 4);

	TDLogin[4] = TextDrawCreate(314.999969, 262.577758, "LD_SPAC:white");
	TextDrawLetterSize(TDLogin[4], 0.000000, 0.000000);
	TextDrawTextSize(TDLogin[4], -110.000000, -34.014831);
	TextDrawAlignment(TDLogin[4], 1);
	TextDrawColor(TDLogin[4], -2080311041);
	TextDrawSetShadow(TDLogin[4], 0);
	TextDrawSetOutline(TDLogin[4], 0);
	TextDrawBackgroundColor(TDLogin[4], -2080311041);
	TextDrawFont(TDLogin[4], 4);

	TDLogin[5] = TextDrawCreate(206.333343, 236.029602, "Continuar");
	TextDrawLetterSize(TDLogin[5], 0.374999, 1.940147);
	TextDrawAlignment(TDLogin[5], 1);
	TextDrawColor(TDLogin[5], -1);
	TextDrawSetShadow(TDLogin[5], 0);
	TextDrawSetOutline(TDLogin[5], 1);
	TextDrawBackgroundColor(TDLogin[5], 51);
	TextDrawFont(TDLogin[5], 2);
	TextDrawSetProportional(TDLogin[5], 1);
	TextDrawSetSelectable(TDLogin[5], true);

	TDLogin[6] = TextDrawCreate(412.000091, 269.214813, "www."WebName"");
	TextDrawLetterSize(TDLogin[6], 0.273999, 1.612440);
	TextDrawAlignment(TDLogin[6], 2);
	TextDrawColor(TDLogin[6], -1);
	TextDrawSetShadow(TDLogin[6], 0);
	TextDrawSetOutline(TDLogin[6], 1);
	TextDrawBackgroundColor(TDLogin[6], 51);
	TextDrawFont(TDLogin[6], 3);
	TextDrawSetProportional(TDLogin[6], 1);

	TDLogin[7] = TextDrawCreate(294.333282, 232.296234, "hud:skipicon");
	TextDrawLetterSize(TDLogin[7], -0.005000, 0.302814);
	TextDrawTextSize(TDLogin[7], 26.333332, 31.940750);
	TextDrawAlignment(TDLogin[7], 1);
	TextDrawColor(TDLogin[7], -1);
	TextDrawSetShadow(TDLogin[7], 0);
	TextDrawSetOutline(TDLogin[7], 0);
	TextDrawFont(TDLogin[7], 4);

	TDLogin[8] = TextDrawCreate(215.666580, 182.933349, "BIENVENIDO");
	TextDrawLetterSize(TDLogin[8], 0.449999, 1.600000);
	TextDrawAlignment(TDLogin[8], 1);
	TextDrawColor(TDLogin[8], -1);
	TextDrawSetShadow(TDLogin[8], 0);
	TextDrawSetOutline(TDLogin[8], 1);
	TextDrawBackgroundColor(TDLogin[8], 51);
	TextDrawFont(TDLogin[8], 1);
	TextDrawSetProportional(TDLogin[8], 1);

	TDLogin[9] = TextDrawCreate(389.666809, 227.733306, "W~w~Z");
	TextDrawLetterSize(TDLogin[9], 0.899333, 4.545176);
	TextDrawAlignment(TDLogin[9], 1);
	TextDrawColor(TDLogin[9], 1593890303);
	TextDrawSetShadow(TDLogin[9], 0);
	TextDrawSetOutline(TDLogin[9], 1);
	TextDrawBackgroundColor(TDLogin[9], 51);
	TextDrawFont(TDLogin[9], 3);
	TextDrawSetProportional(TDLogin[9], 1);

	TDLogin[10] = TextDrawCreate(429.999725, 221.925827, "]");
	TextDrawLetterSize(TDLogin[10], 0.574666, 2.313482);
	TextDrawAlignment(TDLogin[10], 1);
	TextDrawColor(TDLogin[10], -1);
	TextDrawSetShadow(TDLogin[10], 0);
	TextDrawSetOutline(TDLogin[10], 1);
	TextDrawBackgroundColor(TDLogin[10], 51);
	TextDrawFont(TDLogin[10], 0);
	TextDrawSetProportional(TDLogin[10], 1);*/
	
	

	MapaLateral[0] = TextDrawCreate(630.000000, 14.000000, "_");
	TextDrawLetterSize(MapaLateral[0], 0.539999, 31.200006);
	TextDrawTextSize(MapaLateral[0], 354.000000, 0.000000);
	TextDrawAlignment(MapaLateral[0], 0);
	TextDrawColor(MapaLateral[0], 0xFFFFFFFF);
	TextDrawUseBox(MapaLateral[0], 1);
	TextDrawBoxColor(MapaLateral[0], 0x000000FF);
	TextDrawSetShadow(MapaLateral[0], 1);
	TextDrawSetOutline(MapaLateral[0], 0);
	TextDrawBackgroundColor(MapaLateral[0], 0x000000FF);
	TextDrawFont(MapaLateral[0], 1);
	TextDrawSetProportional(MapaLateral[0], 1);
	TextDrawSetSelectable(MapaLateral[0], 0);

	MapaLateral[1] = TextDrawCreate(364.000000, 30.000000, "samaps:map");
	TextDrawLetterSize(MapaLateral[1], 0.500000, 1.000000);
	TextDrawTextSize(MapaLateral[1], 256.000000, 256.000000);
	TextDrawAlignment(MapaLateral[1], 0);
	TextDrawColor(MapaLateral[1], 0xE1E1E1FF);
	TextDrawUseBox(MapaLateral[1], 1);
	TextDrawBoxColor(MapaLateral[1], 0x000000FF);
	TextDrawSetShadow(MapaLateral[1], 1);
	TextDrawSetOutline(MapaLateral[1], 0);
	TextDrawBackgroundColor(MapaLateral[1], 0x000000FF);
	TextDrawFont(MapaLateral[1], 4);
	TextDrawSetProportional(MapaLateral[1], 1);
	TextDrawSetSelectable(MapaLateral[1], 0);

	MapaLateral[2] = TextDrawCreate(359.000000, 13.000000, "GPS");
	TextDrawLetterSize(MapaLateral[2], 0.400000, 1.600000);
	TextDrawTextSize(MapaLateral[2], 1280.000000, 1280.000000);
	TextDrawAlignment(MapaLateral[2], 0);
	TextDrawColor(MapaLateral[2], 0xFFFFFFFF);
	TextDrawUseBox(MapaLateral[2], 0);
	TextDrawBoxColor(MapaLateral[2], 0x80808080);
	TextDrawSetShadow(MapaLateral[2], 1);
	TextDrawSetOutline(MapaLateral[2], 0);
	TextDrawBackgroundColor(MapaLateral[2], 0x000000FF);
	TextDrawFont(MapaLateral[2], 2);
	TextDrawSetProportional(MapaLateral[2], 1);
	TextDrawSetSelectable(MapaLateral[2], 0);

	MapaLateral[3] = TextDrawCreate(550.000000, 19.500000, "~w~Usa ~b~~y~/ocultar gps~w~ para cerrar");
	TextDrawLetterSize(MapaLateral[3], 0.150000, 0.450000);
	TextDrawTextSize(MapaLateral[3], 1280.000000, 1280.000000);
	TextDrawAlignment(MapaLateral[3], 2);
	TextDrawColor(MapaLateral[3], 0xFFFFFFBF);
	TextDrawUseBox(MapaLateral[3], 0);
	TextDrawBoxColor(MapaLateral[3], 0x80808080);
	TextDrawSetShadow(MapaLateral[3], 1);
	TextDrawSetOutline(MapaLateral[3], 0);
	TextDrawBackgroundColor(MapaLateral[3], 0x000000FF);
	TextDrawFont(MapaLateral[3], 2);
	TextDrawSetProportional(MapaLateral[3], 1);
	TextDrawSetSelectable(MapaLateral[3], 0);

	MapaLateral[4] = TextDrawCreate(359.000000, 13.000000, "PANTALLA");
	TextDrawLetterSize(MapaLateral[4], 0.400000, 1.600000);
	TextDrawTextSize(MapaLateral[4], 1280.000000, 1280.000000);
	TextDrawAlignment(MapaLateral[4], 0);
	TextDrawColor(MapaLateral[4], 0xFFFFFFFF);
	TextDrawUseBox(MapaLateral[4], 0);
	TextDrawBoxColor(MapaLateral[4], 0x80808080);
	TextDrawSetShadow(MapaLateral[4], 1);
	TextDrawSetOutline(MapaLateral[4], 0);
	TextDrawBackgroundColor(MapaLateral[4], 0x000000FF);
	TextDrawFont(MapaLateral[4], 2);
	TextDrawSetProportional(MapaLateral[4], 1);
	TextDrawSetSelectable(MapaLateral[4], 0);

	MapaLateral[5] = TextDrawCreate(540.000000, 16.000000, "~w~Usa ~b~~y~/ocultar pantalla~w~ para cerrar");
	TextDrawLetterSize(MapaLateral[5], 0.180000, 1.100000);
	TextDrawTextSize(MapaLateral[5], 1280.000000, 1280.000000);
	TextDrawAlignment(MapaLateral[5], 2);
	TextDrawColor(MapaLateral[5], 0xFFFFFFBF);
	TextDrawUseBox(MapaLateral[5], 0);
	TextDrawBoxColor(MapaLateral[5], 0x80808080);
	TextDrawSetShadow(MapaLateral[5], 1);
	TextDrawSetOutline(MapaLateral[5], 0);
	TextDrawBackgroundColor(MapaLateral[5], 0x000000FF);
	TextDrawFont(MapaLateral[5], 2);
	TextDrawSetProportional(MapaLateral[5], 1);
	TextDrawSetSelectable(MapaLateral[5], 0);
	
	CarreraT[0] = TextDrawCreate(138.875000, 339.833465, "usebox");
	TextDrawLetterSize(CarreraT[0], 0.000000, 9.340736);
	TextDrawTextSize(CarreraT[0], 36.125000, 0.000000);
	TextDrawAlignment(CarreraT[0], 1);
	TextDrawColor(CarreraT[0], 0);
	TextDrawUseBox(CarreraT[0], true);
	TextDrawBoxColor(CarreraT[0], -1);
	TextDrawSetShadow(CarreraT[0], 0);
	TextDrawSetOutline(CarreraT[0], 0);
	TextDrawFont(CarreraT[0], 0);

	CarreraT[1] = TextDrawCreate(137.000000, 341.583312, "usebox");
	TextDrawLetterSize(CarreraT[1], 0.000000, 8.951854);
	TextDrawTextSize(CarreraT[1], 37.375000, 0.000000);
	TextDrawAlignment(CarreraT[1], 1);
	TextDrawColor(CarreraT[1], 0);
	TextDrawUseBox(CarreraT[1], true);
	TextDrawBoxColor(CarreraT[1], 255);
	TextDrawSetShadow(CarreraT[1], 0);
	TextDrawSetOutline(CarreraT[1], 0);
	TextDrawFont(CarreraT[1], 0);

	CarreraT[2] = TextDrawCreate(48.750000, 350.583312, "-");
	TextDrawLetterSize(CarreraT[2], 5.385008, 0.789165);
	TextDrawAlignment(CarreraT[2], 1);
	TextDrawColor(CarreraT[2], -1);
	TextDrawSetShadow(CarreraT[2], -3);
	TextDrawSetOutline(CarreraT[2], 0);
	TextDrawBackgroundColor(CarreraT[2], 51);
	TextDrawFont(CarreraT[2], 2);
	TextDrawSetProportional(CarreraT[2], 1);

	CarreraT[4] = TextDrawCreate(49.375000, 358.750152, "POSICION");
	TextDrawLetterSize(CarreraT[4], 0.381249, 1.308333);
	TextDrawAlignment(CarreraT[4], 1);
	TextDrawColor(CarreraT[4], -1);
	TextDrawSetShadow(CarreraT[4], 0);
	TextDrawSetOutline(CarreraT[4], 1);
	TextDrawBackgroundColor(CarreraT[4], 51);
	TextDrawFont(CarreraT[4], 2);
	TextDrawSetProportional(CarreraT[4], 1);

	CarreraT[6] = TextDrawCreate(46.875000, 409.500061, "-");
	TextDrawLetterSize(CarreraT[6], 5.718753, -0.995832);
	TextDrawAlignment(CarreraT[6], 1);
	TextDrawColor(CarreraT[6], -1);
	TextDrawSetShadow(CarreraT[6], 0);
	TextDrawSetOutline(CarreraT[6], 1);
	TextDrawBackgroundColor(CarreraT[6], 51);
	TextDrawFont(CarreraT[6], 2);
	TextDrawSetProportional(CarreraT[6], 1);

	Sangre = TextDrawCreate(430.000000, 100.000000, "particle:bloodpool_64");
	TextDrawLetterSize(Sangre, 0.480000, 1.120000);
	TextDrawTextSize(Sangre, 160.000000, 200.000000);
	TextDrawAlignment(Sangre, 0);
	TextDrawColor(Sangre, 0xE1E1E1FF);
	TextDrawUseBox(Sangre, 0);
	TextDrawBoxColor(Sangre, 0x80808080);
	TextDrawSetShadow(Sangre, 2);
	TextDrawSetOutline(Sangre, 0);
	TextDrawBackgroundColor(Sangre, 0x000000FF);
	TextDrawFont(Sangre, 4);
	TextDrawSetProportional(Sangre, 1);
	TextDrawSetSelectable(Sangre, 0);

	Sangre2 = TextDrawCreate(430.000000, 100.000000, "particle:bloodpool_64");
	TextDrawLetterSize(Sangre2, 0.480000, 1.120000);
	TextDrawTextSize(Sangre2, 160.000000, 200.000000);
	TextDrawAlignment(Sangre2, 0);
	TextDrawColor(Sangre2, 0x02FB00FF);
	TextDrawUseBox(Sangre2, 0);
	TextDrawBoxColor(Sangre2, 0x80808080);
	TextDrawSetShadow(Sangre2, 2);
	TextDrawSetOutline(Sangre2, 0);
	TextDrawBackgroundColor(Sangre2, 0x000000FF);
	TextDrawFont(Sangre2, 4);
	TextDrawSetProportional(Sangre2, 1);
	TextDrawSetSelectable(Sangre2, 0);

	Cuadroputi = TextDrawCreate(222.000000, 386.000000, "_");
	TextDrawLetterSize(Cuadroputi, 0.340000, -0.200000);
	TextDrawTextSize(Cuadroputi, 419.000000, 2.000000);
	TextDrawAlignment(Cuadroputi, 0);
	TextDrawColor(Cuadroputi, 0xFFFFFFFF);
	TextDrawUseBox(Cuadroputi, 1);
	TextDrawBoxColor(Cuadroputi, 0xFF00FFFF);
	TextDrawSetShadow(Cuadroputi, 1);
	TextDrawSetOutline(Cuadroputi, 0);
	TextDrawBackgroundColor(Cuadroputi, 0x000000FF);
	TextDrawFont(Cuadroputi, 1);
	TextDrawSetProportional(Cuadroputi, 1);
	TextDrawSetSelectable(Cuadroputi, 0);

	Cuadroputi1 = TextDrawCreate(222.000000, 387.000000, "_");
	TextDrawLetterSize(Cuadroputi1, 0.340000, 2.599999);
	TextDrawTextSize(Cuadroputi1, 419.000000, 2.000000);
	TextDrawAlignment(Cuadroputi1, 0);
	TextDrawColor(Cuadroputi1, 0xFFFFFFFF);
	TextDrawUseBox(Cuadroputi1, 1);
	TextDrawBoxColor(Cuadroputi1, 0x000000FF);
	TextDrawSetShadow(Cuadroputi1, 1);
	TextDrawSetOutline(Cuadroputi1, 0);
	TextDrawBackgroundColor(Cuadroputi1, 0x000000FF);
	TextDrawFont(Cuadroputi1, 1);
	TextDrawSetProportional(Cuadroputi1, 1);
	TextDrawSetSelectable(Cuadroputi1, 0);

	FlechasArribaPuti = TextDrawCreate(317.299988, 401.000000, "~u~");
	TextDrawLetterSize(FlechasArribaPuti, 0.689999, 1.000000);
	TextDrawTextSize(FlechasArribaPuti, 1280.000000, 1280.000000);
	TextDrawAlignment(FlechasArribaPuti, 0);
	TextDrawColor(FlechasArribaPuti, 0xFFFF00FF);
	TextDrawUseBox(FlechasArribaPuti, 0);
	TextDrawBoxColor(FlechasArribaPuti, 0x80808080);
	TextDrawSetShadow(FlechasArribaPuti, 1);
	TextDrawSetOutline(FlechasArribaPuti, 0);
	TextDrawBackgroundColor(FlechasArribaPuti, 0x000000FF);
	TextDrawFont(FlechasArribaPuti, 1);
	TextDrawSetProportional(FlechasArribaPuti, 1);
	TextDrawSetSelectable(FlechasArribaPuti, 0);

	FlechasArribaPuti2 = TextDrawCreate(384.899994, 401.000000, "~u~");
	TextDrawLetterSize(FlechasArribaPuti2, 0.689999, 1.000000);
	TextDrawTextSize(FlechasArribaPuti2, 1280.000000, 1280.000000);
	TextDrawAlignment(FlechasArribaPuti2, 0);
	TextDrawColor(FlechasArribaPuti2, 0xFFFF00FF);
	TextDrawUseBox(FlechasArribaPuti2, 0);
	TextDrawBoxColor(FlechasArribaPuti2, 0x80808080);
	TextDrawSetShadow(FlechasArribaPuti2, 1);
	TextDrawSetOutline(FlechasArribaPuti2, 0);
	TextDrawBackgroundColor(FlechasArribaPuti2, 0x000000FF);
	TextDrawFont(FlechasArribaPuti2, 1);
	TextDrawSetProportional(FlechasArribaPuti2, 1);
	TextDrawSetSelectable(FlechasArribaPuti2, 0);

	PuticlubMedia = TextDrawCreate(305.000000, 411.000000, "Media");
	TextDrawLetterSize(PuticlubMedia, 0.250000, 0.899999);
	TextDrawTextSize(PuticlubMedia, 1280.000000, 1280.000000);
	TextDrawColor(PuticlubMedia, 0xFFFFFFFF);
	TextDrawBoxColor(PuticlubMedia, 0x80808080);
	TextDrawSetShadow(PuticlubMedia, 1);
	TextDrawBackgroundColor(PuticlubMedia, 0x000000FF);
	TextDrawFont(PuticlubMedia, 2);
	TextDrawSetProportional(PuticlubMedia, 1);

	PuticlubAlta = TextDrawCreate(375.000000, 411.000000, "Alta");
	TextDrawLetterSize(PuticlubAlta, 0.250000, 0.899999);
	TextDrawTextSize(PuticlubAlta, 1280.000000, 1280.000000);
	TextDrawColor(PuticlubAlta, 0xFFFFFFFF);
	TextDrawBoxColor(PuticlubAlta, 0x80808080);
	TextDrawSetShadow(PuticlubAlta, 1);
	TextDrawBackgroundColor(PuticlubAlta, 0x000000FF);
	TextDrawFont(PuticlubAlta, 2);
	TextDrawSetProportional(PuticlubAlta, 1);

	BoxMenu = TextDrawCreate(297.000000, 170.000000, "_");
	TextDrawLetterSize(BoxMenu, 0.320000, 21.100000);
	TextDrawTextSize(BoxMenu, 27.000000, 178.000000);
	TextDrawAlignment(BoxMenu, 2);
	TextDrawColor(BoxMenu, 0xFFFFFFFF);
	TextDrawUseBox(BoxMenu, 1);
	TextDrawBoxColor(BoxMenu, 0x000000FF);
	TextDrawSetShadow(BoxMenu, 1);
	TextDrawSetOutline(BoxMenu, 0);
	TextDrawBackgroundColor(BoxMenu, 0x000000FF);
	TextDrawFont(BoxMenu, 1);
	TextDrawSetProportional(BoxMenu, 1);
	TextDrawSetSelectable(BoxMenu, 0);

	TAXIMET = TextDrawCreate(499.000000, 387.000000, "Taximetro");
	TextDrawLetterSize(TAXIMET, 0.340000, 1.000000);
	TextDrawTextSize(TAXIMET, 50.000000, 74.000000);
	TextDrawAlignment(TAXIMET, 2);
	TextDrawColor(TAXIMET, 0xFFFFFFFF);
	TextDrawUseBox(TAXIMET, 1);
	TextDrawBoxColor(TAXIMET, 0x0A0A0AC8);
	TextDrawSetShadow(TAXIMET, 1);
	TextDrawSetOutline(TAXIMET, 0);
	TextDrawBackgroundColor(TAXIMET, 0x00000033);
	TextDrawFont(TAXIMET, 1);
	TextDrawSetProportional(TAXIMET, 1);
	TextDrawSetSelectable(TAXIMET, 0);

	CreateIconsGPS();

	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		TAXIMET2[i] = TextDrawCreate(498.666595, 406.613250, "$0");
		TextDrawLetterSize(TAXIMET2[i], 0.505617, 1.604267);
		TextDrawTextSize(TAXIMET2[i], -1180.188964, 73.813316);
		TextDrawAlignment(TAXIMET2[i], 2);
		TextDrawColor(TAXIMET2[i], -65281);
		TextDrawUseBox(TAXIMET2[i], true);
		TextDrawBoxColor(TAXIMET2[i], 0x0A0A0AC8);
		TextDrawSetShadow(TAXIMET2[i], 0);
		TextDrawSetOutline(TAXIMET2[i], 0);
		TextDrawBackgroundColor(TAXIMET2[i], 51);
		TextDrawFont(TAXIMET2[i], 1);
		TextDrawSetProportional(TAXIMET2[i], 1);

		CarreraT2[i][3] = TextDrawCreate(50.625000, 341.833343, "Vuelta: 0/5");
		TextDrawLetterSize(CarreraT2[i][3], 0.285624, 0.795000);
		TextDrawAlignment(CarreraT2[i][3], 1);
		TextDrawColor(CarreraT2[i][3], -1);
		TextDrawSetShadow(CarreraT2[i][3], 0);
		TextDrawSetOutline(CarreraT2[i][3], 1);
		TextDrawBackgroundColor(CarreraT2[i][3], 51);
		TextDrawFont(CarreraT2[i][3], 2);
		TextDrawSetProportional(CarreraT2[i][3], 1);

		CarreraT2[i][5] = TextDrawCreate(71.250000, 368.666687, "0/0");
		TextDrawLetterSize(CarreraT2[i][5], 0.406249, 3.408334);
		TextDrawAlignment(CarreraT2[i][5], 1);
		TextDrawColor(CarreraT2[i][5], -1);
		TextDrawSetShadow(CarreraT2[i][5], 0);
		TextDrawSetOutline(CarreraT2[i][5], 1);
		TextDrawBackgroundColor(CarreraT2[i][5], 51);
		TextDrawFont(CarreraT2[i][5], 2);
		TextDrawSetProportional(CarreraT2[i][5], 1);

		CarreraT2[i][7] = TextDrawCreate(66.250000, 408.333251, "0:0");
		TextDrawLetterSize(CarreraT2[i][7], 0.531250, 1.250000);
		TextDrawAlignment(CarreraT2[i][7], 1);
		TextDrawColor(CarreraT2[i][7], -1);
		TextDrawSetShadow(CarreraT2[i][7], 0);
		TextDrawSetOutline(CarreraT2[i][7], 2);
		TextDrawBackgroundColor(CarreraT2[i][7], 51);
		TextDrawFont(CarreraT2[i][7], 2);
		TextDrawSetProportional(CarreraT2[i][7], 1);
	}
	return 1;
}

Funcion:Maneja(playerid) Manejando[playerid] = 0;

Funcion:DespuesSlap(playerid)
{
	new Float:health, Float:armour, szMessage[150];
	GetPlayerHealth(IDReporte[playerid], health);
	GetPlayerArmour(IDReporte[playerid], armour);
	format(szMessage, sizeof(szMessage), "(2) %s[%d] = (Vida: %f) - (Chaleco: %f) - (Ping: %d) - (Packets lost: %.2f)", NombreJugador(IDReporte[playerid]), IDReporte[playerid], health, armour, GetPlayerPing(playerid), NetStats_PacketLossPercent(playerid));
	Mensaje(playerid, TEAM_BLUE_COLOR, szMessage);
	IDReporte[playerid] = -1;
	return 1;
}

Funcion:RutaTransportista(playerid)
{
	new vehicleid;
	vehicleid = GetPlayerVehicleID(playerid);
	if(!IsPlayerInAnyVehicle(playerid)) return 1;
	if(DFT(vehicleid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		DescongelarEx(playerid);
		Mensaje(playerid,-1,"Cami�n cargado, ve al punto en el mapa para descargarlo.");
		switch(Viaje[playerid])
		{
		    // Piedras
			case 1:
			{
				objetost[0][playerid] = CreateDynamicObject(758,0,0,0,0,0,0);
				objetost[1][playerid] = CreateDynamicObject(758,0,0,0,0,0,0);
		        AttachDynamicObjectToVehicle(objetost[0][playerid], vehicleid, 0.700000, -0.100000, -0.200000, 0.000000, 0.000000, 0.000000 );
		        AttachDynamicObjectToVehicle(objetost[1][playerid], vehicleid, 0.800000, -3.799998, -0.200000, 0.000000, 0.000000, 0.000000 );
				PuntoTraX[playerid] = 1249.2573; PuntoTraY[playerid] = -1259.2993; PuntoTraZ[playerid] = 13.1868;
			}
			// Sprunks
			case 2:
			{
				objetost[0][playerid] = CreateDynamicObject(955,0,0,0,0,0,0);
				objetost[1][playerid] = CreateDynamicObject(955,0,0,0,0,0,0);
				objetost[2][playerid] = CreateDynamicObject(955,0,0,0,0,0,0);
				AttachDynamicObjectToVehicle(objetost[0][playerid], vehicleid, -0.075000,1.125000,0.000000,0.000000,0.000000,0.000000);
				AttachDynamicObjectToVehicle(objetost[1][playerid], vehicleid, -0.075000,-1.575000,0.000000,-0.000001,0.000000,18.899999);
				AttachDynamicObjectToVehicle(objetost[2][playerid], vehicleid, -0.075000,-4.125001,0.000000,-0.000001,0.000000,-0.000002);
				PuntoTraX[playerid] = 1051.3204; PuntoTraY[playerid] = 2114.5112; PuntoTraZ[playerid] = 10.8203;
			}
			// Troncos
			case 3:
			{
				objetost[0][playerid] = CreateDynamicObject(684,0,0,0,0,0,0);
				objetost[1][playerid] = CreateDynamicObject(684,0,0,0,0,0,0);
				objetost[2][playerid] = CreateDynamicObject(684,0,0,0,0,0,0);
				objetost[3][playerid] = CreateDynamicObject(684,0,0,0,0,0,0);
		  		objetost[4][playerid] = CreateDynamicObject(684,0,0,0,0,0,0);
        		AttachDynamicObjectToVehicle(objetost[0][playerid], vehicleid, -0.900000, -1.600000, 0.100000, 0.000000, 0.000000, 0.000000 );
		        AttachDynamicObjectToVehicle(objetost[1][playerid], vehicleid, -0.100000, -1.600000, 0.100000, 0.000000, 0.000000, 0.000000 );
        		AttachDynamicObjectToVehicle(objetost[2][playerid], vehicleid, 0.700000, -1.600000, 0.000000, 0.000000, 0.000000, 0.000000 );
		        AttachDynamicObjectToVehicle(objetost[3][playerid], vehicleid, -0.600000, -1.600000, 0.700000, 0.000000, 0.000000, 0.000000 );
				AttachDynamicObjectToVehicle(objetost[4][playerid], vehicleid, 0.200000, -1.600000, 0.700000, 0.000000, 0.000000, 0.000000 );
				PuntoTraX[playerid] = -266.4255; PuntoTraY[playerid] = -2158.6018; PuntoTraZ[playerid] = 29.4682;
			}
			case 4:
			{
				objetost[0][playerid] = CreateDynamicObject(3502,0,0,0,0,0,0);
				AttachDynamicObjectToVehicle(objetost[0][playerid], vehicleid, 0.000000,-2.400000,1.350000,0.000000,0.000000,0.000000);
				PuntoTraX[playerid] = -2112.7671; PuntoTraY[playerid] = 208.0987; PuntoTraZ[playerid] = 35.8354;
			}
			case 5:
			{
				objetost[0][playerid] = CreateDynamicObject(2934,0,0,0,0,0,0);
				AttachDynamicObjectToVehicle(objetost[0][playerid], vehicleid, 0.075000,-1.575000,1.200000,0.000000,0.000000,0.000000);
				PuntoTraX[playerid] = -1733.8561; PuntoTraY[playerid] = 183.5594; PuntoTraZ[playerid] = 4.1820;
			}
			case 6:
			{
			    objetost[0][playerid] = CreateDynamicObject(934,0,0,0,0,0,0);
				AttachDynamicObjectToVehicle(objetost[0][playerid], vehicleid, 0.075000,-1.350000,0.974999,0.000000,0.000000,0.000000);
				PuntoTraX[playerid] = 2811.3745; PuntoTraY[playerid] = 1647.1511; PuntoTraZ[playerid] = 11.448;
			}
			case 7:
			{
				objetost[0][playerid] = CreateDynamicObject(3502,0,0,0,0,0,0);
				AttachDynamicObjectToVehicle(objetost[0][playerid], vehicleid, 0.000000,-2.400000,1.350000,0.000000,0.000000,0.000000);
				PuntoTraX[playerid] = 2407.3540; PuntoTraY[playerid] = 1905.3885; PuntoTraZ[playerid] = 6.6388;
			}
			case 8:
			{
                objetost[0][playerid] = CreateDynamicObject(3273,0,0,0,0,0,0);
				AttachDynamicObjectToVehicle(objetost[0][playerid], vehicleid, -0.075000,-0.899999,-0.300000,0.000000,0.000000,0.000000);
				PuntoTraX[playerid] = 784.2197; PuntoTraY[playerid] = 2015.2906; PuntoTraZ[playerid] = 6.6440;
			}
			case 9:
			{
				objetost[0][playerid] = CreateDynamicObject(2785,0,0,0,0,0,0);
				AttachDynamicObjectToVehicle(objetost[0][playerid], vehicleid, 0.000000,-1.275000,0.599999,-0.000001,0.000000,89.099983);
				PuntoTraX[playerid] = 2317.9001; PuntoTraY[playerid] = 1733.5999; PuntoTraZ[playerid] = 11.3988;
			}
			case 10:
			{
				objetost[0][playerid] = CreateDynamicObject(2785,0,0,0,0,0,0);
				AttachDynamicObjectToVehicle(objetost[0][playerid], vehicleid, 0.000000,-1.275000,0.599999,-0.000001,0.000000,89.099983);
				PuntoTraX[playerid] = 1903.3030; PuntoTraY[playerid] = 961.9927; PuntoTraZ[playerid] = 11.4467;
			}
			case 11:
			{
                objetost[0][playerid] = CreateDynamicObject(3585,0,0,0,0,0,0);
				AttachDynamicObjectToVehicle(objetost[0][playerid], vehicleid, 0.000000,-1.800000,1.350000,0.000001,0.000000,90.000000);
				PuntoTraX[playerid] = 2606.3787; PuntoTraY[playerid] = -2199.3674; PuntoTraZ[playerid] = 14.1711;
			}
			case 12:
			{
				objetost[0][playerid] = CreateDynamicObject(1348,0,0,0,0,0,0);
				objetost[1][playerid] = CreateDynamicObject(1348,0,0,0,0,0,0);
				AttachDynamicObjectToVehicle(objetost[0][playerid], vehicleid, 0.524999,-2.100000,0.449999,-0.000001,0.000000,89.099983);
				AttachDynamicObjectToVehicle(objetost[1][playerid], vehicleid, -0.524999,-2.100000,0.449999,-0.000001,0.000000,89.099983);
				PuntoTraX[playerid] = 1612.9545; PuntoTraY[playerid] = 1721.2943; PuntoTraZ[playerid] = 11.4427;
			}
		}
		CrearCheckpoint(playerid,PuntoTraX[playerid],PuntoTraY[playerid],PuntoTraZ[playerid], 5.0);
		tviaje[playerid] = 2;
	}
	return 1;
}

Funcion:QuitarLogro(playerid)
{
	PlayerTextDrawHide(playerid, LogroRueda[playerid]);
	PlayerTextDrawHide(playerid, LogroLinea[playerid]);
	PlayerTextDrawHide(playerid, LogroNumero[playerid]);
	PlayerTextDrawHide(playerid, LogroTitulo[playerid]);
	PlayerTextDrawHide(playerid, LogroTexto1[playerid]);
}

Funcion:StopCell(playerid)
{
	if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USECELLPHONE) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
}

ptask TimerCincoSegundos[5000](playerid)
{
	if(!PlayerTemp[playerid][pt_Congelado] && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) SendClientCheck(playerid, 0x2, 0, 0, 2);
	
	TiempoCincoSegundos(playerid);
	return 1;
	// DAR GASOLINA
 	/*for(new i = 0; i <= GetVehiclePoolSize(); i++)
	{
		VehicleFuel[i] = CombustibleCoche(i);
		EmisoraEscuchando[i] = -1;
	}*/
}

static AntiRC(playerid)
{
	new v = GetPlayerVehicleID(playerid);
	if(!IsValidVehicle(v)) return 1;
	new Float:Vida;
	GetVehicleHealth(v,Vida);
	if(Vida != VehicleVida[v])
	{
		OnVehicleHealthChange(playerid,v,Vida,VehicleVida[v]);
		VehicleVida[v] = Vida;
	}
	return 1;
}

static TiempoCincoSegundos(i)
{
	if(User_Temp[i][pt_PLAYER_EVENTODM] && !IsPlayerInRangeOfPoint(i, 150, 1392.8660,-20.9676,1000.9108)) User_Temp[i][pt_PLAYER_EVENTODM] = false;
	if(Iter_Contains(Admin, i))
	{
		if(PlayerInfo[i][pAdmin] == 0) Iter_Remove(Admin, i);
	}
	else
	{
		if(PlayerInfo[i][pAdmin] > 0) Iter_Add(Admin, i);
	}
	if(CuentaDinero[i] > 0 && PlayerConectado(i)) CuentaDinero[i]--;
	if(PlayerInfo[i][Agonizando] == 1)
	{
		new Float:vida;
		GetPlayerHealth(i, vida);
		EstablecerVida(i,vida - 1);
	}
	
	if(AvisosAuto[i] > 0) AvisosAuto[i]--;
	new surfing = GetPlayerSurfingVehicleID(i);
	if(surfing != INVALID_VEHICLE_ID)
	{
		if(TAXI(surfing))
		{
			if(GetVehicleSpeed(surfing) >= 23)
			{
				new x = 0;
				if(x == 0)
				{
					x = 1;
					GetPlayerPos(i, PlayerTemp[i][CaidaTaxi][0],PlayerTemp[i][CaidaTaxi][1],PlayerTemp[i][CaidaTaxi][2]);
					Equilibrio(i);
				}
			}
		}
	}
}

Funcion:Encerrando2(playerid)
{
	if(JugadorLogeado[playerid] != 1) return 1;
	if(PlayerInfo[playerid][pCargos] != 0)
	{
		new Tiempo = ((PlayerInfo[playerid][pCargos] - 1) * 2);
		if(PlayerInfo[playerid][pCargos] > 3 && PlayerInfo[playerid][VIP] == 3) Tiempo = ((PlayerInfo[playerid][pCargos] - 2) * 2);
		PlayerInfo[playerid][pTiempoCarcel] = (Tiempo * 60);
		if(PlayerInfo[playerid][VIP] == 3) TiempoFianza[playerid] = gettimeVariable + 180;
		else TiempoFianza[playerid] = gettimeVariable + 300;
	    PlayerInfo[playerid][pTipoCarcel] = 1;
		PlayerInfo[playerid][arrestado] ++;
		PlayerTemp[playerid][CargosRobo] = 0;
		va_SendClientMessage(playerid, -1,"{FF3300}Fuiste detenido"CB", tendr�s que cumplir una condena de "CR"%d minutos "CB"para ser liberado.", Tiempo);
	    for(new i = 0; i < MAX_PCASAS; i++)
	    {
        	if(PlayerInfo[playerid][CasaID][i] > 0)
			{
				Mensaje(playerid, -1, "Puedes pagar para cumplir tu condena en prisi�n "CR"/domiciliaria");
				break;
			}
		}
		Mensaje(playerid, -1, "Para ver cuanto tiempo te falta para cumplir la condena, usa "CR"/tiempo");
        Mensaje(playerid, -1, "Puedes pagar tu fianza para salir de prisi�n "CR"/pagar fianza");
		Mensaje(playerid, -1, "La polic�a les quita a los detenidos, sus armas y drogas.");
		DescongelarEx(playerid);
		DarEstrella(playerid, 0);
		SetPlayerColor(playerid, COLORCARGO0);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		QuitarArmas(playerid, 1);
		Jail[playerid] = 1;
		SetPosEx(playerid, 227.3367,109.3470,999.0156,0,10,1);
	}
	return 1;
}

Funcion:Encerrando(playerid,policia)
{
	if(JugadorLogeado[playerid] != 1) return 1;
	new vw = GetPlayerVirtualWorld(playerid),string[200];
	if(policia != -1)
	{
	    format(string,sizeof(string),"%s encierra a %s en la celda.",NombreJugador(policia),NombreJugador(playerid));
    	ProxDetector(20.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
	}
	if(PlayerInfo[playerid][VIP] == 3) TiempoFianza[playerid] = gettimeVariable + 180;
	else TiempoFianza[playerid] = gettimeVariable + 300;
	BajandoV[playerid] = 1;
	new Tiempo = ((PlayerInfo[playerid][pCargos] - 1) * 2);
	if(PlayerInfo[playerid][pCargos] > 3 && PlayerInfo[playerid][VIP] == 3) Tiempo = ((PlayerInfo[playerid][pCargos] - 2) * 2);
	PlayerInfo[playerid][pTiempoCarcel] = (Tiempo * 60);
	PlayerInfo[playerid][arrestado]++;
	format(string,sizeof(string),"{FF3300}Fuiste detenido"CB", tendr�s que cumplir una condena de "CR"%d minutos "CB"para ser liberado.",Tiempo);
	Mensaje(playerid, -1, string);
	Mensaje(playerid,-1, "La sentecia puede ser reducida si consigues un abogado.");
 	for(new i = 0; i < MAX_PCASAS; i++)
 	{
       	if(PlayerInfo[playerid][CasaID][i] > 0)
		{
			Mensaje(playerid, -1, "Puedes pagar para cumplir tu condena en prisi�n "CR"/domiciliaria");
			break;
		}
	}
 	Mensaje(playerid, -1, "Puedes pagar tu fianza para salir de prisi�n "CR"/pagar fianza");
	Mensaje(playerid, -1, "Para ver cuanto tiempo te falta para cumplir la condena, usa "CR"/tiempo");
	Mensaje(playerid, -1, "La polic�a les quita a los detenidos, sus armas y drogas.");
    DescongelarEx(playerid);
	DarEstrella(playerid, 0);
	SetPlayerColor(playerid, COLORCARGO0);
	Jail[playerid] = 1;
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	QuitarArmas(playerid, 1);
	VariableCaido[playerid] = 0;
	EnPatrulla[playerid] = 0;
	Esposando[playerid] = 0;
	new celda = random(4);
	if(EstaEn(playerid,15.0,1564.5568,-1694.7732,5.8906) || EstaEn(playerid,7.0,240.4520,112.8195,1003.2188) && vw == 1)
	{
 		PlayerInfo[playerid][pTipoCarcel] = 1;
		if(celda == 0) SetPosEx(playerid, 227.3367,109.3470,999.0156, 0, 10, 1);
		else if(celda == 1) SetPosEx(playerid, 223.0108,109.8135,999.0156, 0, 10, 1);
		else if(celda == 2) SetPosEx(playerid, 219.0009,110.3388,999.0156, 0, 10, 1);
		else if(celda == 3) SetPosEx(playerid, 215.2188,109.1792,999.0156, 0, 10, 1);
	}
	else if(EstaEn(playerid,15.0,-1589.5292,716.2191,-5.6688) || EstaEn(playerid,15.0,-1679.5967,705.8658,30.7528) || EstaEn(playerid,7.0,240.4520,112.8195,1003.2188) && vw == 5)
	{
 		PlayerInfo[playerid][pTipoCarcel] = 2;
		if(celda == 0) SetPosEx(playerid, 227.3367,109.3470,999.0156, 0, 10 ,5);
		else if(celda == 1) SetPosEx(playerid, 223.0108,109.8135,999.0156, 0, 10 ,5);
		else if(celda == 2) SetPosEx(playerid, 219.0009,110.3388,999.0156, 0, 10 ,5);
		else if(celda == 3) SetPosEx(playerid, 215.2188,109.1792,999.0156, 0, 10 ,5);
	}
	else if(EstaEn(playerid,15.0,2281.4912,2429.3406,3.2734) || EstaEn(playerid,7.0,233.3752,158.7853,1003.0234))
	{
		PlayerInfo[playerid][pTipoCarcel] = 3;
		if(celda == 0) SetPosEx(playerid, 197.6199, 174.8677, 1002.6390, 0, 3, 7);
		else if(celda == 1) SetPosEx(playerid, 193.5631, 174.8843, 1002.6390, 0, 3, 7);
		else if(celda == 2) SetPosEx(playerid, 194.5337, 163.1250, 1002.6390, 0, 3, 7);
		else if(celda == 3) SetPosEx(playerid, 198.6272, 162.4750, 1002.6390, 0, 3, 7);
	}
	else if(EstaEn(playerid,15.0,688.2739,-491.1295,0.0544))
	{
	    PlayerInfo[playerid][pTipoCarcel] = 4;
		new rand;
		StatusFC[playerid] = 0;
		rand = random(sizeof(FortCarsonSpawn));
		SetPosEx(playerid, FortCarsonSpawn[rand][0], FortCarsonSpawn[rand][1], FortCarsonSpawn[rand][2], 0, 15, 15);
	}
	return 1;
}

Funcion:SetPlayerStats(playerid)
{
	if(PlayerInfo[playerid][pAdmin] >= ADMIN_LVL_GLOBAL2)
	{
        SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 999);
 		SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 999);
		return 1;
	}
	else
	{
		new level = PlayerInfo[playerid][jNivel];
		if(level <= 2)
		{
			SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 0);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 0);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 0);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 0);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 0);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 0);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 0);
 			SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 0);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 0);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 0);
		}
		if(level == 3)
		{
			SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 999);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 999);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 999);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 999);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 999);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 999);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 999);
	 		SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 999);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 999);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 0);
		}
		if(level >= 4)
		{
			SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 999);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 999);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 999);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 999);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 999);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 999);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 999);
 			SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 999);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 999);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 999);
		}
	}
	return 1;
}

Funcion:DarDineroLogin(playerid) GivePlayerMoney(playerid,PlayerInfo[playerid][jDinero]);

Funcion:Logeado(playerid)
{

	#if defined ChatDeVoz
	// Checking for plugin availability
    if (!SvGetVersion(playerid)) SendClientMessage(playerid, -1, "No tienes chat de voz");
	else if (!SvHasMicro(playerid)) SendClientMessage(playerid, -1, "No tienes micr�fono");
	else if (lstream[playerid] = SvCreateDLStreamAtPlayer(40.0, SV_INFINITY, playerid, 0xff0000ff, "L")) { // red color
		SendClientMessage(playerid, -1, "Chat de voz detectado");
		if (gstream) SvAttachListenerToStream(gstream, playerid);
		SvAddKey(playerid, 0x42);
		SvAddKey(playerid, 0x5A);
	}
	#endif

	ShowTDN(playerid, "~p~Nos alegra ~w~verte en el servidor.");
	ObtenerProxy(playerid);
	if(PlayerInfo[playerid][pAdmin] > 0)
	{
		MensajeDiscord(NombreJugador(playerid),"Ha entrado en servicio administrativo", WEBHOOK_ACTIVIDAD_STAFF);
	}
	if(PlayerInfo[playerid][pDuty] > 0)
	{
		MensajeDiscord(NombreJugador(playerid), "Entra en 10-08 desde la comisaria mas cercana", WEBHOOK_ACTIVIDAD_SAPD);
	}
	if(Jail[playerid] == 1)
	{
		if(PlayerInfo[playerid][pTipoCarcel] == 1) SetPosEx(playerid, 227.3367,109.3470,999.0156,0,10,1);
		if(PlayerInfo[playerid][pTipoCarcel] == 2) SetPosEx(playerid, 227.3367,109.3470,999.0156,0,10,5);
		if(PlayerInfo[playerid][pTipoCarcel] == 3) SetPosEx(playerid, 197.6199,174.8677,1002.6390,0,3,7);
		if(PlayerInfo[playerid][pTipoCarcel] == 4) SetPosEx(playerid, 172.0682,1438.3047,1084.8462,0,15,15),StatusFC[playerid] = 0;
		if(PlayerInfo[playerid][pTipoCarcel] == 5) SetPosEx(playerid, 227.3367,109.3470,999.0156, 0, 10, 1),PlayerInfo[playerid][pTipoCarcel] = 1;
		if(PlayerInfo[playerid][VIP] == 3) TiempoFianza[playerid] = gettimeVariable + 180;
		else TiempoFianza[playerid] = gettimeVariable + 300;
	}
	for(new i = 0; i < sizeof ZonasSeguras; i ++)
	{
		GangZoneShowForPlayer(playerid, GangzoneSeguras[i], 0x00FF0066);
	}
	TiempoMoney[playerid] = gettimeVariable + 300;
	SetTimerEx("DesbugArea", 2000, false, "i", playerid);
	TerminarOferta(playerid);
	DarDineroLogin(playerid);
	PrimerSpawn[playerid] = 1;
	new query[90];
	if(PlayerInfo[playerid][jMiembro] > 2)
	{
		if(PlayerInfo[playerid][pRango] == 8)
		{
			if(!strcmp(BandasInfo[PlayerInfo[playerid][jMiembro]][BColor],"29c285", true)) MostrarDialog(playerid, D_COLOR1, DIALOG_STYLE_MSGBOX, "Informacion sobre los territorios:", ""CB"Debido al nuevo sistema de territorios deber�s asigarle un color a tu banda\nel color que asignes ser� el color que tendra los territorios que domines.", "Siguiente", "");
		}
		new color;
		sscanf(BandasInfo[PlayerInfo[playerid][jMiembro]][BColor],"x",color);
		MarcarJugador(playerid,((color << 8) | 0x00) & ~0x00,PlayerInfo[playerid][jMiembro]);
	}
	mysql_format(Conecction, query, sizeof(query), "UPDATE `usuarios` SET `Online`='1' WHERE `ID`='%d' LIMIT 1", PlayerInfo[playerid][p_DBID]);
	mysql_tquery(Conecction, query);
}

Funcion:ResetVariableValues(playerid) return vehicleData[CarTroll[playerid][playerStateVehicle]][broadVehicleOwner] = INVALID_PLAYER_ID;

Funcion:DelayPlayerState(playerid)
{
	KillTimer(CarTroll[playerid][playerStateTimer]);
	if(CarTroll[playerid][playerFalseDetection]) CarTroll[playerid][playerFalseDetection] = false;
	return 1;
}

Funcion:DesbugArea(playerid)
{
	if(GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) > 0) SetPlayerVirtualWorld(playerid, 0);
	if(IsPlayerInArea(playerid, 343.8192,349.8995,300.8353,310.3105) && GetPlayerInterior(playerid) == 6 && PlayerInfo[playerid][pTiempoJail] <= 0) SetPosEx(playerid,1443.8561,-1663.9950,13.5530,91.1813,0,0); //SANCION
	if(IsPlayerInArea(playerid, 213.9751,229.0560,107.4413,112.0870) && GetPlayerInterior(playerid) == 10 && PlayerInfo[playerid][pTiempoCarcel] <= 0) SetPosEx(playerid,216.4100,120.2400,999.0156,0.0000,10,1); //LSPD - SFPD
	if(IsPlayerInDynamicArea(playerid,ZonaFC) && GetPlayerInterior(playerid) == 15 && PlayerInfo[playerid][pTiempoCarcel] <= 0) SetPosEx(playerid, 294.7386,1419.3837,9.9930,263.0111,0,0); //FC
	return 1;
}

public OnPlayerConnect(playerid)
{
	
	AvisosSpeed[playerid] = 0;
	CheatSpeedDetectado[playerid] = false;
	PlayerAvisos[playerid] = 0;
	NecesitaCodigo[playerid] = false;
	UltimoDialogID[playerid] = -1;
    #if DEBUG_GM == 1
    printf("(OnPlayerConnect) PlayerID: %d", playerid);
    #endif
	LimpiarCuenta(playerid);
	if(!IsPlayerNPC(playerid)) TimerLogeo[playerid] = SetTimerEx("CheckLogeo", 1000, 1, "d", playerid);
	TimerTP[playerid] = gettimeVariable+10;
	if(IsPlayerNPC(playerid))
	{
		//if(strcmp(PlayerInfo[playerid][IP], "149.56.254.76")) BanEx(playerid, "Fake NPC"); //Host
		//if(strcmp(PlayerInfo[playerid][IP], "127.0.0.1")) BanEx(playerid, "Fake NPC"); //Local
		//else return 1;
		return 1;
	}
	g_MysqlRaceCheck[playerid]++;
    //EnablePlayerCameraTarget(playerid, 1);
    GetPlayerIp(playerid, PlayerInfo[playerid][IP], 32);
	
	LoginTimer[playerid] = SetTimerEx("TimerLogin",200000,false,"d",playerid);
	LimpiarChat(playerid, 20, 1);
	format(PlayerInfo[playerid][NombreTemporal], MAX_PLAYER_NAME+1, "%s", NombreJugador(playerid));
	if(!NameCheck(NombreJugador(playerid)) && !EsFundador(playerid,true))
    {
		va_SendClientMessage(playerid,-1,"%s",NombreJugador(playerid));
		MostrarDialog(playerid, DIALOG_INFO, DIALOG_STYLE_MSGBOX, "Nombre inv�lido", ""CR"Departamento de inmigraci�n:"CB" Tu nombre no es aceptable.\n"CR"Formato para el nombre:"CB" Nombre_Apellido\nPor favor, vuelve con un nombre v�lido.","Aceptar","");
        new pPing = GetPlayerPing(playerid) + 150;
        SetTimerEx("KickTimer", (pPing > 500 ? 500 : pPing), false, "i", playerid);
   	    return 1;
    }
    else {

		new Query[100];
		mysql_format(Conecction, Query, sizeof(Query), "SELECT * FROM banips WHERE IP = INET_ATON('%e') LIMIT 1", PlayerInfo[playerid][IP]);
		mysql_pquery(Conecction, Query, "OnBanIPLoaded", "dd", playerid, g_MysqlRaceCheck[playerid]);
    }
	
	return 1;
}


Funcion:OnBanIPLoaded(playerid, race_check)
{
	if (race_check != g_MysqlRaceCheck[playerid]) return ExpulsarJugador(playerid, "Error, reloguea.");

	if(cache_num_rows() == 0)
	{
		new Query[100];
		mysql_format(Conecction, Query, sizeof(Query), "SELECT * FROM bangpci WHERE GPCI = '%e' LIMIT 1", ReturnCI(playerid));
		mysql_pquery(Conecction, Query, "OnBanGPCILoaded", "dd", playerid, g_MysqlRaceCheck[playerid]);
		return 1;
	}
	else
	{
		SendClientMessage(playerid, COLOR_MUTE, "Su IP se encuentra baneada.");
		new pPing = GetPlayerPing(playerid) + 150;
		SetTimerEx("KickTimer", (pPing > 500 ? 500 : pPing), false, "i", playerid);
		return 1;
	}
}

Funcion:OnBanGPCILoaded(playerid, race_check)
{
	if(race_check != g_MysqlRaceCheck[playerid]) return ExpulsarJugador(playerid, "Error, reloguea.");
	if(cache_num_rows() == 0)
	{
		new Query[100];
		mysql_format(Conecction, Query, sizeof(Query), "SELECT * FROM `usuarios` WHERE `Username`='%e' LIMIT 1", PlayerInfo[playerid][NombreTemporal]);
		mysql_pquery(Conecction, Query, "OnPlayerDataLoaded", "dd", playerid, g_MysqlRaceCheck[playerid]);
		
		TimerAudio[playerid] = SetTimerEx("AudioLogin",200,false,"d",playerid);
		SetTimerEx("CrearTextosPlayer", 1000, false, "i", playerid);
		SetTimerEx("CargarRemoves", 1500, false, "i", playerid);
		return 1;
	}
	else
	{
		SendClientMessage(playerid, COLOR_MUTE, "Su direcci�n IP se encuentra baneada.");
		new pPing = GetPlayerPing(playerid) + 150;
		SetTimerEx("KickTimer", (pPing > 500 ? 500 : pPing), false, "i", playerid);
		return 1;
	}
}



public OnPlayerSpawn(playerid)
{
	//Streamer_VisibleItems(STREAMER_TYPE_OBJECT, 700, playerid);
    #if DEBUG_GM == 1
    printf("(OnPlayerSpawn) PlayerID: %d", playerid);
    #endif
	if(IsPlayerNPC(playerid))
	{
		if(!strcmp(NombreJugador(playerid),"Motorman1"))
		{
			PutPlayerInVehicleAC(playerid, NPC_Tren[0], 0);
			SetPlayerSkin(playerid,71);
			ColorJugadorDefault(playerid);
			TrenUno = playerid;
			return 1;
		}
		/*if(!strcmp(NombreJugador(playerid),"Motorman2"))
		{
			PutPlayerInVehicleAC(playerid, NPC_Tren[3], 0);
			SetPlayerSkin(playerid,71);
			ColorJugadorDefault(playerid);
			TrenDos = playerid;
			return 1;
		}*/
		if(!strcmp(NombreJugador(playerid),"Leo"))
		{
			ColorJugadorDefault(playerid);
			SetPlayerSkin(playerid,28);
			return 1;
		}
		if(!strcmp(NombreJugador(playerid),"Motorman3"))
		{
			PutPlayerInVehicleAC(playerid, NPC_Tren[1], 0);
			SetPlayerSkin(playerid,71);
			ColorJugadorDefault(playerid);
			TrenTres = playerid;
			return 1;
		}
		if(!strcmp(NombreJugador(playerid),"Motorman4"))
		{
			PutPlayerInVehicleAC(playerid, NPC_Tren[2], 0);
			SetPlayerSkin(playerid,71);
			ColorJugadorDefault(playerid);
			TrenCuatro = playerid;
			return 1;
		}
		if(!strcmp(NombreJugador(playerid), "Alexis", true))
		{
			PutPlayerInVehicleAC(playerid, NPC_Tren[4], 0);
			SetPlayerSkin(playerid, 71);
			SetPlayerScore(playerid, 1);
			ColorJugadorDefault(playerid);
			return 1;
		}
		if(!strcmp(NombreJugador(playerid), "Eobard", true))
		{
			PutPlayerInVehicleAC(playerid, NPC_Tren[5], 0);
			SetPlayerSkin(playerid, 71);
			SetPlayerScore(playerid, 1);
			ColorJugadorDefault(playerid);
			return 1;
		}
		if(!strcmp(NombreJugador(playerid), "Leao", true))
		{
			PutPlayerInVehicleAC(playerid, NPC_Tren[6], 0);
			SetPlayerSkin(playerid, 71);
			SetPlayerScore(playerid, 1);
			ColorJugadorDefault(playerid);
			return 1;
		}
		if(!strcmp(NombreJugador(playerid), "Angelica", true))
		{
		    TextBot[0] = CreateDynamic3DTextLabel("Angelica",COLOR_SERVER,0.0, 0.0,0.0,35.0,playerid);
			SetPlayerSkin(playerid,192);
			SetPlayerScore(playerid, 1);
			SetPlayerColor(playerid,COLORCARGO0);
			ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Type_Loop", 4.1, 1, 1, 1, 0, 0, 1);
			return 1;
		}
		if(!strcmp(NombreJugador(playerid), "Marcelo", true))
		{
		    TextBot[1] = CreateDynamic3DTextLabel("Marcelo",COLOR_SERVER,0.0, 0.0,0.0,35.0,playerid);
			SetPlayerSkin(playerid,281);
			SetPlayerScore(playerid, 1);
			SetPlayerColor(playerid,COLORCARGO0);
			TimerTxtMarcelo = SetTimerEx("TextoMarcelo",10000,true,"d",playerid);
			return 1;
		}
		if(!strcmp(NombreJugador(playerid), "Ignacio", true))
		{
		    TextBot[2] = CreateDynamic3DTextLabel("Ignacio",COLOR_SERVER,0.0, 0.0,0.0,35.0,playerid);
			SetPlayerSkin(playerid,71);
			SetPlayerScore(playerid, 1);
			SetPlayerColor(playerid,COLORCARGO0);
			return 1;
		}
		if(!strcmp(NombreJugador(playerid), "Alejandro", true))
		{
		    TextBot[3] = CreateDynamic3DTextLabel("Alejandro",COLOR_SERVER,0.0, 0.0,0.0,35.0,playerid);
			SetPlayerSkin(playerid,71);
			SetPlayerScore(playerid, 1);
			SetPlayerColor(playerid,COLORCARGO0);
			return 1;
		}
		if(!strcmp(NombreJugador(playerid), "Camello", true))
		{
		    TextBot[4] = CreateDynamic3DTextLabel("Camello",COLOR_SERVER,0.0, 0.0,0.0,35.0,playerid);
			SetPlayerSkin(playerid,28);
			SetPlayerScore(playerid, 1);
			SetPlayerColor(playerid,COLORCARGO0);
			Camello = playerid;
			return 1;
		}
		if(!strcmp(NombreJugador(playerid), "HippePepe", true))
		{
		    TextBot[5] = CreateDynamic3DTextLabel("HippePepe",COLOR_SERVER,0.0, 0.0,0.0,35.0,playerid);
			SetPlayerSkin(playerid,50);
			SetPlayerScore(playerid, 1);
			SetPlayerColor(playerid,COLORCARGO0);
			return 1;
		}
		if(!strcmp(NombreJugador(playerid), "Hugo", true))
		{
		    TextBot[6] = CreateDynamic3DTextLabel("Hugo",COLOR_SERVER,0.0, 0.0,0.0,35.0,playerid);
			SetPlayerSkin(playerid,71);
			SetPlayerScore(playerid, 1);
			SetPlayerColor(playerid,COLORCARGO0);
			return 1;
		}
		if(!strcmp(NombreJugador(playerid), "Mao", true))
		{
		    TextBot[7] = CreateDynamic3DTextLabel("Mao",COLOR_SERVER,0.0, 0.0,0.0,35.0,playerid);
			SetPlayerSkin(playerid,57);
			SetPlayerScore(playerid, 1);
			SetPlayerColor(playerid,COLORCARGO0);
			return 1;
		}
		if(!strcmp(NombreJugador(playerid), "Jorge", true))
		{
		    TextBot[8] = CreateDynamic3DTextLabel("Jorge",COLOR_SERVER,0.0, 0.0,0.0,35.0,playerid);
			SetPlayerSkin(playerid,240);
			SetPlayerScore(playerid, 1);
			SetPlayerColor(playerid,COLORCARGO0);
			SetPlayerInterior(playerid, 6);
			SetPlayerVirtualWorld(playerid, 6);
			return 1;
		}
		return 1;
	}
	TimerTP[playerid] = gettimeVariable + 3;
	new Float:Pos[3];
 	GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
  	PosJugador[playerid][0] = Pos[0];
	PosJugador[playerid][1] = Pos[1];
	PosJugador[playerid][2] = Pos[2];
	VidaJugador[playerid] = 200.0;
    SetPlayerTeam(playerid,NO_TEAM);
	PlayerAnticheat[playerid][paSpawneado] = true;
 	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 0);
	if(LogeoCorrecto[playerid] == 0) return ExpulsarJugador(playerid, "Logeo incorrecto");
	if(PlayerInfo[playerid][pAdmin] == ADMIN_LVL_ADM) SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 999);
	if(PlayerInfo[playerid][pAdmin] > ADMIN_LVL_ADM) PlayerInfo[playerid][pAdmin] = 0;
	SetPlayerName(playerid, PlayerInfo[playerid][NombreTemporal]);
	//if(!EsAdmin(playerid)) { if(PlayerInfo[playerid][pAdmin] >= ADMIN_LVL_GLOBAL2) PlayerInfo[playerid][pAdmin] = 0; }
	if(PrimerSpawn[playerid] == 0)
	{   
		Actualizarnivel(playerid);
		PlayerTextDrawShow(playerid, pjnivel[playerid]);
 		TextDrawShowForPlayer(playerid, Textdraw0);
        TextDrawShowForPlayer(playerid, Textdraw1);
        TextDrawShowForPlayer(playerid, Textdraw2);
        TextDrawShowForPlayer(playerid, Textdraw3);
	    KillTimer(LoginTimer[playerid]);
	    SpawnCorrecto[playerid]++;
	    if(SpawnCorrecto[playerid] > 1) return ExpulsarJugador(playerid, "Spawn Incorrecto");
		if(PlayerInfo[playerid][pInterior] > 0) CargandoEx(playerid);
		if(PlayerInfo[playerid][pMundoVirtual] > 0) CargandoEx(playerid);
		new Query[520];
		if(PlayerInfo[playerid][jVida] == 0) PlayerInfo[playerid][jVida] = 50;
		if(PlayerInfo[playerid][jVida] > 100) PlayerInfo[playerid][jVida] = 100;
		SetPlayerScore(playerid,  PlayerInfo[playerid][jNivel]);
		EstablecerChaleco(playerid, PlayerInfo[playerid][jArmadura]);
		EstablecerVida(playerid, PlayerInfo[playerid][jVida]);
		PlayerPlaySound(playerid, 3402, 0.0, 0.0, 0.0);
		if(PlayerInfo[playerid][jConexion] != 1)
		{
			Mensaje(playerid, 0xAFAFAFAA, "-----------------------------------------------------------------------------------------------------");
			if(PlayerInfo[playerid][jConexion] == 8383) va_SendClientMessage(playerid, 0xAFAFAFAA, ""CB"Hola "CR"%s"CB", bienvenidos nuevamente", NombreJugador(playerid));
			else va_SendClientMessage(playerid, 0xAFAFAFAA, ""CB"Hola "CR"%s"CB", te vimos por �ltima vez hace %s", NombreJugador(playerid), FormatTimeleft(gettimeVariable - PlayerInfo[playerid][jConexion]));
			Mensaje(playerid, 0xAFAFAFAA, "-----------------------------------------------------------------------------------------------------");
			mysql_format(Conecction, Query, sizeof(Query), "SELECT * FROM referidos WHERE JugadorRefiriendo ='%d' AND Completado = '1' AND RecompensaRecibida = '0'", PlayerInfo[playerid][p_DBID]);
			mysql_tquery(Conecction, Query, "SelectReferidos", "d", playerid);	
			
			if(PlayerInfo[playerid][VIP] > 0 && PlayerInfo[playerid][jTiempoVip] < gettimeVariable)
			{
				if(PlayerInfo[playerid][pTieneEstado] == 1)
				{
					format(PlayerInfo[playerid][pFraseEstado], 64, "Ninguna");
					LimpiarEstado(playerid);
					PlayerInfo[playerid][pTieneEstado] = 0;
					SetPlayerWalkingStyle(playerid, 0);
				}
				PlayerInfo[playerid][Trabajo][1] = 0;
				PlayerInfo[playerid][Trabajo][2] = 0;
				va_SendClientMessage(playerid,-1,"Tu membres�a VIP "CR"%d"CB" ha vencido, te recomendamos renovarla para no perder las caracter�sticas de la membres�a.",PlayerInfo[playerid][VIP]);
				PlayerInfo[playerid][VIP] = 0;
			}
			if(PlayerInfo[playerid][VIP] > 0)
			{
				va_SendClientMessage(playerid, -1,"Tiene una membres�a VIP "CR"%d"CB" activa, disfruta de todas su caracter�sticas.",PlayerInfo[playerid][VIP]);
			}
			if(PlayerInfo[playerid][pTieneEstado] == 1) {
				va_SendClientMessage(playerid, -1,"Tienes un estado activo "CR"("CB"%s"CR")"CB".", PlayerInfo[playerid][pFraseEstado]);
				
				estado1[playerid] = CreateDynamic3DTextLabel(PlayerInfo[playerid][pFraseEstado],RandomColors[random(37)],0.0, 0.0,0.4,6.0,playerid);
			}
		
		}
		else
		{
		va_SendClientMessage(playerid, -1, ""CB"Felicitaciones "CR"%s"CB", tu cuenta fue creada correctamente.", NombreJugador(playerid));
		MostrarAyudaComandos(playerid);
		new label[220];
		format(label, sizeof(label), ""CR"� �{FFFFFF}Hola "CR"%s"CB", bienvenido al servidor"CR"! �\n"NameServer" Roleplay\n{FFFFFF}Disfruta de la comunidad.", NombreJugador(playerid));
		bienvenida[playerid] = CreatePlayer3DTextLabel(playerid, label,-1,949.0483,-1658.6149,13.5425,10.0);
		SetTimerEx("EliminarLabelBienvenida", 10000, 0, "d", playerid);
		PlayerBienvenida[playerid] = true;
		if(!UsandoVPN[playerid])
		{
			MostrarDialog(playerid, DIALOG_REFERIDO,DIALOG_STYLE_MSGBOX, "Bienvenido","{FFFFFF}�Un amigo te invit� al servidor y tienes el c�digo de "CR"referido"CB"?", "S�", "No");
		}
		}
		if(PlayerInfo[playerid][pAdmin] == 0)
		{
			if(TiempoDuda[playerid] < gettimeVariable) TiempoDuda[playerid] = gettimeVariable+240;
		}
		//if(VehicleInfo[playerid][0][vModelo] > 0 || VehicleInfo[playerid][1][vModelo] > 0 || VehicleInfo[playerid][2][vModelo] > 0 || VehicleInfo[playerid][3][vModelo] > 0) SetTimerEx("Autos",1800,false,"d",playerid);
		LoadVehiculos(playerid);
		CongelarEx(playerid);
		GameTextForPlayer(playerid, "~n~~r~Cargando..~n~~w~Espera por favor", 4000, 4);
		Mensaje(playerid, 0xFFFFFFFF, "Cargando datos del juego...");
		Mensaje(playerid, COLOR_SERVER, ""CR"El servidor est� en constante crecimiento. Publica tus sugerencias en el discord.");
		Mensaje(playerid, 0xFFFFFFFF, ""CB"Escribe "CR"/ayuda"CB" para recibir ayuda.");
		Mensaje(playerid, 0xFFFFFFFF, "Para recibir ayuda de otros jugadores, usa "CR"/n "CB"("CR"y tu pregunta"CB").");

		
		/*if(PlayerInfo[playerid][pAdmin] > 0 || PlayerInfo[playerid][jMiembro] == 1 || PlayerInfo[playerid][jMiembro] == 2)
		{
			if(strcmp(PlayerInfo[playerid][pPais], t_Pais[playerid], true ) != 0)
			{
   				new str[124];
				format(str, sizeof(str), "Notificaci�n:  J: %s - Pais Registro: %s/%s - Nueva conexi�n: %s",NombreJugador(playerid), PlayerInfo[playerid][pPais], PlayerInfo[playerid][pCiudad], t_Pais[playerid]);
				MensajeAdmin(COLOR_CHEAT, str, 4);
			}
		}*/
		CalcularNivel(playerid);
		MostrarMapas(playerid);
		LoadAnimLibs(playerid);
		SetPlayerInterior(playerid, PlayerInfo[playerid][pInterior]);
		SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pMundoVirtual]);
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
		new ipp[MAX_PLAYER_NAME];
	    TextDrawShowForPlayer(playerid, DMTD2);
		ColorJugadorDefault(playerid);
		ResetPlayerMoney(playerid);
		DarRopa(playerid);
		CargarExtra(playerid);
		SetPlayerStats(playerid);
		SetPlayerArmedWeapon(playerid, 0);
	    for(new g = 0; g < MAX_PCASAS; g++)
	    {
        	if(PlayerInfo[playerid][CasaID][g] > 0 && PropInfo[PlayerInfo[playerid][CasaID][g]][pIDPropietario] != PlayerInfo[playerid][p_DBID]) PlayerInfo[playerid][CasaID][g] = 0;
		}
	 	CancelSelectTextDraw(playerid);
	 	#if defined UsarForo
		if(PlayerInfo[playerid][pCuentaForo] == 0)
		{
			new rplName[32];
			GetPlayerName(playerid, rplName, sizeof(rplName));
			new slen = strlen(rplName);
			for(new i = 0; i < slen; i++)
			{
				if(rplName[i] == '_') rplName[i] = ' ';
			}
			mysql_format(Conecction2, Query, sizeof(Query), "INSERT INTO `smf_members` (UserID, member_name, passwd, real_name, date_registered, id_group, email_address, buddy_list, avatar) VALUES ('%d','%e',SHA1(CONCAT(LOWER('%e'),'%e')),'%s',UNIX_TIMESTAMP(now()),9,'%e','0','%d.png')",PlayerInfo[playerid][p_DBID],PlayerInfo[playerid][NombreTemporal],PlayerInfo[playerid][NombreTemporal],PlayerInfo[playerid][pTemppass],rplName,PlayerInfo[playerid][pEmail],PlayerInfo[playerid][jRopa]);
			mysql_tquery(Conecction2, Query);
			mysql_format(Conecction2, Query, sizeof(Query), "UPDATE `smf_settings` SET `Value`='%e' WHERE `Variable`='latestRealName'",PlayerInfo[playerid][NombreTemporal]);
			mysql_tquery(Conecction2, Query);
			mysql_format(Conecction2, Query, sizeof(Query), "UPDATE `smf_settings` SET `Value`='%d' WHERE `Variable`='totalMembers'",Usuarios[Cantidad]);
			mysql_tquery(Conecction2, Query);
			mysql_format(Conecction2, Query, sizeof(Query), "UPDATE `smf_settings` SET `Value`='%d' WHERE `Variable`='latestMember'",Usuarios[Cantidad]);
			mysql_tquery(Conecction2, Query);
			mysql_format(Conecction, Query, sizeof(Query), "UPDATE `usuarios` SET Cuentasmf='1' WHERE `ID`='%d'",PlayerInfo[playerid][p_DBID]);
			mysql_tquery(Conecction, Query);
			//Mensaje(playerid,-1,"Ya puedes usar tu cuenta en el foro.");
		}
		#endif
		if(PlayerInfo[playerid][jMiembro] == 1 && PlayerInfo[playerid][pDuty] == 1)
		{
			Frecuencia[playerid] = 1;
			frecuencias[1]++;
		}
		SetTimerEx("Logeado",1000,false,"d",playerid);
		StopAudioStreamForPlayer(playerid);
		ClearAnimations(playerid);
		BarraExp(playerid, 1);
		if(SedOculta[playerid] == 1) BarraHambre(playerid, 1),BarraSed(playerid, 1);
		SetPosEx(playerid, PlayerInfo[playerid][jPos_x], PlayerInfo[playerid][jPos_y], PlayerInfo[playerid][jPos_z], 0, PlayerInfo[playerid][pInterior], PlayerInfo[playerid][pMundoVirtual]);
		JugadorLogeado[playerid] = 1;
		if(PlayerInfo[playerid][pCargos] > 0) SetTimerEx("Encerrando2",200,false,"d",playerid);
		//if(PlayerInfo[playerid][pStats] == 0) darstats(playerid);
		if(PlayerInfo[playerid][jMiembro] > 0)
		{
		    format(ipp,sizeof(ipp),"%s",NombreJugador(playerid));
			foreach(new i : Player)
			{
				if(i != playerid && PlayerInfo[playerid][jMiembro] == PlayerInfo[i][jMiembro] && ShowCone[i] == 1)
	   			{
					PlayerTextDrawBoxColor(i, NotiConnect[i][0], 255);
	    			PlayerTextDrawColor(i, NotiConnect[i][1], 8388863);
					PlayerTextDrawColor(i, NotiConnect[i][2], -1);
					PlayerTextDrawColor(i, NotiConnect[i][3], -1);
					PlayerTextDrawSetString(i,NotiConnect[i][2],ipp);
	 				PlayerTextDrawSetPreviewModel(i, NotiConnect[i][3], PlayerInfo[playerid][jRopa]);
					PlayerTextDrawShow(i,NotiConnect[i][0]);
					PlayerTextDrawShow(i,NotiConnect[i][1]);
					PlayerTextDrawShow(i,NotiConnect[i][2]);
					PlayerTextDrawShow(i,NotiConnect[i][3]);
					NotificacionConectado[i] = 10;
				}
			}
			if(PlayerInfo[playerid][pRango] > 6)
			{
				foreach(new fb : Fabricas)
				{
					if(Fabricas[fb][pEnUso] > 0)
					{
						if(Fabricas[fb][pBanda] == PlayerInfo[playerid][jMiembro])
						{
							if(gettimeVariable > Fabricas[fb][TiempoSoborno]) Mensaje(playerid, 0xFFFFFFFF, "Tu f�brica {FF0000}no ha pagado el soborno"CB" a la polic�a.");
							break;
						}
					}
				}
			}
   		}
	}
	if(AntiBypass)
	{
		if(GetPlayerScore(playerid) == 0) return ExpulsarJugador(playerid, "Logeo score 0");
	}
	if(ViendoGPS[playerid] == 1) CerrarGPS(playerid);
	if(EstaEnEvento[playerid] == 1)
 	{
 	    Revivir(playerid);
  		SetPosEx(playerid, User_Temp[playerid][pt_EVENTO_POS][0],User_Temp[playerid][pt_EVENTO_POS][1],User_Temp[playerid][pt_EVENTO_POS][2], 0, User_Temp[playerid][pt_EVENTO_INT], User_Temp[playerid][pt_EVENTO_VW]);
		EstaEnEvento[playerid] = 0;
		EstablecerVida(playerid,100);
		EstablecerChaleco(playerid, 0);
		QuitarArmas(playerid, 1);
		DarPrendas(playerid);
		SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
		return 1;
 	}
	if(User_Temp[playerid][pt_PLAYER_EVENTODM])
	{
	    if(IsPlayerInRangeOfPoint(playerid, 90, 1392.8660,-20.9676,1000.9108))
	    {
	        Mensaje(playerid,-1,"Puedes salir cuando quieras con "CR"/arena"CB".");
	        PlayerInfo[playerid][Agonizando] = 0;
            VariableCaido[playerid] = 0;

			ClearAnimations(playerid);
			ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
			DescongelarEx(playerid);

			RandomSpawnEvento(playerid);
			
			QuitarArmas(playerid, 1);
			
			DarArma(playerid,24);
			DarArma(playerid,27);
			DarArma(playerid,34);
			
	        EstablecerVida(playerid, 100);
	        EstablecerChaleco(playerid,100);
			DarRopa(playerid);
			DarPrendas(playerid);
			CheckSpecteando(playerid);
			return 1;
	    }
	    else User_Temp[playerid][pt_PLAYER_EVENTODM] = false;
	}
	if(PlayerInfo[playerid][Agonizando] == 1 && !User_Temp[playerid][pt_PLAYER_EVENTODM])
	{
		DarPrendas(playerid);
		DarRopa(playerid);
		TimerWeapons[playerid] = gettimeVariable + 3;
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
		Muriendo[playerid] = 1;
		EstablecerVida(playerid, 100.0);
		DarDinero(playerid,0);
		ClearAnimations(playerid);
		TextDrawShowForPlayer(playerid,Sangre);
		SetPlayerInterior(playerid,PlayerInfo[playerid][pInterior]);
		SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pMundoVirtual]);
		ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0, 1);
		ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0, 1);
		Mensaje(playerid, COLOR_GREY, ""CB"Est�s muy malherido y comienzas a perder sangre.");
		MostrarBoxMedico(playerid);
		return 1;
	}
	if(PlayerInfo[playerid][Agonizando] == 2) ApareceHospital(playerid);
	
	if(VariableCaido[playerid] == 1 && PlayerInfo[playerid][pCargos] > 1)
	{
		if(PlayerTemp[playerid][CargosRobo] != 0) PlayerTemp[playerid][CargosRobo] = 0,PlayerTemp[playerid][ArrestadoTienda] = 1;
	    DarPrendas(playerid);
		PlayerInfo[playerid][Agonizando] = 0;
		TimerWeapons[playerid] = gettimeVariable + 3;
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
		DarRopa(playerid);
		CongelarEx(playerid);
		EstablecerVida(playerid, 10.0);
		Mensaje(playerid, -1, ""CR"Los m�dicos no van a tratar con un delincuente.");
		Mensaje(playerid, -1, ""CR"Espera a que la polic�a te traslade.");
		
		if(PlayerInfo[playerid][VIP] == 3)
		{
			MostrarDialog(playerid, PREGUNTAR_CARCEL_VIP3, DIALOG_STYLE_MSGBOX, "Funci�n {AD46D1}VIP3", "{FFFFFF}�Deseas ir directo a la {AD46D1}c�rcel{FFFFFF}?", "Aceptar", "Cancelar");
		}
		else
		{
			Mensaje(playerid, 0xafafafFF,"{FFBC00}Si la polic�a no te traslada, ser�s llevado autom�ticamente en 3 minutos.");
			TimerEncerrar[playerid] = SetTimerEx("TimerEncerrarA", 180000, 0, "d",playerid);
		}
		ClearAnimations(playerid);
		ApplyAnimation(playerid, "SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0, 1);
		ApplyAnimation(playerid, "SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0, 1);
		MarcarJugador(playerid,COLOR_GREEN2,1);
		return 1;
	}
	if(PlayerInfo[playerid][pTiempoCarcel] > 0)
	{
	    DarPrendas(playerid);
		EnviarCarcel(playerid);
		Jail[playerid] = 1;
		return 1;
	}
	if(PlayerInfo[playerid][pTiempoJail] > 0)
	{
	    DarPrendas(playerid);
		EnviarJail(playerid);
		San[playerid] = 1;
		return 1;
	}
	CheckSpecteando(playerid);
	return 1;
}
static CheckSpecteando(playerid)
{
	if(PlayerTemp[playerid][Specteando] == 1)
	{
		DarRopa(playerid);
		DarArmas(playerid);
		DarPrendas(playerid);
		SetPlayerPosAC(playerid,SpecX[playerid],SpecY[playerid],SpecZ[playerid]);
		SetPlayerInterior(playerid,SpecInt[playerid]);
		SetPlayerVirtualWorld(playerid,SpecVW[playerid]);
		PlayerTemp[playerid][Specteando] = 0;
		SpecJugador[playerid] = -1;
		EstablecerVida(playerid,VidaSpec[playerid]);
		EstablecerChaleco(playerid,ChalecoSpec[playerid]);
		CargandoEx(playerid);
		return 1;
	}
	return 1;
}



Funcion:CheckLogeo(playerid)
{
	if(GetPlayerScore(playerid) > 0) return KillTimer(TimerLogeo[playerid]);
	new Float:Pos[3];
	GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
	//printf("X:%f, Y:%f, Z:%f",Pos[0],Pos[1],Pos[2]);
	if(LogeoCorrecto[playerid] == 0 && !IsPlayerInRangeOfPoint(playerid,5,0,0,0) && AntiBypass && !IsPlayerAndroid(playerid))
	{
		new string[144];
		format(string,sizeof(string),"El jugador {FF3300}%s(ID: %d)"CB" fue expulsado por el anticheat. Raz�n:{FF3300} Fake Login"CB".",NombreJugador(playerid),playerid);
		MensajedeCheater(string);
		KillTimer(TimerLogeo[playerid]);
		return ExpulsarJugador(playerid, "Fake Login.");
	}
	return 1;
}

Funcion:OnPlayerDataLoaded(playerid, race_check)
{
    #if DEBUG_GM == 1
    printf("(OnPlayerDataLoaded) PlayerID: %d", playerid);
    #endif
	if (race_check != g_MysqlRaceCheck[playerid]) return ExpulsarJugador(playerid, "Error, reloguea.");
    if(GetPlayerScore(playerid) != 0) return ExpulsarJugador(playerid, "Posible bug");
	//NombreRandomString(NombreRandom[playerid], 15);
	//SetPlayerName(playerid, NombreRandom[playerid]);
	SetPlayerPosAC(playerid, -2675.8108,1646.3513,-39.0112);
	if(cache_num_rows() == 1) {
		
		new autologin;
		cache_get_value(0, "Password", PlayerInfo[playerid][pPassword], 128);
		cache_get_value_name_int(0, "AutoLogin", autologin);
		#if defined UsarForo
		cache_get_value_name_int(0, "Cuentasmf", PlayerInfo[playerid][pCuentaForo]);
		#endif
		new plrIP[17], IPa[17];
		cache_get_value_name(0, "DiscordID", User_Temp[playerid][DiscordID]);
		GetPlayerIp(playerid, plrIP, sizeof(plrIP));
		cache_get_value_name(0, "IP", IPa);
		#if defined UsarDiscordConnector
		if(ActorizacionActiva && strcmp(User_Temp[playerid][DiscordID], "0", true) != 0 && strcmp(IPa, plrIP, true) != 0) NecesitaCodigo[playerid] = true;
		#endif
		if(autologin == 1 )//&& PlayerInfo[playerid][pCuentaForo] == 1)
		{
			if(!strcmp(IPa, plrIP, true))
			{
				KillTimer(TimerAudio[playerid]);
				CargarUsuario(playerid);
				return 1;
			}
		}
		PlayerInfo[playerid][Cache_ID] = cache_save();

		new stringsd[150];
		format(stringsd, 150, ""CB"Bienvenido de vuelta "CR"%s"CB".\nTu cuenta est� registrada ingresa tu contrase�a:", PlayerInfo[playerid][NombreTemporal]);
		MostrarDialog(playerid, LOGIN, DIALOG_STYLE_PASSWORD,""CB"�Cuenta {04d62e}registrada"CB"!",stringsd,""CB"Jugar",""CB"Salir");
		return 1;
	}
	else{

		new Registraa[220];
		format(Registraa, 220, ""CB"Bienvenidos {009999}%s"CB"\n\n{2bff05}�"CB" Ingresa una contrase�a.\n{de0000}�"CB" Ingresa un correo electr�nico.\n{de0000}�"CB" Selecciona tu sexo.", PlayerInfo[playerid][NombreTemporal]);
		MostrarDialog(playerid, REGISTRO, DIALOG_STYLE_PASSWORD,"�Registra una nueva cuenta!",Registraa,"Siguiente","Salir");
	}
	return 1;
}

Funcion:OnPlayerRegister(playerid)
{
	if(cache_num_rows() == 0) {
		MostrarDialog(playerid, SEXO, DIALOG_STYLE_LIST,"{2bff05}�"CB" Selecciona tu sexo","Hombre\nMujer","Registrar", "");
	} 
	else
	{
		IntentoDeCorreo[playerid] += 1;

		if(IntentoDeCorreo[playerid] >= 3)
		{
			Mensaje(playerid, -1, "Vuelve a ingresar al juego e intenta nuevamente.");
			ExpulsarJugador(playerid, "Posible flood de correo");
			return 1;
		}
		else
		{
			MostrarDialog(playerid, DEMAIL,DIALOG_STYLE_INPUT,"Ingresa tu direcci�n de e-mail","El correo electr�nico ingresado ya est� en uso.\n\nIngresa otro E-mail.","Siguiente","");
			Mensaje(playerid, COLOR_ORANGE, "Ya hay una cuenta registrada con ese email.");
		}
		
		
//		Mensaje(playerid, COLOR_ORANGE, "Para recuperar tu contrase�a, ingresa a https://"WebName"/perdida.php");
      //  new pPing = GetPlayerPing(playerid) + 150;
       // SetTimerEx("KickTimer", (pPing > 500 ? 500 : pPing), false, "i", playerid);
	}
	return 1;
}

Funcion:UsuarioRegistrado(playerid, race_check)
{
	//new DBID = PlayerInfo[playerid][p_DBID] = cache_insert_id();
	new Query[100];
	/*format(string, sizeof string, "INSERT INTO `perfiles` (`UserID`) VALUES ('%d');", DBID);
	mysql_tquery(Conecction, string);*/
	if (race_check != g_MysqlRaceCheck[playerid]) return ExpulsarJugador(playerid, "Error, reloguea.");
	mysql_format(Conecction, Query, sizeof(Query), "SELECT * FROM `usuarios` WHERE `Username`='%e' LIMIT 1", PlayerInfo[playerid][NombreTemporal]);
	mysql_pquery(Conecction, Query, "AcabaRegistrarse", "dd", playerid, g_MysqlRaceCheck[playerid]);
	return 1;
}

Funcion:AcabaRegistrarse(playerid, race_check)
{
	if (race_check != g_MysqlRaceCheck[playerid]) return ExpulsarJugador(playerid, "Error, reloguea.");
	CargarUsuario(playerid);
	return 1;
}

Funcion:VehiculoRegistrado(playerid,slot) return VehicleInfo[playerid][slot][v_DBID] = cache_insert_id();

Funcion:VehicleLoad(playerid)
{
    new h = cache_num_rows();
    if(h > 0)
    {
        for(new i; i <h;i++)
        {
            
            cache_get_value_name_int(i, "ID", VehicleInfo[playerid][i][v_DBID]);
            cache_get_value_name_int(i, "Modelo", VehicleInfo[playerid][i][vModelo]);
            cache_get_value_name_int(i, "vTraba", VehicleInfo[playerid][i][vTraba]);
            cache_get_value_name_int(i, "VE1", VehicleInfo[playerid][i][VE1]);
            cache_get_value_name_int(i, "VE2", VehicleInfo[playerid][i][VE2]);
            cache_get_value_name_int(i, "VE3", VehicleInfo[playerid][i][VE3]);
            cache_get_value_name_int(i, "VE4", VehicleInfo[playerid][i][VE4]);
            cache_get_value_name_int(i, "vMoneda", VehicleInfo[playerid][i][vMonedaa]);
            cache_get_value_name_int(i, "vGas", VehicleInfo[playerid][i][vGas]);
            cache_get_value_name_int(i, "vinterior", VehicleInfo[playerid][i][vinterior]);
            cache_get_value_name_int(i, "vvw", VehicleInfo[playerid][i][vvw]);
            cache_get_value_name_int(i, "Color1", VehicleInfo[playerid][i][vColor1]);
            cache_get_value_name_int(i, "Color2", VehicleInfo[playerid][i][vColor2]);
            cache_get_value_name_int(i, "vBaul", EspacioBaul[playerid][i][1]);
            cache_get_value_name_int(i, "vBaul2", EspacioBaul[playerid][i][2]);
            cache_get_value_name_int(i, "vBaul3", EspacioBaul[playerid][i][3]);
            cache_get_value_name_int(i, "vBaul4", EspacioBaul[playerid][i][4]);
            cache_get_value_name_int(i, "vBaul5", EspacioBaul[playerid][i][5]);
            cache_get_value_name_int(i, "vBaul6", EspacioBaul[playerid][i][6]);
            cache_get_value_name_int(i, "vBaul7", EspacioBaul[playerid][i][7]);
            cache_get_value_name_int(i, "vBaul8", EspacioBaul[playerid][i][8]);
            cache_get_value_name_int(i, "vBaul9", EspacioBaul[playerid][i][9]);
            cache_get_value_name_int(i, "vBaul10", EspacioBaul[playerid][i][10]);
            cache_get_value_name_int(i, "PaintJob", VehicleInfo[playerid][i][vPJ]);
            cache_get_value_name_int(i, "Componentes0", Componentes[playerid][0][i]);
            cache_get_value_name_int(i, "Componentes1", Componentes[playerid][1][i]);
            cache_get_value_name_int(i, "Componentes2", Componentes[playerid][2][i]);
            cache_get_value_name_int(i, "Componentes3", Componentes[playerid][3][i]);
            cache_get_value_name_int(i, "Componentes4", Componentes[playerid][4][i]);
            cache_get_value_name_int(i, "Componentes5", Componentes[playerid][5][i]);
            cache_get_value_name_int(i, "Componentes6", Componentes[playerid][6][i]);
            cache_get_value_name_int(i, "Componentes7", Componentes[playerid][7][i]);
            cache_get_value_name_int(i, "Componentes8", Componentes[playerid][8][i]);
            cache_get_value_name_int(i, "Componentes9", Componentes[playerid][9][i]);
            cache_get_value_name_int(i, "Componentes10", Componentes[playerid][10][i]);
            cache_get_value_name_int(i, "Componentes11", Componentes[playerid][11][i]);
            cache_get_value_name_int(i, "Componentes12", Componentes[playerid][12][i]);
            cache_get_value_name_int(i, "Componentes13", Componentes[playerid][13][i]);
            cache_get_value_name_int(i, "Precio", VehicleInfo[playerid][i][vPrecio]);
            cache_get_value_name_int(i, "Ovw", VehicleInfo[playerid][i][v0_vw]);
            cache_get_value_name_int(i, "Segurov", VehicleInfo[playerid][i][vSeguro]);
            cache_get_value_name_int(i, "Ointerior", VehicleInfo[playerid][i][v0_interior]);
            cache_get_value_name_float(i, "OX", VehicleInfo[playerid][i][pOX]);
            cache_get_value_name_float(i, "OY", VehicleInfo[playerid][i][pOY]);
            cache_get_value_name_float(i, "OZ", VehicleInfo[playerid][i][pOZ]);
            cache_get_value_name_float(i, "OA", VehicleInfo[playerid][i][pOA]);
            cache_get_value_name_float(i, "VidaV", VehicleInfo[playerid][i][pVidaV]);
            cache_get_value_name_float(i, "VidaVE", VehicleInfo[playerid][i][pVidaVE]);
            cache_get_value_name_float(i, "X", VehicleInfo[playerid][i][vX]);
            cache_get_value_name_float(i, "Y", VehicleInfo[playerid][i][vY]);
            cache_get_value_name_float(i, "Z", VehicleInfo[playerid][i][vZ]);
            cache_get_value_name_float(i, "A", VehicleInfo[playerid][i][vA]);
            cache_get_value_name(i, "Patente", Patente[playerid][i]);
            cache_get_value_name_int(i, "Alarm", VehicleInfo[playerid][i][vAlarm]);
            cache_get_value_name_int(i, "Alarma", VehicleInfo[playerid][i][vAlarma]);
            cache_get_value_name_int(i, "Motor", VehicleInfo[playerid][i][Aceleracion]);

            if(VehicleInfo[playerid][i][vModelo]  > 0)
            {
                new Query[120];
                if(VehicleInfo[playerid][i][pVidaVE] == 0 || VehicleInfo[playerid][i][pVidaV] == 0)
                {
                    VehicleInfo[playerid][i][pVidaVE] = 1000;
                    VehicleInfo[playerid][i][pVidaV] = 1000;
                }

                Auto(playerid,i,0);
                mysql_format(Conecction, Query, sizeof(Query), "SELECT * FROM `v_tuning` WHERE `VehicleID` = '%d' LIMIT %d",VehicleInfo[playerid][i][v_DBID],MAX_TOBJETOS);
                mysql_tquery(Conecction, Query, "LoadVehicleObjects", "ii", playerid, i);
            }

        }
	}
	LimpiarCarros(playerid);
	return 1;
}

static LimpiarCarros(playerid)
{
    for(new i; i<MAX_PAUTOS;i++)
    {
        if(VehicleInfo[playerid][i][vModelo] < 1)
        {
            autos[i][playerid] = 0;
            new temp_VehicleInfo[vInfo];
            VehicleInfo[playerid][i] = temp_VehicleInfo;
            VehicleInfo[playerid][i][vModelo] = 0;
        }
    }
}



Funcion:CargarVehCompra(resultid,playerid)
{
	if(cache_num_rows() > 0)
	{
		cache_get_value_name_int(0, "ID", VehicleInfo[playerid][resultid][v_DBID]);
		cache_get_value_name_int(0, "Modelo", VehicleInfo[playerid][resultid][vModelo]);
		cache_get_value_name_int(0, "vTraba", VehicleInfo[playerid][resultid][vTraba]);
		cache_get_value_name_int(0, "VE1", VehicleInfo[playerid][resultid][VE1]);
		cache_get_value_name_int(0, "VE2", VehicleInfo[playerid][resultid][VE2]);
		cache_get_value_name_int(0, "VE3", VehicleInfo[playerid][resultid][VE3]);
		cache_get_value_name_int(0, "VE4", VehicleInfo[playerid][resultid][VE4]);
		cache_get_value_name_int(0, "vMoneda", VehicleInfo[playerid][resultid][vMonedaa]);
		cache_get_value_name_int(0, "vGas", VehicleInfo[playerid][resultid][vGas]);
		cache_get_value_name_int(0, "vinterior", VehicleInfo[playerid][resultid][vinterior]);
		cache_get_value_name_int(0, "vvw", VehicleInfo[playerid][resultid][vvw]);
		cache_get_value_name_int(0, "Color1", VehicleInfo[playerid][resultid][vColor1]);
		cache_get_value_name_int(0, "Color2", VehicleInfo[playerid][resultid][vColor2]);
		cache_get_value_name_int(0, "vBaul", EspacioBaul[playerid][resultid][1]);
		cache_get_value_name_int(0, "vBaul2", EspacioBaul[playerid][resultid][2]);
		cache_get_value_name_int(0, "vBaul3", EspacioBaul[playerid][resultid][3]);
		cache_get_value_name_int(0, "vBaul4", EspacioBaul[playerid][resultid][4]);
		cache_get_value_name_int(0, "vBaul5", EspacioBaul[playerid][resultid][5]);
		cache_get_value_name_int(0, "vBaul6", EspacioBaul[playerid][resultid][6]);
		cache_get_value_name_int(0, "vBaul7", EspacioBaul[playerid][resultid][7]);
		cache_get_value_name_int(0, "vBaul8", EspacioBaul[playerid][resultid][8]);
		cache_get_value_name_int(0, "vBaul9", EspacioBaul[playerid][resultid][9]);
		cache_get_value_name_int(0, "vBaul10", EspacioBaul[playerid][resultid][10]);
		cache_get_value_name_int(0, "PaintJob", VehicleInfo[playerid][resultid][vPJ]);
		cache_get_value_name_int(0, "Componentes0", Componentes[playerid][0][resultid]);
		cache_get_value_name_int(0, "Componentes1", Componentes[playerid][1][resultid]);
		cache_get_value_name_int(0, "Componentes2", Componentes[playerid][2][resultid]);
		cache_get_value_name_int(0, "Componentes3", Componentes[playerid][3][resultid]);
		cache_get_value_name_int(0, "Componentes4", Componentes[playerid][4][resultid]);
		cache_get_value_name_int(0, "Componentes5", Componentes[playerid][5][resultid]);
		cache_get_value_name_int(0, "Componentes6", Componentes[playerid][6][resultid]);
		cache_get_value_name_int(0, "Componentes7", Componentes[playerid][7][resultid]);
		cache_get_value_name_int(0, "Componentes8", Componentes[playerid][8][resultid]);
		cache_get_value_name_int(0, "Componentes9", Componentes[playerid][9][resultid]);
		cache_get_value_name_int(0, "Componentes10", Componentes[playerid][10][resultid]);
		cache_get_value_name_int(0, "Componentes11", Componentes[playerid][11][resultid]);
		cache_get_value_name_int(0, "Componentes12", Componentes[playerid][12][resultid]);
		cache_get_value_name_int(0, "Componentes13", Componentes[playerid][13][resultid]);
		cache_get_value_name_int(0, "Precio", VehicleInfo[playerid][resultid][vPrecio]);
		cache_get_value_name_int(0, "Ovw", VehicleInfo[playerid][resultid][v0_vw]);
		cache_get_value_name_int(0, "Segurov", VehicleInfo[playerid][resultid][vSeguro]);
		cache_get_value_name_int(0, "Ointerior", VehicleInfo[playerid][resultid][v0_interior]);
		cache_get_value_name_float(0, "OX", VehicleInfo[playerid][resultid][pOX]);
		cache_get_value_name_float(0, "OY", VehicleInfo[playerid][resultid][pOY]);
		cache_get_value_name_float(0, "OZ", VehicleInfo[playerid][resultid][pOZ]);
		cache_get_value_name_float(0, "OA", VehicleInfo[playerid][resultid][pOA]);
		cache_get_value_name_float(0, "VidaV", VehicleInfo[playerid][resultid][pVidaV]);
		cache_get_value_name_float(0, "VidaVE", VehicleInfo[playerid][resultid][pVidaVE]);
		cache_get_value_name_float(0, "X", VehicleInfo[playerid][resultid][vX]);
		cache_get_value_name_float(0, "Y", VehicleInfo[playerid][resultid][vY]);
		cache_get_value_name_float(0, "Z", VehicleInfo[playerid][resultid][vZ]);
		cache_get_value_name_float(0, "A", VehicleInfo[playerid][resultid][vA]);
		cache_get_value_name(0, "Patente", Patente[playerid][resultid]);
		cache_get_value_name_int(0, "Alarm", VehicleInfo[playerid][resultid][vAlarm]);
		cache_get_value_name_int(0, "Alarma", VehicleInfo[playerid][resultid][vAlarma]);
		cache_get_value_name_int(0, "Motor", VehicleInfo[playerid][resultid][Aceleracion]);

		if(VehicleInfo[playerid][resultid][vModelo]  > 0)
		{
			new Query[120];
			if(VehicleInfo[playerid][resultid][pVidaVE] == 0 || VehicleInfo[playerid][resultid][pVidaV] == 0)
			{
				VehicleInfo[playerid][resultid][pVidaVE] = 1000;
				VehicleInfo[playerid][resultid][pVidaV] = 1000;
			}

			Auto(playerid,resultid,0);
			mysql_format(Conecction, Query, sizeof(Query), "SELECT * FROM `v_tuning` WHERE `VehicleID` = '%d' LIMIT %d",VehicleInfo[playerid][resultid][v_DBID],MAX_TOBJETOS);
			mysql_tquery(Conecction, Query, "LoadVehicleObjects", "ii", playerid, resultid);
		}


	}
	else
	{
		autos[resultid][playerid] = 0;
		new temp_VehicleInfo[vInfo];
		VehicleInfo[playerid][resultid] = temp_VehicleInfo;
		VehicleInfo[playerid][resultid][vModelo] = 0;
	}
	return 1;
}





Funcion:ResetCheatSpeed(playerid)
{
	if(IsPlayerConnected(playerid)) CheatSpeedDetectado[playerid] = false;
	return 1;
}

Funcion:ResetCheatDelete(playerid)
{
	if(IsPlayerConnected(playerid)) CheatDelete[playerid] = false;
	return 1;
}

Funcion:ResetAvisosSpeed(playerid)
{
	if(IsPlayerConnected(playerid)) AvisosSpeed[playerid] = 0;
	return 1;
}

#define MAX_AVISOS_SPEED 3

public OnPlayerUpdate(playerid)
{
	TimerAFK[playerid] = gettimeVariable;
	if(ZonaSegura[playerid] == 1 && !FaccLegal2(playerid) && ArmaBlanca(GetPlayerWeapon(playerid)) == 0 && GetPlayerWantedLevel(playerid) == 0 && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		if(TiempoRevisar[playerid] < gettimeVariable)
		{
			NoDispares(playerid);
			TiempoRevisar[playerid] = gettimeVariable + 35;
		}
		SetPlayerArmedWeapon(playerid, 0);
		return 0;
	}
	return 1;
}

static ArmaBlanca(weaponid)
{
	switch(weaponid)
	{
		case 1..8,10..15,43,46: return 1;
		case 0: return -1;
	}
	return 0;
}


static PlayerAnticheats(playerid)
{
	//eso estaba en onplayerupdate
	new ActVeh = GetPlayerVehicleID(playerid);
	new estado = GetPlayerState(playerid);
	if(estado == PLAYER_STATE_DRIVER && CarTroll[playerid][playerActualCar] != ActVeh && !CarTroll[playerid][playerFalseDetection])
	{
		CarTroll[playerid][playerActualCar] = ActVeh;
		if(vehicleData[ActVeh][broadVehicleOwner] != playerid &&  vehicleData[ActVeh][broadVehicleOwner] != INVALID_PLAYER_ID) ExpulsarJugador(playerid,"cheat de veh�culos (2)");
	}

	new Float:Vida[2],Float:Velocity[3];
	GetPlayerHealth(playerid,Vida[0]);
	GetPlayerArmour(playerid,Vida[1]);
	GetPlayerVelocity(playerid, Velocity[0], Velocity[1], Velocity[2]);
	
	

	new Float:Distancia = GetPlayerDistanceFromPoint(playerid,PosJugador[playerid][0],PosJugador[playerid][1],PosJugador[playerid][2]);
	
	if(estado == PLAYER_STATE_ONFOOT && PlayerInfo[playerid][pAdmin] < 3 && 
	!EnCarro[playerid] && AC_TP == true && Velocity[2] >= -0.2 && 
	Curando[playerid] == 0 && GetPlayerInterior(playerid) == 0 && 
	GetPlayerVirtualWorld(playerid) == 0 &&
	PlayerConectado(playerid) && Distancia > 300 && 
	TimerTP[playerid] < gettimeVariable && 
	GetPlayerSurfingVehicleID(playerid) == INVALID_VEHICLE_ID
	)
	{
		
		new string[144];
		format(string,sizeof(string),"El jugador {FF3300}%s(ID: %d)"CB" fue expulsado por el anticheat raz�n:{FF3300} TP (%0.2f)"CB".",NombreJugador(playerid),playerid, Distancia);
		MensajedeCheater(string);
		SetPlayerPosAC(playerid, PosJugador[playerid][0],PosJugador[playerid][1],PosJugador[playerid][2]);
		//MensajeAdmin(COLOR_CHEAT, string, 3);
		ExpulsarJugador(playerid, "Teleport a pie (333)");
	}

	else if(estado == PLAYER_STATE_DRIVER && PlayerConectado(playerid) && GetPlayerInterior(playerid) == 0 && PlayerInfo[playerid][pAdmin] < 3 && GetVehicleSpeed(ActVeh) <= 50 && !IsPlayerInTransfender(playerid) && AC_TP == true && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
	{
		if(PlayerConectado(playerid) && Distancia > 400 && TimerTP[playerid] < gettimeVariable)
		{
			new string[144];
			format(string,sizeof(string),"El jugador {FF3300}%s(ID: %d)"CB" fue expulsado por el anticheat raz�n:{FF3300} TPVEH (%0.2f)"CB".",NombreJugador(playerid),playerid, Distancia);
			MensajedeCheater(string);
			SetPosVeh(ActVeh, PosJugador[playerid][0],PosJugador[playerid][1],PosJugador[playerid][2]+1.5,0,0,0);
			//MensajeAdmin(COLOR_CHEAT, string, 3);
			ExpulsarJugador(playerid, "Teleport en veh (741)");
		}
	}
	GetPlayerPos(playerid, PosJugador[playerid][0],PosJugador[playerid][1],PosJugador[playerid][2]);
	
	if(estado == PLAYER_STATE_ONFOOT)
	{
		new Float: velocidad[3];
		GetPlayerVelocity(playerid, velocidad[0], velocidad[1], velocidad[2]);
		if(velocidad[1] == -50 || velocidad[0] == -50 || velocidad[0] > 3|| velocidad[1] > 3 || velocidad[2] > 3)
		{
			if(PlayerInfo[playerid][pAdmin] == 0 && GetPlayerSurfingVehicleID(playerid) == INVALID_VEHICLE_ID && GetPlayerSurfingObjectID(playerid) == INVALID_OBJECT_ID && TimerTP[playerid] < gettimeVariable && JugadorLogeado[playerid] == 1 && !IsPlayerAndroid(playerid))
			{
				new string[128];
				SetPlayerVelocity(playerid, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "El jugador {FF3300}%s"CB" fue expulsado por el anticheat raz�n: {FF3300}Cheater Slap.",NombreJugador(playerid));
				MensajedeCheater(string);
				ExpulsarJugador(playerid,"Cheater slap");
			}
		}
	}
	if(estado == PLAYER_STATE_DRIVER)
	{
		ActualizarVelo(playerid);
	}

	if(Vida[0] != PlayerVida[playerid])
	{
	    OnPlayerHealthChange(playerid,Vida[0]);
	    PlayerVida[playerid] = Vida[0];
	}
	if(Vida[1] != PlayerChaleco[playerid])
	{
	    OnPlayerArmourChange(playerid,Vida[1]);
	    PlayerChaleco[playerid] = Vida[1];
	}	
	return 1;
}

static ActualizarVelo(playerid)
{
	if(Manejando[playerid] == 1)
	{
		if(IsPlayerInAnyVehicle(playerid) && ShowVelo[playerid] == 1)
		{
			new VeloDados[43], vehid = GetPlayerVehicleID(playerid);
			PlayerTextDrawSetPreviewModel(playerid, TextVelocimetroP[playerid][3], GetVehicleModel(vehid));
			new Float:VidaV; GetVehicleHealth(vehid, VidaV);
			new Float:V1 = floatmul(VidaV, 100.0);
			new Float:V2 = floatdiv(V1, 1000.0);
	
			format(VeloDados, sizeof(VeloDados), "%0.0f%s", V2, "%");
			PlayerTextDrawSetString(playerid, TextVelocimetroP[playerid][1], VeloDados);

			format(VeloDados, sizeof(VeloDados), "%d/%d~n~", VehicleFuel[vehid], CombustibleCoche(vehid));
			PlayerTextDrawSetString(playerid, TextVelocimetroP[playerid][2], VeloDados);

			format(VeloDados, sizeof(VeloDados), "%d", ObtenerVelocidad(playerid));
			PlayerTextDrawSetString(playerid, TextVelocimetroP[playerid][0], VeloDados);
		}
	}
}

Funcion:cargarprendas(extraid)
{
	new h = cache_num_rows();
	if(h > 0)
	{
		new slot;
		for(new i=0; i<h; i++)
		{
			cache_get_value_name_int(i, "Slot", slot);
			slot--;
			cache_get_value_name_int(i, "Objeto", PlayerInfo[extraid][pObj][slot]);
			cache_get_value_name_float(i, "fOffsetX", PlayerInfo[extraid][pfOffsetX][slot]);
			cache_get_value_name_float(i, "fOffsetY", PlayerInfo[extraid][pfOffsetY][slot]);
			cache_get_value_name_float(i, "fOffsetZ", PlayerInfo[extraid][pfOffsetZ][slot]);
			cache_get_value_name_float(i, "fRotX", PlayerInfo[extraid][pfRotX][slot]);
			cache_get_value_name_float(i, "fRotY", PlayerInfo[extraid][pfRotY][slot]);
			cache_get_value_name_float(i, "fRotZ", PlayerInfo[extraid][pfRotZ][slot]);
			cache_get_value_name_float(i, "fScaleX", PlayerInfo[extraid][pfScaleX][slot]);
			cache_get_value_name_float(i, "fScaleY", PlayerInfo[extraid][pfScaleY][slot]);
			cache_get_value_name_float(i, "fScaleZ", PlayerInfo[extraid][pfScaleZ][slot]);
			cache_get_value_name_int(i, "ObjUsed", UsandoObj[slot][extraid]);
			cache_get_value_name_int(i, "ATH", SlotP2[slot][extraid]);
			cache_get_value_name_int(i, "Color",PlayerInfo[extraid][pObjColor][slot]);
			cache_get_value_name_int(i, "PrendaPos",PlayerInfo[extraid][pBone][slot]);
			NPrendas[extraid]++;
			if(PlayerInfo[extraid][pBone][slot] == 0)
			{
				PlayerInfo[extraid][pBone][slot] = 2;
				if(PlayerInfo[extraid][pObj][slot] == 19086) PlayerInfo[extraid][pBone][slot] = 6;
				if(PlayerInfo[extraid][pObj][slot] == 19078 || PlayerInfo[extraid][pObj][slot] == 19079) PlayerInfo[extraid][pBone][slot] = 16;
				if(PlayerInfo[extraid][pObj][slot] == 19142 || PlayerInfo[extraid][pObj][slot] == 19515) PlayerInfo[extraid][pBone][slot] = 1;
			}
			
			if(UsandoObj[slot][extraid] == 1)
			{
				UsandoP[extraid]++;
				SetPlayerAttachedObject(extraid, SlotP2[slot][extraid], PlayerInfo[extraid][pObj][slot], PlayerInfo[extraid][pBone][slot], PlayerInfo[extraid][pfOffsetX][slot], PlayerInfo[extraid][pfOffsetY][slot],  PlayerInfo[extraid][pfOffsetZ][slot], PlayerInfo[extraid][pfRotX][slot], PlayerInfo[extraid][pfRotY][slot], PlayerInfo[extraid][pfRotZ][slot], PlayerInfo[extraid][pfScaleX][slot], PlayerInfo[extraid][pfScaleY][slot], PlayerInfo[extraid][pfScaleZ][slot],PlayerInfo[extraid][pObjColor][slot]);
			}
		}
	}
	for(new slota; slota < 4;slota++)
	{
		if(PlayerInfo[extraid][pObj][slota] == 0)
		{
			PlayerInfo[extraid][pObj][slota] = 11392;
			UsandoObj[slota][extraid] = 0;
			SlotP2[slota][extraid] = 0;
		} 
	}
    return 1;
}

static LoadVehiculos(playerid)
{
	new Query[256];

	mysql_format(Conecction, Query, sizeof(Query), "SELECT * FROM `p_autos` WHERE `UserID` = '%d' LIMIT %d",PlayerInfo[playerid][p_DBID],MAX_PAUTOS);
 	mysql_tquery(Conecction, Query, "VehicleLoad", "i",playerid);
}

Funcion:cargar_logros(playerid)
{
	new h = cache_num_rows();
	if(h > 0)
	{
		new tipo;
		for(new i; i<h; i++)
		{
			cache_get_value_name_int(i, "Tipo", tipo);
			switch(tipo)
			{
				case 2,3,5,6,7,11,12: cache_get_value_name_int(i, "Progreso", PlayerInfo[playerid][pLogro][tipo]);
				default: PlayerInfo[playerid][pLogro][tipo] = 1;
			}
		}
		
	}
	return 1;
}
task EventoOperaciones[1800000]()
{
	new numero1 = random(99999)+1;
	new numero2 = random(99999)+1;
	SumaEventoOperaciones = numero1+numero2;
	va_SendClientMessageToAll(-1,""CR"["Moneda1" - Juego]:"CB" El primero en escribir la respuesta de "CR"%d+%d"CB" obtendr� un "CR"premio"CB".",numero1,numero2);
	EventoOperacionesActivo = true;
}

task ReloadBandas[600000](){ 
	SendClientMessageToAll(-1, ""CR"["Moneda1"]:"CB" Recuerda agregar nuestra IP "CR"sv."WebName":7777"CB" a favoritos.");
	CargarFacciones();
	/*foreach(new i : Player)
	{
		if(IsPlayerConnected(i))
		{
			if(GetPlayerScore(i) == 0) continue;
			if(LogeoCorrecto[i] == 0) continue;
			if(!IsPlayerConnected(i)) continue;
			if(JugadorLogeado[i] == 1) GuardarCuenta(i);
		}
	}*/
}

ptask GuardarMiCuenta[600000](playerid)
{
	UbicarClima(playerid);
	Contador[playerid] = 0;
	if(GetPlayerScore(playerid) == 0) return 1;
	if(LogeoCorrecto[playerid] == 0) return 1;
	if(!IsPlayerConnected(playerid)) return 1;
	if(JugadorLogeado[playerid] == 1) GuardarCuenta(playerid);
	return 1;
}

Funcion:CargarFacciones()
{
	mysql_tquery(Conecction, "SELECT * FROM `facciones` WHERE `EnUso` = 1", "CargarBandas");
	return 1;
}

Funcion:CargarBandas()
{

	new h = cache_num_rows();
    for(new i = 0; i < h; i++)
    {
        cache_get_value_name_int(i, "id", BandasInfo[i][bID]);
        cache_get_value_name(i, "Nombre", BandasInfo[BandasInfo[i][bID]][BNombre]);
        cache_get_value_name(i, "Color", BandasInfo[BandasInfo[i][bID]][BColor]);
        cache_get_value_name(i, "Rango1", BRango[0][BandasInfo[i][bID]]);
        cache_get_value_name(i, "Rango2", BRango[1][BandasInfo[i][bID]]);
        cache_get_value_name(i, "Rango3", BRango[2][BandasInfo[i][bID]]);
        cache_get_value_name(i, "Rango4", BRango[3][BandasInfo[i][bID]]);
        cache_get_value_name(i, "Rango5", BRango[4][BandasInfo[i][bID]]);
        cache_get_value_name(i, "Rango6", BRango[5][BandasInfo[i][bID]]);
        cache_get_value_name(i, "Rango7", BRango[6][BandasInfo[i][bID]]);
        cache_get_value_name(i, "Rango8", BRango[7][BandasInfo[i][bID]]);
        cache_get_value_name(i, "tipobanda", BandasInfo[BandasInfo[i][bID]][tipobanda]);
        cache_get_value_name(i, "territorio", BandasInfo[BandasInfo[i][bID]][territorio]);
		
		cache_get_value_name_int(i, "Integrantes", BandasInfo[BandasInfo[i][bID]][BIntegrantes]);
		cache_get_value_name_int(i, "MaxIntegrantes", BandasInfo[BandasInfo[i][bID]][MaxIntegrantes]);

		cache_get_value_name_int(i, "Rango1Exp", BandasInfo[BandasInfo[i][bID]][RANK_EXP][0]);
		cache_get_value_name_int(i, "Rango2Exp", BandasInfo[BandasInfo[i][bID]][RANK_EXP][1]);
		cache_get_value_name_int(i, "Rango3Exp", BandasInfo[BandasInfo[i][bID]][RANK_EXP][2]);
		cache_get_value_name_int(i, "Rango4Exp", BandasInfo[BandasInfo[i][bID]][RANK_EXP][3]);
		cache_get_value_name_int(i, "Rango5Exp", BandasInfo[BandasInfo[i][bID]][RANK_EXP][4]);
		cache_get_value_name_int(i, "Rango6Exp", BandasInfo[BandasInfo[i][bID]][RANK_EXP][5]);
		cache_get_value_name_int(i, "Rango7Exp", BandasInfo[BandasInfo[i][bID]][RANK_EXP][6]);

		cache_get_value_name_int(i, "Rango1Edi", BandasInfo[BandasInfo[i][bID]][RANK_EDIT][0]);
		cache_get_value_name_int(i, "Rango2Edi", BandasInfo[BandasInfo[i][bID]][RANK_EDIT][1]);
		cache_get_value_name_int(i, "Rango3Edi", BandasInfo[BandasInfo[i][bID]][RANK_EDIT][2]);
		cache_get_value_name_int(i, "Rango4Edi", BandasInfo[BandasInfo[i][bID]][RANK_EDIT][3]);
		cache_get_value_name_int(i, "Rango5Edi", BandasInfo[BandasInfo[i][bID]][RANK_EDIT][4]);
		cache_get_value_name_int(i, "Rango6Edi", BandasInfo[BandasInfo[i][bID]][RANK_EDIT][5]);
		cache_get_value_name_int(i, "Rango7Edi", BandasInfo[BandasInfo[i][bID]][RANK_EDIT][6]);

		cache_get_value_name_int(i, "Rango1Inv", BandasInfo[BandasInfo[i][bID]][RANK_INV][0]);
		cache_get_value_name_int(i, "Rango2Inv", BandasInfo[BandasInfo[i][bID]][RANK_INV][1]);
		cache_get_value_name_int(i, "Rango3Inv", BandasInfo[BandasInfo[i][bID]][RANK_INV][2]);
		cache_get_value_name_int(i, "Rango4Inv", BandasInfo[BandasInfo[i][bID]][RANK_INV][3]);
		cache_get_value_name_int(i, "Rango5Inv", BandasInfo[BandasInfo[i][bID]][RANK_INV][4]);
		cache_get_value_name_int(i, "Rango6Inv", BandasInfo[BandasInfo[i][bID]][RANK_INV][5]);
		cache_get_value_name_int(i, "Rango7Inv", BandasInfo[BandasInfo[i][bID]][RANK_INV][6]);
        new color;
        sscanf(BandasInfo[BandasInfo[i][bID]][BColor],"x",color);
        BandasInfo[BandasInfo[i][bID]][BColor2] = ((color << 8) | 0xFF);
		if(BandasInfo[i][bID] > UltimaBanda) UltimaBanda = BandasInfo[i][bID];
		//BandasInfo[BandasInfo[i][bID]][BColor2] = BandasInfo[BandasInfo[i][bID]][BColor];
    }
    return 1;
}


public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ)
{
	if(response)
	{
	    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2)
	    {
			if(fScaleX > 3.0 || fScaleY > 3.0 || fScaleZ > 3.0 || fScaleX < 0.01 || fScaleY < 0.01 || fScaleZ < 0.01)
			{
				Mensaje(playerid, COLOR_BLANCO, "No puedes tener una prenda tan grande.");
				if(modelid == PlayerInfo[playerid][pObj][index])
  				{
				    RemovePlayerAttachedObject(playerid, SlotP2[index][playerid]);
					SetPlayerAttachedObject(playerid, SlotP2[index][playerid], PlayerInfo[playerid][pObj][index], PlayerInfo[playerid][pBone][index], PlayerInfo[playerid][pfOffsetX][index], PlayerInfo[playerid][pfOffsetY][index], PlayerInfo[playerid][pfOffsetZ][index], PlayerInfo[playerid][pfRotX][index], PlayerInfo[playerid][pfRotY][index], PlayerInfo[playerid][pfRotZ][index], PlayerInfo[playerid][pfScaleX][index], PlayerInfo[playerid][pfScaleY][index], PlayerInfo[playerid][pfScaleZ][index], PlayerInfo[playerid][pObjColor][index]);
			    }
			    return 1;
			}
		}
		if(modelid != 11392)
		{
			if(modelid == PlayerInfo[playerid][pObj][index])
			{
				
				new Query[500];
				PlayerInfo[playerid][pfOffsetX][index] = fOffsetX;
				PlayerInfo[playerid][pfOffsetY][index] = fOffsetY;
				PlayerInfo[playerid][pfOffsetZ][index] = fOffsetZ;
				PlayerInfo[playerid][pfRotX][index] = fRotX;
				PlayerInfo[playerid][pfRotY][index] = fRotY;
				PlayerInfo[playerid][pfRotZ][index] = fRotZ;
				PlayerInfo[playerid][pfScaleX][index] = fScaleX;
				PlayerInfo[playerid][pfScaleY][index] = fScaleY;
				PlayerInfo[playerid][pfScaleZ][index] = fScaleZ;
				mysql_format(Conecction, Query, sizeof(Query), "UPDATE `prendas` SET `fOffsetX`='%f',`fOffsetY`='%f',`fOffsetZ`='%f',`fRotX`='%f',`fRotY`='%f',`fRotZ`='%f',`fScaleX`='%f',`fScaleY`='%f',`fScaleZ`='%f' WHERE `UserID`='%d' AND `Slot`='%d'", fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ, PlayerInfo[playerid][p_DBID],index+1);
				mysql_tquery(Conecction, Query);
				Mensaje(playerid,-1,"Se ha modificado la posici�n del objeto.");
				RemovePlayerAttachedObject(playerid, SlotP2[index][playerid]);
				SetPlayerAttachedObject(playerid, SlotP2[index][playerid], PlayerInfo[playerid][pObj][index], PlayerInfo[playerid][pBone][index], PlayerInfo[playerid][pfOffsetX][index], PlayerInfo[playerid][pfOffsetY][index],  PlayerInfo[playerid][pfOffsetZ][index], PlayerInfo[playerid][pfRotX][index], PlayerInfo[playerid][pfRotY][index], PlayerInfo[playerid][pfRotZ][index], PlayerInfo[playerid][pfScaleX][index], PlayerInfo[playerid][pfScaleY][index], PlayerInfo[playerid][pfScaleZ][index],PlayerInfo[playerid][pObjColor][index]);
			}
			
		}
		
	}
	return 1;
}

Funcion:RemoveFlood(playerid)
{
	KillTimer(FloodTimer[playerid]);
	FloodAlerts[playerid] = 0;
	return 1;
}


public OnPlayerText(playerid, text[])
{
	if(AntiBypass) {
		if(GetPlayerScore(playerid) == 0){ ExpulsarJugador(playerid, "Error (9743)"); return 0;}
		if(LogeoCorrecto[playerid] == 0) { ExpulsarJugador(playerid, "Error (9741)"); return 0;}
	}
	KillTimer(FloodTimer[playerid]);
	FloodTimer[playerid] = SetTimerEx("RemoveFlood", TimerFlood, 0, "i", playerid);
	FloodAlerts[playerid] ++;
	if(FloodAlerts[playerid] >= AlertFlood)
	{
		return 0;
	}
	if(EventoOperacionesActivo)
	{
		if(strval(text) == SumaEventoOperaciones)
		{
			EventoOperacionesActivo = false;
			va_SendClientMessageToAll(-1,""CR"["Moneda1" - Juego]:"CB" El jugador "CR"%s"CB" resolvi� la operaci�n y obtuvo el "CR"premio"CB".", NombreJugador(playerid));
			RegaloRandomConquista(playerid);
		}
	}
	

	if(text[0] == '@' && text[1] != '@')
	{
		if(PlayerInfo[playerid][pAdmin] < 7) return 0;
		{
			new string[128],pName[32];
			GetPlayerName(playerid,pName,32);
			format(string,128,"� [@Canal Due�os] %s [%d]: "CB"(( %s ))",pName,playerid,text[1]);
			foreach(new i : Admin)
			{
				if(PlayerInfo[i][pAdmin] > 7)
				{
					Mensaje(i,COLOR_CHEAT,string);
				}
			}
		}
		return 0;
	}
	if(PlayerTemp[playerid][Specteando] == 1 && text[0] != '!' && text[1] != '!')
	{
		Mensaje(playerid,0xDEA600FF,"Por seguridad, no est� permitido hablar dentro del personaje mientras ves a un jugador.");
		Mensaje(playerid,-1,"Si necesitas hacerlo, usa el comando "CR"/d [texto]"CB".");
		return false;
	}
	SacarAyudaComandos(playerid);
	GetSpam(playerid,text);
	if(text[0] == '!' && text[1] != '!' && PlayerInfo[playerid][pTiempoCarcel] <= 0 && PlayerInfo[playerid][pTiempoJail] <= 0 && PlayerInfo[playerid][pRadio] == 1 && EstadoRadio[playerid] == 1)
	{
	    if(Esposando[playerid] == 1 || Esposando[playerid] == 2)
		{
		    Mensaje(playerid,-1,"No puedes utilizar tu radio comunicador si estas esposado.");
			return false;
		}
		if(PlayerInfo[playerid][pDuty] == 1 && PlayerInfo[playerid][jMiembro] == 1)
		{
			new chatadmin[144],banda;
			banda = PlayerInfo[playerid][jMiembro];
			
			format(chatadmin,sizeof(chatadmin),"[Radio] (%s %s dice): %s",RangoBanda(banda, PlayerInfo[playerid][pRango]),NombreJugador(playerid), text[1]);
			ProxDetector(20.0, playerid, chatadmin,-1,ColorChatNormal1,ColorChatNormal2,ColorChatNormal3,ColorChatNormal4);
			format(chatadmin,sizeof(chatadmin),"[Radio]"CB" %s %s: %s",RangoBanda(banda, PlayerInfo[playerid][pRango]),NombreJugador(playerid), text[1]);
			SendRadioMessage(1, TEAM_BLUE_COLOR, chatadmin,playerid, Frecuencia[playerid]);
			ReportCrimen(playerid,3);
			return 0;
		}
		else if(PlayerInfo[playerid][jMiembro] > 1 && PlayerInfo[playerid][pDuty] == 0)
		{
			new chatadmin[144],banda;
			banda = PlayerInfo[playerid][jMiembro];
			
			format(chatadmin,sizeof(chatadmin),"[Radio] "CB"%s %s: %s",RangoBanda(banda, PlayerInfo[playerid][pRango]),NombreJugador(playerid),text[1]);
			SendRadioMessage(PlayerInfo[playerid][jMiembro], BandasInfo[banda][BColor2], chatadmin,playerid, 1);
			ProxDetector(15.0, playerid, chatadmin, COLORCARGO0,COLORCARGO0,COLORCARGO0,COLORCARGO0,COLORCARGO0);
			return 0;
		}
	}
	if(text[0] == '!' && text[1] == '!' && PlayerInfo[playerid][pRadio] == 1 && EstadoRadio[playerid] == 1)
	{
		if(PlayerInfo[playerid][pDuty] == 1 && PlayerInfo[playerid][jMiembro] == 1)
		{
			new chatadmin[144];
			format(chatadmin,sizeof(chatadmin),"{3399FF}[Radio]"CB" %s: (( %s ))",NombreJugador(playerid), text[2]);
			SendRadioMessage(1, -1, chatadmin,INVALID_PLAYER_ID, Frecuencia[playerid]);
			return 0;
		}
		else if(PlayerInfo[playerid][jMiembro] > 1)
		{
			new chatadmin[144];
			format(chatadmin,sizeof(chatadmin),"{%s}[Radio]"CB" %s: (( %s ))",BandasInfo[PlayerInfo[playerid][jMiembro]][BColor],NombreJugador(playerid), text[2]);
			SendRadioMessage(PlayerInfo[playerid][jMiembro],-1, chatadmin,INVALID_PLAYER_ID, 1);
			return 0;
		}
	}
	if(PlayerInfo[playerid][MobileSub] != -1 && EnLlamada[playerid] == 1)
	{
		if(PlayerInfo[playerid][MobileSub] == 2540)
		{
			if(text[0] == 's' && text[1] == 'i' || text[0] == 'S' && text[1] == 'i' || text[0] == 'S' && text[1] == 'I')
			{
				new string[144];
				format(string, sizeof(string), "%s (por celular) dice: %s", NombreJugador(playerid), text);
				ProxDetector(15.0, playerid, string, COLORCARGO0,COLORCARGO0,COLORCARGO0,COLORCARGO0,COLORCARGO0);
				SetTimerEx("LlamadaAceptada",1000,false,"d",playerid);
				return 0;
			}
			else if(text[0] == 'n' || text[0] == 'N')
			{
				new string[144];
				format(string, sizeof(string), "%s (por celular) dice: %s", NombreJugador(playerid), text);
				ProxDetector(15.0, playerid, string, COLORCARGO0,COLORCARGO0,COLORCARGO0,COLORCARGO0,COLORCARGO0);
				SetTimerEx("LlamadaCancelada",1000,false,"d",playerid);
				return 0;
			}
			else Mensaje(playerid, -1, "Usa para contestar "CR"si"CB" o "CR"no"CB" envi�ndolo como chat com�n.");
		}
		if(EnLlamada911[playerid] == 911)
		{
			new string[144];
			if(PlayerInfo[playerid][jMiembro] == 1) format(string, sizeof(string), "%s %s (por celular) "CB"dice: %s", RangoPolicia(playerid), NombreJugador(playerid), text);
			else format(string, sizeof(string), "%s (por celular) "CB"dice: %s", NombreJugador(playerid), text);
			Mensaje(PlayerInfo[playerid][MobileSub],TEAM_BLUE_COLOR,string);
			ProxDetector(15.0, playerid, string, COLORCARGO0,COLORCARGO0,COLORCARGO0,COLORCARGO0,COLORCARGO0);
			return 0;
		}
		else
		{
			new string[144];
			format(string, sizeof(string), "%s (por celular) dice: %s", NombreJugador(playerid), text);
			Mensaje(PlayerInfo[playerid][MobileSub],COLOR_SMS,string);
			if(PlayerTemp[playerid][Specteando] == 0) ProxDetector(15.0, playerid, string, COLORCARGO0,COLORCARGO0,COLORCARGO0,COLORCARGO0,COLORCARGO0);
			else Mensaje(playerid,-1,string);
			return 0;
		}
	}
	new string[144];
	if(EstaEn(playerid, 1.0, -1191.9042,2035.5724,1248.3600) || EstaEn(playerid, 1.0, 631.2384,-180.1683,1276.7941))
	{
	    if(GetPlayerDrunkLevel(playerid) > 1999) format(string, sizeof(string), "%s alcoholizado por micr�fono: %s",NombreJugador(playerid), text);
	    else format(string, sizeof(string), "%s por micr�fono: %s",NombreJugador(playerid), text);
		ProxDetector(110.0, playerid, string,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF);
	}
	else
	{
		if(PlayerInfo[playerid][pAcento] > 0 && PlayerInfo[playerid][pAcento] != 32)
		{
		    if(GetPlayerDrunkLevel(playerid) > 1999) format(string, sizeof(string), "[Acento %s] %s alcoholizado dice: %s",GetNameAcento(PlayerInfo[playerid][pAcento]), NombreJugador(playerid), text);
			else format(string, sizeof(string), "[Acento %s] %s dice: %s", GetNameAcento(PlayerInfo[playerid][pAcento]), NombreJugador(playerid), text);
		}
		else if(PlayerInfo[playerid][pAcento] == 32)
		{
		    if(GetPlayerDrunkLevel(playerid) > 1999) format(string, sizeof(string), "[Acento %s] %s alcoholizado dice: %s",PlayerInfo[playerid][AcentoP], NombreJugador(playerid), text);
			else format(string, sizeof(string), "[Acento %s] %s dice: %s", PlayerInfo[playerid][AcentoP], NombreJugador(playerid), text);
		}
		else if(GetPlayerDrunkLevel(playerid) > 1999) format(string, sizeof(string), "%s alcoholizado dice: %s",NombreJugador(playerid), text);
		else format(string, sizeof(string), "%s dice: %s",NombreJugador(playerid), text);
		ProxDetector(40.0, playerid, string,CHAT,CHAT2,CHAT3,CHAT4,CHAT5);
		if(PlayerInfo[playerid][VIP] <= 2) SetPlayerChatBubble(playerid, text, 0xFFFFFFFF, 15.0, 5000);
		else if(PlayerInfo[playerid][VIP] > 2) SetPlayerChatBubble(playerid, text,RandomColors[random(37)+1], 15.0, 5000);
	}
	return 0;
}

Funcion:bool:Buscar(const search[], const find[])
{
	if(strfind(search, find) != -1) return true;
	return false;
}

TuningDialogo(playerid, dialogid)
{
	switch(dialogid)
	{

		case DIALOG_VOBJECT_TEXT_MENU:
		{
			new caption[64];							 
			format(caption, sizeof caption, "Texto '%s'",TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_text_TEXT]);

			MostrarDialog(playerid, dialogid, DIALOG_STYLE_LIST, caption, "Editar texto\nCambiar fuente\nTama�o de letra\nNegrita\nColor de fuente", ">>", "Atr�s");
			return 1;
		}
		case DIALOG_VOBJECT_TEXT_TEXT:
		{
			new dialog[128];
			format(dialog, sizeof dialog, "Texto actual:\n\"%s\"\n\nIndica el nuevo texto (1-32 caracteres)\n",
  			TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_text_TEXT]);
			MostrarDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Modificar texto", dialog, ">>", "Atr�s");
			return 1;
		}
		case DIALOG_VOBJECT_TEXT_FONT:
		{
			new dialog[128];
			format(dialog, sizeof dialog, "Fuente actual:\n\"%s\"\n\nIndica la nueva fuente (1-24 caracteres)\n",

		
			TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_text_FONT]);
			
			
			MostrarDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Modificar fuente", dialog, ">>", "Atr�s");
			return 1;
		}
		case DIALOG_VOBJECT_TEXT_FONT_SIZE:
		{
			new dialog[128];
			format(dialog, sizeof dialog, "Tama�o actual: %d\n\nIndica el tama�o de letra (1-255 caracteres)\n",
			TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_text_FONT_SIZE]);
			MostrarDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Modificar fuente", dialog, ">>", "Atr�s");
			return 1;
		}
		case DIALOG_VOBJECT_TEXT_FONT_COLOR:
		{
			MostrarDialog(playerid, dialogid, DIALOG_STYLE_LIST, "Selecciona color", DialogFormatColores, ">>", "Atr�s");
			return 1;
		}

		case TUNING_MENU:
		{
			new caption[45];
			format(caption, sizeof caption, ""Moneda1" Tuning Club - '%s'",GetVehicleName(TuningVehiculo[playerid]));
			MostrarDialog(playerid, TUNING_MENU, DIALOG_STYLE_LIST, caption, "Mis objetos\nComprar objetos\nA�adir bandera de pa�s\nAgregar texto", "Siguente", "Salir");
			return 1;
		}
		case TUNING_MENUOBJ:
		{
			new caption[45], dialog[145 * (MAX_TOBJETOS + 2)], line_str[145];
			format(caption, sizeof caption, ""Moneda1" Tuning Club - '%s'",GetVehicleName(TuningVehiculo[playerid]));
			format(dialog, sizeof dialog, "{90C3D4}N�mero\tEstado\n");
			for(new i = 0; i != MAX_TOBJETOS; i ++)
			{
				if(TuningObjetos[playerid][TuningVslot[playerid]][i][vobject_VALID])
				{
					if(TuningObjetos[playerid][TuningVslot[playerid]][i][vobject_ATTACHED]) format(line_str, sizeof line_str, "#%d\t"CB"Colocado\n", i + 1);
					else format(line_str, sizeof line_str, "#%d\t"CB"Guardado\n", i + 1);
				}
				else format(line_str, sizeof line_str, "{666666}#%d\t{666666}Vacio\n", i + 1);
				strcat(dialog, line_str);
			}
			strcat(dialog, "{FF3300}- Eliminar todo\n");
			MostrarDialog(playerid, TUNING_MENUOBJ, DIALOG_STYLE_TABLIST_HEADERS, caption, dialog, "Siguente", "Atr�s");
			return 1;
		}
		case TUNING_MENUOBJ2:
		{
			new caption[45], dialog[256];
			format(caption, sizeof caption, "Objeto #%d",TuningSlot[playerid]+1);
			switch(TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_TYPE])
			{
				case TuningObjeto_Objeto:
				{
					if(TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_ATTACHED]) format(dialog, sizeof dialog, "{CCCCCC}Guardar este objeto\n{CCCCCC}Editar posici�n del objeto\n{CCCCCC}Colores\n{CCCCCC}Eliminar este objeto");
					else format(dialog, sizeof dialog, "{CCCCCC}Colocar este objeto\n{666666}Editar posici�n del objeto\n{666666}Colores\n{CCCCCC}Vender este objeto");
				}
				case TuningObjeto_Bandera:
				{
					if(TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_ATTACHED]) format(dialog, sizeof dialog, "{CCCCCC}Guardar este objeto\n{CCCCCC}Editar posici�n del objeto\n{CCCCCC}Eliminar este objeto");
					else format(dialog, sizeof dialog, "{CCCCCC}Colocar este objeto\n{666666}Editar posici�n del objeto\n{CCCCCC}Vender este objeto");
				}
				case TuningObjeto_Texto:
				{
				    if(TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_ATTACHED]) format(dialog, sizeof dialog, "{CCCCCC}Guardar este objeto\n{CCCCCC}Editar posici�n del objeto\n{CCCCCC}Texto\n{CCCCCC}Eliminar este objeto");
					else format(dialog, sizeof dialog, "{CCCCCC}Colocar este objeto\n{666666}Editar posici�n del objeto\n{666666}Texto\n{CCCCCC}Eliminar este objeto");
					
				}
				case TuningObjeto_Panel: return TuningDialogo(playerid,TUNING_BORRAR);
			}
			MostrarDialog(playerid, TUNING_MENUOBJ2, DIALOG_STYLE_LIST, caption, dialog, "Siguente", "Atr�s");
			return 1;
		}
		case TUNING_COLOR:
		{
			new dialog[45 * MAX_VEHICLE_OBJECTS_INDEXS], line_str[45];
			for(new i = 0; i != MAX_VEHICLE_OBJECTS_INDEXS; i ++)
			{
				if(!TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_COLORS][i]) format(line_str, sizeof line_str, ""CB"Color #%d (original)\n", i + 1);
				else format(line_str, sizeof line_str, "{%06x}Color #%d\n", ARGBToRGBA(TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_COLORS][i]) >>> 8, i + 1);
				strcat(dialog, line_str);
			}
			MostrarDialog(playerid, TUNING_COLOR, DIALOG_STYLE_LIST, "Cambiar colores", dialog, ">>", "Atr�s");
			return 1;
		}
		case TUNING_BORRAR:
		{
			new dialog[175];
			format(dialog, sizeof dialog, ""CB"�Est�s seguro de eliminar este objeto?");
			MostrarDialog(playerid, TUNING_BORRAR, DIALOG_STYLE_MSGBOX, "Eliminar objeto", dialog, "Eliminar", "Atr�s");
			return 1;
		}
		case TUNING_TYPE:
		{
			new caption[45];
			format(caption, sizeof caption, ""Moneda1" Tuning Club - '%s'",GetVehicleName(TuningVehiculo[playerid]));
			MostrarDialog(playerid, TUNING_TYPE, DIALOG_STYLE_LIST, caption, "Parachoques delanteros\nParachoques traseros\nAlerones\nNeones", "Siguente", "Atr�s");
			return 1;
		}
	}
	return 1;
}

static AgregarTuning(playerid, modelid, type = 0)
{
	new slot = GetVehicleFreeObjectSlot(playerid,TuningVslot[playerid]), mat = 0;
	if(slot == -1) return Mensaje(playerid, -1, "No hay m�s espacio para objetos en este veh�culo."),TuningDialogo(playerid, TUNING_MENU);
	TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_VALID] = true;
	TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_ID] = 0;

	switch(type)
	{
	    case 0: TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_TYPE] = TuningObjeto_Objeto;
		case 1416: mat = 1,TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_TYPE] = TuningObjeto_Texto;
	    default: mat = 1,TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_TYPE] = TuningObjeto_Bandera;
	}

	TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_MODELID] = modelid;
	TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_ATTACHED] = true;
	TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_COLORS][0] = type;
	if(type == 1416)
	{
	
		format(TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_text_TEXT], 32, "Mi texto");
		format(TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_text_FONT], 24, "Arial");
		TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_text_FONT_SIZE] = 80;
		TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_text_BOLD] = false;
		TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_text_FONT_COLOR] = 0xFF000000;
		//
		SendClientMessage(playerid,-1,"Compraste un texto para tu veh�culo por "CR"$1500"CB".");
		QuitarDinero(playerid, 1500);
		//
	}
	TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_OBJECT_ID] = INVALID_STREAMER_ID;
	new query[600];
	mysql_format(Conecction, query, sizeof(query),"INSERT INTO `v_tuning` (`UserID`, `VehicleID`, `tipo`, `modelid`, `off_x`, `off_z`, `off_y`, `rot_x`, `rot_y`,`rot_z`,`attached`) VALUES('%d', '%d', '%d', '%d','%f', '%f', '%f', '%f', '%f', '%f','%d')",PlayerInfo[playerid][p_DBID],VehicleInfo[playerid][TuningVslot[playerid]][v_DBID],TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_TYPE],TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_MODELID],TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_OFFSET][0],TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_OFFSET][1],TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_OFFSET][2],TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_ROT][0],TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_ROT][1],TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_ROT][2],TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_ATTACHED]);
	mysql_tquery(Conecction, query, "ObjetoRegistrado", "dd", playerid, slot);
 	ActualizarTuningObjeto(playerid, TuningVslot[playerid], slot, mat);
	EditVehicleObject(playerid,TuningVehiculo[playerid], slot);
	return 1;
}
public OnPlayerModelSelection(playerid, response, listid, modelid)
{
	
	if(listid == barp || listid == motorp || listid == vehrp || listid == helicopterostienda) //Vehiculos
	{
		if(response) {
			new string3[200];
			format(string3,sizeof(string3),""CB"El veh�culo solicitado cuesta "CR"%d "Moneda1""CB".\n\n"CB"�Quieres comprar este veh�culo?",PRECIO_VEH_WZ);
			MostrarDialog(playerid, COMPRAR_VEHICULO, DIALOG_STYLE_MSGBOX, ""CR"!ATENCI�N!",string3,"Comprar","Cancelar");
		}
		else
	 	{
			DialogTiendaDP(playerid);
    	}
    	VehiculoMarcado[playerid] = modelid;
    	TipoVehiculo[playerid] = 1;
    }
   	if(listid == botesespecial || listid == helicopterosespecial || listid == vehiculosespecial || listid == motosespeciales) //Vehiculos
	{
		if(response)
		{
		    VehiculoMarcado[playerid] = modelid;
		    if(modelid == 557 || modelid == 557 || modelid == 557 || modelid == 407 || modelid == 432 || modelid == 441 || modelid == 548 || modelid == 519 || modelid == 447 || modelid == 425 || modelid == 460 || modelid == 513 || modelid == 519 || modelid == 520 || modelid == 553)
		    {
				MostrarDialog(playerid, COMPRAR_VEHICULO, DIALOG_STYLE_MSGBOX, ""CR"!ATENCI�N!",""CB"El veh�culo solicitado cuesta "CR""#PRECIO_VEH_COINS_E" "Moneda3""CB".\n\n"CB"�Quieres comprar este veh�culo?","Comprar","Cancelar");
				TipoVehiculo[playerid] = 3;
			}
			else {
				new string3[200];
				format(string3,sizeof(string3),""CB"El veh�culo solicitado cuesta "CR"%d "Moneda3""CB".\n\n"CB"�Quieres comprar este veh�culo?", PRECIO_VEH_COINS);
				MostrarDialog(playerid, COMPRAR_VEHICULO, DIALOG_STYLE_MSGBOX, ""CR"!ATENCI�N!",string3,"Comprar","Cancelar");
				TipoVehiculo[playerid] = 2;
			}
		}
		else
	 	{
			DialogTiendaDP(playerid);
    	}
    }
	if(listid == RopaHombre || listid == RopaMujer || listid == RopaHombreCoin || listid == RopaMujerCoin) //ropa
	{
 		if(response)
		{
			if(modelid == PlayerInfo[playerid][jRopa]) return Mensaje(playerid,-1, "Ya tienes esta vestimenta.");
			new string3[200];
			if(TipoRopa[playerid] == 1) format(string3,sizeof(string3),""CB"La vestimenta solicitada cuesta "CR"%d "Moneda1""CB".\n\n"CB"�Quieres comprarla?", PRECIO_SKINS_WZ);
			else format(string3,sizeof(string3),""CB"La vestimenta solicitada cuesta "CR"%d "Moneda3""CB".\n\n"CB"�Quieres comprarla?", PRECIO_SKINS_COINS);
			MostrarDialog(playerid, COMPRAR_ROPA, DIALOG_STYLE_MSGBOX, ""CR"!ATENCI�N!",string3,"Comprar","Cancelar");
			VehiculoMarcado[playerid] = modelid;
		}
		/*else {
			DialogTiendaDP(playerid);
    	}*/
    }
	return 1;
}
public OnPlayerModelSelectionEx(playerid, response, extraid, modelid)
{
	if(extraid == AutosSAPDLSPD)
	{
		if(response){

			new Float:pos[3];
			GetPlayerPos(playerid, pos[0],pos[1],pos[2]);
			new vid = CreateVehicle(modelid, pos[0], pos[1], pos[2]+0.3, 90.0, 0, 1, 500,true);

			VehicleFuel[vid] = CombustibleCoche(vid);
			VehiculosInfo[vid][vcomprable] = 0;
			VehiculosInfo[vid][vfaccion] = 1;
			VehiculosInfo[vid][SpawnManual] = 1;
			PutPlayerInVehicleAC(playerid, vid, 0);
		}
	}
	if(extraid == COMPRAPRENDAS)
	{
		if(response)
		{   
	 		if(NPrendas[playerid] >= 4) return Mensaje(playerid,-1,"No puedes comprar m�s de 4 prendas.");
			if(PlayerInfo[playerid][Moneda] < PRECIO_PRENDAS_WZ && TipoPrenda[playerid] == 1)
			{
				new string[150];
				format(string,sizeof(string),""CB"El objeto solicitado cuesta "CR"%d "Moneda1""CB".\n\n"CB"Para m�s informaci�n usa {FF3300}/ayuda", PRECIO_PRENDAS_WZ);
				MostrarDialog(playerid, DIALOG_INFO, DIALOG_STYLE_MSGBOX, "{d70000}No tienes los "Moneda1" necesarios",string,"Cerrar","");
				return 1;
			}
			if(PlayerInfo[playerid][Credits] < PRECIO_PRENDAS_COINS && TipoPrenda[playerid] == 2)
			{
				new string[150];
				format(string,sizeof(string),""CB"El objeto solicitado cuesta "CR"%d "Moneda3""CB".\n\n"CB"Para m�s informaci�n usa {FF3300}/ayuda", PRECIO_PRENDAS_COINS);
				MostrarDialog(playerid, DIALOG_INFO, DIALOG_STYLE_MSGBOX, "{d70000}No tienes los "Moneda3" necesarios",string,"Cerrar","");
				return 1;
			}
			if(PlayerInfo[playerid][pObj][0] == modelid || PlayerInfo[playerid][pObj][1] == modelid || PlayerInfo[playerid][pObj][2] == modelid || PlayerInfo[playerid][pObj][3] == modelid)
			{
				return Mensaje(playerid,-1,"Ya tienes esta "CR"prenda"CB".");
			}
			new string3[200];
			if(TipoPrenda[playerid] == 1) format(string3,sizeof(string3),""CB"El objeto solicitado cuesta "CR"%d "Moneda1""CB".\n\n"CB"�Quieres comprar este objeto?", PRECIO_PRENDAS_WZ);
			if(TipoPrenda[playerid] == 2) format(string3,sizeof(string3),""CB"El objeto solicitado cuesta "CR"%d "Moneda3""CB".\n\n"CB"�Quieres comprar este objeto?", PRECIO_PRENDAS_COINS);
			PrendaMarcada[playerid] = modelid;
			MostrarDialog(playerid, COMPRAR_PRENDA, DIALOG_STYLE_MSGBOX, ""CR"!ATENCI�N!",string3,"Comprar","Cancelar");
		}
	}
	if(extraid == TUNINGSHOP)
	{
		
		if(response){
			 if(PlayerInfo[playerid][Moneda] < 4) return Mensaje(playerid,-1,"Necesitas "CR"4"Moneda1""CB" para comprar este objecto.");
			 else
			 {
				AgregarTuning(playerid, modelid);
				Mensaje(playerid, -1, "Compraste este objeto por "CR"4 "Moneda1""CB".");
				PlayerInfo[playerid][Moneda] -= 4;
			 }
			
		} 
		else TuningDialogo(playerid, TUNING_TYPE);
	}
	return 1;
}

static BandaType(id)
{
	new gangtype[15];
	switch(id)
	{
		case 0: gangtype = "Mafia";
		case 1: gangtype = "Pandilla";
		case 2: gangtype = "Organizaci�n";
	}
	return gangtype;
}

Funcion:ConfirmarContra(playerid)
{
	if(cache_num_rows() == 1)
	{
		new str[57+1];
		format(str, sizeof(str), "%sRecuerda que la seguridad de tu cuenta est� en tus manos.", str);
		MostrarDialog(playerid, CONTRASENA, DIALOG_STYLE_INPUT, "Contrase�a correcta, digite la nueva contrase�a.", str, "Aceptar", "");
	}
	else
	{
		Mensaje(playerid, -1, "Error, contrase�a incorrecta.");
	}
}

Funcion:SelectNombre(playerid, inputtext[])
{
    if(PlayerInfo[playerid][Moneda] < 15) return Mensaje(playerid,-1,"Necesitas "CR"15"Moneda1""CB" para poder cambiarte el nombre.");
	if(cache_num_rows()) return Mensaje(playerid,-1,"Este nombre no esta disponible.");
	new query[250];
	
	mysql_format(Conecction, query, sizeof(query), "UPDATE `facciones` SET `Lider`='%e' WHERE `Lider`='%e' LIMIT 1", inputtext, PlayerInfo[playerid][NombreTemporal]);
	mysql_tquery(Conecction, query);

	/*mysql_format(Conecction, query, sizeof(query), "UPDATE `invitaciones` SET `Invitado`='%e' WHERE `Invitado`='%e'", inputtext, PlayerInfo[playerid][NombreTemporal]);
	mysql_tquery(Conecction, query);*/

	mysql_format(Conecction, query, sizeof(query), "INSERT INTO `log_nombres`(UserID,`Viejo_Nombre`, `Nuevo_Nombre`) VALUES ('%d','%e', '%e')", PlayerInfo[playerid][p_DBID],PlayerInfo[playerid][NombreTemporal], inputtext);
	mysql_tquery(Conecction, query);

	mysql_format(Conecction, query, sizeof(query), "UPDATE `propiedades` SET `Propietario`='%e' WHERE `Propietario`='%e'", inputtext, PlayerInfo[playerid][NombreTemporal]);
	mysql_tquery(Conecction, query);

	new rplName[32];
	format(rplName,sizeof rplName,"%s",inputtext);
	new slen = strlen(rplName);
	for(new i = 0; i < slen; i++)
	{
		if(rplName[i] == '_') rplName[i] = ' ';
	}
	#if defined UsarForo
	mysql_format(Conecction2, query, sizeof(query), "UPDATE `smf_members` SET member_name = '%e', real_name = '%e' WHERE UserID = '%d'",inputtext,rplName,PlayerInfo[playerid][p_DBID]);
	mysql_tquery(Conecction2, query);
	#endif
	foreach(new p : Propiedades)
	{
	    if(PropInfo[p][pEnUso] == 1 && PropInfo[p][pIDPropietario] == PlayerInfo[playerid][p_DBID])
	    {
			format(PropInfo[p][pPropietario],40,"%s",inputtext);
			CargarPropiedad(p,1);
	    }
	}
	mysql_format(Conecction, query, sizeof(query), "UPDATE `usuarios` SET `Username`='%e' WHERE `Username`='%e' LIMIT 1", inputtext, PlayerInfo[playerid][NombreTemporal]);
	mysql_tquery(Conecction, query);
	va_SendClientMessage(playerid,-1,"Se te cambio el nombre correctamente a {F6FF00}%s"CB" por un costo de "CR"15"Moneda1""CB".",inputtext);
	Mensaje(playerid,-1,"Fuiste expulsado por el servidor, ingresa con tu nuevo nombre.");
	PlayerInfo[playerid][Moneda] -= 15;
	format(query, 150, "Notificaci�n: %s (ID: %d) se cambi� el nombre a %s", PlayerInfo[playerid][NombreTemporal], playerid, inputtext);
	MensajeAdmin(COLOR_CHEAT, query, 3);
	ExpulsarJugador(playerid, "Cambio de nombre");
	return 1;
}

Funcion:CambiarNumero(playerid)
{
	if(cache_num_rows() == 1)
	{
	 Mensaje(playerid,-1,"Este n�mero ya se encuentra en uso, intenta con otro.");
  	 MostrarDialog(playerid,D_CONFIGNU, DIALOG_STYLE_INPUT,""CR"Cambiar n�mero",""CB"Ingresa el n�mero que quieres usar:","Ingresar","Salir");
	 return 1;
	}
	new stringg[200],precionum;
	precionum = 10;
	if(PlayerInfo[playerid][tempNum] > 100 && PlayerInfo[playerid][tempNum] < 1000) precionum = 40;
	if(PlayerInfo[playerid][tempNum] > 1000 && PlayerInfo[playerid][tempNum] < 10000) precionum = 35;
	if(PlayerInfo[playerid][tempNum] > 10000 && PlayerInfo[playerid][tempNum] < 100000) precionum = 15;
	if(PlayerInfo[playerid][tempNum] > 100000) precionum = 10;
 	format(stringg,sizeof(stringg),""CB"Cambiar n�mero de tel�fono\n           %d ---> {89746A}%d"CB"\n           Costo: "CR"%d"Moneda1""CB".",PlayerInfo[playerid][pNumero],PlayerInfo[playerid][tempNum],precionum);
 	MostrarDialog(playerid, D_CONFIGNU2, DIALOG_STYLE_MSGBOX, ""CR"Cambiar n�mero", stringg, "Si","No");
	return 1;
}


Funcion:CurarJugador1(playerid,id)
{
	ApplyAnimation(playerid,"COP_AMBIENT", "COPBROWSE_NOD", 4.1, 1, 1, 1, 1, 0);
	SetTimerEx("CurarJugador2",6000,false,"dd",playerid,id);
}

Funcion:CurarJugador2(playerid,id)
{
	ApplyAnimation(playerid,"COP_AMBIENT", "COPBROWSE_OUT", 4.1, 0, 0, 0, 1, 1);
	SetTimerEx("CurarJugador",3000,false,"dd",playerid,id);
}

Funcion:CurarJugador(playerid,id)
{
	if(SiendoCurado[id] == 1)
	{
		Revivir(id);
		RemovePlayerAttachedObject(playerid, 4);
	   	ClearAnimations(playerid);
	    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
		ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
		DescongelarEx(playerid);
		EstablecerVida(id, 40.0);
		SiendoCurado[playerid] = 0;
	    AndaCurando[playerid] = 0;
		new string[128];
		format(string, sizeof(string), "%s cur� a %s con el kit m�dico", PlayerInfo[playerid][NombreTemporal],PlayerInfo[id][NombreTemporal]);
		ProxDetector(35.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);

	}
}

static CargarUsuario(playerid)
{
	#if DEBUG_GM == 1
	printf("(CargarUsuario) playerid: %d", playerid);
	#endif
	KillTimer(TimerLogeo[playerid]);
	cache_get_value_name_int(0, "ID", PlayerInfo[playerid][p_DBID]);
	cache_get_value_name(0, "Username", PlayerInfo[playerid][pNombre]);
	cache_get_value_name_float(0, "Vida", PlayerInfo[playerid][jVida]);
	cache_get_value_name_float(0, "Chaleco", PlayerInfo[playerid][jArmadura]);
	cache_get_value_name_float(0, "posX", PlayerInfo[playerid][jPos_x]);
	cache_get_value_name_float(0, "posY", PlayerInfo[playerid][jPos_y]);
	cache_get_value_name_float(0, "posZ", PlayerInfo[playerid][jPos_z]);
	cache_get_value_name_int(0, "Interior", PlayerInfo[playerid][pInterior]);
	cache_get_value_name_int(0, "MundoVirtual", PlayerInfo[playerid][pMundoVirtual]);
	cache_get_value_name_int(0, "Online", PlayerInfo[playerid][pOnline]);
	cache_get_value_name_int(0, "Patines", PlayerInfo[playerid][pPatines]);
	cache_get_value_name_int(0, "Baneado", PlayerInfo[playerid][pBan]);
	cache_get_value_name_int(0, "Sed", PlayerInfo[playerid][pSed]);
	cache_get_value_name_int(0, "Licencia", PlayerInfo[playerid][pLicencia]);
	cache_get_value_name_int(0, "Hambre", PlayerInfo[playerid][pHambre]);
	cache_get_value_name_int(0, "SocioHP", PlayerInfo[playerid][pSocioHP]);
	cache_get_value_name_int(0, "TipoCarcel", PlayerInfo[playerid][pTipoCarcel]);
	cache_get_value_name_int(0, "TiempoCarcelS", PlayerInfo[playerid][pTiempoCarcel]);
	cache_get_value_name_int(0, "Numero", PlayerInfo[playerid][pNumero]);
	cache_get_value_name_int(0, "TiempoJail", PlayerInfo[playerid][pTiempoJail]);
	cache_get_value_name_int(0, "Cargos", PlayerInfo[playerid][pCargos]);
	cache_get_value_name_int(0, "Duty", PlayerInfo[playerid][pDuty]);
	cache_get_value_name_int(0, "SkinTrabajo", PlayerInfo[playerid][pModelo]);
	cache_get_value_name_int(0, "Agenda", PlayerInfo[playerid][pAgenda]);
	cache_get_value_name_int(0, "Stats", PlayerInfo[playerid][pStats]);
	cache_get_value_name_int(0, "CorreoVerificado", PlayerInfo[playerid][CorreoVerificado]);
	cache_get_value_name_int(0, "Radio", PlayerInfo[playerid][pRadio]);
	cache_get_value_name_int(0, "GPS", PlayerInfo[playerid][pGPS]);
	cache_get_value_name_int(0, "Rango", PlayerInfo[playerid][pRango]);
	cache_get_value_name_int(0, "Edad", PlayerInfo[playerid][jEdad]);
	cache_get_value_name_int(0, "Experiencia", PlayerInfo[playerid][jExperiencia]);
	cache_get_value_name_int(0, "Skin", PlayerInfo[playerid][jRopa]);
	cache_get_value_name_int(0, "Nivel", PlayerInfo[playerid][jNivel]);
	cache_get_value_name_int(0, "Sexo", PlayerInfo[playerid][jSexo]);
	cache_get_value_name_int(0, "Martillo", PlayerInfo[playerid][jMartillo]);
	cache_get_value_name_int(0, "Destornillador", PlayerInfo[playerid][jDestornillador]);
	cache_get_value_name_int(0, "Barreta", PlayerInfo[playerid][jBarreta]);
	cache_get_value_name_int(0, "Balde", PlayerInfo[playerid][jBalde]);
	cache_get_value_name_int(0, "Faccion", PlayerInfo[playerid][jMiembro]);
	cache_get_value_name_int(0, "Repuestos", PlayerInfo[playerid][Repuestos]);
	cache_get_value_name_int(0, "CasaID1", PlayerInfo[playerid][CasaID][0]);
	cache_get_value_name_int(0, "CasaID2", PlayerInfo[playerid][CasaID][1]);
	cache_get_value_name_int(0, "CasaID3", PlayerInfo[playerid][CasaID][2]);
	cache_get_value_name_int(0, "CasaID4", PlayerInfo[playerid][CasaID][3]);
	cache_get_value_name_int(0, "Agonizando", PlayerInfo[playerid][Agonizando]);
	cache_get_value_name_int(0, "Banco", PlayerInfo[playerid][pBanco]);
	cache_get_value_name_int(0, "Moneda", PlayerInfo[playerid][Moneda]);
	cache_get_value_name_int(0, "Creditos", PlayerInfo[playerid][Credits]);
	cache_get_value_name_int(0, "Money", PlayerInfo[playerid][jDinero]);
	cache_get_value_name_int(0, "Medicamentos", PlayerInfo[playerid][pMedicamentos]);
	cache_get_value_name_int(0, "Crack", PlayerInfo[playerid][pCrack]);
	cache_get_value_name_int(0, "Caramelos", PlayerInfo[playerid][pCaramelos]);
	cache_get_value_name_int(0, "Materiales", PlayerInfo[playerid][pMateriales]);
	cache_get_value_name_int(0, "Semillas", PlayerInfo[playerid][pSemillas]);
	cache_get_value_name_int(0, "Marihuana", PlayerInfo[playerid][pMarihuana]);
	cache_get_value_name_int(0, "KitMedico", PlayerInfo[playerid][pKitm]);
	cache_get_value_name_int(0, "Trabajo", PlayerInfo[playerid][Trabajo][0]);
	cache_get_value_name_int(0, "Trabajo2", PlayerInfo[playerid][Trabajo][1]);
	cache_get_value_name_int(0, "Trabajo3", PlayerInfo[playerid][Trabajo][2]);
	cache_get_value_name_int(0, "Admin", PlayerInfo[playerid][pAdmin]);
	cache_get_value_name_int(0, "Maper", PlayerInfo[playerid][pMaper]);
	cache_get_value_name_int(0, "Regalo", PlayerInfo[playerid][jRegalo]);
	cache_get_value_name_int(0, "PuntosCarrera", PlayerInfo[playerid][pPuntosCarrera]);
	cache_get_value_name(0, "Pais", PlayerInfo[playerid][pPais]);
	cache_get_value_name(0, "Ciudad", PlayerInfo[playerid][pCiudad]);
	cache_get_value_name(0, "Email", PlayerInfo[playerid][pEmail]);
	cache_get_value_name_int(0, "Conexion", PlayerInfo[playerid][jConexion]);
	cache_get_value_name(0, "razon", PlayerInfo[playerid][pRazon]);
	cache_get_value_name(0, "totem", PlayerInfo[playerid][Totem]);
	cache_get_value_name(0, "RazonSan", PlayerInfo[playerid][pRazonSan]);
	cache_get_value_name(0, "NombreEmisora", Emisoras[playerid][NombreEmisora]);
	cache_get_value_name_int(0, "TiempoPD", TiempoPD[playerid]);
	cache_get_value_name_int(0, "NMute", TiempoDuda[playerid]);
	cache_get_value_name_int(0, "TieneEmisora", Emisoras[playerid][TieneEmisora]);
	cache_get_value_name_int(0, "arrestado", PlayerInfo[playerid][arrestado]);
	cache_get_value_name_int(0, "Sanciones", PlayerInfo[playerid][sancionado]);
	cache_get_value_name_int(0, "horasjugadas", PlayerInfo[playerid][horasjugadas]);
	cache_get_value_name_int(0, "suspendido", PlayerInfo[playerid][suspendido]);
	cache_get_value_name_int(0, "TimeOn", PlayerInfo[playerid][TimeOn]);
	cache_get_value_name_int(0, "CanalDudas", CanalDudas[playerid]);
	cache_get_value_name_int(0, "ShowCone", ShowCone[playerid]);
	cache_get_value_name_int(0, "ShowGuia", ShowGuia[playerid]);
	cache_get_value_name_int(0, "SedOculta", SedOculta[playerid]);
	cache_get_value_name_int(0, "ShowMutes", ShowMutes[playerid]);
	cache_get_value_name_int(0, "ShowVelo", ShowVelo[playerid]);
	cache_get_value_name_int(0, "ShowSound", ShowSound[playerid]);
	cache_get_value_name_int(0, "AvisoTerritorio", AvisoTerritorio[playerid]);
	cache_get_value_name_int(0, "ShowTerritorio", ShowTerritorio[playerid]);
	cache_get_value_name_int(0, "MostrarTwitter", MostrarTwitter[playerid]);
	cache_get_value_name_int(0, "TiendaInt", PlayerInfo[playerid][TiendaInt]);
	cache_get_value_name_int(0, "TiendaVw", PlayerInfo[playerid][TiendaVw]);
	cache_get_value_name_float(0, "TiendasX", PlayerInfo[playerid][TiendasX]);
	cache_get_value_name_float(0, "TiendasY", PlayerInfo[playerid][TiendasY]);
	cache_get_value_name_int(0, "Afinidad1", Afinidad[0][playerid]);
	cache_get_value_name_int(0, "Afinidad2", Afinidad[1][playerid]);
	cache_get_value_name_int(0, "Afinidad3", Afinidad[2][playerid]);
	cache_get_value_name_int(0, "Afinidad4", Afinidad[3][playerid]);
	cache_get_value_name_int(0, "Afinidad5", Afinidad[4][playerid]);
	cache_get_value_name_int(0, "Afinidad6", Afinidad[5][playerid]);
	cache_get_value_name_int(0, "RopaBasu", RopaBasu[playerid]);
	cache_get_value_name_int(0, "RopaMedi", RopaMedi[playerid]);
	cache_get_value_name_int(0, "RopaMeca", RopaMeca[playerid]);
	cache_get_value_name_int(0, "RopaMine", RopaMine[playerid]);
	cache_get_value_name_int(0, "VIP", PlayerInfo[playerid][VIP]);
	cache_get_value_name_int(0, "TiempoVip", PlayerInfo[playerid][jTiempoVip]);
	// Armas
	cache_get_value_name_int(0, "WP0", PlayerInfo[playerid][pWP0]);
	cache_get_value_name_int(0, "WP1", PlayerInfo[playerid][pWP1]);
	cache_get_value_name_int(0, "WP2", PlayerInfo[playerid][pWP2]);
	cache_get_value_name_int(0, "WP3", PlayerInfo[playerid][pWP3]);
	cache_get_value_name_int(0, "WP4", PlayerInfo[playerid][pWP4]);
	cache_get_value_name_int(0, "WP5", PlayerInfo[playerid][pWP5]);
	cache_get_value_name_int(0, "WP6", PlayerInfo[playerid][pWP6]);
	cache_get_value_name_int(0, "WP7", PlayerInfo[playerid][pWP7]);
	cache_get_value_name_int(0, "WP8", PlayerInfo[playerid][pWP8]);
	cache_get_value_name_int(0, "WP9", PlayerInfo[playerid][pWP9]);
	cache_get_value_name_int(0, "WP10", PlayerInfo[playerid][pWP10]);
	cache_get_value_name_int(0, "WP11", PlayerInfo[playerid][pWP11]);
	cache_get_value_name_int(0, "WP12", PlayerInfo[playerid][pWP12]);
	// Niveles
	cache_get_value_name_int(0, "NivelPiloto", PlayerInfo[playerid][pNivelMecanico]);
	cache_get_value_name_int(0, "ExpPiloto", PlayerInfo[playerid][pExpPiloto]);
	cache_get_value_name_int(0, "NivelArmero", PlayerInfo[playerid][pNivelArmero]);
	cache_get_value_name_int(0, "ExpArmero", PlayerInfo[playerid][pExpArmero]);
	cache_get_value_name_int(0, "NivelCamionero", PlayerInfo[playerid][pNivelCamionero]);
	cache_get_value_name_int(0, "ExpCamionero", PlayerInfo[playerid][pExpCamionero]);
	cache_get_value_name_int(0, "NivelBasurero", PlayerInfo[playerid][pNivelBasurero]);
	cache_get_value_name_int(0, "ExpBasurero", PlayerInfo[playerid][pExpBasurero]);
	cache_get_value_name_int(0, "NivelLadron", PlayerInfo[playerid][pNivelLadron]);
	cache_get_value_name_int(0, "ExpLadron", PlayerInfo[playerid][pExpLadron]);
	cache_get_value_name_int(0, "NivelPescador", PlayerInfo[playerid][pNivelPescador]);
	cache_get_value_name_int(0, "ExpPescador", PlayerInfo[playerid][pExpPescador]);
	cache_get_value_name_int(0, "NivelMinero", PlayerInfo[playerid][pNivelMinero]);
	cache_get_value_name_int(0, "ExpMinero", PlayerInfo[playerid][pExpMinero]);
	cache_get_value_name_int(0, "NivelTransportista", PlayerInfo[playerid][pNivelTransportista]);
	cache_get_value_name_int(0, "ExpTransportista", PlayerInfo[playerid][pExpTransportista]);
	cache_get_value_name_int(0, "NivelMedico", PlayerInfo[playerid][pNivelMedico]);
	cache_get_value_name_int(0, "ExpMedico", PlayerInfo[playerid][pExpMedico]);
	cache_get_value_name_int(0, "AMute", PlayerTemp[playerid][TiempoTwitter]);
 	cache_get_value_name_int(0, "EstiloCaminar",WalkStyle[playerid]);
	cache_get_value_name_int(0, "Acento", PlayerInfo[playerid][pAcento]);
	cache_get_value_name_int(0, "EstadoLaser",PlayerInfo[playerid][pEstadoLaser]);
	cache_get_value_name_int(0, "ColorLaser", PlayerInfo[playerid][pColorLaser]);
	cache_get_value_name_int(0, "MEstado", PlayerInfo[playerid][pTieneEstado]);
	cache_get_value_name(0, "Estado", PlayerInfo[playerid][pFraseEstado]);
	cache_get_value_name(0, "AcentoP", PlayerInfo[playerid][AcentoP]);
	cache_get_value_name_int(0, "Hongos", PlayerInfo[playerid][pHongos]);
	cache_get_value_name_int(0, "Cocaina", PlayerInfo[playerid][pCocaina]);
	cache_get_value_name_int(0, "DutyM", PlayerInfo[playerid][pDutyM]);
	cache_get_value_name_int(0, "C4", PlayerInfo[playerid][pC4]);
	cache_get_value_name_int(0, "Asesinatos", PlayerInfo[playerid][pAsesinatos]);
	cache_get_value_name_int(0, "AutoLogin", PlayerInfo[playerid][AutoLogin]);

	new bloqueadoc = 0;
	cache_get_value_name_int(0, "Bloqueado", bloqueadoc);

	LogeoCorrecto[playerid] = 1;
	SetSpawnInfo(playerid,NO_TEAM,PlayerInfo[playerid][jRopa],PlayerInfo[playerid][jPos_x], PlayerInfo[playerid][jPos_y], PlayerInfo[playerid][jPos_z],5,0,0,0,0,0,0);
	



	if(PlayerInfo[playerid][pBan] == 1)
	{
		new quienban[32];
		cache_get_value_name(0, "QuienBan", quienban);
		va_SendClientMessage(playerid, COLOR_MUTE, "Su cuenta se encuentra baneada, raz�n: %s.", PlayerInfo[playerid][pRazon]);
		va_SendClientMessage(playerid, COLOR_MUTE, "El administrador que te bane� fue: %s", quienban);
		new pPing = GetPlayerPing(playerid) + 150;
		SetTimerEx("KickTimer", (pPing > 500 ? 500 : pPing), false, "i", playerid);
		return 1;
	}
	if(PlayerInfo[playerid][pBan] > 1)
	{
		if(gettimeVariable > PlayerInfo[playerid][pBan])
		{
			new query[100];
			PlayerInfo[playerid][pBan] = 0;
			mysql_format(Conecction, query, sizeof(query),"UPDATE `usuarios` SET `Baneado`='0' WHERE `ID`='%d' LIMIT 1",PlayerInfo[playerid][p_DBID]);
		    mysql_tquery(Conecction,query);
		}
		else
		{
			new quienban[32];
			cache_get_value_name(0, "QuienBan", quienban);
			va_SendClientMessage(playerid, COLOR_MUTE, "Su cuenta se encuentra baneada temporalmente, raz�n: %s.", PlayerInfo[playerid][pRazon]);
			va_SendClientMessage(playerid, COLOR_MUTE, "El administrador que te bane� fue: %s", quienban);
			va_SendClientMessage(playerid, COLOR_MUTE, "Tiempo restante para que puedas jugar: %s", FormatTimeleft(PlayerInfo[playerid][pBan]-gettimeVariable));
			new pPing = GetPlayerPing(playerid) + 150;
			SetTimerEx("KickTimer", (pPing > 500 ? 500 : pPing), false, "i", playerid);
			return 1;
		}
		
	}
	if(bloqueadoc == 1)
	{
		Mensaje(playerid,-1, "� Su cuenta se encuentra bloqueada, contacta con un due�o por https://discord."WebName""CB"");
		new pPing = GetPlayerPing(playerid) + 150;
		SetTimerEx("KickTimer", (pPing > 300 ? 300 : pPing), false, "i", playerid);
		return 1;
		
	}
	
	
	/*if(PlayerInfo[playerid][CorreoVerificado] == 0) MostrarDialog(playerid, DEMAIL,DIALOG_STYLE_INPUT,"Ingresa tu direcci�n de e-mail","Ingresa un e-mail v�lido para recuperar tu contrase�a en caso de perderla.\n\nTu e-mail:","Siguiente","");
	else
	{*/
	User_Temp[playerid][CodigoDiscord] = -1;
	if(PlayerInfo[playerid][pAdmin] > 0)
	{
		if(!Iter_Contains(Admin, playerid)) Iter_Add(Admin, playerid);
	}
	TiempoVida[playerid] = gettimeVariable + 5;
	SpawnPlayer(playerid);
	//}

	return 1;
}



static PuedeInvitar(playerid)
{
	if(PlayerInfo[playerid][pRango] == 8) return 1;
	if(PlayerInfo[playerid][pRango] == 0) return 0;
	if(BandasInfo[PlayerInfo[playerid][jMiembro]][RANK_INV][PlayerInfo[playerid][pRango]-1] == 0) return 0;
	else return 1;
}


static PuedeAscDes(playerid)
{
	if(PlayerInfo[playerid][pRango] == 8) return 1;
	if(PlayerInfo[playerid][pRango] == 0) return 0;
	if(BandasInfo[PlayerInfo[playerid][jMiembro]][RANK_EDIT][PlayerInfo[playerid][pRango]-1] == 0) return 0;
	else return 1;
}

static PuedeExpulsar(playerid)
{
	if(PlayerInfo[playerid][pRango] == 8) return 1;
	if(PlayerInfo[playerid][pRango] == 0) return 0;
	if(BandasInfo[PlayerInfo[playerid][jMiembro]][RANK_EXP][PlayerInfo[playerid][pRango]-1] == 0) return 0;
	else return 1;
}
Funcion:DespedirOff(playerid, ID[])
{
	#if DEBUG_GM == 1
	printf("(DespedirOff) playerid: %d, depedido: %s", playerid, ID);
	#endif
	if(cache_num_rows())
	{
		new string[144],Query[146];
		/*BandasInfo[PlayerInfo[playerid][jMiembro]][BIntegrantes] --;
		mysql_format(Conecction, Query, sizeof(Query), "UPDATE `facciones` SET `Integrantes`='%d' WHERE `id`='%d' LIMIT 1",BandasInfo[PlayerInfo[playerid][jMiembro]][BIntegrantes],PlayerInfo[playerid][jMiembro]);
		mysql_tquery(Conecction, Query);*/
		ActualizarIntegrantes(PlayerInfo[playerid][jMiembro], 0);
		if(PlayerInfo[playerid][jMiembro] == 1)
		{
			format(string, 144, "{009BE4}%s {FFFFFF}fu� expulsado de la polic�a por {009BE4}%s",ID,NombreJugador(playerid));
			SendRadioMessage(PlayerInfo[playerid][jMiembro], -1, string,INVALID_PLAYER_ID, 1);
		}
		else
		{
			format(string, 144, "{009BE4}%s {FFFFFF}fu� expulsado de la banda por {009BE4}%s",ID,NombreJugador(playerid));
			SendRadioMessage(PlayerInfo[playerid][jMiembro], 0xff9c00FF, string,INVALID_PLAYER_ID, 1);
		}
		mysql_format(Conecction, Query, sizeof(Query), "UPDATE `usuarios` SET `Faccion`='0',`Rango`='0',`Duty`='0' WHERE `Username`='%e' LIMIT 1",ID);
		mysql_tquery(Conecction, Query);
	}
	else
	{
		Mensaje(playerid,-1,"Este usuario no se encuentra en tu faccion.");
	}
}


Funcion:ExplotarC4(playerid)
{
	new Float:x, Float:y, Float:z;
	GetDynamicObjectPos(C4PJ[playerid], x, y, z);
	CreateExplosion(x, y, z, 7, 2.0);
	DestroyDynamicObjectEx(C4PJ[playerid]);
	return 1;
}
Funcion:GangRegistrada(playerid)
{
	#if DEBUG_GM == 1
	printf("(GangRegistrada) playerid: %d", playerid);
	#endif
	new query[256];
	new ID = PlayerInfo[playerid][jMiembro] = cache_insert_id();
	ActualizarIntegrantes(ID, 1);
	mysql_format(Conecction, query, sizeof(query), "UPDATE `usuarios` SET Faccion = '%d', Rango = '8' WHERE `ID`= '%d' LIMIT 1",ID,PlayerInfo[playerid][p_DBID]);
	mysql_tquery(Conecction, query);
	return 1;
}
RangoBanda(banda, rangoid)
{
	new string[24];
	switch(rangoid)
	{
		case 1: format(string, sizeof(string), "%s", BRango[0][banda]);
		case 2: format(string, sizeof(string), "%s", BRango[1][banda]);
		case 3: format(string, sizeof(string), "%s", BRango[2][banda]);
		case 4: format(string, sizeof(string), "%s", BRango[3][banda]);
		case 5: format(string, sizeof(string), "%s", BRango[4][banda]);
		case 6: format(string, sizeof(string), "%s", BRango[5][banda]);
		case 7: format(string, sizeof(string), "%s", BRango[6][banda]);
		case 8: format(string, sizeof(string), "%s", BRango[7][banda]);
		default: format(string, sizeof(string), "Desconocido");
	}
	return string;
}


RangoYaCreado(banda, const rango[])
{
    if(!strcmp(BRango[0][banda], rango, true)) return 0;
    else if(!strcmp(BRango[1][banda], rango, true)) return 0;
    else if(!strcmp(BRango[2][banda], rango, true)) return 0;
    else if(!strcmp(BRango[3][banda], rango, true)) return 0;
    else if(!strcmp(BRango[4][banda], rango, true)) return 0;
    else if(!strcmp(BRango[5][banda], rango, true)) return 0;
    else if(!strcmp(BRango[6][banda], rango, true)) return 0;
    else if(!strcmp(BRango[7][banda], rango, true)) return 0;
	return 1;
}

Funcion:NuevoNombreFaccion(playerid, inputtext[])
{
	if(!cache_num_rows())
	{
		new Query[128], string[144];
		mysql_format(Conecction, Query, sizeof(Query), "UPDATE `facciones` SET `Nombre`='%e' WHERE `id`='%d' LIMIT 1",inputtext,PlayerInfo[playerid][jMiembro]);
		mysql_tquery(Conecction, Query);

		format(string, sizeof(string), "El nombre de la banda fue cambiado a {FF9900}%s",inputtext);
		SendRadioMessage(PlayerInfo[playerid][jMiembro], -1, string,INVALID_PLAYER_ID, 0);
		format(BandasInfo[PlayerInfo[playerid][jMiembro]][BNombre], MAX_BANDA_NAME,"%s", inputtext);
		//CargarFacciones();
		foreach(new i : Fabricas)
		{
			if(Fabricas[i][pBanda] == PlayerInfo[playerid][jMiembro])
			{
				format(string, sizeof(string), "{ff3e3e}F�brica de metanfetamina\n"CB"Propiedad de "CR"%s", inputtext);
				UpdateDynamic3DTextLabelText(Fabricas[i][pLabel], COLOR_BLANCO, string);
				break;
			}
		}
		
		MostrarDialog(playerid,CONFIG_BANDA2, DIALOG_STYLE_LIST, "Bandas: Administrar tu banda",""CB"- Cambiar el nombre de la banda\n"CB"- Cambiar el nombre de los rangos\n"CB"- Ajustar permisos de la banda\n"CB"- Eliminar tu banda","Seleccionar", "Salir");
	}
	else
	{
		Mensaje(playerid,-1,"El nombre ingresado para tu banda ya esta en uso.");
		MostrarDialog(playerid,CHANGE_CREW_NAME, DIALOG_STYLE_INPUT, "Nuevo nombre de la banda:", "Introduce el nuevo nombre de tu banda.", "Continuar", "Volver");
	}
}

Funcion:VerIntegrantes(playerid)
{
	new dialog[4000],Conexion,rango,name[24],online,sotoplayo[70],miembroson = 0, h=cache_num_rows();
	dialog = "Nombre\tRango\t�lt. conexi�n\n";
	BandasInfo[PlayerInfo[playerid][jMiembro]][BIntegrantes] = h;
	new queria[90];
	mysql_format(Conecction, queria, sizeof(queria), "UPDATE `facciones` SET `Integrantes`='%d' WHERE `id`='%d' LIMIT 1", BandasInfo[PlayerInfo[playerid][jMiembro]][BIntegrantes],PlayerInfo[playerid][jMiembro]);
	mysql_tquery(Conecction, queria);

	
	for(new i = 0; i < h; i++)
	{
		cache_get_value_name(i, "Username", name);
		cache_get_value_name_int(i, "Rango", rango);
		cache_get_value_name_int(i, "Conexion",Conexion);
		cache_get_value_name_int(i, "Online",online);


		if(online == 0) format(dialog, sizeof dialog, "%s%s\t%s\t%s\n", dialog,name, RangoBanda(PlayerInfo[playerid][jMiembro], rango),FormatTimeleft(gettimeVariable - Conexion));
		else{
            miembroson ++;
            format(dialog, sizeof dialog, "%s%s\t%s\t{80D465}Conectado"CB"\n", dialog,name, RangoBanda(PlayerInfo[playerid][jMiembro], rango));
        }
	}


	format(sotoplayo, sizeof sotoplayo,"Miembros conectados: "CR"%d"CB"/"CR"%d"CB"." , miembroson, h);
	return MostrarDialog(playerid, INFOMEDICO, DIALOG_STYLE_TABLIST_HEADERS, sotoplayo, dialog, "Volver", "");
}
GetNameAcento(ID)
{
	new name[17];
	switch(ID)
    {
       	case 0: name = "Normal";
		case 1: name = "Alem�n";
		case 2: name = "Britanico";
		case 3: name = "Japones";
		case 4: name = "Chino";
		case 5: name = "Koreano";
		case 6: name = "Venezolano";
		case 7: name = "Peruano";
		case 8: name = "Ruso";
		case 9: name = "Americano";
		case 10: name = "Espa�ol";
		case 11: name = "Colombiano";
		case 12: name = "Franc�s";
		case 13: name = "Italiano";
		case 14: name = "Gangster";
		case 15: name = "Uruguayo";
		case 16: name = "Brasilero";
		case 17: name = "Argentino";
		case 18: name = "Chileno";
		case 19: name = "Cubano";
		case 20: name = "Israeli";
		case 21: name = "Alem�n";
		case 22: name = "Hippie";
		case 23: name = "Escoc�s";
		case 24: name = "Irland�s";
		case 25: name = "Australiano";
		case 26: name = "�rabe";
		case 27: name = "Canadiense";
		case 28: name = "Mexicano";
		case 29: name = "Dominicano";
		case 30: name = "Costarricense";
		case 31: name = "Ecuatoriano";
		case 32: name = "Personalizado";
		default: name = "Normal";
   	}
   	return name;
}

Funcion: WalkAnim(playerid)
{
	new keys, updown, leftright;
	GetPlayerKeys(playerid,keys,updown,leftright);
	if (GetPlayerWalkingStyle(playerid) == WALK_NORMAL)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_player",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_player",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_PED)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_civi",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_civi",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
 	else if (GetPlayerWalkingStyle(playerid) == WALK_GANGSTA)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_gang1",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_gang1",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_GANGSTA2)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_gang2",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_gang2",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_OLD)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_old",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_old",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_FAT_OLD)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_fatold",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_fatold",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_FAT)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_fat",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_fat",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_LADY)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WOMAN_walknorm",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WOMAN_walknorm",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_LADY2)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WOMAN_walkbusy",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WOMAN_walkbusy",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_WHORE)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_WHORE2)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WOMAN_walksexy",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WOMAN_walksexy",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_DRUNK)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_drunk",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_drunk",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_BLIND)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","Walk_Wuzi",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","Walk_Wuzi",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	return 1;
}

static SetPlayerWalkingStyle(playerid, style)
{
 	WalkStyle[playerid] = style;
}
static GetPlayerWalkingStyle(playerid)
{
	return WalkStyle[playerid];
}
Funcion:MoverGlobo()
{
	MoveDynamicObjectEx(Globo, 1483.66833, -1617.19543, 90.88580, 5.0);
	SetTimer("MoverGlobo2", 15000, 0);
	return 1;
}

Funcion:MoverGlobo2()
{
	MoveDynamicObjectEx(Globo,  2240.46289, -1709.38525, 90.82670, 17.0);
	SetTimer("MoverGlobo3", 51000, 0);
	return 1;
}

Funcion:MoverGlobo3()
{
	MoveDynamicObjectEx(Globo,  2240.46289, -1709.38525, 21.86670, 5.0);
	SetTimer("MoverGlobo4", 40000, 0);
	return 1;
}

Funcion:MoverGlobo4()
{
	MoveDynamicObjectEx(Globo,  2240.46289, -1709.38525, 90.82670, 5.0);
	SetTimer("MoverGlobo5", 15000, 0);
	return 1;
}

Funcion:MoverGlobo5()
{
	MoveDynamicObjectEx(Globo,   1483.66833, -1617.19543, 90.88580, 17.0);
	SetTimer("MoverGlobo6", 51000, 0);
	return 1;
}

Funcion:MoverGlobo6()
{
	MoveDynamicObjectEx(Globo,   1483.66833, -1617.19543, 13.03780, 5.0);
	SetTimer("MoverGlobo", 51000, 0);
	return 1;
}
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
    #if DEBUG_GM == 1
    printf("(OnDialogResponse) PlayerID: %d | DialogID: %d | Response: %d | ListItem: %d", playerid, dialogid, response, listitem);
    #endif
	if(!IsPlayerConnected(playerid)) return 1;
	new string[450], Query[256];
	if (UltimoDialogID[playerid] != dialogid && dialogid != 874) {
		UltimoDialogID[playerid] = -1;
		//es hacker
		format(string,sizeof(string),"El jugador {FF3300}%s(ID: %d)"CB" fue expulsado por el anticheat. Raz�n:{FF3300} Dialog Hack"CB".",NombreJugador(playerid),playerid);
		MensajedeCheater(string);
		ExpulsarJugador(playerid, "Dialog Hack");
		return 1;
	}
	UltimoDialogID[playerid] = -1;
	new slen = strlen(inputtext);
	for(new s = slen - 1; s >= 0; s--)
	{
		if (inputtext[s] == '%' || inputtext[s] == '{' || inputtext[s] == '}') strdel(inputtext, s, s + 1);
	}
	switch(dialogid)
 	{
		case DIALOGO_DUELO1:
		{
		    if(response)
		    {
		        switch(listitem)
				{
				    case 0: ArenaSeleccionada[playerid]=0;
				    case 1: ArenaSeleccionada[playerid]=1;
				    case 2: ArenaSeleccionada[playerid]=2;
				    case 3: ArenaSeleccionada[playerid]=3;
				    case 4: ArenaSeleccionada[playerid]=4, DueloInfo[ArenaSeleccionada[playerid]][InteriorLK] = 1;
				}
				MostrarDialog(playerid,DIALOGO_DUELO2,DIALOG_STYLE_LIST,"{FFFFFF}Selecciona el tipo de armas","Armas rapidas 1\nArmas rapidas 2\nArmas lentas 1", "Aceptar", "Cancelar");
		    }
		}
		case DIALOGO_DUELO2:
		{
		    if(response)
		    {
		        switch(listitem)
				{
				    case 0: ArmasSeleccionada[playerid]=0;
				    case 1: ArmasSeleccionada[playerid]=1;
				    case 2: ArmasSeleccionada[playerid]=2;
				    case 3: ArmasSeleccionada[playerid]=3;
				}
				MostrarDialog(playerid,DIALOGO_DUELO3,DIALOG_STYLE_INPUT,"Ingresa {7401DF} ID del usuario.","�Qu� usuarios quieres {7401DF}invitar{FFFFFF}? ", "Invitar", "Cancelar");
		    }
		}
		case DIALOGO_DUELO3:
		{
		    if(response)
		    {
		        new jugador;
				if(sscanf(inputtext,"u",jugador)) return SendClientMessage(playerid,-1,"El jugador no est� {7401DF}conectado");
		        if(jugador == INVALID_PLAYER_ID) return SendClientMessage(playerid,-1,"El jugador no est� {7401DF}conectado");
                if(jugador == playerid) return SendClientMessage(playerid,-1,"No puedes jugar contra vos mismo, {7401DF}pelotudo");
				if(PlayerDuelo[jugador][Estaenduelo] == 1) return SendClientMessage(playerid,-1,"�El jugador se encuentra en {7401DF}duelo!");
				if(PlayerInfo[jugador][pTiempoCarcel] > 0 || PlayerInfo[jugador][pTiempoJail] > 0) return Mensaje(playerid,-1,"No puedes invitar al jugador en estos momentos.");
				if(PlayerInfo[jugador][pCargos] >=3) return SendClientMessage(playerid,-1,"�El jugador se encuentra en {7401DF}detenci�n!");
				if(VariableCaido[jugador] == 1 || PlayerInfo[jugador][Agonizando] == 1) return Mensaje(playerid,-1,"�El jugador se encuentra en {7401DF}abatido!");
				if(PlayerDuelo[jugador][Noduelo]==1) return SendClientMessage(playerid,-1,"�El jugador est� en {7401DF}no duelo!");

				new string2[128];
				new str1[11], str2[16];
				switch(ArenaSeleccionada[playerid])
				{
				    case 0: str1="la arena 1";
				    case 1: str1="la arena 2";
				    case 2: str1="la arena 3";
                    case 3: str1="la arena 4";
                    case 4: str1="la arena 5";
				}
				switch(ArmasSeleccionada[playerid])
				{
				    case 0: str2="armas rapidas 1";
				    case 1: str2="armas rapidas 2";
				    case 2: str2="armas lentas 1";
				}

				JugadorDesafiado[jugador] = playerid;
				format(string2,sizeof(string2),"%s (%d) quiere un duelo en %s con %s",NombreJugador(playerid),playerid,str1,str2);
				MostrarDialog(jugador,DIALOGO_DUELO4,DIALOG_STYLE_MSGBOX,"Te han invitado a un {7401DF}duelo.",string2,"Aceptar", "Cancelar");
				SendClientMessage(playerid,-1,"�La invitaci�n a un duelo ha sido enviada {7401DF}correctamente!");
			}
		}

		case DIALOGO_DUELO4:
		{
		    if(response)
		    {
				PrepararDuelo(ArenaSeleccionada[JugadorDesafiado[playerid]],playerid,JugadorDesafiado[playerid],ArmasSeleccionada[JugadorDesafiado[playerid]]);
			}
			if(!response)
			{
			    SendClientMessage(JugadorDesafiado[playerid],-1,"�El jugador rechaz� la invitaci�n de {7401DF}duelo!");
			}
		}
		
		case DIALOG_PARLANTE:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					new dialog[4*65], cuenta = 0;
					foreach(new id : Player)
					{
						if(Emisoras[id][TransEmisora] == 1)
						{
							format(dialog, sizeof(dialog), "%s"CR"emisora %d "CB"- %s\n", dialog,Emisoras[id][CabinaOcupada], Emisoras[id][NombreEmisora]);
							User_Temp[playerid][Cercanos][cuenta] = id;
							cuenta ++;
						}
					}
					if(cuenta > 0) MostrarDialog(playerid,DIALOG_BOOMBOX,DIALOG_STYLE_LIST,"{FFFF00}Lista de emisoras",dialog,"Seleccionar", "Cancelar");
					else Mensaje(playerid,-1, "No hay emisoras disponibles.");
				}
				case 1:
				{
					MostrarDialog(playerid,REPRO_ENLACE,DIALOG_STYLE_INPUT,"Introduce el enlace","Introduce el enlace completo de la canci�n\nPor ejemplo: https://www.youtube.com/watch?v=Cr8K88UcO0s","Reproducir", "Cancelar");
					//youtube
					//MostrarDialog(playerid,DIALOG_SELECT_QUE,DIALOG_STYLE_LIST,"�Como deseas reproducirlo?","Introducir enlace de youtube (Todos pueden usarlo)\nIngresando el nombre de la canci�n (Solo VIP 3)","Seleccionar", "Cancelar");
					//MostrarDialog(playerid,BUSQUEDA_YOUTUBE,DIALOG_STYLE_INPUT,"�Qu� deseas buscar?","Ingresa el nombre de una canci�n\nEjemplo: Tit� me pregunt� Bad Bunny","Buscar", "Cancelar");
				}
			}
		}
		case DIALOG_SELECT_QUE:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: MostrarDialog(playerid,REPRO_ENLACE,DIALOG_STYLE_INPUT,"Introduce el enlace","Introduce el enlace completo de la canci�n\nPor ejemplo: https://www.youtube.com/watch?v=Cr8K88UcO0s","Reproducir", "Cancelar");
				case 1:
				{ 
					if(PlayerInfo[playerid][VIP] < 3) return Mensaje(playerid,-1,"Solo VIP 3 pueden usar la b�squeda dentro del juego, usa la primera opci�n.");
					MostrarDialog(playerid,BUSQUEDA_YOUTUBE,DIALOG_STYLE_INPUT,"�Qu� deseas buscar?","Ingresa el nombre de una canci�n\nEjemplo: Tit� me pregunt� Bad Bunny","Buscar", "Cancelar");

				}
			}
			
		}
		case REPRO_ENLACE:
		{
			if(!response) return 1;
			if(!slen) return Mensaje(playerid,-1,"Ingresa el enlace.");
			if(!IsValidYoutubeURL(inputtext)) return Mensaje(playerid,-1,"Enlace inv�lido.");
			Mensaje(playerid,-1, "Cargando...");
			AudioParlante(inputtext, playerid);
		}
		case BUSQUEDA_YOUTUBE:
		{
			if(!response) return 1;
			if(!slen) return Mensaje(playerid,-1,"Ingresa el nombre de una canci�n.");
			if(slen > 80) return Mensaje(playerid,-1,"M�ximo 80 car�cteres.");

			SearchYoutubeVideos(playerid, inputtext);
		}

		case DIALOG_YOUTUBE:
		{
			if(!response) return 1;
			Mensaje(playerid,-1, "Cargando canci�n (Tiempo aproximado 30 segundos)...");
			AudioParlante(SearchResults[playerid][listitem][Link], playerid);
		}

		
		//Tunning
 	    case DIALOG_VOBJECT_TEXT_MENU:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: TuningDialogo(playerid, DIALOG_VOBJECT_TEXT_TEXT);
					case 1: TuningDialogo(playerid, DIALOG_VOBJECT_TEXT_FONT);
					case 2: TuningDialogo(playerid, DIALOG_VOBJECT_TEXT_FONT_SIZE);
					case 3:
					{
					
						if(TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_text_BOLD])
						{
						
						    TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_text_BOLD] = false;
							SendClientMessage(playerid, -1, "Negrita deshabilitada.");
						}
						else
						{
						    TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_text_BOLD] = true;
							SendClientMessage(playerid, -1, "Negrita habilitada.");
						}
						
					
						ActualizarTuningObjeto(playerid,TuningVslot[playerid],TuningSlot[playerid], true);
						
						TuningDialogo(playerid, dialogid);
					}
					case 4: TuningDialogo(playerid, DIALOG_VOBJECT_TEXT_FONT_COLOR);
				}
			}
			else TuningDialogo(playerid, TUNING_MENUOBJ2);
			return 1;
		}
		case DIALOG_VOBJECT_TEXT_TEXT:
		{
			if(response)
			{
				if(slen >= 32)
				{
					SendClientMessage(playerid, -1, ""CR"Como m�ximo puedes introducir un texto de 32 caracteres.");
					TuningDialogo(playerid, dialogid);
					return 1;
				}

				if(sscanf(inputtext, "s[32]", inputtext))
				{
					SendClientMessage(playerid, -1, ""CR"Introduce un texto.");
					TuningDialogo(playerid, dialogid);
					return 1;
				}
				format(TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_text_TEXT], 32, "%s", inputtext);
				ActualizarTuningObjeto(playerid,TuningVslot[playerid],TuningSlot[playerid], true);
				SendClientMessage(playerid, -1, "Texto actualizado.");
			}
			TuningDialogo(playerid, DIALOG_VOBJECT_TEXT_MENU);
			return 1;
		}
		case DIALOG_VOBJECT_TEXT_FONT:
		{
			if(response)
			{
				if(slen >= 24)
				{
					SendClientMessage(playerid, -1, ""CR"Como m�ximo puedes introducir una fuente de 24 caracteres.");
					TuningDialogo(playerid, dialogid);
					return 1;
				}

				if(sscanf(inputtext, "s[24]", inputtext))
				{
					SendClientMessage(playerid, -1, ""CR"Introduce un texto.");
					TuningDialogo(playerid, dialogid);
					return 1;
					
				}
				
				
				
				format(TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_text_FONT], 24, "%s", inputtext);
				ActualizarTuningObjeto(playerid,TuningVslot[playerid],TuningSlot[playerid], true);
				SendClientMessage(playerid, -1, "Fuente actualizada.");
			}
			TuningDialogo(playerid, DIALOG_VOBJECT_TEXT_MENU);
			return 1;
		}
		case DIALOG_VOBJECT_TEXT_FONT_SIZE:
		{
			if(response)
			{
				if(sscanf(inputtext, "d", inputtext[0]))
				{
					SendClientMessage(playerid, -1, ""CR"Introduce un valor num�rico.");
					TuningDialogo(playerid, dialogid);
					return 1;
				}
				if(inputtext[0] <= 0 || inputtext[0] > 255)
				{
					SendClientMessage(playerid, -1, ""CR"Introduce un valor entre 1 y 255.");
					TuningDialogo(playerid, dialogid);
					return 1;
				}
				
				TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_text_FONT_SIZE]  =  inputtext[0];
				
			    ActualizarTuningObjeto(playerid,TuningVslot[playerid],TuningSlot[playerid], true);
				SendClientMessage(playerid, -1, "Tama�o de letra actualizado.");
			}
			TuningDialogo(playerid, DIALOG_VOBJECT_TEXT_MENU);
			return 1;
		}
		case DIALOG_VOBJECT_TEXT_FONT_COLOR:
		{
			if(response)
			{
			
			    //
			    
			    //
				TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_text_FONT_COLOR] = RGBAToARGB(RandomColors[listitem]);
		        ActualizarTuningObjeto(playerid,TuningVslot[playerid],TuningSlot[playerid], true);
				SendClientMessage(playerid, -1, "Color de letra actualizado.");
			}
			TuningDialogo(playerid, DIALOG_VOBJECT_TEXT_MENU);
			return 1;
		}

		case CONFIG_EVENTO:
		{
			if(response)
			{
				switch(listitem)
				{
    				case 0:
				    {
				    	foreach(new i : Player)
    					{
    					    if(EstaEnEvento[i] == 1)
    					    {
                                EstablecerVida(i, 100);
                                Mensaje(i, -1, "Has recibido toda tu vida por parte del administrador del evento.");
    					    }
						}
				    }
    				case 1:
				    {
			    		foreach(new i : Player)
    					{
    					    if(EstaEnEvento[i] == 1)
    					    {
                                EstablecerChaleco(i, 100);
                                Mensaje(i, -1, "Has recibido todo tu chaleco por parte del administrador del evento.");
    					    }
						}
				    }
					case 2:
					{
					    new Float:Pos[3];
					    GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
						foreach(new i : Player)
    					{
    					    if(EstaEnEvento[i] == 1)
    					    {
    					        //CargandoEx(i);
								SetPlayerPosAC(i, Pos[0],Pos[1],Pos[2]+1);
								SetPlayerVirtualWorld(i,GetPlayerVirtualWorld(playerid));
								SetPlayerInterior(i,GetPlayerInterior(playerid));
								Mensaje(i, -1, "Un administrador del evento te ha llevado su pocisi�n.");
    					    }
						}
					}
					case 3:
					{
						foreach(new i : Player)
    					{
    					    if(EstaEnEvento[i] == 1 && i != playerid)
    					    {
                                CongelarEx(i);
                                Mensaje(i, -1, "Has sido congelado por parte del administrador del evento.");
    					    }
						}
					}
					case 4:
					{
						foreach(new i : Player)
    					{
    					    if(EstaEnEvento[i] == 1)
    					    {
                                DescongelarEx(i);
                                Mensaje(i, -1, "Has sido descongelado por parte del administrador del evento.");
    					    }
						}
					}
					case 5:
					{

						MostrarDialog(playerid, DAR_ARMA_EVENTO, DIALOG_STYLE_LIST, "Dar arma a todos", "Desert Eagle\nM4\nAK-47\nEDC\n9mm\n9mm-silenciada", "Aceptar", "Cancelar");
					}
					case 6:
					{
						MostrarDialog(playerid, DAR_ESTILO_EVENTO, DIALOG_STYLE_LIST, "Elige un estilo de pelea", "Codos\nBoxeo\nAgarre\nRodillas\nKungfu\nNormal", "Seleccionar", "Cancelar");
					}
					case 7:
					{
						MostrarDialog(playerid, DAR_AUTO_EVENTO, DIALOG_STYLE_INPUT, "Dar arma a todos", "Elige el id del auto", "Aceptar", "Cancelar");
					}
					case 8:
					{

						MostrarDialog(playerid, SEGUNDOS_CONTEO, DIALOG_STYLE_INPUT, "Conteo", "Introduce los segundos para la cuenta regresiva", "Aceptar", "Cancelar");
					}
					case 9:
					{

						MostrarDialog(playerid, PONER_MUSICA_EVENTO, DIALOG_STYLE_INPUT, "Musica", "Introduce el link de la m�sica", "Aceptar", "Cancelar");
					}
					case 10:
					{
						foreach(new i : Player)
    					{
						    if(EstaEnEvento[i] == 1)
							{
								Mensaje(i, -1, "Has sido revivido por parte del administrador del evento.");
								Revivir(i);
							}
						}
					}
					case 11:
					{
						foreach(new i : Player)
    					{
						    if(EstaEnEvento[i] == 1)
							{
								Mensaje(i, -1, "Has sido desarmado por el administrador del evento.");
								QuitarArmas(i, 1);
							}
						}
					}
					case 12:
					{
						foreach(new i : Player)
    					{
						    if(EstaEnEvento[i] == 1)
							{
								new v = GetPlayerVehicleID(i);
								if(v > 0)
								{
									SetVehicleHealthAC(v, 1000.0);
									RepairVehicle(v);
									Mensaje(i, -1, "Tu auto fue reparado por el administrador del evento.");
								}
							}
						}
					}
					case 13:
					{
                        MostrarDialog(playerid, VIDA_AUTOS_EVENTO, DIALOG_STYLE_INPUT, "Vida autos", "Introduce la cantidad de vida para los autos", "Aceptar", "Cancelar");
					}
					case 14:
					{
						new str[577+1];
						format(str, sizeof(str), "%s24/7 1\n24/7 2\n24/7 3\n24/7 4\n24/7 5\n24/7 6\nLoco Low Co.\nFour Dragons\nCasino Floor (Redsands West)\nCaligula's Casino\nCaligula's Roof\nPi", str);
						format(str, sizeof(str), "%szza Stack\nRusty Brown's Donuts\nBurglary house 7\nBurglary house 13\nBurglary house 14\nHelena's barn\nMichelle's house\nOval Stadium\nVice Stadium\nBlood Bowl Stadium\nGanton Gym\nCobra G", str);
						format(str, sizeof(str), "%sym\nBelow The Belt Gym\nClub\nWarehouse 1\nWarehouse 2\nKickstart Stadium\nJefferson Motel\nThe Pleasure Domes\nRC Battlefield\n8-Track Stadium\nDirtbike Stadium\nMadd Dogg's Mansion\nBig ", str);
						format(str, sizeof(str), "%sSmoke's Crack Palace", str);
						MostrarDialog(playerid, MENU_INTERIORES, DIALOG_STYLE_LIST, "Men� de interiores ", str, "Aceptar", "Cancelar");
					}
					case 15:
					{
					    EventoActivo = 0;
					    NotificaEvento = 0;
						foreach(new i : Player)
    					{
						    if(EstaEnEvento[i] == 1){
						  		SetPosEx(i, User_Temp[i][pt_EVENTO_POS][0],User_Temp[i][pt_EVENTO_POS][1],User_Temp[i][pt_EVENTO_POS][2], 0, User_Temp[i][pt_EVENTO_INT], User_Temp[i][pt_EVENTO_VW]);
								EstaEnEvento[i] = 0;
								EstablecerVida(i,100);
								EstablecerChaleco(i, 0);
								QuitarArmas(i, 1);
								DarPrendas(i);
								SetPlayerFightingStyle (i, FIGHT_STYLE_NORMAL);
							}
						}
		    		}
				}
			}
		}
		case DAR_ARMA_EVENTO:
		{
			if(response)
			{
				new arma;
				switch (listitem)
				{
					case 0: arma = 24;
					case 1: arma = 31;
					case 2: arma = 30;
					case 3: arma = 27;
					case 4: arma = 22;
					case 5: arma = 23;
					default: arma = 24;
				}
		 		foreach(new i : Player)
				{
					if(EstaEnEvento[i] == 1){
                	DarArma(i,arma);
               	 	Mensaje(i, -1, "Has recibido un arma por parte del administrador del evento.");
					}
				}
			}
		}
		case DAR_ESTILO_EVENTO:
		{
			if(response)
			{
                if(listitem == 0)
                {
					foreach(new i : Player)
					{
						if(EstaEnEvento[i] == 1){
						SetPlayerFightingStyle (i, FIGHT_STYLE_ELBOW);
      					Mensaje(i, -1, "Tu estilo de pelea ha cambiado por parte del administrador del evento.");
	            		}
            		}
                }
                if(listitem == 1)
                {
					foreach(new i : Player)
					{
					    if(EstaEnEvento[i] == 1){
	                    SetPlayerFightingStyle (i, FIGHT_STYLE_BOXING);
	           			Mensaje(i, -1, "Tu estilo de pelea ha cambiado por parte del administrador del evento.");
	           			}
           			}
                }
                if(listitem == 2)
                {
					foreach(new i : Player)
					{
					    if(EstaEnEvento[i] == 1){
	                    SetPlayerFightingStyle (i, FIGHT_STYLE_GRABKICK);
	                	Mensaje(i, -1, "Tu estilo de pelea ha cambiado por parte del administrador del evento.");
	                	}
                	}
                }
                if(listitem == 3)
                {
					foreach(new i : Player)
					{
					    if(EstaEnEvento[i] == 1){
	                    SetPlayerFightingStyle (i, FIGHT_STYLE_KNEEHEAD);
	           			Mensaje(i, -1, "Tu estilo de pelea ha cambiado por parte del administrador del evento.");
	           			}
           			}
                }
                if(listitem == 4)
                {
					foreach(new i : Player)
					{
					    if(EstaEnEvento[i] == 1){
	                    SetPlayerFightingStyle (i, FIGHT_STYLE_KUNGFU);
	                	Mensaje(i, -1, "Tu estilo de pelea ha cambiado por parte del administrador del evento.");
	                	}
                	}
                }
                if(listitem == 5)
                {
					foreach(new i : Player)
					{
					    if(EstaEnEvento[i] == 1){
	                    SetPlayerFightingStyle (i, FIGHT_STYLE_NORMAL);
	            		Mensaje(i, -1, "Tu estilo de pelea ha cambiado por parte del administrador del evento.");
	            		}
            		}
                }
			}
		}
		case DAR_AUTO_EVENTO:
		{
			if(response)
			{
				if(!EsNumerico(inputtext)) return 1;
 				if(strval(inputtext) <= 0) return 1;
		 		new modelo = strval(inputtext);
	 			new Float:X,Float:Y,Float:Z,car,Float:angle;
 				if(modelo < 400 || modelo > 611) return Mensaje(playerid, -1, "ID del veh�culo debe ser del 400 al 611 !");
				foreach(new i : Player)
				{
				    if(EstaEnEvento[i] == 1)
					{
						if(!IsPlayerInAnyVehicle(i))
						{
		    				new virtualw = GetPlayerVirtualWorld(i), interi = GetPlayerInterior(i);
		    				GetPlayerPos(i, X,Y,Z);
							GetPlayerFacingAngle(i,angle);
							car = CreateVehicle(modelo, X+1.0,Y,Z+2.0,angle,0,0,-1);
							bloqueado[car] = 0;
							VehicleFuel[car] = CombustibleCoche(car);
							EnAuto[i] = car;
							LinkVehicleToInteriorAC(car, interi);
							SetVehicleVirtualWorld(car, virtualw);
							MostrarVelocimetro(i);
							alarma[car] = 0;
							MotorAuto[car] = 1;
							EnVehTemporal[i] = car;
							SetVehicleParamsEx(car, 1, lights, alarm, 0, bonnet, boot, objective);
							PutPlayerInVehicleAC(i, car, 0);
							Mensaje(i, COLOR_ROJO, "Has recibido un auto por parte del administrador del evento, �si sales del auto, el auto desaparece!.");
							//SetTimerEx("CargandoEx", 1500, false, "i", i);
						}
            		}
        		}
			}
		}
		case SEGUNDOS_CONTEO:
		{
			if(response)
			{
				if(!EsNumerico(inputtext)) return 1;
 				if(strval(inputtext) <= 0) return 1;
		 		new cantidad = strval(inputtext);
	 			if(EnConteo == true) return Mensaje(playerid, -1, "Ya hay un conteo en curso.");
				if(cantidad < 3 || cantidad > 10) return Mensaje(playerid, -1, "Los segundos deben estar entre 3 y 10.");
				EnConteo = true;
				SetTimerEx("Conteos", 1000, false, "i", cantidad);
			}
		}
		case PONER_MUSICA_EVENTO:
		{
			if(response)
			{
				foreach(new i : Player)
				{
					if(EstaEnEvento[i] == 1)
					{
					    if(ShowSound[i] == 1) PlayAudioStreamForPlayer(i,inputtext);
					    Mensaje(i, -1, "El administrador del evento ha reproducido un audio para todos.");
					}
				}

			}
		}
		case VIDA_AUTOS_EVENTO:
		{
			if(response)
			{
				if(!EsNumerico(inputtext)) return 1;
 				if(strval(inputtext) < 0) return 1;
 				new dano = strval(inputtext);
				foreach(new i : Player)
				{
				    if(EstaEnEvento[i] == 1)
					{
						new v = GetPlayerVehicleID(i);
						if(v > 0)
						{
							RepairVehicle(v);
							SetVehicleHealthAC(v, dano);
							Mensaje(i, -1, "Tu auto fue reparado por el administrador del evento.");
						}
					}
				}
			}
		}
		case MENU_INTERIORES:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: DarPosEvento(playerid,-25.72,-187.82,1003.54,17,17,0);
					case 1: DarPosEvento(playerid,6.08,-28.89,1003.54,10,10,0);
					case 2: DarPosEvento(playerid,-30.98,-89.68,1003.54,18,18,0);
					case 3: DarPosEvento(playerid,-26.18,-140.91,1003.54,16,16,0);
					case 4: DarPosEvento(playerid,-27.84,-26.67,1003.55,4,4,0);
					case 5: DarPosEvento(playerid,-26.83,-55.58,1003.54,6,6,0);
					case 6: DarPosEvento(playerid,611.35,-77.55,997.99,2,2,0);
					case 7: DarPosEvento(playerid,2016.11,1017.15,996.87,10,10,0);
					case 8: DarPosEvento(playerid,1133.34,-7.84,1000.67,12,12,0);
					case 9: DarPosEvento(playerid,2233.93,1711.80,1011.63,1,1,0);
					case 10: DarPosEvento(playerid,2268.51,1647.76,1084.23,1,1,0);
					case 11: DarPosEvento(playerid,372.55,-131.36,1001.49,5,5,0);
					case 12: DarPosEvento(playerid,378.02,-190.51,1000.63,17,17,0);
					case 13: DarPosEvento(playerid,227.75,1114.38,1080.99,5,5,0);
					case 14: DarPosEvento(playerid,140.36,1367.88,1083.86,5,5,0);
					case 15: DarPosEvento(playerid,234.28,1065.22,1084.21,6,6,0);
					case 16: DarPosEvento(playerid,290.62,309.06,999.14,3,3,0);
					case 17: DarPosEvento(playerid,306.19,307.81,1003.30,4,4,0);
					case 18: DarPosEvento(playerid, -1402.66,106.38,1032.27,1,1,0);
					case 19: DarPosEvento(playerid,-1401.06,1265.37,1039.86,16,16,0);
					case 20: DarPosEvento(playerid,-1417.89,932.44,1041.53,15,15,0);
					case 21: DarPosEvento(playerid,770.80,-0.70,1000.72,5,5,0);
					case 22: DarPosEvento(playerid,773.88,-47.76,1000.58,6,6,0);
					case 23: DarPosEvento(playerid,773.73,-74.69,1000.65,7,7,0);
					case 24: DarPosEvento(playerid,493.14,-24.26,1000.67,17,17,0);
					case 25: DarPosEvento(playerid,1290.41,1.95,1001.02,18,18,0);
					case 26: DarPosEvento(playerid,1412.14,-2.28,1000.92,1,1,0);//
					case 27: DarPosEvento(playerid,-1420.42,1616.92,1052.53,14,14,0);
					case 28: DarPosEvento(playerid,2217.28,-1150.53,1025.79,15,15,0);
					case 29: DarPosEvento(playerid,-2638.82,1407.33,906.46,3,3,0);
					case 30: DarPosEvento(playerid,-1129.89,1057.54,1346.41,10,10,0);
					case 31: DarPosEvento(playerid,-1403.01,-250.45,1043.53,7,7,0);
					case 32: DarPosEvento(playerid,-1421.56,-663.82,1059.55,4,4,0);
					case 33: DarPosEvento(playerid,1267.84,-776.95,1091.90,5,5,0);
					case 34: DarPosEvento(playerid,2536.53,-1294.84,1044.12,2,2,0);
				}
			}
		}
		case PREGUNTAR_CARCEL_VIP3:
		{
			if(response)
			{
				TimerEncerrar[playerid] = SetTimerEx("TimerEncerrarA", 5000, 0, "d",playerid);
				Mensaje(playerid,-1,"Ser�s llevado a la carcel en "CR"5 segundos"CB".");
			}
			else
			{
				TimerEncerrar[playerid] = SetTimerEx("TimerEncerrarA", 60000, 0, "d",playerid);
				Mensaje(playerid, 0xafafafFF,"{FFBC00}Si la polic�a no te traslada, ser�s llevado autom�ticamente en 1 minuto.");
			}
		}

		case QUE_LOCALIZAR:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: return Localizar(playerid);
				case 1: return LocalizarPropiedad(playerid);
			}
		}

		case COMPRAR_ROPA:
		{
			if(!response) return 1;
			if(TipoRopa[playerid] == 1)
			{
				if(PlayerInfo[playerid][Moneda] < PRECIO_SKINS_WZ) return Mensaje(playerid,-1,"No tienes los "Moneda1" necesarios para comprar esta ropa.");
				
				va_SendClientMessage(playerid, -1, "Has comprado esta vestimenta por un costo de {00CC00}%d "Moneda1""CB".", PRECIO_SKINS_WZ);
				PlayerInfo[playerid][Moneda] -= PRECIO_SKINS_WZ;
			}
			if(TipoRopa[playerid] == 2)
			{
				if(PlayerInfo[playerid][Credits] < PRECIO_SKINS_COINS) return Mensaje(playerid,-1,"No tienes los "Moneda3" necesarios para comprar esta ropa.");
				va_SendClientMessage(playerid, -1, "Has comprado esta vestimenta por un costo de {00CC00}%d "Moneda3""CB".", PRECIO_SKINS_COINS);
				PlayerInfo[playerid][Credits] -= PRECIO_SKINS_COINS;
			}

			PlayerInfo[playerid][jRopa] = VehiculoMarcado[playerid];
			SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]);
			#if defined UsarForo
			mysql_format(Conecction2, Query, sizeof(Query), "UPDATE `smf_members` SET avatar='%d.png' WHERE `UserID`='%d'",PlayerInfo[playerid][jRopa],PlayerInfo[playerid][p_DBID]);
			mysql_tquery(Conecction2, Query);
			#endif
			mysql_format(Conecction, Query, sizeof(Query), "UPDATE `usuarios` SET `Skin`='%d' WHERE `ID`='%d' LIMIT 1",PlayerInfo[playerid][jRopa],PlayerInfo[playerid][p_DBID]);
			mysql_tquery(Conecction, Query);
			if(PrimerosPasos[playerid] == 1){
			PrimerosPasos[playerid] = 2;
			ShowTDN(playerid, "~p~Segundo objetivo:~w~ Dirigete a un ~g~24 7~w~.");
			Mensaje(playerid,-1, ""CR"[!]"CB" Ahora tendras que llegar a un 24/7, la misma la encontraras en tu "CR"/GPS"CB", tambien fue marcado en el mapa.");
			PosicionGPS(playerid,1352.3634,-1759.1854,13.5078,5);
			}
		}

		case DIALOG_BAUL:
		{
			if(!response) return 1;
			new var = BaulVar[playerid];
			if(EspacioBaul[VerBaul[playerid]][var][listitem+1] != 0)
			{
				return BaulSacar(playerid,listitem+1);
			}
			else
			{
				new arma = GetPlayerWeapon(playerid);
				
				switch(arma)
				{
					case 1,2,4..8,10..15,43,24,25,27,29,16,22,23,30,31,33,34: GuardarArma(playerid, arma, listitem+1);
					default: Mensaje(playerid, -1, "Para guardar un arma debes tenerla en tu mano.");
				}
				
			}
		}
		case DIALOG_TOP:
		{
			if(!response) return 1;

			switch(listitem)
			{
				case 0:
				{
					mysql_format(Conecction, Query, sizeof(Query), "SELECT Username, Asesinatos, Conexion, Online FROM `usuarios` WHERE Baneado = 0 ORDER BY `Asesinatos` DESC LIMIT 10");
					mysql_tquery(Conecction, Query, "SelectTop", "dd", playerid,3);
				}
				case 1:
				{
					mysql_format(Conecction, Query, sizeof(Query), "SELECT BID, COUNT( BID ) total_territorios FROM territorios WHERE BID != 0 GROUP BY BID HAVING total_territorios > 0 ORDER BY total_territorios DESC");
					mysql_tquery(Conecction, Query, "SelectBandasTerris", "d", playerid);
				}
				case 2:
				{
					mysql_format(Conecction, Query, sizeof(Query), "SELECT Username, Money, Banco,Conexion, Online FROM `usuarios` WHERE Admin < 8 AND Baneado = 0 ORDER BY Money+Banco DESC LIMIT 10;");
					mysql_tquery(Conecction, Query, "SelectTop", "dd", playerid, 1);
				}
				case 3:
				{
					mysql_format(Conecction, Query, sizeof(Query), "SELECT Username, Creditos, Conexion, Online FROM `usuarios` WHERE Admin < 8 AND Baneado = 0 ORDER BY `Creditos` DESC LIMIT 10;");
					mysql_tquery(Conecction, Query, "SelectTop", "dd", playerid,2);
				}
			}
		}

		case DIALOG_CONSUMIR:
		{
			if(!response) return 1;

			switch(listitem)
			{
				case 0: return Consumible(playerid, 4);
				case 1: return Consumible(playerid, 3);
				case 2: return Consumible(playerid, 1);
				case 3: return Consumible(playerid, 2);
			}
			return 1;
		}

		case NMusica:
		{
			if(response)
			{
   				foreach(new i : Player) 
   				{
					if(ShowSound[i] == 1)
					{
						PlayAudioStreamForPlayer(i, inputtext);
						va_SendClientMessage(i, -1, "[Servidor]: El administrador %s puso una canci�n.", NombreJugador(playerid));
					}
				}
			}
			return 1;
		}

		case municipalidad:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: VenderVehiculo(playerid);
				case 1: VenderPropiedad(playerid);
				case 2: cmd_servicio(playerid, "grua");
			}
		}

		case DIALOG_ACCION_USER:
		{
			if(response)
			{
				mysql_format(Conecction, Query, sizeof(Query), "UPDATE `usuarios` SET `Baneado`='0' WHERE `ID`='%d'", User_Temp[playerid][PlayerSelect]);
				mysql_tquery(Conecction, Query);
				User_Temp[playerid][PlayerSelect] = 0;
				Mensaje(playerid, -1, "Desbaneado.");
			}
			else
			{
				User_Temp[playerid][PlayerSelect] = 0;
			}
		}

		case DIALOG_BOOMBOX:
	    {
	    	if(!response)
	     	{
	            Mensaje(playerid, -1, "* Has cancelado la selecci�n de emisoras de radio.");
	        	return 1;
	        }
   			if(response)
	        {
				new id = User_Temp[playerid][Cercanos][listitem];
				new emi = Emisoras[id][CabinaOcupada];
				if(GetPVarInt(playerid, "PlacedBB") != INVALID_STREAMER_ID)
				{
					foreach(new i : Player)
					{
						if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")) && ShowSound[i] == 1)
						{
							PlayAudioStreamForPlayer(i, Emisoras[id][URLEmisora], GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
							ParlanteEscuchando[i] = emi;
						}
					}
					SetPVarString(playerid, "BBStation", Emisoras[id][URLEmisora]);
					SetPVarInt(playerid, "EmisoraIDParlante", emi);
					
				}
			
			}
			return 1;
		}

		case DIALOG_BUSCAR_ADMIN:
		{
			if(!response) return 1;
			if(listitem < 0)
			{
				return 1;
			}
			new id = User_Temp[playerid][Cercanos][listitem];
			mysql_format(Conecction, Query, sizeof(Query), "SELECT * FROM `usuarios` WHERE `ID`='%d' LIMIT 1", id);
			mysql_tquery(Conecction, Query, "VerInfoCuenta", "d", playerid);

		}

		case DIALOG_AQUIENC:
		{
			if(response)
			{
				VenderCasaMuni(playerid);
			}
			else
			{
				VenderCasaJugador(playerid);
			}
		}

		case DIALOG_AQUIEN:
		{
			if(response)
			{
				VenderVehMuni(playerid);
			}
			else
			{
				VenderVehJugador(playerid);
			}
		}
		case COMPRAR_VEHICULO:
 	    {
   			if(!response)return 1;
			if(response)
			{
			    ComproVehiculoTienda(playerid, VehiculoMarcado[playerid]);
			}
 	    }
 	    case MENU_ADMIN:
		{
			if(!response) return 1;
			else
			{
				TipoJugador[playerid] = 0;
				TipoItem[playerid] = 0;
			    TipoItem[playerid] = listitem;
		    	if(!EsFundador(playerid) && TipoItem[playerid] == 3) return Mensaje(playerid, -1, "Necesitas ser fundador para dar coins.");
				new str[36+1];
				format(str, sizeof(str), "%sDar item a todos\nDar item a jugador", str);
				MostrarDialog(playerid, MENU_ADMIN2, DIALOG_STYLE_LIST, "Men� administrativo", str, "Aceptar", "Cancelar");
			}
        }
 		case MENU_ADMIN2:
		{
			if(!response) DialogMenu(playerid);
			else
			{
				switch(listitem)
				{
					case 0:
					{
						TipoJugador[playerid] = INVALID_PLAYER_ID;
						MostrarDialog(playerid, CANTIDAD_ITEM, DIALOG_STYLE_INPUT, "Menu administrativo", "Digita la cantidad que deseas dar de este item", "Aceptar", "Cancelar");
					}
					case 1:
					{
						MostrarDialog(playerid, MENU_ADMIN3, DIALOG_STYLE_INPUT, "Menu administrativo", "Digite la id del jugador que deseas dar este item", "Aceptar", "Cancelar");
					}
				}
			}
        }
        case MENU_ADMIN3:
        {
            if(!response) DialogMenu(playerid);
			if(response)
			{
			    if(!EsNumerico(inputtext)) return 1;
			    if(strval(inputtext) <= 0) return 1;
			    new id = strval(inputtext);
				TipoJugador[playerid] = id;
				MostrarDialog(playerid, CANTIDAD_ITEM, DIALOG_STYLE_INPUT, "Menu administrativo", "Digita la cantidad que deseas dar de este item", "Aceptar", "Cancelar");
			}
		}
        case CANTIDAD_ITEM:
        {
            if(!response) DialogMenu(playerid);
			if(PlayerInfo[playerid][pAdmin] < 8) return 0;
			if(response)
			{
 				if(!EsNumerico(inputtext)) return 1;
 				if(strval(inputtext) <= 0) return 1;
		 		new cantidad = strval(inputtext);
				DarItemJugador(TipoJugador[playerid],cantidad,TipoItem[playerid]);
			}
		}
		

		case D_COLOR1:
		{
			if(!response) MostrarDialog(playerid, D_COLOR, DIALOG_STYLE_LIST, ""CB"Selecciona el color para tu banda", DialogFormatColores, "Seleccionar", "Atr�s");
			if(response)
			{
				MostrarDialog(playerid, D_COLOR, DIALOG_STYLE_LIST, ""CB"Selecciona el color para tu banda", DialogFormatColores, "Seleccionar", "Atr�s");
			}
		}


		case D_COLOR:
		{
			if(!response) MostrarDialog(playerid, D_COLOR, DIALOG_STYLE_LIST, ""CB"Selecciona el color para tu banda", DialogFormatColores, "Seleccionar", "Atr�s");
			if(response)
			{
				new Banda = PlayerInfo[playerid][jMiembro];
				
				BandasInfo[Banda][BColor] = RandomColors[listitem] >>> 8;
				
				mysql_format(Conecction, Query,sizeof(Query), "UPDATE `facciones` SET `Color` = '%06x' WHERE `id`='%d' LIMIT 1", BandasInfo[Banda][BColor], Banda);
				mysql_tquery(Conecction, Query);
				Mensaje(playerid,-1,"Color asignado a tu banda correctamente.");
				CargarFacciones();
			}
		}

 		case D_BAULSAPD:
	    {
	    	if(!response)
	     	{
				format(string, sizeof(string), "%s cierra el baul del veh�culo.", NombreJugador(playerid));
				ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
	        	return 1;
	        }
			switch(listitem)
			{
				case 0:
				{
					if(TiempoBaulSapd[playerid] - gettimeVariable <= 0)
					{
						new Float:Chaleco, Float:resta2;
						GetPlayerArmour(playerid, Chaleco);
						resta2 = 100-Chaleco;
						if(resta2 >= 30) EstablecerChaleco(playerid, Chaleco+30.0);
						else if(resta2 < 30) EstablecerChaleco(playerid, Chaleco+resta2);

						new Float:Vida, Float:resta;
						GetPlayerHealth(playerid, Vida);
						resta = 100-Vida;
						
						if(resta >= 25) EstablecerVida(playerid, Vida+25.0);
						else if(resta < 25) EstablecerVida(playerid, Vida+resta);
						


                        TiempoBaulSapd[playerid] = gettimeVariable + (60*1);
						LoopingAnim(playerid, "FOOD", "EAT_Burger", 3.00, 0, 0, 0, 0, 0);
						AccionesRol(playerid,"saca unos medicamentos del ba�l policial y los consume.", 20);
					}
					else
					{
					    new d, h, m, s;
						TimeConvertEx((TiempoBaulSapd[playerid] - gettimeVariable) , d, h, m, s);
						if(h == 0 && m == 0 && s > 0) return va_SendClientMessage(playerid, COLOR_BLANCO, "Debes esperar "CR"%d segundos"CB" para poder volver a tomar medicamentos.",s);
						else if(h == 0 && m == 1) return va_SendClientMessage(playerid, COLOR_BLANCO, "Debes esperar "CR"%d minuto"CB" para poder volver a tomar medicamentos.",m);
						else if(h == 0 && m > 0) return va_SendClientMessage(playerid, COLOR_BLANCO, "Debes esperar "CR"%d minutos"CB" para poder volver a tomar medicamentos.",m);
					}
				}
				case 1:
				{
					DarArma(playerid, 3);
					DarArma(playerid, 24);
					DarArma(playerid, 29);
					DarArma(playerid, 31);
					if(PlayerInfo[playerid][pRango] == 1) DarArma(playerid, 25);
					else DarArma(playerid, 27);
					AccionesRol(playerid,"saca su equipo de armas del ba�l policial.", 20);
				}
			}
		}
		case DIALOG_CREARARMA:
        {
            if(response)
            {
                switch(listitem)
                {
                    case 0:
                    {
                        if(PlayerInfo[playerid][pMateriales] >= 12)
                        {
                            DarArma(playerid, 22);
                            PlayerInfo[playerid][pMateriales] -= 12;
                            format(string,sizeof(string),"* %s crea una pistola 9mm con sus piezas de arma.",NombreJugador(playerid));
                            ProxDetector(20, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
                        }
                    }
                    case 1:
                    {
                        if(PlayerInfo[playerid][pMateriales] >= 12)
                        {
                            DarArma(playerid, 23);
                            PlayerInfo[playerid][pMateriales] -= 12;
                            format(string,sizeof(string),"* %s crea una pistola 9mm-silenciada con sus piezas de arma.",NombreJugador(playerid));
                            ProxDetector(20, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
                        }
                    }
                    case 2:
                    {
                        if(PlayerInfo[playerid][pMateriales] >= 20)
                        {
                            DarArma(playerid, 25);
                            PlayerInfo[playerid][pMateriales] -= 20;
                            format(string,sizeof(string),"* %s crea una escopeta con sus piezas de arma.",NombreJugador(playerid));
                            ProxDetector(20, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
                        }
                    }
                    case 3:
                    {
                        if(PlayerInfo[playerid][pMateriales] >= 36)
                        {
                            DarArma(playerid, 24);
                            PlayerInfo[playerid][pMateriales] -= 36;
                            format(string,sizeof(string),"* %s crea una pistola desert eagle con sus piezas de arma.",NombreJugador(playerid));
                            ProxDetector(20, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
                        }
                    }
                    case 4:
                    {
                        if(PlayerInfo[playerid][pMateriales] >= 58)
                        {
                            DarArma(playerid, 29);
                            PlayerInfo[playerid][pMateriales] -= 58;
                            format(string,sizeof(string),"* %s crea una mp5 con sus piezas de arma.",NombreJugador(playerid));
                            ProxDetector(20, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
                        }
                    }
                    case 5:
                    {
                        if(PlayerInfo[playerid][pMateriales] >= 82)
                        {
                            DarArma(playerid, 30);
                            PlayerInfo[playerid][pMateriales] -= 82;
                            format(string,sizeof(string),"* %s crea una ak47 con sus piezas de arma.",NombreJugador(playerid));
                            ProxDetector(20, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
                        }
                    }
                    case 6:
                    {
                        if(PlayerInfo[playerid][pMateriales] >= 96)
                        {
                            DarArma(playerid, 31);
                            PlayerInfo[playerid][pMateriales] -= 96;
                            format(string,sizeof(string),"* %s crea una m4 con sus piezas de arma.",NombreJugador(playerid));
                            ProxDetector(20, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
                        }
                    }
                    case 7:
                    {
                        if(PlayerInfo[playerid][pMateriales] >= 52)
                        {
                            DarArma(playerid, 33);
                            PlayerInfo[playerid][pMateriales] -= 52;
                            format(string,sizeof(string),"* %s crea un rifle con sus piezas de arma.",NombreJugador(playerid));
                            ProxDetector(20, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
                        }
                    }
                    case 8:
                    {
                        if(PlayerInfo[playerid][pMateriales] >= 136)
                        {
                            DarArma(playerid, 27);
                            PlayerInfo[playerid][pMateriales] -= 136;
                            format(string,sizeof(string),"* %s crea una escopeta de combate con sus piezas de arma.",NombreJugador(playerid));
                            ProxDetector(20, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
                        }
                    }
					case 9:
                    {
                        if(PlayerInfo[playerid][pMateriales] >= 250)
                        {
                            DarArma(playerid, 34);
                            PlayerInfo[playerid][pMateriales] -= 250;
                            format(string,sizeof(string),"* %s crea un sniper con sus piezas de arma.",NombreJugador(playerid));
                            ProxDetector(20, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
                        }
                    }
                }
            }
        }
		case DIALOG_SREFERIDOS:
		{
			if(response){
				new Queri[300];
				mysql_format(Conecction, Queri, sizeof(Queri), "SELECT referidos.JugadorReferido, referidos.Completado, usuarios.Username, usuarios.Nivel, usuarios.Online, usuarios.Conexion FROM referidos INNER JOIN usuarios ON referidos.JugadorReferido = usuarios.ID WHERE JugadorRefiriendo = '%d'", PlayerInfo[playerid][p_DBID]);
				mysql_tquery(Conecction, Queri, "SREFERIDOS", "d", playerid);
			}
		}
		case DIALOG_REFERIDO:
		{
			if(response){
				MostrarDialog(playerid, DIALOG_REFERIDO2, DIALOG_STYLE_INPUT, "Ingresa el c�digo de referido.", "{FFFFFF}El c�digo de referido {1DAB1F}solo contiene n�meros{FFFFFF}.\n{FFFFFF}Si no lo conoces p�dele a tu amigo que use el comando {1DAB1F}/referidos{FFFFFF}.\n{FFFFFF}No salgas de este cuadro o no podr�s ser referido de tu amigo.", "{1DAB1F}Continuar", "{CF3030}Cancelar");
			}
		}

		case DIALOG_REFERIDO2:
		{
			if(response)
			{
				//buscar referido en la db
				if(EsNumerico(inputtext) == 0)
				{
					Mensaje(playerid, -1, "El c�digo solo contiene n�meros.");
					MostrarDialog(playerid, DIALOG_REFERIDO2, DIALOG_STYLE_INPUT, "Ingresa el c�digo de referido.", "{FFFFFF}El c�digo de referido {1DAB1F}solo contiene n�meros{FFFFFF}.\nSi no lo conoces p�dele a tu amigo que use el comando {1DAB1F}/referidos{FFFFFF}.", "{1DAB1F}Continuar", "{CF3030}Cancelar");
					return 1;
				}
				new Queri[70];
				mysql_format(Conecction, Queri, sizeof(Queri), "SELECT * FROM `usuarios` WHERE `ID`='%d' LIMIT 1", strval(inputtext)-2153);
				mysql_tquery(Conecction, Queri, "SREFERIDOS2", "dd",playerid, strval(inputtext)-2153);

			}
		}

		case PRENDAS_POS:
		{
			if(!response) return 1;
			if(TempPrendaSlot[playerid] == -1) return 1;
			new slot = TempPrendaSlot[playerid];
			PlayerInfo[playerid][pBone][slot] = listitem+1;
			Mensaje(playerid, -1, "Se modific� la posici�n de la prenda con "CR"�xito"CB".");
			mysql_format(Conecction, Query, sizeof(Query), "UPDATE `prendas` SET `PrendaPos`='%d' WHERE `UserID` ='%d' AND Slot='%d' LIMIT 1",PlayerInfo[playerid][pBone][slot], PlayerInfo[playerid][p_DBID],slot+1);
			mysql_tquery(Conecction, Query);
			if(IsPlayerAttachedObjectSlotUsed(playerid,SlotP2[slot][playerid])) RemovePlayerAttachedObject(playerid, SlotP2[slot][playerid]);
			SetPlayerAttachedObject(playerid, SlotP2[slot][playerid], PlayerInfo[playerid][pObj][slot], PlayerInfo[playerid][pBone][slot], PlayerInfo[playerid][pfOffsetX][slot], PlayerInfo[playerid][pfOffsetY][slot],  PlayerInfo[playerid][pfOffsetZ][slot], PlayerInfo[playerid][pfRotX][slot], PlayerInfo[playerid][pfRotY][slot], PlayerInfo[playerid][pfRotZ][slot], PlayerInfo[playerid][pfScaleX][slot], PlayerInfo[playerid][pfScaleY][slot], PlayerInfo[playerid][pfScaleZ][slot], PlayerInfo[playerid][pObjColor][slot]);
			TempPrendaSlot[playerid] = -1;
		}

		case MEJORA_MOTOR:
		{
			new vehicleid = GetPlayerVehicleID(playerid);
			if(!response)
			{
				SetVehiclePosAC(vehicleid, 1148.1396,1351.5039,10.5998+2.5);
			}
			else{
				PlayerInfo[playerid][Credits] -= 15;
				for(new a = 0; a < MAX_PAUTOS; a++) 
				{
					if(autos[a][playerid] == vehicleid)
					{
						Mensaje(playerid, -1, "Mejora de motor comprada, para activarla pulsa "CR"[Y]"CB".");
						VehicleInfo[playerid][a][Aceleracion] = 1;
						
					} 
				}

			}
		}

		case DIALOG_PRENDAS:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: return MostrarMenu(playerid,2);
					case 1: return MostrarMenu(playerid,3);
					case 2: return MostrarMenu(playerid,4);
					case 3: {
							if(PlayerInfo[playerid][VIP] < 3) return Mensaje(playerid, -1, "Necesitas VIP3 para usar esta opci�n.");
							MostrarMenu(playerid,8);
						}
					case 4:	return MostrarMenu(playerid,10);
					case 5: return MostrarMenu(playerid,9);
				}
			}
		}

		case Twiiter:
		{
			if(response)
			{
				switch(listitem)
				{
				    case 0:
				    {
						MostrarDialog(playerid, EnviarTweet, DIALOG_STYLE_INPUT,"Tweet personal {2FC0FF}� Twittea ac�", "{2FC0FF}�"CB" Twittear tu estado actual \n{2FC0FF}�"CB" Comparte con tus amigos\n{2FC0FF}�"CB" Publica tu acciones recientes\n{2FC0FF}�"CB" Expresate con tu hashtag preferido", "{00E900}Enviar","{FF0000}Cancelar");
						return 1;
				    }
				    case 1:
				    {
						MostrarDialog(playerid, EnviarTweet2, DIALOG_STYLE_INPUT,"Tweet an�nimo {2FC0FF}� Twittea ac�", "{2FC0FF}�"CB" Twittear tu estado actual \n{2FC0FF}�"CB" Expresate de forma an�nima\n{2FC0FF}�"CB" Comparte con tus amigos\n{2FC0FF}�"CB" Publica tu acciones recientes ", "{00E900}Enviar","{FF0000}Cancelar");
						return 1;
				    }
				    case 2:
				    {
						MostrarDialog(playerid, EnviarTwAd, DIALOG_STYLE_INPUT,"{2FC0FF}�"CB" Escribe tu anuncio", "{2FC0FF}�"CB" Vende tu mercader�a \n{2FC0FF}�"CB" Encuentra art�culos baratos\n{2FC0FF}�"CB" Vende r�pido y seguro\n{2FC0FF}�"CB" Ventas en twitter ", "{00E900}Enviar","{FF0000}Cancelar");
						return 1;
				    }
				}
			}
		}

		case EnviarTwAd:
		{
			if(response)
			{
			   EnviarTweeter(playerid, inputtext, 1);
			}
		}
		case EnviarTweet:
		{
			if(response)
			{
			   EnviarTweeter(playerid, inputtext, 0);
			}
		}
		case EnviarTweet2:
		{
			if(response)
			{
			    EnviarTweeter(playerid, inputtext, 2);
			}
		}
		case CONFIG_CUENTA:
		{

		    if(response)
		    {

		        switch(listitem)
		        {
		            case 0:
		            {
		                ShowStats(playerid,playerid);
		            }
		            case 1:
		            {
                        new str[355+1];
						format(str, sizeof(str), "%s"CR"�"CB" Cambiar nombre.\n"CR"�"CB" Cambiar contrase�a.\n"CR"�"CB" Cambiar tu acento.\n"CR"�"CB" Cambiar tu estilo de caminar.\n"CR"�"CB" Cambiar la configuraci�n del laser de tu armas.\n"CR"�"CB" Cambiar tu estado actual.", str);
						MostrarDialog(playerid, CONFIG_CUENTA2, DIALOG_STYLE_LIST, "Configuraci�n de tu cuenta", str, "Aceptar", "Cancelar");
		            }
					case 2:
					{
						User_Temp[playerid][CodigoDiscord] = randomEx(10000,99999);
						format(string, sizeof(string), ""CB"Hola, para vincular tu cuenta a Discord escribe "CR"!vincular %d"CB" en cualquier canal.\n\nSi no est�s en nuestro Discord, ingresa usando el enlace: "CR"https://discord."WebName""CB"", User_Temp[playerid][CodigoDiscord]);
						MostrarDialog(playerid, DIALOG_AYUDA, DIALOG_STYLE_MSGBOX, "- Vincular cuenta de discord", string, "Aceptar", "");
					}
                }
          	}
        }
		case CONFIG_CUENTA2:
		{

		    if(response)
		    {

		        switch(listitem)
		        {
		            case 0:
		            {
						MostrarDialog(playerid, CONFIG_NOMBRE, DIALOG_STYLE_INPUT, "D�gite un nombre v�lido.", "Recuerda que tu nuevo nombre debe seguir las reglas de rol.", "Aceptar", "Cancelar");
		            }
		            case 1:
		            {
						MostrarDialog(playerid, CONFIRMAS_PASS, DIALOG_STYLE_INPUT, "Ingresa tu contrase�a actual", "Necesitamos aseguranos que seas el due�o de la cuenta, d�gite tu contrase�a actual.", "Aceptar", "");
		            }
		            case 2:
		            {
		                if(PlayerInfo[playerid][VIP] < 3) return Mensaje(playerid, -1, "Esta opci�n es v�lida solo para usuarios VIP "CR"3"CB".");
						new dialog[700], line_str[300];
						for(new i = 0; i < 33; i++)
						{
							if(PlayerInfo[playerid][pAcento] == i) format(line_str, sizeof line_str, "{999999}%d. %s\n", i, GetNameAcento(i));
							else format(line_str, sizeof line_str, ""CB"%d. %s\n", i, GetNameAcento(i));
							strcat(dialog, line_str);
						}
						MostrarDialog(playerid, DIALOG_ACENTO, DIALOG_STYLE_LIST, "Selecciona tu nuevo acento", dialog, "Seleccionar", "Salir");
		            }
		            case 3:
		            {
		                if(PlayerInfo[playerid][VIP] < 3) return Mensaje(playerid, -1, "Esta opci�n es v�lida solo para usuarios VIP "CR"3"CB".");
    					MostrarDialog(playerid, DIALOG_CAMINAR, DIALOG_STYLE_LIST, "Seleccionar mi estilo de caminar","Normal\nPandillero 1\nPandillero 2\nViejo 1\nViejo 2\nLesionado\nCiego\nCansado\nMujer 1\nMujer 2\nProstituta\nMujer Sexy\nVieja", "Cambiar", "Cancelar");
		            }
		            case 4:
		            {
		            	new ANAME[32],AOPTIONS[32];
					 	format(string, sizeof(string), "Opci�n\tEstado actual\nMostrar el laser\t%s%s%s",GetYesOrNoConfig2(PlayerInfo[playerid][pEstadoLaser]),ANAME,AOPTIONS);
						MostrarDialog(playerid, LASERCONFIG, DIALOG_STYLE_TABLIST_HEADERS, "Configuraci�n de laser", string, "Cambiar", "Cerrar");
                    }
                    case 5:
                    {
						if(PlayerInfo[playerid][VIP] < 3) return Mensaje(playerid, -1, "Esta opci�n es v�lida solo para usuarios VIP "CR"3"CB".");
					    if(PlayerInfo[playerid][pTieneEstado] > 0)
					    {
					    	format(string, sizeof(string),"{A157EE}Ingresar"CB" un nuevo estado\n{A157EE}Borrar"CB" mi estado actual\n{A157EE}Cambiar"CB" el color de mi estado\nTu estado actual es: {A157EE}%s"CB".",PlayerInfo[playerid][pFraseEstado]);
					    	MostrarDialog(playerid, DIALOG_ESTADO1, DIALOG_STYLE_LIST, "Mi estado: "CR"Elige una opci�n", string, "Siguiente", "Cerrar");
					    	return 1;
					    }
					    else
					    {
					    	MostrarDialog(playerid, DIALOG_ESTADO1, DIALOG_STYLE_LIST, "Mi estado: "CR"Elige una opci�n", "{A157EE}Ingresar"CB" un nuevo estado", "Siguiente", "Cerrar");
					    }
                    }
                }
          	}
        }
		case CONFIG_NOMBRE:
		{
			if(response)
			{
				if(slen < 5 || slen > 20)
				{
					return Mensaje(playerid,-1,"Nombre rechazado, por favor escribe entre 5 a 20 car�cteres"CB".");
				}
	 			if(!NameCheck(inputtext))
				{
					return Mensaje(playerid,-1,"Nombre rechazado, por favor usa el formato {FBFE01}Nombre_Apellido"CB".");
				}
			    new query[250];
				mysql_format(Conecction, query, sizeof(query), "SELECT * FROM `usuarios` WHERE `Username`='%e' LIMIT 1",inputtext);
				mysql_tquery(Conecction, query, "SelectNombre", "ds", playerid, inputtext);
		        return 1;
			}
		}
		case CONFIRMAS_PASS:
		{
			if(response)
			{
				new hash[65];
       			SHA256_PassHash(inputtext, "stellarhostingzone", hash, 65);
				mysql_format(Conecction, Query, sizeof(Query), "SELECT ID FROM `usuarios` WHERE `Username` = '%e' AND `Password` = '%e' LIMIT 1", PlayerInfo[playerid][NombreTemporal], hash);
				mysql_tquery(Conecction, Query, "ConfirmarContra", "d", playerid);
			}
		}
		case CONTRASENA:
        {
		   if(response)
		   {
				if(slen < 4 || slen > 18)
				{
					format(string, sizeof(string), "La contrase�a que has colocado es muy corta o muy larga.");
					format(string, sizeof(string), "La contrase�a debe contener de 4 a 18 caracteres.");
					MostrarDialog(playerid, CONTRASENA, DIALOG_STYLE_INPUT,"Cambiar:",string,"Cambiar","Salir");
				}
				else if(slen > 3 && slen < 21)
			    {
					new query[240];
					new hash[65];
					#if defined UsarForo
					mysql_format(Conecction2, Query, sizeof(Query), "UPDATE `smf_members` SET passwd=SHA1(CONCAT(LOWER('%e'),'%e')) WHERE `UserID`='%d'",NombreJugador(playerid),inputtext,PlayerInfo[playerid][p_DBID]);
					mysql_tquery(Conecction2, Query);
					#endif
	       			SHA256_PassHash(inputtext, "stellarhostingzone", hash, 65);
					mysql_format(Conecction, query, sizeof(query), "UPDATE `usuarios` SET `Password` = '%e' WHERE `Username`='%e' LIMIT 1",hash,PlayerInfo[playerid][NombreTemporal]);
					mysql_tquery(Conecction, query);
					Mensaje(playerid,-1,""CB"Contrase�a cambiada exitosamente.");
	   			}
  			}
		}
		case DIALOG_CAMINAR:
		{

		    if(response)
		    {

		        switch(listitem)
		        {
		            case 0:
		            {
		                SetPlayerWalkingStyle(playerid, 0); // Normal
		                Mensaje(playerid,-1,"Si quieres volver a cambiarte tu estilo, usa "CR"/est"CB".");
		            }
		            case 1:
		            {
		                SetPlayerWalkingStyle(playerid, 3); // Pandillero 1
		                Mensaje(playerid,-1,"Si quieres volver a cambiarte tu estilo, usa "CR"/est"CB".");
		            }
		            case 2:
		            {
		                SetPlayerWalkingStyle(playerid, 4); // Pandillero 2
		                Mensaje(playerid,-1,"Si quieres volver a cambiarte tu estilo, usa "CR"/est"CB".");
		            }
		            case 3:
		            {
		                SetPlayerWalkingStyle(playerid, 2); // Viejo 1
		                Mensaje(playerid,-1,"Si quieres volver a cambiarte tu estilo, usa "CR"/est"CB".");
		            }
		            case 4:
		            {
		                SetPlayerWalkingStyle(playerid, 5); // Viejo 2
		                Mensaje(playerid,-1,"Si quieres volver a cambiarte tu estilo, usa "CR"/est"CB".");

		            }
		            case 5:
		            {
		                SetPlayerWalkingStyle(playerid, 6); // Lesionado
		                Mensaje(playerid,-1,"Si quieres volver a cambiarte tu estilo, usa "CR"/est"CB".");
		            }
		            case 6:
		            {
		                SetPlayerWalkingStyle(playerid, 13); // Ciego
		                Mensaje(playerid,-1,"Si quieres volver a cambiarte tu estilo, usa "CR"/est"CB".");
		            }
		            case 7:
		            {
		                SetPlayerWalkingStyle(playerid, 7); // Cansado
		                Mensaje(playerid,-1,"Si quieres volver a cambiarte tu estilo, usa "CR"/est"CB".");
		            }
		            case 8:
		            {
		                SetPlayerWalkingStyle(playerid, 9); // Mujer 1
		                Mensaje(playerid,-1,"Si quieres volver a cambiarte tu estilo, usa "CR"/est"CB".");
		            }
		            case 9:
		            {
		                SetPlayerWalkingStyle(playerid, 10); // Mujer 2
		                Mensaje(playerid,-1,"Si quieres volver a cambiarte tu estilo, usa "CR"/est"CB".");
		            }
		            case 10:
		            {
		                SetPlayerWalkingStyle(playerid, 11); // Mujer Sexy
		                
		            }
		            case 11:
		            {
		                Mensaje(playerid,-1,"Si quieres volver a cambiarte tu estilo, usa "CR"/est"CB".");
		                SetPlayerWalkingStyle(playerid, 8); // Vieja
		            }

		        }
		        
		    }
      	}
		case DIALOG_ACENTO:
		{
		    if(!response) return 1;
			if(listitem == 32)
			{
				MostrarDialog(playerid, ACENTO_PERSONALIZADO, DIALOG_STYLE_INPUT, "Configura tu acento", "Ac� podras personalizar tu acento, �salo correctamente", "Aceptar", "Cancelar");
			}
			else {
		    va_SendClientMessage(playerid, -1, "Ahora tu acento es "CR"%s"CB", usa "CR"/est"CB" para cambiarlo.", GetNameAcento(listitem));
		    PlayerInfo[playerid][pAcento] = listitem;
			}
		    return 1;
		}
		case ACENTO_PERSONALIZADO:
		{
		    if(slen < 4 || slen > 14)
		    {
		        return Mensaje(playerid, -1, "Necesitas al menos m�s de 4 caracteres y como m�ximo 14 caracteres.");
		    }
			if(response)
			{
			    PlayerInfo[playerid][pAcento] = 32;
			    format(PlayerInfo[playerid][AcentoP], 64, "%s",inputtext);
   				va_SendClientMessage(playerid, -1, "Ahora tu acento es "CR"%s"CB", usa "CR"/est"CB" para cambiarlo.", inputtext);
   				return 1;
   			}
        }
		case LASERCONFIG:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pEstadoLaser] == 0)
				{
                    if(PlayerInfo[playerid][VIP] < 3) return Mensaje(playerid, -1, "Esta opci�n es v�lida solo para usuarios VIP "CR"3"CB".");
					PlayerInfo[playerid][pEstadoLaser] = 1,MostrarDialog(playerid, LASERCONFIG2, DIALOG_STYLE_LIST, "�Cual color deseas para tu laser?", "Laser de tipo {FF0000}Rojo\nLaser de tipo {0042FF}Azul\nLaser de tipo {FF00C5}Rosa\nLaser de tipo {FF8300}Naranja\nLaser de tipo {32BF76}Verde\nLaser de tipo {FED509}Amarillo", "Aceptar", "");
					return 1;
                }
		   		if(PlayerInfo[playerid][pEstadoLaser] == 1) return PlayerInfo[playerid][pEstadoLaser] = 0, RemovePlayerAttachedObject(playerid, 4),Mensaje(playerid, -1, "Has apagado el laser de tu arma.");
            }
        }
		case LASERCONFIG2:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
                     	Mensaje(playerid, -1, "Has elegido un color para tu laser.");
						PlayerInfo[playerid][pColorLaser] = 18643;
                    }
					case 1:
					{
                        Mensaje(playerid, -1, "Has elegido un color para tu laser.");
						PlayerInfo[playerid][pColorLaser] = 19080;
                    }
					case 2:
					{
                        Mensaje(playerid, -1, "Has elegido un color para tu laser.");
                        PlayerInfo[playerid][pColorLaser] = 19081;
                    }
					case 3:
					{
                        Mensaje(playerid, -1, "Has elegido un color para tu laser.");
                        PlayerInfo[playerid][pColorLaser] = 19082;
                    }
					case 4:
					{
                        Mensaje(playerid, -1, "Has elegido un color para tu laser.");
                        PlayerInfo[playerid][pColorLaser] = 19083;
                    }
					case 5:
					{
     					Mensaje(playerid, -1, "Has elegido un color para tu laser.");
                        PlayerInfo[playerid][pColorLaser] = 19084;
                    }
                }
            }
        }
   		/**** ESTADO*****/
		case DIALOG_ESTADO1:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						if(PlayerInfo[playerid][pTieneEstado] == 1) return Mensaje(playerid, -1, "Ya tienes un estado activo, borralo primero.");
						MostrarDialog(playerid, DIALOG_ESTADO3, DIALOG_STYLE_INPUT,"Mi estado\t {6F13CF}� Tu nuevo estado", "{AD6DF0}�"CB" �Cual es tu estado actual? \n{AD6DF0}�"CB" Expresate de tu estado\n{AD6DF0}�"CB" Compartenos tus gustos\n{AD6DF0}�"CB" D�gite una frase llamativa", "{00E900}Aceptar","{FF0000}Cancelar");
					}
					case 1:
					{
						if(PlayerInfo[playerid][pTieneEstado] == 0) return Mensaje(playerid,-1,"No tienes ningun estado activo.");
						if(PlayerInfo[playerid][pTieneEstado] == 1)
				  		{
							va_SendClientMessage(playerid,-1,"Tu estado actual ha sido eliminado.");
							format(PlayerInfo[playerid][pFraseEstado], 64, "Ninguna");
							LimpiarEstado(playerid);
							PlayerInfo[playerid][pTieneEstado] = 0;
							return 1;
						}
					}
					case 2:
					{
						if(PlayerInfo[playerid][pTieneEstado] == 0) return Mensaje(playerid, -1, "No tienes un estado activo");
						MostrarDialog(playerid, COLOR_ESTADO, DIALOG_STYLE_LIST, "Elije un color.", DialogFormatColores, "Elegir", "Cancelar");
					}
				}
			}
		}
		case COLOR_ESTADO:
		{
			if(response)
			{
				UpdateDynamic3DTextLabelText(estado1[playerid], RandomColors[listitem], PlayerInfo[playerid][pFraseEstado]);
				Mensaje(playerid, -1, ""CR"El color de tu "CB"estado"CR" ha sido cambiado");
			}
		}
		case DIALOG_ESTADO3:
		{
			if(!response) return 1;
			if(slen > 32) return MostrarDialog(playerid, DIALOG_ESTADO3, DIALOG_STYLE_INPUT, "Estado", "El m�ximo son 32 caracteres para un estado, por favor ingresa uno mas corto.", "Aceptar", "Cancelar");
			if(isnull(inputtext)) return MostrarDialog(playerid, DIALOG_ESTADO3, DIALOG_STYLE_INPUT,"Mi estado\t {6F13CF}� Tu nuevo estado", "{AD6DF0}�"CB" �Cual es tu estado actual? \n{AD6DF0}�"CB" Expresa tu estado\n{AD6DF0}�"CB" Comp�rtenos tus gustos\n{AD6DF0}�"CB" Ingresa una frase llamativa", "{00E900}Aceptar","{FF0000}Cancelar");
			va_SendClientMessage(playerid,-1,"Has ingresado correctamente tu nuevo estado "CR"(%s)"CB".",inputtext);
			estado1[playerid] = CreateDynamic3DTextLabel(inputtext,0x79E069FF,0.0, 0.0,0.4,6.0,playerid);
			format(PlayerInfo[playerid][pFraseEstado], 64, "%s",inputtext);
			PlayerInfo[playerid][pTieneEstado] = 1;
		}
		///******* inicio sistema /banda */
		case CONFIG_BANDA:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						if(PlayerInfo[playerid][jMiembro] <= 4) return Mensaje(playerid, -1,"Las {3399FF}Bandas civiles"CB" no pueden usar esta opci�n.");

						new crew_territoriestotal = 38;
						
						new banda = PlayerInfo[playerid][jMiembro];
						new crew_territories = GetTerritorios(banda);
						new item[2000];
						format(item,sizeof(item),""CB"Nombre de la banda: "CR"%s"CB"\n\n"CB"Integrantes: %d\n",BandasInfo[banda][BNombre], BandasInfo[banda][BIntegrantes]);
						format(item,sizeof(item),"%s\n"CB"Fabrica: {FF9933}%s\n",item,	(TieneFabrica(PlayerInfo[playerid][jMiembro])) ? ("Si") : ("No"));
						format(item,sizeof(item),"%s\n"CB"Territorios: {FF9933}%d/%d\n",item, crew_territories, crew_territoriestotal);
						format(item,sizeof(item),"%s\n"CB"Rango 1: {FF9933}%s"CB"\n",item,BRango[0][banda]);
						format(item,sizeof(item),"%s\nRango 2: {FF9933}%s"CB"\n",item,	BRango[1][banda]);
						format(item,sizeof(item),"%s\nRango 3: {FF9933}%s"CB"\n",item,	BRango[2][banda]);
						format(item,sizeof(item),"%s\nRango 4: {FF9933}%s"CB"\n",item,	BRango[3][banda]);
						format(item,sizeof(item),"%s\nRango 5: {FF9933}%s"CB"\n",item,	BRango[4][banda]);
						format(item,sizeof(item),"%s\nRango 6: {FF9933}%s"CB"\n",item,	BRango[5][banda]);
						format(item,sizeof(item),"%s\nRango 7: {FF9933}%s"CB"\n",item,	BRango[6][banda]);
						format(item,sizeof(item),"%s\nRango 8: {FF9933}%s"CB" (L�der)\n",item,	BRango[7][banda]);
						return MostrarDialog(playerid,INVENTARIO,DIALOG_STYLE_MSGBOX,"Informaci�n sobre la banda",item,"Cerrar","");

					}

					case 1:
					{
						if(PlayerInfo[playerid][jMiembro] <= 4) return Mensaje(playerid, -1,"Las {3399FF}Bandas civiles"CB" no pueden usar esta opci�n.");
						if(PlayerInfo[playerid][pRango] < 7) return Mensaje(playerid,-1,"No tienes los suficientes permisos.");
						
						return MostrarDialog(playerid,CONFIG_BANDA2, DIALOG_STYLE_LIST, "Bandas: Administrar tu banda",""CB"- Cambiar el nombre de la banda\n"CB"- Cambiar el nombre de los rangos\n"CB"- Ajustar permisos de la banda\n"CB"- Eliminar tu banda","Seleccionar", "Salir");
					}
					case 2:
					{
		
						MiembrosBanda(playerid);

					}
					case 3:
					{
						if(PlayerInfo[playerid][jMiembro] <= 4) return Mensaje(playerid, -1,"Las {3399FF}Bandas civiles"CB" no pueden usar esta opci�n.");
						if(PlayerInfo[playerid][pRango] < 7) return Mensaje(playerid,-1,"No tienes los suficientes permisos.");
						
						return MostrarDialog(playerid, D_COLOR1, DIALOG_STYLE_LIST, ""CB"Selecciona el color para tu banda", DialogFormatColores, "Seleccionar", "Atr�s");
					}
					case 4:
					{
						AbandonarBanda(playerid);
					}
				 	case 5:
					{
						new bid = PlayerInfo[playerid][jMiembro];
						new sumarint = BandasInfo[bid][MaxIntegrantes] + 10;
						if(sumarint > MAX_SLOTS_BANDA) return va_SendClientMessage(playerid, -1, "Tu banda ya tiene el m�ximo de slots para comprar (%d)", MAX_SLOTS_BANDA);
						format(string,sizeof string, "Cantidad slots\tPrecio\tSlots totales\n10\t10 "Moneda3"\t%d", sumarint);
						MostrarDialog(playerid, Aumento_Slots, DIALOG_STYLE_TABLIST_HEADERS, "Aumento de slots", string, "Comprar", "Cancelar");
					}

				}
			}
			return 1;
		}
		case Aumento_Slots:
		{
			if(!response) return 1;
			new bida = PlayerInfo[playerid][jMiembro];
			switch(listitem)
			{
				case 0:{
					if(PlayerInfo[playerid][Credits] < 10) return SendClientMessage(playerid, -1, "No tienes 10 "Moneda3"");
					new sumarint = BandasInfo[bida][MaxIntegrantes] + 10;
					if(sumarint > MAX_SLOTS_BANDA) return va_SendClientMessage(playerid, -1, "Tu banda ya tiene el m�ximo de slots para comprar (%d)", MAX_SLOTS_BANDA);
					BandasInfo[bida][MaxIntegrantes] = sumarint;
					mysql_format(Conecction, Query, sizeof(Query), "UPDATE `facciones` SET `MaxIntegrantes`='%d' WHERE `id`='%d' LIMIT 1",sumarint,bida);
					mysql_tquery(Conecction, Query);
					format(string,sizeof string, "Ahora puedes reclutar hasta "CR"%d"CB" integrantes.", sumarint);
					SendClientMessage(playerid, -1, string);
					PlayerInfo[playerid][Credits]  -= 10;
				}
			}
		}
		case CONFIG_BANDA2:
		{
		    if(response)
			{
			    switch(listitem)
				{
				    case 0:
					{
						MostrarDialog(playerid,CHANGE_CREW_NAME, DIALOG_STYLE_INPUT, "Nuevo nombre de la banda:", "Introduce el nuevo nombre de tu banda.", "Continuar", "Volver");
					}
					case 1:
					{
					    new DIALOG[676],banda = PlayerInfo[playerid][jMiembro];
					 	format(string, sizeof(string), ""CB"- %s(1)\n", BRango[0][banda]);
						strcat(DIALOG, string);
						format(string, sizeof(string), ""CB"- %s(2)\n",BRango[1][banda]);
						strcat(DIALOG, string);
						format(string, sizeof(string), ""CB"- %s(3)\n",BRango[2][banda]);
						strcat(DIALOG, string);
						format(string, sizeof(string), ""CB"- %s(4)\n",BRango[3][banda]);
						strcat(DIALOG, string);
						format(string, sizeof(string), ""CB"- %s(5)\n",BRango[4][banda]);
						strcat(DIALOG, string);
						format(string, sizeof(string), ""CB"- %s(6)\n",BRango[5][banda]);
						strcat(DIALOG, string);
						format(string, sizeof(string), ""CB"- %s(7)\n",BRango[6][banda]);
						strcat(DIALOG, string);
						format(string, sizeof(string), ""CB"- %s(8)\n",BRango[7][banda]);
						strcat(DIALOG, string);
						MostrarDialog(playerid,VIEW_RANK_NAME,DIALOG_STYLE_LIST, "Bandas: Rangos de la banda",DIALOG, "Cambiar", "Volver");
					}
					case 2:
					{
					 	MostrarDialog(playerid,CHANGE_PROP_RANK,DIALOG_STYLE_LIST, "Bandas: Administra tu banda",""CB"- Ajustar permiso de invitaciones\n"CB"- Ajustar permiso de expulsiones\n"CB"- Ajustar permiso de ascender/descender\n", "Cambiar", "Volver");
					}
					case 3:
					{
	    				if(PlayerInfo[playerid][pRango] < 8) return Mensaje(playerid,-1,"La banda solo puede ser borrada por el lider.");
					   	if(BorrarBanda(playerid)) Mensaje(playerid,-1,"Tu banda fue borrada correctamente.");
					}
				}
			}
		}
		case CHANGE_CREW_NAME:
		{
		    if(!response)
			{
			    return MostrarDialog(playerid,CONFIG_BANDA2, DIALOG_STYLE_LIST, "Bandas: Administrar tu banda",""CB"- Cambiar el nombre de la banda\n"CB"- Cambiar el nombre de los rangos\n"CB"- Ajustar permisos de la banda\n"CB"- Eliminar tu banda","Seleccionar", "Salir");
			}
			if(slen < 5 || slen > MAX_BANDA_NAME) return Mensaje(playerid, -1, "El nombre debe contener de 5 a 20 caracteres.");
		    if(PlayerInfo[playerid][jMiembro] == 1) return Mensaje(playerid,-1,"No se puede hacer esto en esta faccion.");
		    if(PlayerInfo[playerid][jMiembro] == 2) return Mensaje(playerid,-1,"No se puede hacer esto en esta faccion.");
		    if(PlayerInfo[playerid][jMiembro] == 3) return Mensaje(playerid,-1,"No se puede hacer esto en esta faccion.");
			if(!NombreBandaAceptado(inputtext)) return Mensaje(playerid, -1, "Solo se aceptan estos car�cteres: A-Z, a-z, �-�, �-�, ., *,\", !�, #, @,-, _, (), []");
            mysql_format(Conecction, Query, sizeof(Query), "SELECT * FROM `facciones` WHERE `Nombre`='%e' LIMIT 1",inputtext);
			mysql_tquery(Conecction, Query, "NuevoNombreFaccion", "ds", playerid, inputtext);
		}
		case VIEW_RANK_NAME:
		{
		    if(!response)
			{
			    
			    return MostrarDialog(playerid,CONFIG_BANDA2, DIALOG_STYLE_LIST, "Bandas: Administrar tu banda",""CB"- Cambiar el nombre de la banda\n"CB"- Cambiar el nombre de los rangos\n"CB"- Ajustar permisos de la banda\n"CB"- Eliminar tu banda","Seleccionar", "Salir");
			}
			User_Temp[playerid][jSelectRango] = listitem + 1;
			return MostrarDialog(playerid,CHANGE_RANK_NAME, DIALOG_STYLE_INPUT, "{00FF00}"Moneda1":RP - Cambiar Nombre Rango", "Introduce el nuevo nombre para el rango", "Continuar", "Salir");

		}
		case CHANGE_RANK_NAME:
		{
		    if(!response)
			{
			    
			    return MostrarDialog(playerid,CONFIG_BANDA2, DIALOG_STYLE_LIST, "Bandas: Administrar tu banda",""CB"- Cambiar el nombre de la banda\n"CB"- Cambiar el nombre de los rangos\n"CB"- Ajustar permisos de la banda\n"CB"- Eliminar tu banda","Seleccionar", "Salir");
			}
			if(slen > 30 || slen < 1) return Mensaje(playerid, -1, "M�ximo 30 car�cteres");
	        new BANDA_ID = PlayerInfo[playerid][jMiembro];

		    if(BANDA_ID == 1) return Mensaje(playerid,-1,"No se puede hacer esto en esta faccion.");
		    if(BANDA_ID == 3) return Mensaje(playerid,-1,"No se puede hacer esto en esta faccion.");

			if(!RangoYaCreado(BANDA_ID, inputtext))
			{
			    MostrarDialog(playerid,CHANGE_RANK_NAME, DIALOG_STYLE_INPUT, "{00FF00}"Moneda1":RP - Cambiar Nombre Rango", "El rango introducido ya se encuentra en uso.\nIntroduce el nuevo nombre para el rango", "Continuar", "Salir");
			    return 1;
			}
			mysql_format(Conecction, Query, sizeof(Query), "UPDATE `facciones` SET `Rango%d`='%e' WHERE `id`='%d' LIMIT 1",User_Temp[playerid][jSelectRango],inputtext,PlayerInfo[playerid][jMiembro]);
			mysql_tquery(Conecction, Query);
			format(BRango[User_Temp[playerid][jSelectRango]-1][BANDA_ID], 32, "%s", inputtext);
			format(string, 128, "El rango {FF9900}%s"CB" fue cambiado a {FF9900}%s"CB".",RangoBanda(BANDA_ID, User_Temp[playerid][jSelectRango]),inputtext);
			SendRadioMessage(PlayerInfo[playerid][jMiembro], -1, string,INVALID_PLAYER_ID, 0);

			User_Temp[playerid][jSelectRango] = 0;
			//CargarFacciones();

			new DIALOG[676];
		 	format(string, sizeof(string), "{00A8FF}[1]"CB" %s\n", BRango[0][BANDA_ID]);
			strcat(DIALOG, string);
			format(string, sizeof(string), "{00A8FF}[2]"CB" %s\n",BRango[1][BANDA_ID]);
			strcat(DIALOG, string);
			format(string, sizeof(string), "{00A8FF}[3]"CB" %s\n",BRango[2][BANDA_ID]);
			strcat(DIALOG, string);
			format(string, sizeof(string), "{00A8FF}[4]"CB" %s\n",BRango[3][BANDA_ID]);
			strcat(DIALOG, string);
			format(string, sizeof(string), "{00A8FF}[5]"CB" %s\n",BRango[4][BANDA_ID]);
			strcat(DIALOG, string);
			format(string, sizeof(string), "{00A8FF}[6]"CB" %s\n",BRango[5][BANDA_ID]);
			strcat(DIALOG, string);
			format(string, sizeof(string), "{00A8FF}[7]"CB" %s\n",BRango[6][BANDA_ID]);
			strcat(DIALOG, string);
			format(string, sizeof(string), "{00A8FF}[8]"CB" %s\n",BRango[7][BANDA_ID]);
			strcat(DIALOG, string);
			return MostrarDialog(playerid,VIEW_RANK_NAME,DIALOG_STYLE_LIST, "{00FF00}"Moneda1":RP - Configuraci�n Rangos Names",DIALOG, "Cambiar", "Volver");
		}
		case CHANGE_PROP_RANK:
		{
		    if(!response)
			{
			    
			    return MostrarDialog(playerid,CONFIG_BANDA2, DIALOG_STYLE_LIST, "Bandas: Administrar tu banda",""CB"- Cambiar el nombre de la banda\n"CB"- Cambiar el nombre de los rangos\n"CB"- Ajustar permisos de la banda\n"CB"- Eliminar tu banda","Seleccionar", "Salir");
			}
		    if(response)
			{
			    switch(listitem)
				{
				    case 0://invitar
					{
						new DIALOG[676];

						strcat(DIALOG, "Rango\tEstado actual\n");

					 	format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[0][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_INV][0]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
						strcat(DIALOG, string);

						format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[1][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_INV][1]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
						strcat(DIALOG, string);

						format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[2][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_INV][2]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
						strcat(DIALOG, string);

						format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[3][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_INV][3]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
						strcat(DIALOG, string);

						format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[4][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_INV][4]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
						strcat(DIALOG, string);

						format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[5][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_INV][5]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
						strcat(DIALOG, string);

						format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[6][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_INV][6]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
						strcat(DIALOG, string);
						return MostrarDialog(playerid, CREW_RANK_INV, DIALOG_STYLE_TABLIST_HEADERS, "Configuraci�n de invitaciones", DIALOG, "Cambiar", "Volver");
     				}
					case 1://expulsar
					{
			            new DIALOG[676];
						strcat(DIALOG, "Rango\tEstado actual\n");

					 	format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[0][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_EXP][0]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
						strcat(DIALOG, string);

						format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[1][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_EXP][1]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
						strcat(DIALOG, string);

						format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[2][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_EXP][2]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
						strcat(DIALOG, string);

						format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[3][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_EXP][3]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
						strcat(DIALOG, string);

						format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[4][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_EXP][4]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
						strcat(DIALOG, string);

						format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[5][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_EXP][5]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
						strcat(DIALOG, string);

						format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[6][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_EXP][6]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
						strcat(DIALOG, string);
						return MostrarDialog(playerid, CREW_RANK_EXP, DIALOG_STYLE_TABLIST_HEADERS, "Configuraci�n de expulsiones", DIALOG, "Cambiar", "Volver");
					}
					case 2:
					{
					    new DIALOG[676];
						strcat(DIALOG, "Rango\tEstado actual\n");

					 	format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[0][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_EDIT][0]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
						strcat(DIALOG, string);

						format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[1][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_EDIT][1]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
						strcat(DIALOG, string);

						format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[2][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_EDIT][2]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
						strcat(DIALOG, string);

						format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[3][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_EDIT][3]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
						strcat(DIALOG, string);

						format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[4][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_EDIT][4]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
						strcat(DIALOG, string);

						format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[5][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_EDIT][5]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
						strcat(DIALOG, string);

						format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[6][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_EDIT][6]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
						strcat(DIALOG, string);
						return MostrarDialog(playerid, CREW_RANK_EDI, DIALOG_STYLE_TABLIST_HEADERS, "Configuraci�n de ascenso u descenso", DIALOG, "Cambiar", "Volver");
					}
				}
			}
			return 1;
		}
		case CREW_RANK_EDI:
		{
		    if(!response) return MostrarDialog(playerid,CHANGE_PROP_RANK,DIALOG_STYLE_LIST, "Bandas: Administra tu banda",""CB"- Ajustar permiso de invitaciones\n"CB"- Ajustar permiso de expulsiones\n"CB"- Ajustar permiso de ascender/descender\n", "Cambiar", "Volver");
		    if(response)
			{
                new BANDA_ID = PlayerInfo[playerid][jMiembro];
			    if(BandasInfo[BANDA_ID][RANK_EDIT][listitem] == 1) BandasInfo[BANDA_ID][RANK_EDIT][listitem] = 0;
			    else BandasInfo[BANDA_ID][RANK_EDIT][listitem] = 1;

			    format(string, sizeof string, "Ahora los jugadores con el rango {%s}%s"CB" %s subir o bajar rangos",BandasInfo[PlayerInfo[playerid][jMiembro]][BColor],RangoBanda(BANDA_ID, listitem + 1), (BandasInfo[BANDA_ID][RANK_EDIT][listitem]) ? ("pueden") : ("no podr�n"));
				SendRadioMessage(PlayerInfo[playerid][jMiembro], -1, string,INVALID_PLAYER_ID, 0);
				
			    mysql_format(Conecction, Query, sizeof(Query), "UPDATE `facciones` SET `Rango%dEdi`='%d' WHERE `id`='%d' LIMIT 1",listitem+1, BandasInfo[BANDA_ID][RANK_EDIT][listitem],PlayerInfo[playerid][jMiembro]);
 				mysql_tquery(Conecction, Query);

				new DIALOG[676];
				strcat(DIALOG, "Rango\tEstado actual\n");

				format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[0][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_EDIT][0]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
				strcat(DIALOG, string);

				format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[1][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_EDIT][1]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
				strcat(DIALOG, string);

				format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[2][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_EDIT][2]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
				strcat(DIALOG, string);

				format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[3][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_EDIT][3]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
				strcat(DIALOG, string);

				format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[4][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_EDIT][4]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
				strcat(DIALOG, string);

				format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[5][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_EDIT][5]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
				strcat(DIALOG, string);

				format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[6][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_EDIT][6]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
				strcat(DIALOG, string);

 				MostrarDialog(playerid, CREW_RANK_EDI, DIALOG_STYLE_TABLIST_HEADERS, "Configuraci�n de ascenso u descenso", DIALOG, "Cambiar", "Volver");
			}
			return 1;
		}
		case CREW_RANK_EXP:
		{
		    if(!response) return 1;
		    if(response)
			{
                new BANDA_ID = PlayerInfo[playerid][jMiembro];
			    if(BandasInfo[BANDA_ID][RANK_EXP][listitem] == 1) BandasInfo[BANDA_ID][RANK_EXP][listitem] = 0;
			    else BandasInfo[BANDA_ID][RANK_EXP][listitem] = 1;

			    format(string, sizeof string, "Ahora los jugadores con el rango {%s}%s"CB" %s expulsar",BandasInfo[PlayerInfo[playerid][jMiembro]][BColor], RangoBanda(BANDA_ID, listitem + 1), (BandasInfo[BANDA_ID][RANK_EXP][listitem]) ? ("pueden") : ("no podr�n"));
				SendRadioMessage(PlayerInfo[playerid][jMiembro], -1, string,INVALID_PLAYER_ID, 0);

			    mysql_format(Conecction, Query, sizeof(Query), "UPDATE `facciones` SET `Rango%dExp`='%d' WHERE `id`='%d' LIMIT 1",listitem+1, BandasInfo[BANDA_ID][RANK_EXP][listitem], PlayerInfo[playerid][jMiembro]);
 				mysql_tquery(Conecction, Query);

				new DIALOG[676];
				strcat(DIALOG, "Rango\tEstado actual\n");

				format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[0][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_EXP][0]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
				strcat(DIALOG, string);

				format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[1][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_EXP][1]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
				strcat(DIALOG, string);

				format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[2][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_EXP][2]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
				strcat(DIALOG, string);

				format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[3][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_EXP][3]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
				strcat(DIALOG, string);

				format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[4][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_EXP][4]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
				strcat(DIALOG, string);

				format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[5][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_EXP][5]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
				strcat(DIALOG, string);

				format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[6][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_EXP][6]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
				strcat(DIALOG, string);
 				MostrarDialog(playerid, CREW_RANK_EXP, DIALOG_STYLE_TABLIST_HEADERS, "Configuraci�n de expulsiones", DIALOG, "Cambiar", "Volver");
			}
			return 1;
		}
		case CREW_RANK_INV:
		{
		    if(!response) return 1;
			else if(response)
			{
   				new BANDA_ID = PlayerInfo[playerid][jMiembro];
			    if(BandasInfo[BANDA_ID][RANK_INV][listitem] == 1) BandasInfo[BANDA_ID][RANK_INV][listitem] = 0;
			    else BandasInfo[BANDA_ID][RANK_INV][listitem] = 1;

			    format(string, sizeof string, "Ahora los jugadores con el rango {%s}%s"CB" %s invitar",BandasInfo[PlayerInfo[playerid][jMiembro]][BColor], RangoBanda(BANDA_ID, listitem + 1),(BandasInfo[BANDA_ID][RANK_INV][listitem]) ? ("pueden") : ("no podr�n"));
				SendRadioMessage(PlayerInfo[playerid][jMiembro], -1, string,INVALID_PLAYER_ID, 0);

				mysql_format(Conecction, Query, sizeof(Query), "UPDATE `facciones` SET `Rango%dInv`='%d' WHERE `id`='%d' LIMIT 1", listitem+1,BandasInfo[BANDA_ID][RANK_INV][listitem], PlayerInfo[playerid][jMiembro]);
			 	mysql_tquery(Conecction, Query);

				new DIALOG[676];

				strcat(DIALOG, "Rango\tEstado actual\n");

				format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[0][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_INV][0]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
				strcat(DIALOG, string);

				format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[1][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_INV][1]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
				strcat(DIALOG, string);

				format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[2][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_INV][2]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
				strcat(DIALOG, string);

				format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[3][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_INV][3]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
				strcat(DIALOG, string);

				format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[4][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_INV][4]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
				strcat(DIALOG, string);

				format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[5][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_INV][5]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
				strcat(DIALOG, string);

				format(string, sizeof(string), ""CB"- %s:\t%s\n", BRango[6][PlayerInfo[playerid][jMiembro]], (BandasInfo[ PlayerInfo[playerid][jMiembro] ][RANK_INV][6]) ? ("    {07C400}� Si �") : ("    {FF0000}� No �"));
				strcat(DIALOG, string);
			 	MostrarDialog(playerid, CREW_RANK_INV, DIALOG_STYLE_TABLIST_HEADERS, "Configuraci�n de invitaciones", DIALOG, "Cambiar", "Volver");
			}
			return 1;
		}

		///***** fin sistema banda */
		case D_CONFIGNU:
		{
			if(response)
			{
    		if(!EsNumerico(inputtext)) return MostrarDialog(playerid,D_CONFIGNU, DIALOG_STYLE_INPUT,""CR"Cambiar n�mero",""CB"Ingresa el n�mero que quieres usar:","Ingresar","Salir");
    		if(slen < 3 || slen > 6 ) return Mensaje(playerid,-1,"El n�mero debe ser m�ximo 6 digitos, m�nimo 3." );
    		if(strval(inputtext) == 815 || strval(inputtext) == 911) return Mensaje(playerid, -1, "No puedes usar este n�mero");
			PlayerInfo[playerid][tempNum] = strval(inputtext);
    		if(PlayerInfo[playerid][tempNum] < 100) return 1;
    		mysql_format(Conecction, Query, sizeof(Query), "SELECT * FROM `usuarios` WHERE `Numero` = '%d' LIMIT 1", PlayerInfo[playerid][tempNum]);
			mysql_tquery(Conecction, Query, "CambiarNumero", "d", playerid);
    		}
  		}

		 case D_CONFIGNU2:
		{
			if(response)
			{
			new precionum;
	   		precionum = 10;
	   		if(PlayerInfo[playerid][tempNum] > 100 && PlayerInfo[playerid][tempNum] < 1000) precionum = 40;
	   		if(PlayerInfo[playerid][tempNum] > 1000 && PlayerInfo[playerid][tempNum] < 10000) precionum = 35;
	   		if(PlayerInfo[playerid][tempNum] > 10000 && PlayerInfo[playerid][tempNum] < 100000) precionum = 15;
	   		if(PlayerInfo[playerid][tempNum] > 100000) precionum = 10;
    		if(PlayerInfo[playerid][tempNum] < 100) return 1;
		  	if(PlayerInfo[playerid][Moneda] < precionum) return Mensaje(playerid,-1,"No tienes suficientes "CR""Moneda1""CB" para comprar este n�mero.");
		  	PlayerInfo[playerid][Moneda] -= precionum;
		  	PlayerInfo[playerid][pNumero] = PlayerInfo[playerid][tempNum];
			GuardarCuenta(playerid);
		  	Mensaje(playerid,-1,"Cambiaste tu n�mero correctamente!" );
   		 	}
  		}
		case D_CONFIGS:
		{
		 	new QueryC[159];
			if(response)
			{
				switch(listitem)
				{
				 case 0:
				{
				  if(PlayerInfo[playerid][jSexo] == 1) return Mensaje(playerid,-1,"Ya eres de este sexo.");
				  if(PlayerInfo[playerid][Moneda] < 10) return Mensaje(playerid,-1,"Necesitas "CR"10"Moneda1""CB" para poder cambiarte el sexo.");
				  MostrarDialog(playerid,D_CONFIGS, DIALOG_STYLE_LIST,""CR"Cambiar Sexo", "� Hombre\n� Mujer","Seleccionar","Salir");
				  PlayerInfo[playerid][jSexo] = 1;
				  PlayerInfo[playerid][Moneda] -= 10;
				  Mensaje(playerid,-1,"Te cambiaste al sexo masculino por "CR"10"Moneda1""CB".");
				  PlayerInfo[playerid][jRopa] = 250;
  				  mysql_format(Conecction, QueryC, sizeof(QueryC), "UPDATE `usuarios` SET `Skin` = '250', `Sexo` = '1' WHERE `Username` = '%e' LIMIT 1",PlayerInfo[playerid][NombreTemporal]);
				  mysql_tquery(Conecction, QueryC);
				  SetPlayerSkin(playerid,PlayerInfo[playerid][jRopa]);
				}
				 case 1:
				{
				  if(PlayerInfo[playerid][jSexo] == 2) return Mensaje(playerid,-1,"Ya eres de este sexo.");
				  if(PlayerInfo[playerid][Moneda] < 10) return Mensaje(playerid,-1,"Necesitas "CR"10"Moneda1""CB" para poder cambiarte el sexo.");
				  PlayerInfo[playerid][jSexo] = 2;
				  PlayerInfo[playerid][Moneda] -= 10;
				  Mensaje(playerid,-1,"Te cambiaste al sexo femenino por "CR"10"Moneda1""CB".");
				  PlayerInfo[playerid][jRopa] = 11;
  				  mysql_format(Conecction, QueryC, sizeof(QueryC), "UPDATE `usuarios` SET `Skin` = '11', `Sexo` = '2' WHERE `Username` = '%e' LIMIT 1",PlayerInfo[playerid][NombreTemporal]);
				  mysql_tquery(Conecction, QueryC);
				  SetPlayerSkin(playerid,PlayerInfo[playerid][jRopa]);
				}
				}
			}
    	}
		case TALLER2:
        {
            if(response)
            {
			
                new autoid = GetPlayerVehicleID(playerid);
 				for(new a = 0; a < MAX_PAUTOS; a++)
				{
					if(autos[a][playerid] == autoid)
					{
						VehicleInfo[playerid][a][vColor2] = listitem;
					    ChangeVehicleColorAC(autoid, VehicleInfo[playerid][a][vColor1],VehicleInfo[playerid][a][vColor2]);
						QuitarVelocimetro(playerid);
						MostrarVelocimetro(playerid);
						mysql_format(Conecction, Query, 250,"UPDATE `p_autos` SET `Color1`='%d', `Color2`='%d' WHERE `ID`='%d' LIMIT 1",VehicleInfo[playerid][a][vColor1],VehicleInfo[playerid][a][vColor2],VehicleInfo[playerid][a][v_DBID]);
						mysql_tquery(Conecction, Query);
						Mensaje(playerid, -1, "Cambiaste el color secundario de tu veh�culo");
						PlayerInfo[playerid][Moneda] -= 3;
						return 1;
					}
				}
				return 1;
            }
        }
  		case TALLER:
		{
		    if(response)
		    {
				
                new autoid = GetPlayerVehicleID(playerid);
				for(new a = 0; a < MAX_PAUTOS; a++)
				{
					if(autos[a][playerid] == autoid)
					{
						VehicleInfo[playerid][a][vColor1] = listitem;
					    ChangeVehicleColorAC(autoid, listitem,VehicleInfo[playerid][a][vColor2]);
						Mensaje(playerid, -1, "Cambiaste el color primario de tu veh�culo");
						MostrarDialog(playerid, TALLER2, DIALOG_STYLE_LIST, "Color secundario",DialogFormatColoresV,"Pintar","Cancelar");
						return 1;
					}
				}
				return 1;
		    }
		}
        
		case INVITAR:
		{
			if(response)
			{
				new string2[128];
				if(BandaOfertada[playerid] != 0)
				{
					if(BandasInfo[BandaOfertada[playerid]][BIntegrantes] >= BandasInfo[BandaOfertada[playerid]][MaxIntegrantes]) return Mensaje(playerid, -1, "No puedes unirte a esa banda."),BandaOfertada[playerid] = 0;
					PlayerInfo[playerid][jMiembro] = BandaOfertada[playerid];
					PlayerInfo[playerid][pRango] = 1;
					Mensaje(OfertadorBanda[playerid],-1,"El jugador acepto la invitacion.");
					ActualizarIntegrantes(PlayerInfo[playerid][jMiembro], 1);
					BandaOfertada[playerid] = 0;
					OfertadorBanda[playerid] = INVALID_PLAYER_ID;
					format(string, 128, "�Felicitaciones! Te uniste a la banda "CR"%s"CB".", BandasInfo[PlayerInfo[playerid][jMiembro]][BNombre]);
					Mensaje(playerid, -1, string);
					format(string2, 128, "El jugador "CR"%s"CB" se uni� a la banda.", NombreJugador(playerid));
					SendRadioMessage(PlayerInfo[playerid][jMiembro], -1, string2, playerid, 1);
					ShowTerritorios(playerid);
					ShowTerritorio[playerid] = 1;
					GuardarCuenta(playerid);
				}
			}
			if(!response)
			{
				Mensaje(OfertadorBanda[playerid],-1,"El jugador cancelo la invitacion.");
				BandaOfertada[playerid] = 0;
				OfertadorBanda[playerid] = INVALID_PLAYER_ID;
				Mensaje(playerid,-1,"Cancelaste la invitacion.");
			}
		}
		case CREARBANDA:
		{
		    if(response)
		    {

				new BandaQuery[300];
			    if(PlayerInfo[playerid][jMiembro] > 0) return Mensaje(playerid, -1, "No puedes crear bandas, tu ya eres integrante de una.");
				if(slen < 5 || slen > MAX_BANDA_NAME) return Mensaje(playerid, -1, "El nombre debe contener de 5 a 20 caracteres.");
	            if(!NombreBandaAceptado(inputtext)) return Mensaje(playerid, -1, "Solo se aceptan estos car�cteres: A-Z, a-z, �-�, �-�, ., *,\", !�, #, @,-, _, (), []");
				PlayerInfo[playerid][jDinero] -= 550000;
				mysql_format(Conecction, BandaQuery, sizeof(BandaQuery), "INSERT INTO facciones (Nombre, Lider, tipobanda, fecha) VALUES ('%e', '%e', '%e', CURRENT_TIMESTAMP())",inputtext,NombreJugador(playerid),BandaType(PlayerTemp[playerid][GangType]));
				mysql_tquery(Conecction, BandaQuery, "GangRegistrada", "d", playerid);
				PlayerInfo[playerid][pRango] = 8;
				va_SendClientMessage(playerid,-1,"Creaste la "CR"%s"CB" correctamente\nUsa "CR"/ayuda bandas"CB" para saber mas.",BandaType(PlayerTemp[playerid][GangType]));
				MostrarDialog(playerid, D_COLOR1, DIALOG_STYLE_MSGBOX, "Informacion sobre los territorios:", ""CB"Debido al nuevo sistema de territorios deber�s asigarle un color a tu banda\nel color que asignes ser� el color que tendra los territorios que domines.", "Siguiente", "");
				CargarFacciones();
				ShowTerritorios(playerid);
				
		    }
		}
		case BANDATIPO:
		{
			if(response)
			{
   				if(PlayerInfo[playerid][jDinero] < 550000) return Mensaje(playerid, -1, "No tienes suficiente dinero para crear una banda (550,000).");
				PlayerTemp[playerid][GangType] = listitem;
				MostrarDialog(playerid, CREARBANDA, DIALOG_STYLE_INPUT, BandaType(listitem), "Intruduce un nombre para tu banda:", "Aceptar", "Cancelar");
			}
			return 1;
		}
		case TIENDA_CVIP:
		{
			if(response)
			{
				if(PlayerInfo[playerid][VIP] != 0) return va_SendClientMessage(playerid,-1,"Ya tienes una membres�a "CR"VIP %d"CB" activa, usa "CR"/cancelar vip"CB" para cancelarla.",PlayerInfo[playerid][VIP]);
				new dia,mes,ano,price,Tipo[10];
				getdate(dia,mes,ano);
				if(listitem == 0)
				{
					price = PRECIO_VIP1,Tipo = ""Moneda1"";
					if(PlayerInfo[playerid][Moneda] < price) return Mensaje(playerid,-1,"No tienes los "Moneda1" necesarios para comprar esta membres�a.");
					PlayerInfo[playerid][VIP] = listitem + 1;
					PlayerInfo[playerid][Moneda] -= price;
				}
				else if(listitem == 1)
				{
					price = PRECIO_VIP2,Tipo = ""Moneda1"";
					if(PlayerInfo[playerid][Moneda] < price) return Mensaje(playerid,-1,"No tienes los "Moneda1" necesarios para comprar esta membres�a.");
					PlayerInfo[playerid][VIP] = listitem + 1;
					PlayerInfo[playerid][Moneda] -= price;
				}
				else
				{
					price = PRECIO_VIP3,Tipo = ""Moneda3"";
					if(PlayerInfo[playerid][Credits] < price) return Mensaje(playerid,-1,"No tienes los "Moneda3" necesarios para comprar esta membres�a.");
					PlayerInfo[playerid][VIP] = listitem + 1;
					PlayerInfo[playerid][Credits] -= price;
				}
				if(mes == 12) mes = 0;
				format(string,sizeof string,"~p~Felicidades~w~, adquiriste una membres�a ~p~VIP %d~w~ hasta el %d de %s del %d por ~p~%d %s~w~.",listitem+1,ano,QueMes(mes+1),dia,price,Tipo);
				ShowTDN(playerid, string);
				mysql_format(Conecction, Query, sizeof(Query), "UPDATE `usuarios` SET `TiempoVIP`='%d' WHERE `ID`='%d' LIMIT 1",gettimeVariable + 2592000,PlayerInfo[playerid][p_DBID]);
				mysql_tquery(Conecction, Query);
				PlayerInfo[playerid][jTiempoVip] = gettimeVariable + 2592000;
				
			}
		}
		case DIALOG_VEH_WZ:
		{
			if(!response) DialogTiendaDP(playerid);
			else
			{
				switch(listitem)
				{
					case 0: ShowModelSelectionMenu(playerid, vehrp, "Vehiculos"),TipoVehiculo[playerid] = 1;
					case 1: ShowModelSelectionMenu(playerid, helicopterostienda, "Vehiculos aereos"),TipoVehiculo[playerid] = 1;
					case 2: ShowModelSelectionMenu(playerid, motorp, "Motos"),TipoVehiculo[playerid] = 1;
					case 3: ShowModelSelectionMenu(playerid, barp, "Botes"),TipoVehiculo[playerid] = 1;

				}
			}
		}

		case DIALOG_VEH_C:
		{
			if(!response) DialogTiendaDP(playerid);
			else
			{
				switch(listitem)
				{
					case 0: ShowModelSelectionMenu(playerid, vehiculosespecial, "Vehiculos Exclusivos"),TipoVehiculo[playerid] = 2;
					case 1: ShowModelSelectionMenu(playerid, helicopterosespecial, "Aereos Exclusivos"),TipoVehiculo[playerid] = 2;
					case 2: ShowModelSelectionMenu(playerid, motosespeciales, "Motos Exclusivas"),TipoVehiculo[playerid] = 2;
					case 3: ShowModelSelectionMenu(playerid, botesespecial, "Botes Exclusivos"),TipoVehiculo[playerid] = 2;

				}
			}
		}

		case TIENDA_DP:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
					    if(FaccLegal(playerid)) return Mensaje(playerid,-1, "No puedes comprar ropa estando de servicio");
						switch(PlayerInfo[playerid][jSexo])
						{
						    case 1: ShowModelSelectionMenu(playerid, RopaHombre, "Conjuntos"),TipoRopa[playerid] = 1;
						    case 2: ShowModelSelectionMenu(playerid, RopaMujer, "Conjuntos"),TipoRopa[playerid] = 1;
						}
					}
					
					case 1:
					{
					    if(FaccLegal(playerid)) return Mensaje(playerid,-1, "No puedes comprar ropa estando de servicio");
						switch(PlayerInfo[playerid][jSexo])
						{
						    case 1: ShowModelSelectionMenu(playerid, RopaHombreCoin, "Conjuntos"),TipoRopa[playerid] = 2;
						    case 2: ShowModelSelectionMenu(playerid, RopaMujerCoin, "Conjuntos"),TipoRopa[playerid] = 2;
						}
					}

					case 2:{
						new str[219+1];

						format(str, sizeof(str), ""CR"�"CB" Autom�viles ({AD46D1}%d "Moneda1"{FFFFFF})\n"CR"�"CB" Veh�culos a�reos ({AD46D1}%d "Moneda1"{FFFFFF})\n"CR"�"CB" Motocicletas ({AD46D1}%d "Moneda1"{FFFFFF})\n"CR"�"CB" Botes ({AD46D1}%d "Moneda1"{FFFFFF})", PRECIO_VEH_WZ,PRECIO_VEH_WZ,PRECIO_VEH_WZ,PRECIO_VEH_WZ);

						MostrarDialog(playerid, DIALOG_VEH_WZ, DIALOG_STYLE_LIST, "{FFFFFF}Veh�culos{AD46D1} "Moneda1"", str, "Continuar", "Atr�s");
					}
					case 3:
					{

						MostrarDialog(playerid, DIALOG_VEH_C, DIALOG_STYLE_LIST, "{FFFFFF}Veh�culos{AD46D1} Coins", ""CR"�"CB" Autom�viles\n"CR"�"CB" Veh�culos a�reos\n"CR"�"CB" Motocicletas\n"CR"�"CB" Botes", "Continuar", "Atr�s");
					}
					case 4: {
						MostrarDialog(playerid, D_CONFIGNU, DIALOG_STYLE_INPUT, "Ingresa un n�mero telef�nico", "{FFFFFF}Por favor ingrese tu nuevo n�mero telef�nico", "Aceptar", "");
					}
					case 5:
					{
					  MostrarDialog(playerid,D_CONFIGS, DIALOG_STYLE_LIST,""CR"Cambiar Sexo", "� Hombre\n� Mujer","Seleccionar","Salir");
					}
					case 6:
					{ 
						format(string, sizeof string, "Membres�a\tPrecio\nVIP 1\t"CR"%d "Moneda1""CB"\nVIP 2\t"CR"%d "Moneda1"\nVIP 3\t"CR"%d "Moneda3"",PRECIO_VIP1,PRECIO_VIP2,PRECIO_VIP3);
						MostrarDialog(playerid, TIENDA_CVIP, DIALOG_STYLE_TABLIST_HEADERS, "Membres�as VIP",string, "Comprar", "Salir");
					}
					
				}
			}
		}
  		case PRENDA_COLOR:
		{
			if(response)
			{
				if(PlayerInfo[playerid][VIP] < 3) return Mensaje(playerid,-1,"Esta opci�n requiere una membres�a VIP "CR"3"CB" para poder utilizarla.");
				new slot = PrendaMarcada[playerid];
				PlayerInfo[playerid][pObjColor][slot] = RGBAToARGB(RandomColors[listitem]);
				Mensaje(playerid, -1, "Cambiaste el color de tu "CR"prenda"CB".");
				if(listitem == 0) PlayerInfo[playerid][pObjColor][slot] = 0;
			    mysql_format(Conecction, Query, sizeof(Query), "UPDATE `prendas` SET `Color`='%d' WHERE `UserID` ='%d' AND Slot='%d'",PlayerInfo[playerid][pObjColor][slot],PlayerInfo[playerid][p_DBID],slot+1);
			    mysql_tquery(Conecction, Query);
				DarPrendas(playerid);
			}
		}
		case TUNING_TYPE:
		{
			if(response)
			{
				new parachoques1[] = {1116,1115,1182,1181,1152,1153,1185,1779,1117,1172,1165,1174,1175,1157,1166,1171,1170,1173,1190,1191,1155,1169,1160,1189,1188};
				new parachoques2[] = {1180,1178,1150,1151,1176,1176,1184,1177,1183,1161,1140,1141,1159,1148,1149,1167,1192,1193,1187,1186,1156};
				new alerones[] = {1049,1060,1000,1016,1002,1014,1015,1147,1163,1139,1158,1138,1146,1164,1023,1001,1003,1162};
                new neones [] = {18648,18647,18652,18650,18651,18649};
				switch(listitem)
				{
				    case 0: ShowModelSelectionMenuEx(playerid, parachoques1, 18, "Paragolpes delanteros", TUNINGSHOP, 0.0, 0.0, 0.0);
				    case 1: ShowModelSelectionMenuEx(playerid, parachoques2, 18, "Paragolpes traseros", TUNINGSHOP, 0.0, 0.0, 0.0);
				    case 2: ShowModelSelectionMenuEx(playerid, alerones, 18, "Alerones", TUNINGSHOP, 0.0, 0.0, 0.0);
				    case 3: ShowModelSelectionMenuEx(playerid, neones, 6, "Neones", TUNINGSHOP, 0.0, 0.0, 0.0);
				}
			}
			else TuningDialogo(playerid, TUNING_MENU);
		}
		case TUNING_MENUCOLORHEX:
		{
			if(response)
			{
				TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_COLORS][ColorTuning[playerid]] = RGBAToARGB(RandomColors[listitem]);
				ActualizarTuningObjeto(playerid,TuningVslot[playerid],TuningSlot[playerid], true);
				Mensaje(playerid, -1, "Color actualizado.");
				TuningDialogo(playerid, TUNING_MENUOBJ2);
			}
			else TuningDialogo(playerid, TUNING_MENUOBJ2);
			return 1;
		}
		case TUNING_COLOR:
		{
			if(response)
			{
				ColorTuning[playerid] = listitem;
				MostrarDialog(playerid, TUNING_MENUCOLORHEX, DIALOG_STYLE_LIST, "Selecciona color", DialogFormatColores, "Siguente", "Atr�s");
			}
 			else TuningDialogo(playerid, TUNING_MENUOBJ2);
		}
		case TUNING_BORRARALL:
		{
			if(response)
			{
				TuningEliminarTodo(playerid,GetPlayerVehicle(playerid, TuningVehiculo[playerid]));
				new temp_TuningObjetos[e_VEHICLE_OBJECTS];
				for(new i = 0; i != MAX_TOBJETOS; i ++)
				{
					
					DestroyDynamicObjectEx(TuningObjetos[playerid][TuningVslot[playerid]][i][vobject_OBJECT_ID]);
					TuningObjetos[playerid][TuningVslot[playerid]][i] = temp_TuningObjetos;
				}
				Mensaje(playerid,-1,"Todos los objetos de este veh�culo han sido eliminados.");
				TuningDialogo(playerid, TUNING_MENUOBJ);
			}
			else TuningDialogo(playerid, TUNING_MENUOBJ);
			return 1;
		}
		case TUNING_BORRAR:
		{
			if(response)
			{
				
				DestroyDynamicObjectEx(TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_OBJECT_ID]);
				
				TuningEliminar(playerid,TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_ID]);
				new temp_TuningObjetos[e_VEHICLE_OBJECTS];
				TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]] = temp_TuningObjetos;
				Mensaje(playerid, -1, "Objeto eliminado.");
				TuningDialogo(playerid, TUNING_MENUOBJ);
			}
			else TuningDialogo(playerid, TUNING_MENUOBJ);
			return 1;
		}
		case TUNING_MENUOBJ2:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						if(TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_ATTACHED])
						{
							Mensaje(playerid, -1, "Objeto guardado.");
							TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_ATTACHED] = false;
							ActualizarTuningObjeto(playerid,TuningVslot[playerid],TuningSlot[playerid], true);
						}
						else
						{
							Mensaje(playerid, -1, "Objeto colocado.");
							TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_ATTACHED] = true;
							ActualizarTuningObjeto(playerid,TuningVslot[playerid],TuningSlot[playerid], true);
						}
						TuningDialogo(playerid, TUNING_MENUOBJ2);
					}
					case 1:
					{
						if(!TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_ATTACHED]) return Mensaje(playerid, -1, "Debes colocar el objeto primero."),TuningDialogo(playerid, TUNING_MENUOBJ2);
						EditVehicleObject(playerid, TuningVehiculo[playerid], TuningSlot[playerid]);
					}
					case 2:
					{
						if(!TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_ATTACHED]) return Mensaje(playerid, -1, "Debes colocar el objeto primero."),TuningDialogo(playerid, TUNING_MENUOBJ2);
						switch(TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_TYPE])
						{
							case TuningObjeto_Objeto: TuningDialogo(playerid,TUNING_COLOR);
							case TuningObjeto_Texto:TuningDialogo(playerid, DIALOG_VOBJECT_TEXT_MENU);
							default: TuningDialogo(playerid,TUNING_BORRAR);
						}
					}
					case 3: TuningDialogo(playerid,TUNING_BORRAR);
				}
			}
			else ActualizarObjetoVehiculo(playerid,TuningSlot[playerid]),TuningDialogo(playerid, TUNING_MENUOBJ);
			return 1;
		}
		case TUNING_MENUOBJ:
		{
			if(response)
			{
				if(listitem == MAX_TOBJETOS) return MostrarDialog(playerid, TUNING_BORRARALL, DIALOG_STYLE_MSGBOX, "Eliminar todo", "�Est� seguro de que quiere eliminar todos los objetos de este veh�culo?\nEsta opci�n no se puede deshacer.", "Eliminar", "Atr�s");
				if(!TuningObjetos[playerid][TuningVslot[playerid]][listitem][vobject_VALID]) return Mensaje(playerid, -1, "Este slot est� vac�o, aqu� puedes comprar un nuevo objeto."),TuningDialogo(playerid, TUNING_MENUOBJ);
				TuningSlot[playerid] = listitem;
				TuningDialogo(playerid, TUNING_MENUOBJ2);
			}
			else TuningDialogo(playerid, TUNING_MENU);
			return 1;
		}
		case TUNING_MENUPAIS:
		{
			if(response) 
			{
				if(PlayerInfo[playerid][Moneda] < 5)return Mensaje(playerid,-1,"Necesitas "CR"5"Moneda1""CB" para comprar este objecto.");
				else
				{
					AgregarTuning(playerid,19307,listitem);
					Mensaje(playerid, -1, "Compraste este objeto por "CR"5 "Moneda1""CB".");
					PlayerInfo[playerid][Moneda] -= 5;
				}
				
			}
			else TuningDialogo(playerid, TUNING_MENU);
			return 1;
		}
		case TUNING_MENU:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: TuningDialogo(playerid, TUNING_MENUOBJ);
					case 1: TuningDialogo(playerid, TUNING_TYPE);
					case 2:
					{
						new slot = GetVehicleFreeObjectSlot(playerid,TuningVslot[playerid]);
						if(slot == -1) return Mensaje(playerid, -1, "No hay m�s espacio para objetos en este veh�culo."),TuningDialogo(playerid, TUNING_MENU);
						MostrarDialog(playerid, TUNING_MENUPAIS, DIALOG_STYLE_LIST, "Selecciona pa�s","Alemania\nArgentina\nAustria\nBelgica\nBolivia\nBulgaria\nChile\nColombia\nEl Salvador\nEspa�a\nEstonia\nFrancia\nGuatemala\nHolanda\nHungr�a\nIndia\nIndonesia\nIrlanda\nItalia\nLituania\nLuxemburgo\nMadagascar\nMalta\nMal�\nM�xico\nNigeria\nPanam�\nParaguay\nPer�\nPolonia\nRuman�a\nRusia\nUcrania\nVenezuela", "Comprar", "Atr�s");
					}
					case 3:AgregarTuning(playerid,19327,1416);
				}
			}
			else SalirTuning(playerid);
			return 1;
		}
		case COMPRAR_PRENDA:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pObj][0] == 0 || PlayerInfo[playerid][pObj][0] == 11392) return CompraPrenda(playerid,0);
				if(PlayerInfo[playerid][pObj][1] == 0 || PlayerInfo[playerid][pObj][1] == 11392) return CompraPrenda(playerid,1);
				if(PlayerInfo[playerid][pObj][2] == 0 || PlayerInfo[playerid][pObj][2] == 11392) return CompraPrenda(playerid,2);
				if(PlayerInfo[playerid][pObj][3] == 0 || PlayerInfo[playerid][pObj][3] == 11392) return CompraPrenda(playerid,3);
			}
		}
  		case INVITARCRI:
		{
			if(response)
			{
				if(PlayerTemp[playerid][TieneEncargo] > 0) return Mensaje(playerid, -1, "Ya tienes un encargo, terminalo.");
				new e;
				e = PlayerTemp[Invitador[playerid]][TieneEncargo];
				Encargo[e][IdColega] = playerid;
				PlayerTemp[playerid][TieneEncargo] = e;
				if(e > 0)
				{
					Mensaje(Encargo[e][IdColega],-1,"Tienes que llevar un veh�culo de escape hasta el punto marcado en el mapa.");
		   			PlayerTextDrawSetString(Encargo[e][IdCriminal],IndicacionesT[Encargo[e][IdColega]],Desbug("~g~Re�nete~w~_con_tu_colega_en_el_punto_marcado."));
		   			PlayerTextDrawSetString(Encargo[e][IdColega],IndicacionesT[Encargo[e][IdCriminal]],Desbug("~g~Conduce~w~_hasta el_punto_marcado."));
					Encargo[e][SegundosMision] = 300;
					Encargo[e][TieneColega] = 1;
					PlayerTemp[Encargo[e][IdColega]][CriminalAceptado] = 1;
					PlayerTemp[Encargo[e][IdCriminal]][CriminalAceptado] = 1;
					if(e == 1)
					{
						Mensaje(Encargo[e][IdCriminal],-1,"Encargo aceptado: {FF0019}Elimina al gerente del Banco Central.");
						Mensaje(Encargo[e][IdColega],-1,"Encargo aceptado: {FF0019}Elimina al gerente del Banco Central.");
						CrearCheckpoint(Encargo[e][IdColega],1526.0902,-1017.4032,23.5809, 5.0);
						CrearCheckpoint(Encargo[e][IdCriminal],1526.0902,-1017.4032,23.5809, 5.0);
					}
					else if(e == 2)
					{
						Mensaje(Encargo[e][IdCriminal],-1,"Encargo aceptado: {FF0019}Elimina al polic�a corrupto.");
						Mensaje(Encargo[e][IdColega],-1,"Encargo aceptado: {FF0019}Elimina al polic�a corrupto.");
						CrearCheckpoint(Encargo[e][IdColega],1607.3558,-1703.0073,13.2540, 5.0);
						CrearCheckpoint(Encargo[e][IdCriminal],1607.3558,-1703.0073,13.2540, 5.0);
					}
					else if(e == 3)
					{
						Mensaje(Encargo[e][IdCriminal],-1,"Encargo aceptado: {FF0019}Elimina al maquinista.");
						Mensaje(Encargo[e][IdColega],-1,"Encargo aceptado: {FF0019}Elimina al maquinista.");
						CrearCheckpoint(Encargo[e][IdColega],1374.1508,2695.1580,10.5291, 5.0);
						CrearCheckpoint(Encargo[e][IdCriminal],1374.1508,2695.1580,10.5291, 5.0);
					}
					else if(e == 4)
					{
						Mensaje(Encargo[e][IdCriminal],-1,"Encargo aceptado: {FF0019}Elimina a un empleado del Burguer Shot.");
						Mensaje(Encargo[e][IdColega],-1,"Encargo aceptado: {FF0019}Elimina a un empleado del Burguer Shot.");
						CrearCheckpoint(Encargo[e][IdColega],1218.0623,-874.5742,42.6080, 5.0);
						CrearCheckpoint(Encargo[e][IdCriminal],1218.0623,-874.5742,42.6080, 5.0);
					}
					else if(e == 5)
					{
						Mensaje(Encargo[e][IdCriminal],-1,"Encargo aceptado: {FF0019}Elimina al Camello.");
						Mensaje(Encargo[e][IdColega],-1,"Encargo aceptado: {FF0019}Elimina al Camello.");
						CrearCheckpoint(Encargo[e][IdColega],2337.8752,-1366.0424,24.0111, 5.0);
						CrearCheckpoint(Encargo[e][IdCriminal],2337.8752,-1366.0424,24.0111, 5.0);
					}
					if(PlayerInfo[Encargo[e][IdCriminal]][pWP2] != 23)
					{
						Encargo[e][Tiene9mm] = 0;
		   				PlayerTextDrawSetString(Encargo[e][IdCriminal],IndicacionesT[Encargo[e][IdCriminal]],Desbug("Consigue_una_~r~9mm_silenciada~w~."));
						Mensaje(Encargo[e][IdCriminal],-1,"Necesitas conseguir una 9mm silenciada para continuar.");
					}
					return 1;
				}
				else return Mensaje(playerid,-1,"No hay encargos disponibles en este momento, espera unos minutos.");
			}
			if(!response)
			{
				Mensaje(playerid,-1,""CR"Invitaci�n rechazada.");
				Mensaje(Invito[playerid],-1,"El jugador rechaz� la invitaci�n.");
				if(Criminal[playerid] != INVALID_PLAYER_ID) Colega[Criminal[playerid]] = INVALID_PLAYER_ID;
				if(Invito[playerid] != INVALID_PLAYER_ID) Invito[Invito[playerid]] = INVALID_PLAYER_ID;
				Invito[playerid] = INVALID_PLAYER_ID;
				Invitador[playerid] = INVALID_PLAYER_ID;
			}
		}
        case TRABAJO_MEDICO:
        {
			if(response)
			{
				if(PlayerInfo[playerid][jDinero] < 4000) return Mensaje(playerid,-1, "No tienes suficiente dinero.");
				new slot = SlotTrabajo(playerid);
				if(slot == -1)
				{
					return va_SendClientMessage(playerid, 0xFFFFFFFF, "Ya tienes %d trabajos, renuncia a uno.", CuantosTrabajos(playerid));
				}
				PlayerInfo[playerid][Trabajo][slot] = MEDICO;
				PlayerInfo[playerid][jDinero] -= 4000;
				MensajeJob(playerid);
			}
    	}
		case MMEDICO:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
		                if(AyudaActiva[playerid] == 1) SacarAyudaComandos(playerid);
						cmd_servicio(playerid,"medico");
	    			    PlayerTextDrawSetString(playerid,IndicacionesT[playerid],Desbug("Pulsa_~y~'H'~w~_para abrir_el men�_de_opciones."));
						TextDrawShowForPlayer(playerid,MisionT2[5]);
						PlayerTextDrawShow(playerid,IndicacionesT[playerid]);
                    }
					case 1: AceptarMuerte(playerid);
					case 2: SpawnFabrica(playerid);
				}
			}
			else if(!response)
			{
                if(AyudaActiva[playerid] == 1) SacarAyudaComandos(playerid);
   				PlayerTextDrawSetString(playerid,IndicacionesT[playerid],Desbug("Pulsa_~y~'H'~w~_para abrir_el men�_de_opciones."));
				TextDrawShowForPlayer(playerid,MisionT2[5]);
				PlayerTextDrawShow(playerid,IndicacionesT[playerid]);
				PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
			}
		}
		case FMEDICO:
		{
			if(response)
			{
   				foreach(new f : Fabricas)
				{
    				if(PlayerInfo[playerid][jMiembro] == Fabricas[f][pBanda])
				    {
						
        				if(PlayerInfo[playerid][pRango] < 7) return Mensaje(playerid,-1,"No puedes hacer eso.");
				        if(Fabricas[f][TieneActor][0] != 0) return Mensaje(playerid,-1,"Tu f�brica ya cuenta con atenci�n m�dica.");
						switch(listitem)
						{
			   				case 0: { if(Fabricas[f][pCantidadDinero] < 2800000) return Mensaje(playerid,-1,"Tu f�brica no tiene suficiente dinero."); QuitarDineroFabrica(f,2800000); }
						    case 1: {if(Fabricas[f][pCantidadDinero] < 2000000) return Mensaje(playerid,-1,"Tu f�brica no tiene suficiente dinero."); QuitarDineroFabrica(f,2000000);}
						    case 2: {if(Fabricas[f][pCantidadDinero] < 4000000) return Mensaje(playerid,-1,"Tu f�brica no tiene suficiente dinero."); QuitarDineroFabrica(f,4000000);}
						}
						Fabricas[f][TieneActor][0] = listitem+1;
	  					Fabricas[f][ActorFabrica][0] = CreateDynamicActor(ObtenerMedico(listitem+1), -2022.5638,215.6430,1035.8162,302.6615, 0, 100.0, Fabricas[f][pVW],Fabricas[f][pInt]);
           				Mensaje(playerid,-1,"Contrataste un "CR"nuevo empleado "CB"para la f�brica.");
               			GuardarFabrica(f);
						break;
					}
				}
			}
		}
		case ADMINISTRACION:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: MostrarDialog(playerid, C_EMPLEADOS, DIALOG_STYLE_TABLIST,"Elige el tipo de empleado", "Moledor de cristal\nM�dico\nSeguridad", "Siguiente", "Salir");
					case 1:
					{
                        new stringas[512];
                        format(stringas,sizeof(stringas),"Modelo\tCantidad\tPrecio"CB"\nSniper rifle\t10\t"CR"$10.000.000\n"CB"Escopeta recortada\t10\t"CR"$4.000.000\n"CB"Micro UZI\t10\t"CR"$2.000.000\n"CB"Tec-9\t10\t"CR"$2.500.000");
                        MostrarDialog(playerid, C_ARMASF, DIALOG_STYLE_TABLIST_HEADERS,"Armas", stringas, "Comprar", "Salir");
					}
					case 2: MostrarDialog(playerid, COMPRACHALE, DIALOG_STYLE_MSGBOX, ""CB"Chalecos antibalas", ""CB"�Desea comprar "CR"10 chalecos antibalas"CB" por"CR" $500.000"CB"?","Comprar","Salir");
					case 3:
					{
					    new regresar[256];
					    format(regresar,sizeof(regresar),""CB"Si regresas "CR"el veh�culo"CB" a la f�brica, "CR"se perder�"CB" lo que tenga cargado.\n\n�Est�s seguro de hacer esto?");
					    MostrarDialog(playerid, REG_AFABRICA, DIALOG_STYLE_MSGBOX, "Regresar veh�culo", regresar,"Si","No");
					}
					case 4:
					{
                    	foreach(new f : Fabricas)
						{
						    if(PlayerInfo[playerid][jMiembro] == Fabricas[f][pBanda])
							{
							    foreach(new i : Player)
							    {
							        if(IsPlayerInVehicle(i,Fabricas[f][Auto2F]))
							        {
									    if(PlayerInfo[i][jMiembro] == Fabricas[f][pBanda]) return Mensaje(playerid,-1,"Este auto est� ocupado.");
							        }
							    }
								RespawnVF2(f),Mensaje(playerid,-1,"Regresaste el veh�culo de "CR"distracci�n"CB" a la {d42939}f�brica de metanfetamina"CB".");
								break;
							}
                        }
					}
				}
			}
		}
		case REG_AFABRICA:
		{
		    if(response)
		    {
		    	foreach(new f : Fabricas)
				{
				    if(PlayerInfo[playerid][jMiembro] == Fabricas[f][pBanda])
				    {
						foreach(new i : Player)
		    			{
     						if(IsPlayerInVehicle(i,Fabricas[f][Auto2F]))
					        {
		    					if(PlayerInfo[i][jMiembro] == Fabricas[f][pBanda]) return Mensaje(playerid,-1,"Este auto est� ocupado.");
        					}
      					}
						RespawnVF1(f),Mensaje(playerid,-1,"Regresaste "CR"el veh�culo"CB" a la {d42939}f�brica de metanfetamina"CB".");
						break;
					}
					
				}
        	}
    	}
		case COMPRACHALE:
		{
		    if(response)
		    {
				foreach(new f : Fabricas)
				{
				    if(PlayerInfo[playerid][jMiembro] == Fabricas[f][pBanda])
				    {
				        if(PlayerInfo[playerid][pRango] >= 7)
				        {
				            if(Fabricas[f][pCantidadDinero] >= 500000)
				            {
								new cantidadchale, cantidadmaxima = 24, cantidadxchale = 50000;
				                if(Fabricas[f][pChalecos] >= 24) return Mensaje(playerid,-1,"La chalequer�a est� llena.");
				                if(Fabricas[f][pChalecos] > 14 && Fabricas[f][pChalecos] < 24)
				                {
				                    cantidadchale = cantidadmaxima - Fabricas[f][pChalecos];
									cantidadxchale = cantidadchale;
				                }
				                else cantidadchale = 10,cantidadxchale = 500000;
				                Mensaje(playerid,-1,"Compraste un paquete de chalecos anti-balas para la f�brica.");
								Fabricas[f][pCantidadDinero] -= cantidadxchale;
								Fabricas[f][pChalecos] += cantidadchale;
								ActualizarCantidadChalecos(f);
								ActualizarDineroPared(f);
								UpdateAllBagsMoney(f);
								ActualizarCantidadTChale(f);
								GuardarFabrica(f);
							}
							else Mensaje(playerid,-1,"No hay el dinero suficiente en tu {d42939}fabrica de metanfetamina"CB".");
                        }
						break;
                    }
                }
		    }
        }
		case ACTIVIDAD:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
					    foreach(new f : Fabricas)
						{
							if(Fabricas[f][pBanda] == PlayerInfo[playerid][jMiembro])
							{
								new asd = 0, reco;
								if(QuimicosActivo[f] == 0)
								{
									if(Quimicos[1] == 1 && Quimicos[2] == 1 && Quimicos[3] == 1 && Quimicos[4] == 1 && Quimicos[5] == 1 && Quimicos[6] == 1)
									{
										Mensaje(playerid,-1,"No hay qu�micos disponibles, intenta de nuevo m�s tarde.");
										asd = 1;
									}
									else
									{
										if(Quimicos[1] == 0 && reco == 0) { PuntoQMCX[f] = -1853.9966; PuntoQMCY[f] = 123.2759;  PuntoQMCZ[f] = 15.1172; reco = 1; }
										if(Quimicos[2] == 0 && reco == 0) { PuntoQMCX[f] = -1043.5349; PuntoQMCY[f] = 1546.3799; PuntoQMCZ[f] = 33.0007; reco = 2; }
										if(Quimicos[3] == 0 && reco == 0) { PuntoQMCX[f] = -27.3778;   PuntoQMCY[f] = 2337.5212; PuntoQMCZ[f] = 24.1406; reco = 3; }
										if(Quimicos[4] == 0 && reco == 0) { PuntoQMCX[f] = -2177.7957; PuntoQMCY[f] = 1224.2549; PuntoQMCZ[f] = 33.9297; reco = 4; }
										if(Quimicos[5] == 0 && reco == 0) { PuntoQMCX[f] = -89.8125;   PuntoQMCY[f] = 1159.8608; PuntoQMCZ[f] = 19.7422; reco = 5; }
										if(Quimicos[6] == 0 && reco == 0) { PuntoQMCX[f] = 1208.2671;  PuntoQMCY[f] = -980.7623; PuntoQMCZ[f] = 43.4766; reco = 6; }
										CargarQuimicos(reco);
										QuimicosActivo[f] = reco;
										AdquiriendoQuimicosF[f] = 1;
										Quimicos[reco] = 1;
										SetTimerEx("LoadBarrelMeta",900000, false, "dd", reco,f);
									}
								}
								if(QuimicosActivo[f] != 0 && PuntoQMCX[f] != 0 && PuntoQMCY[f] != 0 && PuntoQMCZ[f] != 0)
								{
									CrearCheckpoint(playerid,PuntoQMCX[f],PuntoQMCY[f],PuntoQMCZ[f],5.0);
									Mensaje(playerid,-1,"Ve con el "CR"veh�culo de la f�brica "CB"hasta el "CR"punto marcado"CB" en el mapa.");
								}
								else
								{
									if(asd == 0) Mensaje(playerid,-1,"No hay qu�micos disponibles, intenta de nuevo m�s tarde.");
								}
								break;
							}
							
						}
					}
					case 1:
					{
						foreach(new f : Fabricas)
						{
							if(Fabricas[f][pBanda] == PlayerInfo[playerid][jMiembro])
							{
								new randomzone = random(4);
								switch(randomzone)
								{
									case 1: CrearCheckpoint(playerid,2431.9109,-1672.5043,13.6113, 7.0);
									case 2: CrearCheckpoint(playerid,1520.5901,-1473.3662,9.5000, 7.0);
									case 3: CrearCheckpoint(playerid,1091.5337,-1245.3550,15.8272, 7.0);
									case 4: CrearCheckpoint(playerid,2206.5029,-2296.2642,14.7647, 7.0);
								}
								MetanfetaminaEnSlot[f] = randomzone;
								MetanfetaminaEnVenta[f] = 1;
								VendiendoMeta[f] = 1;
								ActualizarCajasMeta(f);
								Mensaje(playerid,-1,"Carga el "CR"veh�culo de la f�brica"CB" con metanfetamina y ll�valo al "CR"punto marcado"CB" en el mapa.");
								break;
							}
							
						}
					}
					case 2:
					{
					    foreach(new f : Fabricas)
						{
						    if(PlayerInfo[playerid][jMiembro] == Fabricas[f][pBanda])
						    {
								if(gettimeVariable > Fabricas[f][TiempoSoborno])
								{
								    Mensaje(playerid,-1,"Agarra un "CR"bolso de dinero"CB" y ll�valo a la{3399FF} oficina del comandante"CB" en el Departamento de polic�a de Los Santos.");
									CrearCheckpoint(playerid,1543.1437,-1675.5537,13.5559, 5.0);
                                }
                                else
								{
								    /*new mensaje[160], d, h, m, s;
									TimeConvertEx((Fabricas[f][TiempoSoborno] - gettimeVariable) , d, h, m, s);
									if(d == 0 && h == 0 && m == 0 && s > 0) { format(mensaje,sizeof(mensaje),"Tu "CR"f�brica"CB" debe "CR"pagar soborno"CB" dentro de %d segundos.",s); }
									else if(d == 0 && h == 0 && m == 1) { format(mensaje,sizeof(mensaje),"Tu "CR"f�brica"CB" debe "CR"pagar soborno"CB" dentro de %d minuto.",m); }
									else if(d == 0 && h == 0 && m > 0) { format(mensaje,sizeof(mensaje),"Tu "CR"f�brica"CB" debe "CR"pagar soborno"CB" dentro de %d minutos.",m); }
									else if(d == 0 && h == 1) { format(mensaje,sizeof(mensaje),"Tu "CR"f�brica"CB" debe "CR"pagar soborno"CB" dentro de %d hora.",h); }
									else if(d == 0 && m > 0) { format(mensaje,sizeof(mensaje),"Tu "CR"f�brica"CB" debe "CR"pagar soborno"CB" dentro de %d horas.",h); }
									else if(d == 1) { format(mensaje,sizeof(mensaje),"Tu "CR"f�brica"CB" debe "CR"pagar soborno"CB" dentro de %d dia.",d); }
									else if(d > 1) { format(mensaje,sizeof(mensaje),"Tu "CR"f�brica"CB" debe "CR"pagar soborno"CB" dentro de %d dias.",d); }
									Mensaje(playerid, -1, mensaje);*/
									va_SendClientMessage(playerid, -1, "Tu "CR"f�brica"CB" debe "CR"pagar soborno"CB" dentro de %s.",FormatTimeleft(Fabricas[f][TiempoSoborno] - gettimeVariable));
    								PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
								}
						    	break;
							}
                        }
					}
				}
			}
		}
		case C_ARMASF:
		{
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
			            foreach(new f : Fabricas)
						{
							if(Fabricas[f][pBanda] == PlayerInfo[playerid][jMiembro])
							{
								if(Fabricas[f][pCantidadDinero] >= 10000000)
								{
									if(Fabricas[f][pSniper] > 0)
									{
										Mensaje(playerid,-1,"No puedes comprar m�s armas, el l�mite es de 10");
										return Mensaje(playerid,-1,"Si quieres comprar m�s armas, saca todos los Snipers de el estante.");
									}
									Fabricas[f][pCantidadDinero] -= 10000000;
									Fabricas[f][pSniper] = 10;
									ActualizarDineroPared(f);
									ResetSnipers(f);
									UpdateAllBagsMoney(f);
									GuardarFabrica(f);
									Mensaje(playerid,-1,"Compraste un paquete de armas para la f�brica.");
								}
								else Mensaje(playerid,-1,"No tienes el suficiente dinero para comprar el paquete de armas.");
								break;
							}
						}
			        }
			        case 1:
			        {
			            foreach(new f : Fabricas)
						{
							if(Fabricas[f][pBanda] == PlayerInfo[playerid][jMiembro])
							{
								if(Fabricas[f][pCantidadDinero] >= 4000000)
								{
									if(Fabricas[f][pRecortada] > 0)
									{
										Mensaje(playerid,-1,"No puedes comprar m�s armas, el l�mite es de 10");
										return Mensaje(playerid,-1,"Si quieres comprar m�s armas, saca todos las Escopetas recortadas de el estante.");
									}
									Fabricas[f][pCantidadDinero] -= 4000000;
									Fabricas[f][pRecortada] = 10;
									ActualizarDineroPared(f);
									ResetRecortada(f);
									UpdateAllBagsMoney(f);
									GuardarFabrica(f);
									Mensaje(playerid,-1,"Compraste un paquete de armas para la f�brica.");
								}
								else Mensaje(playerid,-1,"No tienes el suficiente dinero para comprar el paquete de armas.");
								break;
							}
						}
			        }
			        case 2:
			        {
			            foreach(new f : Fabricas)
						{
							if(Fabricas[f][pBanda] == PlayerInfo[playerid][jMiembro])
							{
								if(Fabricas[f][pCantidadDinero] >= 2000000)
								{
									if(Fabricas[f][pUzi] > 0)
									{
										Mensaje(playerid,-1,"No puedes comprar m�s armas, el l�mite es de 10");
										return Mensaje(playerid,-1,"Si quieres comprar m�s armas, saca todos las Uzi de el estante.");
									}
									Fabricas[f][pCantidadDinero] -= 2000000;
									Fabricas[f][pUzi] = 10;
									ActualizarDineroPared(f);
									ResetUzi(f);
									UpdateAllBagsMoney(f);
									GuardarFabrica(f);
									Mensaje(playerid,-1,"Compraste un paquete de armas para la f�brica.");
								}
								else Mensaje(playerid,-1,"No tienes el suficiente dinero para comprar el paquete de armas.");
								break;
							}
						}
			        }
			        case 3:
			        {
			            foreach(new f : Fabricas)
						{
							if(Fabricas[f][pBanda] == PlayerInfo[playerid][jMiembro])
							{
								if(Fabricas[f][pCantidadDinero] >= 2500000)
								{
									if(Fabricas[f][pTec9] > 0)
									{
										Mensaje(playerid,-1,"No puedes comprar m�s armas, el l�mite es de 10");
										return Mensaje(playerid,-1,"Si quieres comprar m�s armas, saca todos las Tec9 de el estante.");
									}
									Fabricas[f][pCantidadDinero] -= 2500000;
									Fabricas[f][pTec9] = 10;
									ActualizarDineroPared(f);
									ResetTec(f);
									UpdateAllBagsMoney(f);
									GuardarFabrica(f);
									Mensaje(playerid,-1,"Compraste un paquete de armas para la f�brica.");
								}
								else Mensaje(playerid,-1,"No tienes el suficiente dinero para comprar el paquete de armas.");
								break;
							}
						}
			        }
                }
            }
        }
        case C_EMPLEADOS2:
        {
        	if(response)
		    {
				foreach(new f : Fabricas)
				{
					if(PlayerInfo[playerid][jMiembro] == Fabricas[f][pBanda])
					{
						if(PlayerInfo[playerid][pRango] < 7) return 1;
						if(Fabricas[f][pCantidadDinero] >= 1000000)
						{
							new var = -1;
							if(Fabricas[f][TieneActor][1] == 0) var = 0;
							else if(Fabricas[f][TieneActor][2] == 0) var = 1;
							else if(Fabricas[f][TieneActor][3] == 0) var = 2;
							else if(Fabricas[f][TieneActor][4] == 0) var = 3;
							else if(Fabricas[f][TieneActor][5] == 0) var = 4;
							else return Mensaje(playerid,-1,""CR"No puedes"CB" contratar m�s empleados de esta clase.");
							if(var != -1)
							{
								Fabricas[f][TieneActor][var+1] = listitem+1;
								Fabricas[f][ActorFabrica][var+1] = CreateDynamicActor(ObtenerCocinero(listitem+1), PosicionesCoc2[var][0],PosicionesCoc2[var][1],PosicionesCoc2[var][2],PosicionesCoc2[var][3], 1, 100.0, Fabricas[f][pVW],Fabricas[f][pInt]);
								ApplyDynamicActorAnimation(Fabricas[f][ActorFabrica][var+1], "COP_AMBIENT","Coplook_loop", 4.1,1,0,0,1,0);
								if(Fabricas[f][StatoCuoco][var] == 0 && Fabricas[f][PorcentajeCocinero][var] == 0) Fabricas[f][StatoCuoco][var] = 2;
								ActualizarLabelMoledores(f,var);
								Mensaje(playerid,-1,"Has contratado {3399FF}un moledor de cristal"CB", el costo fue de "CR"$1.000.000"CB".");
								QuitarDineroFabrica(f,1000000);
								GuardarFabrica(f);
							}
						}
						else Mensaje(playerid,-1,"No hay el dinero suficiente en tu {d42939}fabrica de metanfetamina"CB".");
						break;
					}
				}
            }
        }
        case C_EMPLEADOS:
		{
		    if(response)
		    {
		        switch(listitem)
				{
				    case 0:
					{
						new textbuy[256];
						format(textbuy,sizeof(textbuy),""CB"Sexo\tCosto\nMasculino\t"CR"$1.000.000"CB"\nFemenino\t"CR"$1.000.000");
                        MostrarDialog(playerid,C_EMPLEADOS2,DIALOG_STYLE_TABLIST_HEADERS,"Moledor de cristal",textbuy,"Aceptar","Salir");
					}
					case 1:
					{
					    new textbuy[256];
						format(textbuy,sizeof(textbuy),""CB"Origen\tCosto\nLos Santos\t"CR"$2.800.000"CB"\nSan Fierro\t"CR"$2.000.000"CB"\nLas Venturas\t"CR"$4.000.000"CB"");
                        MostrarDialog(playerid,FMEDICO,DIALOG_STYLE_TABLIST_HEADERS,"M�dico",textbuy,"Aceptar","Salir");
					}
					case 2:
					{
						if(PlayerInfo[playerid][pRango] < 7) return 1;
                        foreach(new f : Fabricas)
						{
							if(PlayerInfo[playerid][jMiembro] == Fabricas[f][pBanda])
							{
								if(Fabricas[f][pCantidadDinero] >= 800000)
								{
									new var = -1;
									if(Fabricas[f][TieneActor][6] == 0) var = 0;
									else if(Fabricas[f][TieneActor][7] == 0) var = 1;
									else if(Fabricas[f][TieneActor][8] == 0) var = 2;
									else if(Fabricas[f][TieneActor][9] == 0) var = 3;
									else if(Fabricas[f][TieneActor][10] == 0) var = 4;
									else return Mensaje(playerid,-1,""CR"No puedes"CB" contratar m�s empleados de esta clase.");
									if(var != -1)
									{
										Fabricas[f][TieneActor][var+6] = 1;
										Fabricas[f][ActorFabrica][var+6] = CreateDynamicActor(ObtenerGuardia(var), PosicionesGuardias[var][0],PosicionesGuardias[var][1],PosicionesGuardias[var][2],PosicionesGuardias[var][3], 1, 200.0, Fabricas[f][pVW],Fabricas[f][pInt]);
										Mensaje(playerid,-1,"Contrataste un "CR"nuevo empleado "CB"para la f�brica.");
										QuitarDineroFabrica(f,800000);
										GuardarFabrica(f);
									}
								}
								else return Mensaje(playerid,-1,"No hay el dinero suficiente en tu {d42939}fabrica de metanfetamina"CB".");
								break;
							}
						}
					}
                }
            }
     	}
		case F_SACARMA:
		{
		    if(response)
		    {
		        switch(listitem)
				{
				    case 0:
					{
					    foreach(new f : Fabricas)
						{
							if(Fabricas[f][pBanda] == PlayerInfo[playerid][jMiembro])
							{
								if(Fabricas[f][pSniper] > 0)
								{
									if(GetPlayerWeapon(playerid) == 34) return Mensaje(playerid,-1,"Ya tienes equipada un arma de estas.");
									Fabricas[f][pSniper] --;
									ActualizarSnipers(f,2);
									DarArma(playerid,34);
									ActualizarLabelArmas(f);
									GuardarFabrica(f);
								}
								else Mensaje(playerid,-1,"No m�s de este arma en el estante.");
								break;
							}
						}
					}
					case 1:
					{
					    foreach(new f : Fabricas)
						{
							if(Fabricas[f][pBanda] == PlayerInfo[playerid][jMiembro])
							{
								if(Fabricas[f][pRecortada] > 0)
								{
									if(GetPlayerWeapon(playerid) == 26) return Mensaje(playerid,-1,"Ya tienes equipada un arma de estas.");
									Fabricas[f][pRecortada] --;
									ActualizarRecortadas(f,2);
									DarArma(playerid,26);
									ActualizarLabelArmas(f);
									GuardarFabrica(f);
								}
								else Mensaje(playerid,-1,"No m�s de este arma en el estante.");
								break;
							}
						}
					}
					case 2:
					{
					    foreach(new f : Fabricas)
						{
							if(Fabricas[f][pBanda] == PlayerInfo[playerid][jMiembro])
							{
								if(Fabricas[f][pUzi] > 0)
								{
									if(GetPlayerWeapon(playerid) == 28) return Mensaje(playerid,-1,"Ya tienes equipada un arma de estas.");
									Fabricas[f][pUzi] --;
									ActualizarUzi(f,2);
									DarArma(playerid,28);
									ActualizarLabelArmas(f);
									GuardarFabrica(f);
								}
								else Mensaje(playerid,-1,"No m�s de este arma en el estante.");
								break;
							}
						}
					}
					case 3:
					{
					    foreach(new f : Fabricas)
						{
							if(Fabricas[f][pBanda] == PlayerInfo[playerid][jMiembro])
							{
								if(Fabricas[f][pTec9] > 0)
								{
									if(GetPlayerWeapon(playerid) == 32) return Mensaje(playerid,-1,"Ya tienes equipada un arma de estas.");
									Fabricas[f][pTec9] --;
									ActualizarTec(f,2);
									DarArma(playerid,32);
									ActualizarLabelArmas(f);
									GuardarFabrica(f);
								}
								else Mensaje(playerid,-1,"No m�s de este arma en el estante.");
								break;
							}
						}
					}
                }
            }
        }
		case DSEXOO:
		{
			if(response)
			{
			    new stringas[144],string2[144];
			    format(stringas, sizeof(stringas), "%s comenz� a practicarle sexo oral a %s.", NombreJugador(SexoOral[playerid]), NombreJugador(playerid));
				ProxDetector(20.0, playerid, stringas, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
				new Float:armadura;
				GetPlayerArmour(SexoOral[playerid], armadura);
				if(ESPROSTI[playerid] == 0)
				{
				    if(armadura <= 40) EstablecerChaleco(playerid,armadura+10);
					else if(armadura >= 40 && armadura <= 50) EstablecerChaleco(playerid,50);
				}
				else if(ESPROSTI[playerid] == 1)
				{
				    if(armadura <= 60) EstablecerChaleco(playerid,armadura+20);
					else if(armadura >= 60 && armadura <= 80) EstablecerChaleco(playerid,80);
				}
				DarDinero(SexoOral[playerid],precioofertax[playerid]);
				QuitarDinero(playerid,precioofertax[playerid]);
				format(string2,sizeof(string2),"Pagaste $%d por el servicio.",precioofertax[playerid]);
			    Mensaje(playerid,-1,string2);
				ApplyAnimation(playerid, "BLOWJOBZ", "BJ_CAR_START_P", 4.0, 0, 0, 0, 1, 0, 1);
				SetTimerEx("SexoOralT",2000,false,"d",SexoOral[playerid]);
				SetTimerEx("SexoOralA",12000,false,"d",playerid);
				precioofertax[playerid] = 0;
				ESPROSTI[playerid] = -1;
				SexoOral[playerid] = -1;
			}
			else
			{
				new rechazo[38+MAX_PLAYER_NAME];
				format(rechazo,sizeof(rechazo),""CR"%s"CB" rechaz� tu oferta.", NombreJugador(playerid));
			 	Mensaje(SexoOral[playerid],-1,rechazo);
			 	precioofertax[playerid] = 0;
				ESPROSTI[playerid] = -1;
				SexoOral[playerid] = -1;
		 	}
		}
		case DCLUB: if(response) BailePrivado(playerid, listitem);
		case DGUIA:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:	cmd_llamar(playerid,"911");
					case 1: cmd_llamar(playerid,"71");
					case 2: cmd_llamar(playerid,"815");
					case 3: cmd_llamar(playerid,"80");
					case 4: cmd_llamar(playerid,"82");
				}
			}
		}
		case CVEHICULO:
		{
			if(response) ComproVehiculo(playerid);
			else
			{
				RemovePlayerFromVehicle(playerid);
				SetTimerEx("RespawnearV",3000,false,"d",GetPlayerVehicleID(playerid));
			}
		}
		case COMPRARRADIO:
		{
			if(response)
			{
				if(PlayerInfo[playerid][VIP] == 0) return Mensaje(playerid, COLOR_BLANCO, "Necesitas ser VIP para crear una estaci�n de radio.");
				if(PlayerInfo[playerid][jDinero] >= 15000)
				{
					if(strfind(inputtext,"{",true) != -1 || strfind(inputtext,"}",true) != -1) return Mensaje(playerid,-1,"Nombre inv�lido.");
					Emisoras[playerid][TieneEmisora] = 1;
					Emisoras[playerid][EmisoraID] = -1;
					Emisoras[playerid][TransEmisora] = 0;
					Emisoras[playerid][CabinaOcupada] = -1;
					format(Emisoras[playerid][NombreEmisora], 90, "%s", inputtext);
					format(Emisoras[playerid][URLEmisora], 128, "http://radio."WebName":8000/listen.pls");
					QuitarDinero(playerid, 15000);
					
					//format(string, sizeof(string), ""CR"�Felicidades! "CB"Has creado una estaci�n de radio llamada "CR"%s"CB".", inputtext);
					format(string, sizeof(string), "~p~Felicidades~w~, has creado una estaci�n de radio llamada ~p~%s~w~.", inputtext);
					ShowTDN(playerid, string);
					//Mensaje(playerid, COLOR_BLANCO, string);
				}
				else return Mensaje(playerid, COLOR_BLANCO, "Necesitas "CR"$15.000"CB" para crear una estaci�n de radio.");
			}
		}
		case AlquilarSalon1:
		{
	    	if(!response) return LimpiarSalon();
			if(EsNumerico(inputtext) == 0 || isnull(inputtext)) return MostrarDialog(playerid,AlquilarSalon1,DIALOG_STYLE_INPUT,"Alquiler de sal�n","Tiempo en horas:","Siguiente","Salir");
		    if(strval(inputtext) <= 0) return 1;
			if(strval(inputtext) > 8)
			{
				Mensaje(playerid,COLOR_BLANCO,"");
				MostrarDialog(playerid,AlquilarSalon1,DIALOG_STYLE_INPUT,"Alquiler de sal�n","Tiempo en horas:","Siguiente","Salir");
				return true;
			}
			new Precio = 20000 * HorasSalon;
			if(GetPlayerMoney(playerid) < Precio)
			{
				Mensaje(playerid,-1,"Necesitas {00D61C}$20.000"CB" para pagar el contrato del alquiler.");
				LimpiarSalon();
				return 1;
			}
			HorasSalon = strval(inputtext);
			MostrarDialog(playerid,AlquilarSalon2,DIALOG_STYLE_INPUT,"Nombre del evento","M�ximo 100 caracteres:","Siguiente","Salir");
		}
		case AlquilarSalon2:
		{
	    	if(!response) return LimpiarSalon();
	    	if(slen > 100 || isnull(inputtext)) return MostrarDialog(playerid,AlquilarSalon2,DIALOG_STYLE_INPUT,"Nombre del evento","M�ximo 100 caracteres:","Siguiente","Salir");
			format(NombreEvento,sizeof(NombreEvento),"%s",inputtext);
			MostrarDialog(playerid,AlquilarSalon3,DIALOG_STYLE_INPUT,"Descripci�n del evento","M�ximo 150 caracteres:","Siguiente","Salir");
		}
		case AlquilarSalon3:
		{
	    	if(!response) return LimpiarSalon();
		    if(slen > 150 || isnull(inputtext)) return MostrarDialog(playerid,AlquilarSalon3,DIALOG_STYLE_INPUT,"Descripci�n del evento","M�ximo 150 caracteres:","Siguiente","Salir");
			format(DescriEvento,sizeof(DescriEvento),"%s",inputtext);
			MostrarDialog(playerid,AlquilarSalon4,DIALOG_STYLE_INPUT,"Precio de las entradas","Costo de la entrada","Siguiente","Salir");
		}
		case AlquilarSalon4:
		{
	    	if(!response) return LimpiarSalon();
		    if(isnull(inputtext) || EsNumerico(inputtext) == 0) return MostrarDialog(playerid,AlquilarSalon4,DIALOG_STYLE_INPUT,"Precio de las entradas","Costo de la entrada","Siguiente","Salir");
		    if(strval(inputtext) <= 0)
			{
				Mensaje(playerid,-1,"El precio de las entradas {FF3300}tiene que ser superior"CB" a "CR"$0"CB".");
				MostrarDialog(playerid,AlquilarSalon4,DIALOG_STYLE_INPUT,"Precio de las entradas","Costo de la entrada","Siguiente","Salir");
				return 1;
			}
		    if(strval(inputtext) > 900)
			{
		    	Mensaje(playerid,-1,"El precio de las entradas {FF3300}tiene que ser menor"CB" a "CR"$900"CB".");
				MostrarDialog(playerid,AlquilarSalon4,DIALOG_STYLE_INPUT,"Precio de las entradas","Costo de la entrada","Siguiente","Salir");
				return 1;
			}
			PrecioSalon = strval(inputtext);
			MostrarDialog(playerid,AlquilarSalon5,DIALOG_STYLE_INPUT,"Nivel necesario","Nivel m�nimo necesario para ingresar:","Siguiente","Salir");
		}
		case AlquilarSalon5:
		{
	    	if(!response) return LimpiarSalon();
	    	if(isnull(inputtext) || EsNumerico(inputtext) == 0) return MostrarDialog(playerid,AlquilarSalon5,DIALOG_STYLE_INPUT,"Nivel necesario","Nivel m�nimo necesario para ingresar:","Siguiente","Salir");
			if(strval(inputtext) <= 1)
			{
			    Mensaje(playerid,-1,"El nivel requerido para ingresar {FF3300}tiene que ser superior"CB" a "CR"1"CB".");
		    	MostrarDialog(playerid,AlquilarSalon5,DIALOG_STYLE_INPUT,"Nivel necesario","Nivel m�nimo necesario para ingresar:","Siguiente","Salir");
			    return 1;
			}
			NivelSalon = strval(inputtext);
			MostrarDialog(playerid,AlquilarSalon6,DIALOG_STYLE_LIST,"Tipo de evento:","General\nArtes marciales\nExposici�n de autos\nConcierto","Siguiente","Salir");
		}
		case AlquilarSalon6:
		{
	    	if(!response) return LimpiarSalon();
		    TipoEvento = listitem+1;
		    format(string,sizeof(string),""CB"Nombre del evento: %s",NombreEvento);
	    	format(string,sizeof(string),"%s\nDescripci�n: %s",string,DescriEvento);
	    	format(string,sizeof(string),"%s\nCosto de las entradas: "CR"$%s"CB"",string,ConvertirNumero(PrecioSalon));
		    format(string,sizeof(string),"%s\nNivel requerido: %d",string,NivelSalon);
		    format(string,sizeof(string),"%s\nDuraci�n del contrato de alquiler: %d",string,HorasSalon);
	    	if(TipoEvento == 1) format(string,sizeof(string),"%s\nTipo de evento: General",string);
		    if(TipoEvento == 2) format(string,sizeof(string),"%s\nTipo de evento: Artes marciales",string);
		    if(TipoEvento == 3) format(string,sizeof(string),"%s\nTipo de evento: Exposici�n de autos",string);
	    	if(TipoEvento == 4) format(string,sizeof(string),"%s\nTipo de evento: Concierto",string);
		    MostrarDialog(playerid,AlquilarSalon7,DIALOG_STYLE_MSGBOX,"Confirmar",string,"Crear","Cancelar");
		}
		case AlquilarSalon7:
		{
	    	if(!response) return LimpiarSalon();
			if(Alquilado == true)
			{
			    Mensaje(playerid,-1,"Acaban de alquilar el sal�n de eventos.");
			    return 0;
			}
			new Precio = 20000 * HorasSalon;
			if(GetPlayerMoney(playerid) < Precio)
			{
				Mensaje(playerid,-1,"Necesitas {00D61C}$20.000"CB" para pagar el contrato del alquiler.");
				LimpiarSalon();
				return 1;
			}
    		SetTimer("SalonTimer",1000*60*60*HorasSalon,0);
			UpdateDynamic3DTextLabelText(TextoSalon,COLOR_BLANCO,"");
			format(string,sizeof(string),"Alquilaste el sal�n por "CR"%d hora(s)"CB".",HorasSalon);
  			Mensaje(playerid,-1,string);
			Mensaje(playerid,-1,"Para recibir ayuda sobre el funcionamiento del sal�n, usa "CR"/ayuda salon");
			new value = randomEx(800,999);
			format(string,sizeof(string),"Stream ID: "CR"%d", value);
			Mensaje(playerid,-1,string);
			PuertoSalon = value;
			Mensaje(playerid, -1, "Si se pierde la conexion usa "CR"/sincronizar"CB".");
			format(Alquilador,sizeof(Alquilador),"%s", NombreJugador(playerid));
			format(string,sizeof(string),"%s\n"CR"/comprar entrada"CB"\nCosto:{00D61C} $%s", NombreEvento, ConvertirNumero(PrecioSalon));
			if(IsValidDynamic3DTextLabel(TextoSalon2)) UpdateDynamic3DTextLabelText(TextoSalon2,COLOR_BLANCO,string);
			else TextoSalon2 = CreateDynamic3DTextLabel(string, 0xFFFFFF00, -1253.2917,2116.7095,1246.5457, 10.0);
			Alquilado = true;
			if(TipoEvento == 2)
			{
    			if(BoxObj == 1) return Mensaje(playerid, -1, "Los objetos de box ya fueron cargados.");
				ObjBox[0] = CreateDynamicObject(2773, -1243.44995, 2091.02002, 1246.04602,   0.00000, 0.00000, 90.00000);
				ObjBox[1] = CreateDynamicObject(2773, -1240.93005, 2091.02002, 1246.04602,   0.00000, 0.00000, 90.00000);
				ObjBox[2] = CreateDynamicObject(2773, -1238.37000, 2091.02002, 1246.04602,   0.00000, 0.00000, 90.00000);
				ObjBox[3] = CreateDynamicObject(2773, -1235.81006, 2091.02002, 1246.04602,   0.00000, 0.00000, 90.00000);
				ObjBox[4] = CreateDynamicObject(2773, -1233.25000, 2091.02002, 1246.04602,   0.00000, 0.00000, 90.00000);
				ObjBox[5] = CreateDynamicObject(2773, -1230.63000, 2091.02002, 1246.04602,   0.00000, 0.00000, 90.00000);
				ObjBox[6] = CreateDynamicObject(2773, -1231.15002, 2087.80005, 1246.04602,   0.00000, 0.00000, 90.00000);
				ObjBox[7] = CreateDynamicObject(2773, -1227.96997, 2091.02002, 1246.04602,   0.00000, 0.00000, 90.00000);
				ObjBox[8] = CreateDynamicObject(2773, -1228.56995, 2087.80005, 1246.04602,   0.00000, 0.00000, 90.00000);
				ObjBox[9] = CreateDynamicObject(2773, -1225.34998, 2091.02002, 1246.04602,   0.00000, 0.00000, 90.00000);
				ObjBox[10] = CreateDynamicObject(2773, -1226.05005, 2087.80005, 1246.04602,   0.00000, 0.00000, 90.00000);
				ObjBox[11] = CreateDynamicObject(2773, -1222.77002, 2091.02002, 1246.04602,   0.00000, 0.00000, 90.00000);
				ObjBox[12] = CreateDynamicObject(2773, -1223.46997, 2087.80005, 1246.04602,   0.00000, 0.00000, 90.00000);
				ObjBox[13] = CreateDynamicObject(2773, -1222.52002, 2086.32007, 1246.04602,  0.00000, 0.00000, 0.00000);
				ObjBox[14] = CreateDynamicObject(2773, -1220.20996, 2091.02002, 1246.04602,   0.00000, 0.00000, 90.00000);
				ObjBox[15] = CreateDynamicObject(2773, -1219.27002, 2089.63989, 1246.04602,  0.00000, 0.00000, 0.00000);
				ObjBox[16] = CreateDynamicObject(2773, -1219.27002, 2087.71997, 1246.04602,  0.00000, 0.00000, 0.00000);
				ObjBox[17] = CreateDynamicObject(3398, -1214.26001, 2093.91992, 1263.19202,   180.00000, 0.00000, 229.00000);
				ObjBox[18] = CreateDynamicObject(3398, -1214.22998, 2080.51001, 1263.19202,   180.00000, 0.00000, 316.00000);
				ObjBox[19] = CreateDynamicObject(3398, -1199.35999, 2093.89990, 1263.19202,   180.00000, 0.00000, 141.00000);
				ObjBox[20] = CreateDynamicObject(3398, -1199.22998, 2080.56006, 1263.19202,   0.00000, 180.00000, 222.00000);
				ObjBox[21] = CreateDynamicObject(3819, -1210.98999, 2099.10010, 1246.53601,   0.00000, 0.00000, 90.00000);
				ObjBox[22] = CreateDynamicObject(3819, -1210.98999, 2075.88989, 1246.53601,   0.00000, 0.00000, -90.00000);
				ObjBox[23] = CreateDynamicObject(3819, -1202.37000, 2099.10010, 1246.53601,   0.00000, 0.00000, 90.00000);
				ObjBox[24] = CreateDynamicObject(3819, -1202.37000, 2075.88989, 1246.53601,   0.00000, 0.00000, -90.00000);
				ObjBox[25] = CreateDynamicObject(3819, -1195.04004, 2091.72998, 1246.53601,  0.00000, 0.00000, 0.00000);
				ObjBox[26] = CreateDynamicObject(3819, -1195.04004, 2083.11011, 1246.53601,  0.00000, 0.00000, 0.00000);
				ObjBox[27] = CreateDynamicObject(11472, -1215.58997, 2085.83008, 1243.38000,   0.00000, 0.00000, -90.00000);
				ObjBox[28] = CreateDynamicObject(14434, -1212.78003, 2083.34009, 1253.18994,   0.00000, 0.00000, 90.00000);
				ObjBox[29] = CreateDynamicObject(14434, -1200.83997, 2091.01001, 1253.18994,   0.00000, 0.00000, -90.00000);
				ObjBox[30] = CreateDynamicObject(14791, -1206.72998, 2087.78003, 1247.57202,  0.00000, 0.00000, 0.00000);
				ObjBox[31] = CreateDynamicObject(16089, -1206.79004, 2088.67993, 1254.18005,   0.00000, -90.00000, 90.00000);
				ObjBox[32] = CreateDynamicObject(16089, -1206.80005, 2085.70996, 1254.18005,   0.00000, 90.00000, 90.00000);
				BoxObj = 1;
			}
			if(TipoEvento == 3)
			{
    	        if(ExpObj == 1) return Mensaje(playerid, -1, "Los objetos de la exposici�n ya fueron cargados.");
				ObjExp[0] = CreateDynamicObject(13646, -1223.97998, 2057.28003, 1245.06580,  0.00000, 0.00000, 0.00000);
				ObjExp[1] = CreateDynamicObject(13646, -1214.02002, 2057.28003, 1245.06580,  0.00000, 0.00000, 0.00000);
				ObjExp[2] = CreateDynamicObject(13646, -1223.97998, 2047.28003, 1245.06580,  0.00000, 0.00000, 0.00000);
				ObjExp[3] = CreateDynamicObject(13646, -1214.02002, 2047.28003, 1245.06580,  0.00000, 0.00000, 0.00000);
				ObjExp[4] = CreateDynamicObject(13646, -1204.02002, 2057.28003, 1245.06580,  0.00000, 0.00000, 0.00000);
				ObjExp[5] = CreateDynamicObject(13646, -1223.97998, 2037.28003, 1245.06580,  0.00000, 0.00000, 0.00000);
				ObjExp[6] = CreateDynamicObject(13646, -1204.02002, 2047.28003, 1245.06580,  0.00000, 0.00000, 0.00000);
				ObjExp[7] = CreateDynamicObject(13646, -1214.02002, 2037.28003, 1245.06580,  0.00000, 0.00000, 0.00000);
				ObjExp[8] = CreateDynamicObject(13646, -1204.02002, 2037.28003, 1245.06580,  0.00000, 0.00000, 0.00000);
				ObjExp[9] = CreateDynamicObject(13646, -1179.35999, 2057.28003, 1245.06580,  0.00000, 0.00000, 0.00000);
				ObjExp[10] = CreateDynamicObject(13646, -1179.35999, 2047.28003, 1245.06580,  0.00000, 0.00000, 0.00000);
				ObjExp[11] = CreateDynamicObject(13646, -1169.35999, 2057.28003, 1245.08984,  0.00000, 0.00000, 0.00000);
				ObjExp[12] = CreateDynamicObject(13646, -1179.35999, 2037.28003, 1245.06580,  0.00000, 0.00000, 0.00000);
				ObjExp[13] = CreateDynamicObject(13646, -1169.35999, 2047.28003, 1245.06580,  0.00000, 0.00000, 0.00000);
				ObjExp[14] = CreateDynamicObject(13646, -1159.35999, 2057.28003, 1245.06580,  0.00000, 0.00000, 0.00000);
				ObjExp[15] = CreateDynamicObject(13646, -1169.38770, 2037.27405, 1245.06580,  0.00000, 0.00000, 0.00000);
				ObjExp[16] = CreateDynamicObject(13646, -1159.35999, 2047.28003, 1245.06580,  0.00000, 0.00000, 0.00000);
				ObjExp[17] = CreateDynamicObject(13646, -1159.35999, 2037.28003, 1245.06580,  0.00000, 0.00000, 0.00000);
	    		ExpObj = 1;
			}
			if(TipoEvento == 4)
			{
    			if(ConObj == 1) return Mensaje(playerid, -1, "Los objetos del concierto ya fueron cargados.");
				ObjCon[0] = CreateDynamicObject(19609, -1188.19055, 2031.88159, 1247.32886,   0.00000, 0.00000, 180.00000);
				ObjCon[1] = CreateDynamicObject(19317, -1192.71997, 2027.67627, 1248.13135,   0.00000, 0.00000, 180.00000);
				ObjCon[2] = CreateDynamicObject(19319, -1193.42944, 2027.67627, 1248.05945,   0.00000, 0.00000, 180.00000);
				ObjCon[3] = CreateDynamicObject(1806, -1188.17456, 2030.85193, 1247.32776,  0.00000, 0.00000, 0.00000);
  			  	ConObj = 1;
			}
		}
		case DIALOG_SALON:
		if(response)
		{
			switch(listitem)
		    {
	    	    case 0:
	        	{
	            	if(PlayerInfo[playerid][jDinero] < 110) return Mensaje(playerid,-1,"Necesitas "CR"$110"CB" para poder comprar un vino.");
	            	DarVino(playerid);
					QuitarDinero(playerid, 110);
					Mensaje(playerid, -1, "Compraste un vino por "CR"110$"CB". Presiona "CR"'Y'"CB" para beber.");
	        	}
	        	case 1:
	        	{
	        	    if(PlayerInfo[playerid][jDinero] < 80) return Mensaje(playerid,-1,"Necesitas "CR"$80"CB" para poder comprar una cerveza.");
                    DarCerveza(playerid);
					QuitarDinero(playerid, 80);
					Mensaje(playerid, -1, "Compraste una cerveza por "CR"80$"CB". Presiona "CR"'Y'"CB" para beber.");
	        	}
	        	case 2:
	        	{
	            	if(PlayerInfo[playerid][jDinero] < 70) return Mensaje(playerid,-1,"Necesitas "CR"$70"CB" para poder comprar una sprunk.");
					DarSprunk(playerid);
					QuitarDinero(playerid, 70);
					Mensaje(playerid, -1, "Compraste un vaso de sprunk por "CR"70$"CB". Presiona "CR"'Y'"CB" para beber.");
	        	}
	        	case 3:
	        	{
	            	if(PlayerInfo[playerid][jDinero] < 170) return Mensaje(playerid,-1,"Necesitas "CR"$170"CB" para poder comprar una aquarius.");
	            	DarAquarius(playerid);
					QuitarDinero(playerid, 170);
					Mensaje(playerid, -1, "Compraste una botella de aquarius por "CR"170$"CB". Presiona "CR"'Y'"CB" para beber.");
	        	}
	        	case 4:
	        	{
	            	if(PlayerInfo[playerid][jDinero] < 100) return Mensaje(playerid,-1,"Necesitas "CR"$100"CB" para poder comprar una porci�n de pizza.");
	            	DarPizza(playerid);
					QuitarDinero(playerid, 100);
					AccionesRol(playerid,"compr� una porci�n de pizza.", 20);
					Mensaje(playerid, -1, "Presiona "CR"'Y'"CB" para comer.");
	        	}
	    	}
		}
		case DIALOG_PIZZA:
		if(response)
		{
			switch(listitem)
		    {
	    	    case 0:
	        	{
	            	if(PlayerInfo[playerid][jDinero] < 40) return Mensaje(playerid,-1,"Necesitas "CR"$40"CB" para poder comprar una porci�n de pizza.");
	            	DarPizza(playerid);
					QuitarDinero(playerid, 40);
					AccionesRol(playerid,"compr� una porci�n de pizza.", 20);
					Mensaje(playerid, -1, "Presiona "CR"'Y'"CB" para comer.");
	        	}
	        	case 1:
	        	{
	        	    if(Objeto[playerid] > 0) return Mensaje(playerid,-1,"Ya tienes un objeto en tu inventario.");
	            	if(PlayerInfo[playerid][jDinero] < 300) return Mensaje(playerid,-1,"Necesitas "CR"$300"CB" para poder comprar una pizza.");
	            	SetPlayerAttachedObject(playerid, 4, 19571, 6, 0.263000,0.039999,-0.141999,116.299987,-76.799858,136.799835,0.800998,1.016000,0.866998);
					Objeto[playerid] = 10004;
					QuitarDinero(playerid, 300);
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
					Mensaje(playerid, -1, "Compraste una pizza por "CR"$300"CB".");
					Mensaje(playerid, -1, "Puedes guardarla usando "CR"/baul guardar objeto"CB" o tirarla con "CR"/tirar objeto"CB".");
	        	}
	        	case 2:
	        	{
	        	    if(PlayerInfo[playerid][jDinero] < 70) return Mensaje(playerid,-1,"Necesitas "CR"$70"CB" para poder comprar una sprunk.");
					DarSprunk(playerid);
					QuitarDinero(playerid, 70);
					Mensaje(playerid, -1, "Compraste un vaso de sprunk por "CR"70$"CB". Presiona "CR"'Y'"CB" para beber.");
	        	}
	        	case 3:
	        	{
	            	if(PlayerInfo[playerid][jDinero] < 170) return Mensaje(playerid,-1,"Necesitas "CR"$170"CB" para poder comprar una aquarius.");
	            	DarAquarius(playerid);
					QuitarDinero(playerid, 170);
					Mensaje(playerid, -1, "Compraste una botella de aquarius por "CR"170$"CB". Presiona "CR"'Y'"CB" para beber.");
	        	}
	    	}
		}
		case CONTROLES:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
					    if(strcmp(Alquilador,NombreJugador(playerid),true) == 0 || PermisoSalon[playerid] == true)
						{
							if(Humo1Ojb == 0)
							{
							    format(string,sizeof(string),"El jugador "CR"%s"CB" encendio las maquinas de humo delanteras.", NombreJugador(playerid));
								MandarMensajeSalon(string, playerid);
						    	ObjHumo1[0] = CreateDynamicObject(2415, -1186.80493, 2036.34924, 1245.98035,  0.00000, 0.00000, 0.00000);
								ObjHumo1[1] = CreateDynamicObject(2415, -1196.69702, 2036.34924, 1245.98035,  0.00000, 0.00000, 0.00000);
								Mensaje(playerid,-1,"Encendiste las maquinas de humo delanteras.");
								Humo1Ojb = 1;
							}
							else
							{
							    format(string,sizeof(string),"El jugador "CR"%s"CB" apago las maquinas de humo delanteras.", NombreJugador(playerid));
								MandarMensajeSalon(string, playerid);
						    	DestroyDynamicObjectEx(ObjHumo1[0]);
						    	DestroyDynamicObjectEx(ObjHumo1[1]);
								Mensaje(playerid,-1,"Apagaste las maquinas de humo delanteras.");
								Humo1Ojb = 0;
							}
							return 1;
						}
					}
					case 1:
					{
					    if(strcmp(Alquilador,NombreJugador(playerid),true) == 0 || PermisoSalon[playerid] == true)
						{
							if(Humo2Ojb == 0)
							{
							    format(string,sizeof(string),"El jugador "CR"%s"CB" encendio las maquinas de humo traseras", NombreJugador(playerid));
								MandarMensajeSalon(string, playerid);
						    	ObjHumo2[0] = CreateDynamicObject(2415, -1185.50305, 2031.20337, 1245.98035,  0.00000, 0.00000, 0.00000);
								ObjHumo2[1] = CreateDynamicObject(2415, -1198.21899, 2031.20337, 1245.98035,  0.00000, 0.00000, 0.00000);
								Mensaje(playerid,-1,"Encendiste las maquinas de humo traseras.");
								Humo2Ojb = 1;
							}
							else
							{
							    format(string,sizeof(string),"El jugador "CR"%s"CB" apago las maquinas de humo traseras.", NombreJugador(playerid));
								MandarMensajeSalon(string, playerid);
						    	DestroyDynamicObjectEx(ObjHumo2[0]);
						    	DestroyDynamicObjectEx(ObjHumo2[1]);
								Mensaje(playerid,-1,"Apagaste las maquinas de humo traseras.");
								Humo2Ojb = 0;
							}
							return 1;
						}
					}
				}
			}
		}
		case DAYUDA:
		{
			if(response) DudaUser(playerid,DudaTexto[playerid]);
		}
		case CREPUESTOS:
		{
			if(response)
			{
			    if(PlayerInfo[playerid][Repuestos] >= 100) return Mensaje(playerid,-1,"No puedes llevar mas de 100 repuestos encima.");
				if(strval(inputtext) > 0 && strval(inputtext) <= 100)
				{
					new suma = PlayerInfo[playerid][Repuestos] + strval(inputtext);
					if(suma <= 100)
					{
					    if(PlayerInfo[playerid][jDinero] < strval(inputtext)*100) return va_SendClientMessage(playerid,-1,"Necesitas "CR"$%s"CB" para poder comprar %d repuestos.", ConvertirNumero(strval(inputtext)*100), strval(inputtext));
						format(string,500,"Compraste "CR"%d repuestos"CB" por "CR"$%s"CB".",strval(inputtext),ConvertirNumero(strval(inputtext)*100));
						Mensaje(playerid,-1,string);
						PlayerInfo[playerid][Repuestos] = PlayerInfo[playerid][Repuestos] + strval(inputtext);
						QuitarDinero(playerid,strval(inputtext)*100);
					}
					else if(suma > 100)
					{
						new total = 100 - PlayerInfo[playerid][Repuestos];
					    if(PlayerInfo[playerid][jDinero] < total*100) return va_SendClientMessage(playerid,-1,"Necesitas "CR"$%s"CB" para poder comprar %d repuestos.", ConvertirNumero(total*100), total);
						format(string,500,"Solamante pudiste comprar "CR"%d repuestos"CB" por "CR"$%s"CB".",total, ConvertirNumero(total*100));
						Mensaje(playerid,-1,string);
						PlayerInfo[playerid][Repuestos]+= total;
						QuitarDinero(playerid,total*100);
					}
				}
				else return Mensaje(playerid,-1,"Cantidad invalida.");
			}
		}
		case BOTIQUIN:
		{
			if(response)
			{
				PlayerInfo[playerid][pMedicina] = listitem+1;
				format(string,sizeof(string),"%s est� sacando cosas del botiqu�n.", NombreJugador(playerid));
				ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
				Mensaje(playerid,-1,"Agarraste cosas del botiqu�n, ahora puedes "CR"/atender paciente [id]");
			}
		}
		case DHOSPITAL:
		{
			if(response)
			{
				if(PlayerInfo[playerid][jDinero] < HCalculo[playerid]*10) return Mensaje(playerid,-1,"No tienes el dinero suficiente para pagar la revisi�n.");
				new vw;
				vw = GetPlayerVirtualWorld(playerid);
				if(vw == 6) PlayerInfo[playerid][pVwCama] = 0;
				if(vw == 7) PlayerInfo[playerid][pVwCama] = 1;
				if(vw == 8) PlayerInfo[playerid][pVwCama] = 2;
				if(vw == 9) PlayerInfo[playerid][pVwCama] = 3;
				PlayerInfo[playerid][pEnfermedad] = randomEx(1,10);
				if(Camas[0][PlayerInfo[playerid][pVwCama]] == 0)
				{
					if(vw == 6) SetPosEx(playerid,1161.6245,-1326.7123,-10.7922,266.6606,6,vw);
					if(vw == 7) SetPosEx(playerid,-2738.3855,605.5217,1385.6547,270.7632,6,vw);
					if(vw == 8) SetPosEx(playerid,1235.7253,-807.9566,1164.2759,90.6272,6,vw);
					if(vw == 9) SetPosEx(playerid,1235.7253,-807.9566,1164.2759,90.6272,6,vw);
					Camas[0][PlayerInfo[playerid][pVwCama]] = 1;
					PlayerInfo[playerid][pCama] = 1;
				}
				else if(Camas[1][PlayerInfo[playerid][pVwCama]] == 0)
				{
					if(vw == 6) SetPosEx(playerid,1164.6240,-1326.6973,-10.7922,268.8934,6,vw);
					if(vw == 7) SetPosEx(playerid,-2735.4866,605.6104,1385.6547,272.6433,6,vw);
					if(vw == 8) SetPosEx(playerid,1233.7246,-807.9959,1164.2759,89.6872,6,vw);
					if(vw == 9) SetPosEx(playerid,1233.7246,-807.9959,1164.2759,89.6872,6,vw);
					Camas[1][PlayerInfo[playerid][pVwCama]] = 1;
					PlayerInfo[playerid][pCama] = 2;
				}
				else if(Camas[2][PlayerInfo[playerid][pVwCama]] == 0)
				{
					if(vw == 6) SetPosEx(playerid,1167.6244,-1326.7108,-10.7922,268.8933,6,vw);
					if(vw == 7) SetPosEx(playerid,-2732.6985,605.6571,1385.6525,272.9567,6,vw);
					if(vw == 8) SetPosEx(playerid,1231.6147,-807.9762,1164.2759,89.6872,6,vw);
					if(vw == 9) SetPosEx(playerid,1231.6147,-807.9762,1164.2759,89.6872,6,vw);
					Camas[2][PlayerInfo[playerid][pVwCama]] = 1;
					PlayerInfo[playerid][pCama] = 3;
				}
				else if(Camas[3][PlayerInfo[playerid][pVwCama]] == 0)
				{
					if(vw == 6) SetPosEx(playerid,1161.3235,-1334.9413,-10.7922,269.8526,6,vw);
					if(vw == 7) SetPosEx(playerid,-2740.0679,616.9235,1385.6547,271.0767,6,vw);
					if(vw == 8) SetPosEx(playerid,1231.5948,-813.2696,1164.2759,89.6872,6,vw);
					if(vw == 9) SetPosEx(playerid,1231.5948,-813.2696,1164.2759,89.6872,6,vw);
					Camas[3][PlayerInfo[playerid][pVwCama]] = 1;
					PlayerInfo[playerid][pCama] = 4;
				}
				else if(Camas[4][PlayerInfo[playerid][pVwCama]] == 0)
				{
					if(vw == 6) SetPosEx(playerid,1164.0244,-1334.9390,-10.7922,269.8526,6,vw);
					if(vw == 7) SetPosEx(playerid,-2735.9060,616.9614,1385.6547,273.8968,6,vw);
					if(vw == 8) SetPosEx(playerid,1231.6055,-819.4322,1164.2759,84.6738,6,vw);
					if(vw == 9) SetPosEx(playerid,1231.6055,-819.4322,1164.2759,84.6738,6,vw);
					Camas[4][PlayerInfo[playerid][pVwCama]] = 1;
					PlayerInfo[playerid][pCama] = 5;
				}
				else if(Camas[5][PlayerInfo[playerid][pVwCama]] == 0)
				{
					if(vw == 6) SetPosEx(playerid,1167.5228,-1334.6652,-10.7922,268.5992,6,vw);
					if(vw == 7) SetPosEx(playerid,-2732.0959,617.0692,1385.6547,271.0767,6,vw);
					if(vw == 8) SetPosEx(playerid,1251.7050,-827.0330,1164.2759,91.5906,6,vw);
					if(vw == 9) SetPosEx(playerid,1251.7050,-827.0330,1164.2759,91.5906,6,vw);
					Camas[5][PlayerInfo[playerid][pVwCama]] = 1;
					PlayerInfo[playerid][pCama] = 6;
				}
				else if(Camas[6][PlayerInfo[playerid][pVwCama]] == 0)
				{
					if(vw == 6) SetPosEx(playerid,1162.7064,-1329.7593,-10.7922,91.9010,6,vw);
					if(vw == 7) SetPosEx(playerid,-2710.9233,615.1759,1385.6525,270.4500,6,vw);
					if(vw == 8) SetPosEx(playerid,1249.4641,-827.1253,1164.2759,92.8439,6,vw);
					if(vw == 9) SetPosEx(playerid,1249.4641,-827.1253,1164.2759,92.8439,6,vw);
					Camas[6][PlayerInfo[playerid][pVwCama]] = 1;
					PlayerInfo[playerid][pCama] = 7;
				}
				else if(Camas[7][PlayerInfo[playerid][pVwCama]] == 0)
				{
					if(vw == 6) SetPosEx(playerid,1163.7214,-1341.2804,-10.7922,269.2494,6,vw);
					if(vw == 7) SetPosEx(playerid,-2707.3452,615.1105,1385.6547,270.4500,6,vw);
					if(vw == 8) SetPosEx(playerid,1247.0847,-827.1370,1164.2759,89.7106,6,vw);
					if(vw == 9) SetPosEx(playerid,1247.0847,-827.1370,1164.2759,89.7106,6,vw);
					Camas[7][PlayerInfo[playerid][pVwCama]] = 1;
					PlayerInfo[playerid][pCama] = 8;
				}
				else if(Camas[8][PlayerInfo[playerid][pVwCama]] == 0)
				{
					if(vw == 6) SetPosEx(playerid,1163.7242,-1341.1757,-10.7922,270.1895,6,vw);
					if(vw == 7) SetPosEx(playerid,-2703.7068,615.1634,1385.6547,271.3900,6,vw);
					if(vw == 8) SetPosEx(playerid,1244.9867,-827.2269,1164.2759,91.5906,6,vw);
					if(vw == 9) SetPosEx(playerid,1244.9867,-827.2269,1164.2759,91.5906,6,vw);
					Camas[8][PlayerInfo[playerid][pVwCama]] = 1;
					PlayerInfo[playerid][pCama] = 9;
				}
				else if(Camas[9][PlayerInfo[playerid][pVwCama]] == 0)
				{
					if(vw == 6) SetPosEx(playerid,1166.2246,-1341.1255,-10.7922,269.8761,6,vw);
					if(vw == 7) SetPosEx(playerid,-2720.7856,605.7197,1385.6471,269.1735,6,vw);
					if(vw == 8) SetPosEx(playerid,1250.5404,-824.4169,1164.2759,271.7356,6,vw);
					if(vw == 9) SetPosEx(playerid,1250.5404,-824.4169,1164.2759,271.7356,6,vw);
					Camas[9][PlayerInfo[playerid][pVwCama]] = 1;
					PlayerInfo[playerid][pCama] = 10;
				}
				else if(Camas[10][PlayerInfo[playerid][pVwCama]] == 0)
				{
					if(vw == 6) SetPosEx(playerid,1168.6847,-1341.0063,-10.7922,265.4894,6,vw);
					if(vw == 7) SetPosEx(playerid,-2718.1567,605.7556,1385.6471,273.5602,6,vw);
					if(vw == 8) SetPosEx(playerid,1248.0641,-824.3389,1164.2759,268.6023,6,vw);
					if(vw == 9) SetPosEx(playerid,1248.0641,-824.3389,1164.2759,268.6023,6,vw);
					Camas[10][PlayerInfo[playerid][pVwCama]] = 1;
					PlayerInfo[playerid][pCama] = 11;
				}
				else if(Camas[11][PlayerInfo[playerid][pVwCama]] == 0)
				{
					if(vw == 6) SetPosEx(playerid,1169.0237,-1345.6552,-10.7922,270.1894,6,vw);
					if(vw == 7) SetPosEx(playerid,-2721.8750,605.6242,1385.6471,88.0885,6,vw);
					if(vw == 8) SetPosEx(playerid,1245.6643,-824.3138,1164.2759,270.1690,6,vw);
					if(vw == 9) SetPosEx(playerid,1245.6643,-824.3138,1164.2759,270.1690,6,vw);
					Camas[11][PlayerInfo[playerid][pVwCama]] = 1;
					PlayerInfo[playerid][pCama] = 12;
				}
				else return Mensaje(playerid,-1,"Todas las camillas estan ocupadas, espera unos minutos.");
				va_SendClientMessage(playerid,-1,"Has gastado {FF3300}$%s"CB" en la revisi�n medica.", ConvertirNumero(HCalculo[playerid]*10));
				Mensaje(playerid,-1,"Estas siendo atendido por los m�dicos del hospital.");
				QuitarDinero(playerid,HCalculo[playerid]*10);
				ApplyAnimation(playerid,"INT_HOUSE","BED_In_R",4.1,0,0,0,1,0,1);
				HCurando[playerid] = SetTimerEx("CurandoHospital",2000,true,"d",playerid);
				PlayerInfo[playerid][pAtendido] = 0;
				PlayerTemp[playerid][CurandoHosp] = 1;
				foreach(new i : Player)
				{
					if(RopaMedi[i] == 1 && TieneTrabajo(i,MEDICO) && GetPlayerVirtualWorld(i) == vw) Mensaje(i,COLOR_GREEN2,"Hay un nuevo paciente establecido en el hospital.");
				}
			}
		}
		case DEMAIL:
		{
			if(!response) return ExpulsarJugador(playerid, "Escape al momento de ingresar email");
			if(slen < 50)
			{
                if(Buscar(inputtext, "@") && Buscar(inputtext, "."))
				{
					new pQuery[128];
					format(PlayerInfo[playerid][pEmail], 90, "%s", inputtext);
					mysql_format(Conecction, pQuery, sizeof(pQuery), "SELECT Username FROM `usuarios` WHERE `Email` = '%e' LIMIT 1", inputtext);
					mysql_tquery(Conecction, pQuery, "OnPlayerRegister", "d", playerid);
				}
				else return MostrarDialog(playerid, DEMAIL,DIALOG_STYLE_INPUT,"Ingresa tu direcci�n de e-mail","Ingresa un e-mail v�lido para recuperar tu contrase�a en caso de perderla.\n\nTu e-mail:","Siguiente","");
			}
			else return MostrarDialog(playerid, DEMAIL,DIALOG_STYLE_INPUT,"Ingresa tu direcci�n de e-mail","Ingresa un e-mail v�lido para recuperar tu contrase�a en caso de perderla.\n\nTu e-mail:","Siguiente","");
		}
		case LOGIN:
		{
  			if(slen <= 2)
			{
				ContraVacia[playerid] = 1;
				Mensaje(playerid, 0xAFAFAFAA, "Ingresa la contrase�a");
			}
			if(slen > 18) Mensaje(playerid, 0xAFAFAFAA, "Contrase�a muy larga.");
   			if(response)
			{
   			 	if(IsPlayerConnected(playerid))
	    		{
					new escapepass[65];
					format(PlayerInfo[playerid][pTemppass], 128, "%s", inputtext);
					SHA256_PassHash(inputtext, "stellarhostingzone", escapepass, 65);

					if (strcmp(escapepass, PlayerInfo[playerid][pPassword]) == 0)
					{
						if(NecesitaCodigo[playerid])
						{
							User_Temp[playerid][CodigoDiscord] = randomEx(1000,9999);
							format(string, sizeof string, ""CB"Tu cuenta est� protegida con autenticaci�n de dos factores.\n\n"CB"Para poder ingresar a tu cuenta por favor haz lo siguiente:\n- Dir�gete a nuestro servidor de discord y escribe "CR"!autorizar %d"CB" en cualquier canal.\n\n"CB"Te pedimos que realices eso ya que tu IP ha cambiado del �ltimo inicio de sesi�n.\n\n"CB"Puedes cerrar este di�logo en cualquier momento, tu cuenta cargar� autom�ticamente.",User_Temp[playerid][CodigoDiscord]);
							MostrarDialog(playerid, DIALOG_AYUDA, DIALOG_STYLE_MSGBOX, "Protecci�n 2FA", string, "Aceptar", "");
							return 1;
						}
						cache_set_active(PlayerInfo[playerid][Cache_ID]);
						CargarUsuario(playerid);
						cache_delete(PlayerInfo[playerid][Cache_ID]);
						PlayerInfo[playerid][Cache_ID] = MYSQL_INVALID_CACHE;
					}
					else
					{
						new stringsd[150];
						format(stringsd, sizeof stringsd, "{ff0000}Contrase�a incorrecta.\n"CB"Bienvenido de vuelta "CR"%s"CB".\nTu cuenta est� registrada ingresa tu contrase�a:", PlayerInfo[playerid][NombreTemporal]);
						MostrarDialog(playerid, LOGIN, DIALOG_STYLE_PASSWORD,""CB"�Cuenta {04d62e}registrada"CB"!",stringsd,""CB"Jugar",""CB"Salir");
					}
				}
			}
			else return ExpulsarJugador(playerid, "Escape al momento de logear");
		}
		case REGISTRO:
		{
			if(!response) return ExpulsarJugador(playerid, "Escape en registro");
			if(response)
			{
				if(!slen) return ExpulsarJugador(playerid, "Sin datos al registrar");
				if(slen < 4 || slen > 18) {
					
					MostrarDialog(playerid, REGISTRO, DIALOG_STYLE_PASSWORD,"Registro:","La contrase�a que has colocado es muy corta\nLa contrase�a debe contener de 4 a 18 caracteres","Siguiente","Salir");
				
				}
				else if(slen > 3 && slen < 18)
				{
					format(PlayerInfo[playerid][pTemppass], 128, "%s", inputtext);
					SHA256_PassHash(inputtext, "stellarhostingzone", PlayerInfo[playerid][pPassword], 65);

					format(string, sizeof(string), ""CB"Bienvenidos "CR"%s"CB"\n\n{2bff05}�"CB" Ingresa una contrase�a.\n{2bff05}�"CB" Ingresa un correo electr�nico.\n{de0000}�"CB" Selecciona tu sexo.", PlayerInfo[playerid][NombreTemporal]);

					MostrarDialog(playerid, DEMAIL,DIALOG_STYLE_INPUT,"�Registra una nueva cuenta!",string,"Siguiente","");
                    KillTimer(LoginTimer[playerid]);
				}
			}
		}
		case PRODUCTOS:
		{
			if(response)
			{
				switch(listitem)
				{

					case 0:
					{
						if(PlayerInfo[playerid][jDinero] < 1000) return Mensaje(playerid,-1,"Necesitas "CR"$1.000"CB" para poder comprar un tel�fono.");
						if(PlayerInfo[playerid][pNumero] > 0) return Mensaje(playerid,-1,"Ya tienes un telefono.");
						new randphone = 500000+PlayerInfo[playerid][p_DBID];
						PlayerInfo[playerid][pNumero] = randphone;
						QuitarDinero(playerid, 1000);
						format(string, sizeof(string), "Has comprado un tel�fono, Tu n�mero es: "CR"%d",PlayerInfo[playerid][pNumero]);
						Mensaje(playerid, -1, string);
					}
					case 1:
					{
						if(PlayerInfo[playerid][jDinero] < 500) return Mensaje(playerid,-1,"Necesitas "CR"$500"CB" para poder comprar una agenda telefonica.");
						if(PlayerInfo[playerid][pAgenda] == 1) return Mensaje(playerid,-1,"Ya tienes una agenda telefonica.");
						QuitarDinero(playerid, 1000);
						PlayerInfo[playerid][pAgenda] = 1;
						Mensaje(playerid, -1, "Has comprado una agenda telefonica, para utilizarla usa "CR"/numero ID");
					}
					case 2:
					{
						new traba[128*MAX_PAUTOS],counter = 0;
					    for(new i = 0; i < MAX_PAUTOS; i++)
					    {
					        if(VehicleInfo[playerid][i][vModelo] < 400) continue;
					        format(traba, sizeof(traba), "%s Veh�culo: {F6E200}%s"CB" | Patente: "CR"%s"CB" | Precio: {FF0000}$%s\n",traba,GetVehicleName(autos[i][playerid]),Patente[playerid][i],ConvertirNumero(((VehicleInfo[playerid][i][vPrecio] / 2) / 10) + 2000));
							counter++;
					    }
					    if(counter == 0) return Mensaje(playerid,-1,"No tienes veh�culos para los que comprar un seguro.");
					    else return MostrarDialog(playerid, TRABAV, DIALOG_STYLE_LIST, "Veh�culo al que le deseas instalar la traba de seguridad", traba, "Comprar","Cancelar");
					}
					case 3:
					{
						new alarms[128*MAX_PAUTOS],counter = 0;
					    for(new i = 0; i < MAX_PAUTOS; i++)
					    {
					        if(VehicleInfo[playerid][i][vModelo] < 400) continue;
					        format(alarms, sizeof(alarms), "%s Veh�culo: {F6E200}%s"CB" | Patente: "CR"%s"CB" | Precio: {FF0000}$%s\n",alarms,GetVehicleName(autos[i][playerid]),Patente[playerid][i],ConvertirNumero(((VehicleInfo[playerid][i][vPrecio] / 2) / 10) + 5000));
							counter++;
					    }
					    if(counter == 0) return Mensaje(playerid,-1,"No tienes veh�culos para los que comprar una alarma.");
					    else return MostrarDialog(playerid, TRABAA, DIALOG_STYLE_LIST, "Veh�culo al que le deseas instalar alarma", alarms, "Comprar","Cancelar");
					}
					case 4:
					{
						if(PlayerInfo[playerid][pRadio] != 0) return Mensaje(playerid,-1,"Tu ya tienes un radio comunicador");
						if(PlayerInfo[playerid][jDinero] < 2000) return Mensaje(playerid,-1,"Necesitas "CR"$2.000"CB" para poder comprar un radio comunicador.");
						PlayerInfo[playerid][pRadio] = 1;
						QuitarDinero(playerid, 2000);
						Mensaje(playerid,-1,"Has comprado un radio comunicador, ahora puedes hablar desde el.");
					}
					case 5:
					{
						if(PlayerInfo[playerid][pGPS] != 0) return Mensaje(playerid,-1,"Tu ya tienes un GPS");
						if(PlayerInfo[playerid][jDinero] < 1500) return Mensaje(playerid,-1,"Necesitas "CR"$2.000"CB" para poder comprar un GPS.");
						PlayerInfo[playerid][pGPS] = 1;
						QuitarDinero(playerid, 1500);
						Mensaje(playerid,-1,"Has comprado un GPS, utiliza "CR"/gps "CB"para usarlo.");
					}
					case 6:
					{
						if(PlayerInfo[playerid][jDinero] < 470) return Mensaje(playerid,-1,"Necesitas "CR"$470"CB" para poder comprar 6 cervezas.");
						if(Objeto[playerid] > 0) return Mensaje(playerid,-1,"Ya tienes un objeto en tu inventario.");
						Mensaje(playerid,-1,"Compraste 6 cervezas por "CR"$470"CB", ahora gu�rdalas en una heladera.");
						Mensaje(playerid,-1,"Tienes que usar "CR"/heladera guardar objeto"CB", o para tirarlas "CR"/tirar objeto");
						Objeto[playerid] = 1000;
						SetPlayerAttachedObject(playerid, 4, 2060, 6, 0.265999,0.002999,0.034000,107.000038,178.100204,175.399856,0.388000,0.463999,0.587999);
						QuitarDinero(playerid, 470);
					}
					case 7:
					{
						if(PlayerInfo[playerid][jDinero] < 590) return Mensaje(playerid,-1,"Necesitas "CR"$590"CB" para poder comprar 6 botellas de vino.");
						if(Objeto[playerid] > 0) return Mensaje(playerid,-1,"Ya tienes un objeto en tu inventario.");
						Mensaje(playerid,-1,"Compraste 6 botellas de vino por "CR"$590"CB", ahora gu�rdalas en una heladera.");
						Mensaje(playerid,-1,"Tienes que usar "CR"/heladera guardar objeto"CB", o para tirarlas "CR"/tirar objeto");
						Objeto[playerid] = 1001;
						SetPlayerAttachedObject(playerid, 4, 3800, 6, 0.262000,0.070999,0.021000,106.599998,-1.999999,171.599975,0.372999,0.239999,0.166000);
						QuitarDinero(playerid, 590);
					}
					case 8:
					{
						if(PlayerInfo[playerid][jDinero] < 200) return Mensaje(playerid,-1,"Necesitas "CR"$200"CB" para poder comprar 4 vasos de sprunk.");
						if(Objeto[playerid] > 0) return Mensaje(playerid,-1,"Ya tienes un objeto en tu inventario.");
						Mensaje(playerid,-1,"Compraste 4 vasos de sprunk por "CR"$200"CB", ahora gu�rdalas en una heladera.");
						Mensaje(playerid,-1,"Tienes que usar "CR"/heladera guardar objeto"CB", o para tirarlas "CR"/tirar objeto");
						Objeto[playerid] = 1002;
						SetPlayerAttachedObject(playerid, 4, 2900, 6, 0.256000,0.074999,0.019000,94.400001,0.000000,1.300018,0.376999,0.207000,0.164999);
						QuitarDinero(playerid, 200);
					}
					case 9:
					{
						if(PlayerInfo[playerid][jDinero] < 65) return Mensaje(playerid,-1,"Necesitas "CR"$65"CB" para poder comprar una sprunk.");
                        DarSprunk(playerid);
						QuitarDinero(playerid, 65);
						Mensaje(playerid, -1, "Compraste un vaso de sprunk por "CR"65$"CB". Presiona "CR"'Y'"CB" para beber.");
     				}
				}
 				if(PrimerosPasos[playerid] == 2)
				{
					ShowTDN(playerid, "~p~Ultimo objetivo:~w~ Consigue un ~b~trabajo~w~.");
					Mensaje(playerid,-1, ""CR"[!] �Excelente!"CB", Has llegado al 24 7, ahora tendras que conseguir un trabajo.");
					Mensaje(playerid,-1, ""CR"[!] "CB"En tu gps estaran la lista de trabajos disponibles, tendras que dirigirte a uno para poder trabajar en dicho lugar.");
					Mensaje(playerid,-1, ""CR"[!] "CB"En tu inventario tendras algunas drogas y objectos para tu consumo, si deseas consumir una droga usa "CR"/cons"CB".");
					PrimerosPasos[playerid] = 3;
			    }
				CompraAnim(playerid);
 		 	}
			return 1;
		}
		case TRABAV:
		{
			if(response)
			{
				new car = ObtenerOrdenAuto(playerid,listitem);
   				if(VehicleInfo[playerid][car][vModelo] > 0)
       			{
          			if(VehicleInfo[playerid][car][vTraba] != 1)
             		{
						new calcPrecio = ((VehicleInfo[playerid][car][vPrecio] / 2) / 10) + 2000;
						if(PlayerInfo[playerid][jDinero] >= calcPrecio)
						{
		    				va_SendClientMessage(playerid, COLOR_BLANCO, "Acabas de comprar un sistema de traba para tu "CR"%s "CB"("CR"%s"CB"). Gasto total: {FF3300}$%s"CB"", GetVehicleName(autos[car][playerid]), Patente[playerid][car], ConvertirNumero(calcPrecio));
					    	Mensaje(playerid, COLOR_BLANCO, "Usa "CR"/cerrar"CB" para cerrarlo o "CR"/abrir"CB" para destrabarlo.");
					    	VehicleInfo[playerid][car][vTraba] = 1;
						    QuitarDinero(playerid, calcPrecio);
							CompraAnim(playerid);
						}
						else return Mensaje(playerid, COLOR_BLANCO, "No tienes suficiente dinero para comprar ese art�culo.");
 					}
      				else return Mensaje(playerid, COLOR_BLANCO, "Este veh�culo ya tiene un seguro.");
          		}
            	else return Mensaje(playerid, COLOR_BLANCO, "No puedes comprar un seguro para un veh�culo que no existe.");
			}
			else return 1;
		}
		case TRABAA:
		{
			if(response)
			{
				new car = ObtenerOrdenAuto(playerid,listitem);
   				if(VehicleInfo[playerid][car][vModelo] > 0)
   				{
       				if(VehicleInfo[playerid][car][vAlarm] != 1)
           			{
						new calcPrecio = ((VehicleInfo[playerid][car][vPrecio] / 2) / 10) + 5000;
						if(PlayerInfo[playerid][jDinero] >= calcPrecio)
						{
		    				va_SendClientMessage(playerid, COLOR_BLANCO, "Acabas de comprar una alarma para tu "CR"%s "CB"("CR"%s"CB"). Gasto total: {FF3300}$%s"CB"", GetVehicleName(autos[car][playerid]), Patente[playerid][car], ConvertirNumero(calcPrecio));
						    Mensaje(playerid, COLOR_BLANCO, "Usa "CR"/alarma"CB" para activar y desactivar la alarma.");
						    VehicleInfo[playerid][car][vAlarm] = 1;
						    QuitarDinero(playerid, calcPrecio);
							CompraAnim(playerid);
						}
						else return Mensaje(playerid, COLOR_BLANCO, "No tienes suficiente dinero para comprar ese art�culo.");
      				}
          			else return Mensaje(playerid, COLOR_BLANCO, "Este veh�culo ya tiene una alarma.");
           		}
             	else return Mensaje(playerid, COLOR_BLANCO, "No puedes comprar una alarma para un veh�culo que no existe.");
			}
			else return 1;
		}
		case PRODUCTOS2:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						if(PlayerInfo[playerid][jDinero] < 80) return Mensaje(playerid,-1,"Necesitas "CR"$80"CB" para poder comprar una cerveza.");
						foreach(new p : Propiedades)
   						{
						    if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW])
	        				{
	        				    if(PropInfo[p][pCerveza] <= 0) return Mensaje(playerid,-1,"No hay mas cervezas en este restaurante.");
	        				    PropInfo[p][pCerveza]--;
		        				PropInfo[p][pGanancias]+=80;
		        				GuardarPropiedad(p);
								break;
	        				}
						}
						DarCerveza(playerid);
						QuitarDinero(playerid, 80);
						Mensaje(playerid, -1, "Compraste una cerveza por "CR"80$");
						Mensaje(playerid, -1, "Presiona "CR"''Y'"CB" para beber.");
					}
					case 1:
					{
						if(PlayerInfo[playerid][jDinero] < 100) return Mensaje(playerid,-1,"Necesitas "CR"$100"CB" para poder comprar un vino.");
						foreach(new p : Propiedades)
   						{
						    if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW])
	        				{
	        				    if(PropInfo[p][pVino] <= 0) return Mensaje(playerid,-1,"No hay mas vinos en este restaurante.");
	        				    PropInfo[p][pVino]--;
		        				PropInfo[p][pGanancias]+=100;
		        				GuardarPropiedad(p);
								break;
	        				}
						}
						DarVino(playerid);
						QuitarDinero(playerid, 100);
						Mensaje(playerid, -1, "Compraste un vino por "CR"100$");
						Mensaje(playerid, -1, "Presiona "CR"''Y'"CB" para beber.");
					}
					case 2:
					{
						if(PlayerInfo[playerid][jDinero] < 60) return Mensaje(playerid,-1,"Necesitas "CR"$60"CB" para poder comprar una sprunk.");
						foreach(new p : Propiedades)
   						{
						    if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW])
	        				{
	        				    if(PropInfo[p][pSprunk] <= 0) return Mensaje(playerid,-1,"No hay mas sprunks en este restaurante.");
	        				    PropInfo[p][pSprunk]--;
	        					PropInfo[p][pGanancias]+=60;
	        					GuardarPropiedad(p);
	        				}
						}
						DarSprunk(playerid);
						QuitarDinero(playerid, 60);
						Mensaje(playerid, -1, "Compraste un vaso de sprunk por "CR"60$"CB". Presiona "CR"'Y'"CB" para beber.");
					}
					case 3:
	        		{
		            	if(PlayerInfo[playerid][jDinero] < 160) return Mensaje(playerid,-1,"Necesitas "CR"$160"CB" para poder comprar una aquarius.");
		            	foreach(new p : Propiedades)
   						{
						    if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW])
	        				{
	        				    if(PropInfo[p][pAquarius] <= 0) return Mensaje(playerid,-1,"No hay mas aquarius en este restaurante.");
	        				    PropInfo[p][pAquarius]--;
		        				PropInfo[p][pGanancias]+=160;
		        				GuardarPropiedad(p);
	        				}
						}
						DarAquarius(playerid);
						QuitarDinero(playerid, 160);
						Mensaje(playerid, -1, "Compraste una botella de aquarius por "CR"160$");
						Mensaje(playerid, -1, "Presiona "CR"'Y'"CB" para beber.");
					}
					case 4:
	        		{
		            	if(PlayerInfo[playerid][jDinero] < 70) return Mensaje(playerid,-1,"Necesitas "CR"$70"CB" para poder comprar una porci�n de pizza.");
		            	foreach(new p : Propiedades)
   						{
						    if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW])
	        				{
	        				    if(PropInfo[p][pPizzas] <= 0) return Mensaje(playerid,-1,"No hay mas pizzas en este restaurante.");
	        				    PropInfo[p][pPizzas]--;
		        				PropInfo[p][pGanancias]+=70;
		        				GuardarPropiedad(p);
	        				}
						}
						DarPizza(playerid);
						QuitarDinero(playerid, 70);
						AccionesRol(playerid,"compr� una porci�n de pizza.", 20);
						Mensaje(playerid, -1, "Presiona "CR"'Y'"CB" para comer.");
					}
				}
			}
			return 1;
		}
		case JUGUETES:
		{
			if(response)
			{
				new dinero,arma;
				switch(listitem)
				{
					case 0: dinero = 1000,arma = 11;
					case 1: dinero = 1200,arma = 13;
					case 2: dinero = 1600,arma = 12;
					case 3: dinero = 2500,arma = 10;
				}
				if(PlayerInfo[playerid][jDinero] < dinero) return va_SendClientMessage(playerid,-1,"Necesitas "CR"$%d"CB" para poder comprar un vibrador blanco.",dinero);
				QuitarDinero(playerid, dinero);
				DarArma(playerid,arma);
				va_SendClientMessage(playerid, -1, "Compraste un %s por "CR"%d$",GetWeaponNameEx(arma),dinero);
			}
			return 1;
		}
		case SERVICIOGRUA1:
		{
			if(response)
			{
				MostrarDialog(playerid, SERVICIOGRUA2, DIALOG_STYLE_LIST,"Lugar de entrega","Estacionamiento actual\nEstacionamiento municipal","Recuperar","Cancelar");
			}
		}
		case SERVICIOGRUA2:
		{
			if(response == 1)
			{
				new gruast[150*MAX_PAUTOS];
			    for(new i = 0; i < MAX_PAUTOS; i++)
			    {
			        if(VehicleInfo[playerid][i][vModelo] < 400) continue;
			        format(gruast, sizeof(gruast), "%s Veh�culo: {F6E200}%s"CB" | Patente: "CR"%s"CB" | Costo del servicio: {F81414}$%s\n",gruast,GetVehicleName(autos[i][playerid]),Patente[playerid][i],ConvertirNumero(VehicleInfo[playerid][i][vPrecio]/100));
			    }
				MostrarDialog(playerid, SERVICIOGRUA3, DIALOG_STYLE_LIST, "Veh�culo que deseas recuperar con el servicio de gr�a", gruast, "Recuperar","Cancelar");
			} 
		}
		case SERVICIOGRUA3:
		{
			if(response)
			{
				new car = ObtenerOrdenAuto(playerid,listitem);
				if(autos[car][playerid] == 0) return Mensaje(playerid,-1,"No puedes remolcar un veh�culo que no existe.");
				if(SiHayPersonaEnVehiculo(autos[car][playerid]) != 0) return Mensaje(playerid,-1,"No puedes remolcar el veh�culo si hay una persona dentro.");
				if(PlayerInfo[playerid][jDinero] < VehicleInfo[playerid][listitem][vPrecio]/100) return Mensaje(playerid, -1, "No tienes el dinero suficiente para sol�citar una grua a este veh�culo.");
				QuitarDinero(playerid, VehicleInfo[playerid][car][vPrecio]/100);
				switch(tipogrua[playerid])
				{
					case 1: Mensaje(playerid, -1, "Una grua fue enviada a la posici�n de tu veh�culo, el cual sera transladado hacia el ultimo lugar donde lo estacionaste."),Respawnear(autos[car][playerid]);
					case 2:
					{
						Mensaje(playerid, -1, "Una grua fue enviada a la posici�n de tu veh�culo, el cual sera transladado hacia el estacionamiento municipal.");
						SetVehicleHealthAC(autos[car][playerid], 1000.0);
						VehicleFuel[autos[car][playerid]] = CombustibleCoche(autos[car][playerid])/2;
						VehicleInfo[playerid][car][v0_interior]= 0;
						VehicleInfo[playerid][car][v0_vw] = 0;
						if(MARITIMO(autos[car][playerid]))
						{
							new lugar = random(4);
							switch(lugar)
							{
								case 0: { VehicleInfo[playerid][car][pOX] = 2634.2881; VehicleInfo[playerid][car][pOY] = -2486.2009; VehicleInfo[playerid][car][pOZ] = -0.7707; VehicleInfo[playerid][car][pOA] = 2.5868; }
								case 1: { VehicleInfo[playerid][car][pOX] = 2623.3982; VehicleInfo[playerid][car][pOY] = -2488.3628; VehicleInfo[playerid][car][pOZ] = -0.6238; VehicleInfo[playerid][car][pOA] = 2.1582; }
								case 2: { VehicleInfo[playerid][car][pOX] = 2607.7522; VehicleInfo[playerid][car][pOY] = -2487.5833; VehicleInfo[playerid][car][pOZ] = -0.4461; VehicleInfo[playerid][car][pOA] = 0.4526; }
								case 3: { VehicleInfo[playerid][car][pOX] = 2594.8560; VehicleInfo[playerid][car][pOY] = -2484.1121; VehicleInfo[playerid][car][pOZ] = -0.3442; VehicleInfo[playerid][car][pOA] = 357.9986; }
							}
							SetPosVeh(autos[car][playerid],VehicleInfo[playerid][car][pOX],VehicleInfo[playerid][car][pOY],VehicleInfo[playerid][car][pOZ],VehicleInfo[playerid][car][pOA],0,0);
						}
						else
						{
							new rand = random(sizeof(MunicipioSpawn));
							new Float:posy, Float:sizex, Float:sizey, Float:sizez;
							GetVehicleModelInfo(GetVehicleModel(autos[car][playerid]), VEHICLE_MODEL_INFO_SIZE, sizex, sizey, sizez);
							posy = MunicipioSpawn[rand][1] - (floatsqroot(sizey + sizey + sizey) * floatsin(-MunicipioSpawn[rand][3], degrees));
							SetPosVeh(autos[car][playerid],MunicipioSpawn[rand][0],posy,MunicipioSpawn[rand][2],MunicipioSpawn[rand][3],0,0);
						}
					}
				}
			}
		}
		case CONFIG:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						if(CanalDudas[playerid] == 0) CanalDudas[playerid] = 1;
						else if(CanalDudas[playerid] == 1) CanalDudas[playerid] = 0;
					}
					case 1:
					{
						if(ShowMutes[playerid] == 0) ShowMutes[playerid] = 1;
						else if(ShowMutes[playerid] == 1) ShowMutes[playerid] = 0;
					}
					case 2:
					{
						if(ShowSound[playerid] == 0) ShowSound[playerid] = 1;
						else if(ShowSound[playerid] == 1) ShowSound[playerid] = 0;
					}
					case 3:
					{
						if(ShowCone[playerid] == 0) ShowCone[playerid] = 1;
						else if(ShowCone[playerid] == 1) ShowCone[playerid] = 0;
					}
					case 4:
					{
						if(ShowGuia[playerid] == 0) ShowGuia[playerid] = 1;
						else if(ShowGuia[playerid] == 1) ShowGuia[playerid] = 0;
					}
					case 5:
					{
						if(SedOculta[playerid] == 0)
						{
							SedOculta[playerid] = 1;
							BarraHambre(playerid, 1);
							BarraSed(playerid, 1);
					       	Mensaje(playerid,-1,"Ahora puedes ver la barra de sed, para ocultarla usa "CR"/ocultar sed"CB".");
						}
						else if(SedOculta[playerid] == 1)
						{
							SedOculta[playerid] = 0;
							BarraHambre(playerid, 2);
							BarraSed(playerid, 2);
       						Mensaje(playerid,-1,"Ocultaste la barra de sed, para volver a mostrarla usa "CR"/mostrar sed"CB".");
						}
					}
					case 6:
					{
						if(ShowVelo[playerid] == 0) ShowVelo[playerid] = 1;
						else if(ShowVelo[playerid] == 1) ShowVelo[playerid] = 0;
					}
					case 7:
					{
						if(AvisoTerritorio[playerid] == 0) AvisoTerritorio[playerid] = 1;
						else if(AvisoTerritorio[playerid] == 1) AvisoTerritorio[playerid] = 0;
					}
					case 8:
					{
						if(ShowTerritorio[playerid] == 0) ShowTerritorio[playerid] = 1,ShowTerritorios(playerid);
						else if(ShowTerritorio[playerid] == 1) ShowTerritorio[playerid] = 0,HideTerritorios(playerid);
					}
					case 9:
					{
						if(MostrarTwitter[playerid] == 0) MostrarTwitter[playerid] = 1;
						else if(MostrarTwitter[playerid] == 1) MostrarTwitter[playerid] = 0;
					}
					case 10:
					{
						if(PlayerInfo[playerid][AutoLogin] == 0) PlayerInfo[playerid][AutoLogin] = 1;
						else if(PlayerInfo[playerid][AutoLogin] == 1) PlayerInfo[playerid][AutoLogin] = 0;
					}
					case 11:
					{
						if(strcmp(User_Temp[playerid][DiscordID], "0", true) == 0)
						{
							Mensaje(playerid,-1, "No tienes la protecci�n de dos factores activada, puedes hacerlo en "CR"/est - Vincular discord"CB".");
						}
						else
						{
							format(User_Temp[playerid][DiscordID], 1, "0");
							mysql_format(Conecction, Query, sizeof Query, "UPDATE usuarios SET DiscordID = '0' WHERE ID = '%d' LIMIT 1", PlayerInfo[playerid][p_DBID]);
							mysql_tquery(Conecction, Query);
						}

					}
					
				}
    			MostrarConfig(playerid);
			    return 1;
			}
			return 1;
		}
        case LORO:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: MostrarDialog(playerid, LORO2, DIALOG_STYLE_INPUT, "Ense�ar frase al loro", "Ingresa una frase", "Aceptar", "Cancelar");
					case 1:
					{
					    if(PlayerTemp[playerid][StatusLoro] == 0) return Mensaje(playerid, -1, "El loro aun no ha aprendido ninguna frase para olvidarla.");
					    KillTimer(MensajeLoro[playerid]);
						Mensaje(playerid, -1, "El loro no hablar� hasta que le ense�es otra frase.");
						PlayerTemp[playerid][StatusLoro] = 0;
					}
				}
			}
		}
		case LORO2:
		{
			if(response)
			{
				if(slen > 2 && slen < 70)
				{
					if(PlayerTemp[playerid][StatusLoro] == 1) return Mensaje(playerid, -1, "El loro primero debe olvidar la frase anterior para aprender una nueva.");
					Mensaje(playerid, -1, "El loro aprendi� a repetir la frase.");
					format(TextoLoro[playerid], 71, inputtext);
					MensajeLoro[playerid] = SetTimerEx("TimerLoro", 300000, true, "i", playerid);
				    format(string, 100, "Loro de %s dice: %s", NombreJugador(playerid), TextoLoro[playerid]);
					ProxDetector(15.0, playerid, string, COLOR_VERDE,COLOR_VERDE,COLOR_VERDE,COLOR_VERDE,COLOR_VERDE);
					PlayerTemp[playerid][StatusLoro] = 1;
				}
				else return Mensaje(playerid, -1, "La cantidad de caracteres no puede ser inferior a 2 ni mayor a 70.");
			}
		}
		case ELEVADOR1: if(response) return SetPosEx(playerid, 1524.4839,-1677.8287,6.2188,270.1490,0,0);
		case ELEVADOR2: if(response) return SetPosEx(playerid, -1606.3933,672.0618,-4.9063,4.1497,0,0);
		case ELEVADOR3: if(response) return SetPosEx(playerid, 266.0548,115.5118,1004.6172,182.8972,10,1);
		case ELEVADOR4: if(response) return SetPosEx(playerid, 266.0548,115.5118,1004.6172,182.8972,10,5);
		case ELEVADOR5: if(response) return SetPosEx(playerid, 2268.2129,2449.2886,3.5313,183.3857,0,0);
		case ELEVADOR6: if(response) return SetPosEx(playerid, 218.8423,180.8687,1003.0313,177.2383,3,7);
		case ELEVADOR7: if(response) return SetPosEx(playerid,366.3190,173.8349,1040.1156,182.6975,5,5);
		case ELEVADOR8: if(response) return SetPosEx(playerid, 1652.4489,-1874.2292,-48.9124,182.2992,100,7);
		case ELEVADOR9: if(response) return SetPosEx(playerid, 1652.4489,-1874.2292,-48.9124,182.2992,100,5);
		case ELEVADOR10: if(response) return SetPosEx(playerid,-1263.5952,2097.1345,1246.5457,358.0495,13,1);
		case ELEVADOR30: if(response) return SetPosEx(playerid, 1652.4489,-1874.2292,-48.9124,182.2992,100,9);
		case ELEVADOR31: if(response) return SetPosEx(playerid, 1652.4489,-1874.2292,-48.9124,182.2992,100,10);
		case ELEVADOR32: if(response) return SetPosEx(playerid, 1652.4489,-1874.2292,-48.9124,182.2992,100,11);
		case ASCENSOR_E: if(response) SetPlayerPosAC(playerid,2116.6707,2416.5557,DarNivelEstacionamiento(listitem+1)),SetPlayerFacingAngle(playerid,93.8111);
        case LLAMAGRUA:
		{
			if(!response)
			{
			    new mensaje[70];
				format(mensaje, sizeof(mensaje), "%s (por celular) dice: No, muchas gracias.", NombreJugador(playerid));
			    ProxDetector(15.0, playerid, mensaje, COLORCARGO0,COLORCARGO0,COLORCARGO0,COLORCARGO0,COLORCARGO0);
			    ColgarLaLlamada(playerid);
			    return 0;
			}
			va_SendClientMessage(playerid,-1,"%s (por celular) dice: S�, por favor.", NombreJugador(playerid));
			SetTimerEx("LlamadaGrua2",2000,false,"d",playerid);
		}
		case LLAMAGRUA2:
		{
			if(!response)
			{
			    new mensaje[70];
				format(mensaje, sizeof(mensaje), "%s (por celular) dice: Perd�n, ya no lo necesito.", NombreJugador(playerid));
			    ProxDetector(15.0, playerid, mensaje, COLORCARGO0,COLORCARGO0,COLORCARGO0,COLORCARGO0,COLORCARGO0);
			    ColgarLaLlamada(playerid);
			    return 0;
			}
			switch(listitem)
            {
                case 0: va_SendClientMessage(playerid,-1,"%s (por celular) dice: Al estacionamiento registrado con anterioridad.", NombreJugador(playerid));
                case 1: va_SendClientMessage(playerid,-1,"%s (por celular) dice: Al estacionamiento municipal.", NombreJugador(playerid));
                case 2: va_SendClientMessage(playerid,-1,"%s (por celular) dice: A mi posici�n, por favor.", NombreJugador(playerid));
			}
			tipogruallama[playerid] = listitem+1;
			SetTimerEx("LlamadaGrua3",2000,false,"d",playerid);
		}
		case LLAMAGRUA3:
		{
			if(!response)
			{
			    new mensaje[70];
				format(mensaje, sizeof(mensaje), "%s (por celular) dice: Perd�n, no usar� el servicio.", NombreJugador(playerid));
			    ProxDetector(15.0, playerid, mensaje, COLORCARGO0,COLORCARGO0,COLORCARGO0,COLORCARGO0,COLORCARGO0);
			    ColgarLaLlamada(playerid);
			    return 0;
			}
			else
			{
				new car = ObtenerOrdenAuto(playerid,listitem);
				if(VehicleInfo[playerid][car][vModelo] > 0)
	  			{
					va_SendClientMessage(playerid,-1,"%s (por celular) dice: %s.",NombreJugador(playerid),Patente[playerid][car]);
					SetTimerEx("LlamadaGrua4",2000,false,"dd",playerid, car);
				}
				else Mensaje(playerid, -1, "{00d8ff}[Servicio de gr�a]"CB" Ang�lica: No tenemos ning�n registro de ese veh�culo, nos vemos."),ColgarLaLlamada(playerid);
			}
		}
		case FRECUENCIAS:
		{
			if(response)
			{
				new asd = Frecuencia[playerid];
				Frecuencia[playerid] = listitem+1;
    			if(asd == Frecuencia[playerid]) return Mensaje(playerid, -1, "Ya estas sintonizando esa frecuencia.");
    			else
    			{
					frecuencias[asd]--;
					format(string, sizeof(string), "%s ha cambiado la frecuencia de su radio comunicador.", NombreJugador(playerid));
					ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
					Mensaje(playerid, -1, "Cambiaste de frecuencia.");
					frecuencias[Frecuencia[playerid]]++;
				}
			}
		}
		case P_FIANZA:
		{
  			if(response)
		  	{
			    if(PlayerInfo[playerid][Moneda] < PRECIO_FIANZA) return va_SendClientMessage(playerid,-1,"Necesitas "CR"%d "Moneda1""CB" para poder pagar tu fianza.", PRECIO_FIANZA);
				new donde = random(6);
				switch(PlayerInfo[playerid][pTipoCarcel])
				{
					case 1:
					{
						switch(donde)
						{
							case 0: SetPosEx(playerid, 216.4100,120.2400,999.0156,0.0000,10,1);
							case 1: SetPosEx(playerid, 217.3244,120.3063,999.0156,6.6009,10,1);
							case 2: SetPosEx(playerid, 215.5035,120.2255,999.0156,355.9474,10,1);
							case 3: SetPosEx(playerid, 216.0696,121.0746,999.0156,355.9474,10,1);
							case 4: SetPosEx(playerid, 217.4385,120.7687,999.0156,355.9474,10,1);
							case 5: SetPosEx(playerid, 216.9519,118.9357,999.0156,2.6959,10,1);
						}
					}
					case 2:
					{
						switch(donde)
						{
							case 0: SetPosEx(playerid, 216.4100,120.2400,999.0156,0.0000,10,5);
							case 1: SetPosEx(playerid, 217.3244,120.3063,999.0156,6.6009,10,5);
							case 2: SetPosEx(playerid, 215.5035,120.2255,999.0156,355.9474,10,5);
							case 3: SetPosEx(playerid, 216.0696,121.0746,999.0156,355.9474,10,5);
							case 4: SetPosEx(playerid, 217.4385,120.7687,999.0156,355.9474,10,5);
							case 5: SetPosEx(playerid, 216.9519,118.9357,999.0156,2.6959,10,5);
						}
					}
					case 3:
					{
						switch(donde)
						{
							case 0: SetPosEx(playerid, 212.4893,158.3311,1003.0300,265.8078,3,7);
							case 1: SetPosEx(playerid, 212.3264,157.0358,1003.0300,270.1945,3,7);
							case 2: SetPosEx(playerid, 212.6126,159.4301,1003.0300,270.5078,3,7);
							case 3: SetPosEx(playerid, 211.6316,159.2158,1003.0234,270.5078,3,7);
							case 4: SetPosEx(playerid, 211.3360,158.4849,1003.0300,270.5078,3,7);
							case 5: SetPosEx(playerid, 211.4012,157.4245,1003.0300,270.5078,3,7);
						}
					}
					case 4:
				 	{
						switch(donde)
						{
							case 0: SetPosEx(playerid, 292.9334,1419.6272,10.1358,263.0111,0,0);
							case 1: SetPosEx(playerid, 292.3492,1418.9880,10.1810,263.0111,0,0);
							case 2: SetPosEx(playerid, 293.0168,1420.9564,10.1436,263.0111,0,0);
							case 3: SetPosEx(playerid, 293.6794,1419.9397,10.0793,263.0111,0,0);
							case 4: SetPosEx(playerid, 293.8986,1418.5115,10.0506,263.0111,0,0);
							case 5: SetPosEx(playerid, 294.7386,1419.3837,9.9930,263.0111,0,0);
			   			}
					}
				}
				PlayerInfo[playerid][pTipoCarcel] = 0;
				PlayerInfo[playerid][pTiempoCarcel] = 0;
				PlayerInfo[playerid][pTiempoJail] = 0;
				Esposando[playerid] = 0;
				StatusFC[playerid] = 0;
				Jail[playerid] = 0;
				San[playerid] = 0;
				CargandoEx(playerid);
                va_SendClientMessage(playerid, -1, "Pagaste "CR"%d "Moneda1""CB" por la fianza.",PRECIO_FIANZA);
                //QuitarDinero(playerid, PRECIO_FIANZA);
				PlayerInfo[playerid][Moneda] -= PRECIO_FIANZA;
		 	}
		}
		case DOMICILIO:
		{
			if(response)
			{
		 		new c;
			    if(PlayerInfo[playerid][Moneda] < 10) return Mensaje(playerid,-1,"Necesitas "CR"10"Moneda1""CB" para poder pagar domiciliaria.");
                Mensaje(playerid, -1, "Pagaste "CR"10"Moneda1""CB" por la prisi�n domiciliaria.");
                PlayerInfo[playerid][Moneda] -= 10;
			    for(new g = 0; g < MAX_PCASAS; g++)
			    {
			    	if(PlayerInfo[playerid][CasaID][g] > 0)
					{
						c = PlayerInfo[playerid][CasaID][g];
			    		break;
    				}
			    }
    			SetPosEx(playerid,PropInfo[c][pPosXS],PropInfo[c][pPosYS],PropInfo[c][pPosZS],PropInfo[c][pPosAS],PropInfo[c][pInteriorID],PropInfo[c][pVW]);
				PlayerInfo[playerid][pTipoCarcel] = 5;
			}
		}
		case VENDERCR:
        {
            if(response)
            {
          		va_SendClientMessage(playerid,-1,"Le ofreciste %d monedas tipo "Moneda4" a "CR"%s"CB" por "CR"$%d"CB".",CROfrecidos[LeOfreci[playerid]],NombreJugador(LeOfreci[playerid]),dineropedido[LeOfreci[playerid]]);
          		va_SendClientMessage(LeOfreci[playerid],-1,""CR"%s"CB" te ofrece %d monedas tipo "Moneda4" por "CR"$%d"CB", para aceptarla usa "CR"/aceptar "Moneda4"",NombreJugador(playerid),CROfrecidos[LeOfreci[playerid]],dineropedido[LeOfreci[playerid]]);
				DarOferta(playerid,LeOfreci[playerid]);
				AvisoVenta(playerid,LeOfreci[playerid],0,CROfrecidos[LeOfreci[playerid]],dineropedido[LeOfreci[playerid]]);
            }
        }
		case VENDERWZ:
        {
            if(response)
            {
          		va_SendClientMessage(playerid,-1,"Le ofreciste %d "Moneda1" a "CR"%s"CB" por "CR"$%d"CB".",EVOfrecidos[LeOfreci[playerid]],NombreJugador(LeOfreci[playerid]),dineropedido[LeOfreci[playerid]]);
          		va_SendClientMessage(LeOfreci[playerid],-1,""CR"%s"CB" te ofrece %d "Moneda1" por "CR"$%d"CB", para aceptarla usa "CR"/aceptar "Moneda1"",NombreJugador(playerid),EVOfrecidos[LeOfreci[playerid]],dineropedido[LeOfreci[playerid]]);
				DarOferta(playerid,LeOfreci[playerid]);
				AvisoVenta(playerid,LeOfreci[playerid],4,EVOfrecidos[LeOfreci[playerid]],dineropedido[LeOfreci[playerid]]);
            }
        }
		case GPS5:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: PosicionGPS(playerid,1827.7954,-1842.4980,13.5781,5);
					case 1: PosicionGPS(playerid,-2443.0625,742.8177,35.0156,5);
				}
			}
		}
		case GPS6:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: PosicionGPS(playerid,2237.5837,-2214.2102,13.5469,5);
					case 1: PosicionGPS(playerid,-1722.7408,-65.1257,3.5547,5);
					case 2: PosicionGPS(playerid,1189.0481,-1361.8744,13.5550,5);
					case 3: PosicionGPS(playerid,1743.3903,-1860.9901,13.5781,5);
					case 4: PosicionGPS(playerid,2221.8628,-1715.7574,13.3314,5);
					case 5: PosicionGPS(playerid,121.1386,-153.7627,1.5781,5);
					case 6: PosicionGPS(playerid,-174.5626,-1623.9821,3.0859,5);
					case 7: PosicionGPS(playerid,642.6858,-1357.0409,13.5688,5);
					case 8: PosicionGPS(playerid,1387.1842,1181.7040,10.6848,5);
					case 9: PosicionGPS(playerid,-381.0360,2206.9233,42.3689,5);
					case 10: PosicionGPS(playerid,2785.7610,-2572.1555,3.1600,5);
					case 11: PosicionGPS(playerid,-2186.6309,714.9852,53.8988,5);
					case 12: PosicionGPS(playerid,2017.9595,1154.9974,10.8203,5);
				}
			}
		}
		case GPS7:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: PosicionGPS(playerid,1793.8019,-1278.0016,13.4688,5);
					case 1: PosicionGPS(playerid,1535.3855,-1675.2513,13.3828,5);
					case 2: PosicionGPS(playerid,674.9962,-593.4341,16.3281,5);
					case 3: PosicionGPS(playerid,1451.64, -2287.09, 13.5469,5);
				}
			}
		}
		case GPS8:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: PosicionGPS(playerid,2112.9199,-1217.4652,23.8047,5);
					case 1: PosicionGPS(playerid,1451.8942,-1155.9928,23.6642,5);
					case 2: PosicionGPS(playerid,2245.3401,-1661.1309,15.4690,5);
					case 3: PosicionGPS(playerid,454.1436,-1501.9719,30.8730,5);
					case 4: PosicionGPS(playerid,448.6999,-1479.9546,30.6317,5);
					case 5: PosicionGPS(playerid,507.7714,-1357.4158,15.9609,5);
				}
			}
		}
        case GPS9:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: PosicionGPS(playerid,1631.9644,-1163.4921,23.8949,0);
				}
			}
		}
		case REGLAS:
		{
			if(response)
			{
				new string2[1200];
				string2=""CR"Usar canales correspondientes\n"CB"Hay 2 tipos de canales {009BE4}Dentro del personaje (DP)"CB" y {009BE4}Fuera del personaje (FP)"CB", es importante saber diferenciarlos y respetarlos.\n\n- Los {009BE4}canales DP"CB" son todos aquellos que usamos dentro del Rol del personaje, el chat normal, el chat\npor radio/telefono, por mensaje de texto y aquellos para indicar acciones o resaltar ("CR"/y /g /p /s"CB") ("CR"!"CB" en chat bandas)\n\n- {009BE4}Los canales FP"CB" son todos aquellos que se utilizan para hablar estando fueral del personaje, estos\nincluyen al chat de ayuda ("CR"/n"CB"), en el canal de reportes ("CR"/reportar"CB") y el comando m�s comun para la gente cercana "CR"/b"CB" (!! en el chat de bandas).\n\n- {009BE4}Informaci�n Fuera del Personaje (IFP)"CB": Esta informaci�n es aquella que sabemos, pero que {009BE4}DP"CB", no podemos utilizar, ejemplo:\nTodos vemos el nombre de las personas arrriba de ellos, pero esto no quiere decir que {009BE4}DP"CB" lo sepamos,\nsi esta persona nunca nos dijo su nombre, no lo conocemos y por lo tanto, no podemos llamarla por tal nombre.\n";
				MostrarDialog(playerid, REGLAS2, DIALOG_STYLE_MSGBOX, "Reglas del servidor", string2, "Siguiente","");
			}
		}
		case REGLAS2:
		{
			if(response)
			{
				new string2[700];
				string2=""CR"Agredir sin razon (ASR)\n"CB"Esta completamente prohibido el {009BE4}ASR"CB" ya sea golpeando con pu�os,\narmas blancas, disparando o con un veh�culo\n\n"CR"Acciones imposibles (AI)\n"CB"Esta implica realizar acciones que no son realistas, y esto es totalmente prohibido.\nEjemplo: Ir parado arriba de un auto, empujar un cami�n corriendo, entre otros.\n\n"CR"Atropellar con veh�culo (AV)\n"CB"Esta prohibido chocar con el veh�culo intencionalmente para matar o herir a alguien,\nya sea manteniendo el auto arriba de la persona hasta que muera, o pis�ndolo varias veces hasta matarlo.";
				MostrarDialog(playerid, REGLAS3, DIALOG_STYLE_MSGBOX, " Reglas del juego",string2,"Siguiente","");
			}
		}
		case REGLAS3:
		{
			if(response)
			{
				new string2[900];
				string2=""CR"Esta no son todas las reglas, para ver todas las reglas visita nuestro discord: "WebName"/discord.";
				MostrarDialog(playerid, REGLAS4, DIALOG_STYLE_MSGBOX, " Reglas del juego",string2,"Aceptar","");
			}
		}
		case COMPRARLICENCIA:
		{
			if(response)
			{
				if(PlayerInfo[playerid][Moneda] < 10) return Mensaje(playerid,-1,"Necesitas 50 "Moneda1" para comprar la licencia.");
                PlayerInfo[playerid][Moneda] -= 10;
                PlayerInfo[playerid][pLicencia] = 1;
				Mensaje(playerid, -1, "Compraste una licencia de piloto por "CR"10"Moneda1""CB", ahora puedes manejar helicopteros.");
			}
		}
		case OBJETOS1:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						if(PlayerInfo[playerid][jDinero] < 19500) return Mensaje(playerid,-1,"Necesitas "CR"$19.500"CB" para poder comprar una guitarra.");
						QuitarDinero(playerid, 19500);
						Objeto[playerid] = 19317;
						Mensaje(playerid, -1, "Compraste una guitarra por "CR"19500$");
                        SetPlayerAttachedObject(playerid,4,19317,6,0.103999,0.036000,-0.127999,175.999954,-157.499877,174.199905,0.620001,0.515000,0.856000);
					}
					case 1:
					{
						if(PlayerInfo[playerid][jDinero] < 19500) return Mensaje(playerid,-1,"Necesitas "CR"$19.500"CB" para poder comprar una tabla de surf t1.");
						QuitarDinero(playerid, 19500);
						Objeto[playerid] = 2404;
						Mensaje(playerid, -1, "Compraste una Tabla de Surf T1 por "CR"19500$");
                        SetPlayerAttachedObject(playerid,4,2404,6,0.103999,0.036000,-0.127999,175.999954,-157.499877,174.199905,0.620001,0.515000,0.856000);
					}
					case 2:
					{
						if(PlayerInfo[playerid][jDinero] < 19500) return Mensaje(playerid,-1,"Necesitas "CR"$19.500"CB" para poder comprar un maletin.");
						QuitarDinero(playerid, 19500);
						Objeto[playerid] = 1210;
						Mensaje(playerid, -1, "Compraste un Maletin por "CR"19500$");
                        SetPlayerAttachedObject(playerid, 4, 1210, 6, 0.289999, 0.079999, -0.000000, 0.000000, -100.000000, 1.000000);
					}
					case 3:
					{
						if(PlayerInfo[playerid][jDinero] < 19500) return Mensaje(playerid,-1,"Necesitas "CR"$19.500"CB" para poder comprar una tabla de surf t2.");
						QuitarDinero(playerid, 19500);
						Objeto[playerid] = 2405;
						Mensaje(playerid, -1, "Compraste una Tabla de Surf T2 por "CR"19500$");
                        SetPlayerAttachedObject(playerid,4,2405,6,0.103999,0.036000,-0.127999,175.999954,-157.499877,174.199905,0.620001,0.515000,0.856000);
					}
	        		case 4:
	        		{
                        if(PlayerInfo[playerid][jDinero] < 19500) return Mensaje(playerid,-1,"Necesitas "CR"$19.500"CB" para poder comprar un bajo.");
						QuitarDinero(playerid, 19500);
						Objeto[playerid] = 19318;
						Mensaje(playerid, -1, "Compraste un Bajo por "CR"19500$");
						SetPlayerAttachedObject(playerid,4,19318,6,0.103999,0.036000,-0.127999,175.999954,-157.499877,174.199905,0.620001,0.515000,0.856000);
	        		}
				}
			}
			return 1;
		}
		case HERRAMIENTAS:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
					    if(Objeto[playerid] > 0) return Mensaje(playerid,-1,"Ya tienes un objeto en tu mano, usa "CR"/tirar objeto"CB".");
					    if(PlayerInfo[playerid][jDinero] < 20) return Mensaje(playerid,-1,"Necesitas "CR"$20"CB" para poder comprar un martillo.");
						Mensaje(playerid,-1,"Compraste un martillo.");
						PlayerInfo[playerid][jMartillo] = 1;
						SetPlayerAttachedObject(playerid,4,18635,6,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000); //Martillo
						Objeto[playerid] = 18635;
						QuitarDinero(playerid, 20);
						return 1;
					}
					case 1:
					{
					    if(Objeto[playerid] > 0) return Mensaje(playerid,-1,"Ya tienes un objeto en tu mano, usa "CR"/tirar objeto"CB".");
					    if(PlayerInfo[playerid][jDinero] < 25) return Mensaje(playerid,-1,"Necesitas "CR"$25"CB" para poder comprar un destornillador.");
						Mensaje(playerid,-1,"Compraste un destornillador.");
						PlayerInfo[playerid][jDestornillador] = 2;
						SetPlayerAttachedObject(playerid,4,18644,6,0.073999,0.022000,0.000000,-167.300018,0.000000,0.000000,1.000000,1.000000,1.000000); //Destornillador
						Objeto[playerid] = 18644;
						QuitarDinero(playerid, 25);
						return 1;
					}
					case 2:
					{
					    if(Objeto[playerid] > 0) return Mensaje(playerid,-1,"Ya tienes un objeto en tu mano, usa "CR"/tirar objeto"CB".");
					    if(PlayerInfo[playerid][jDinero] < 60) return Mensaje(playerid,-1,"Necesitas "CR"$60"CB" para poder comprar una barreta.");
						Mensaje(playerid,-1,"Compraste una barreta.");
						PlayerInfo[playerid][jBarreta] = 3;
						SetPlayerAttachedObject(playerid,4,18634,6,0.074999,0.014999,-0.002000,90.999969,-104.199966,7.999999,1.000000,1.000000,1.000000); //Barreta
						Objeto[playerid] = 18634;
						QuitarDinero(playerid, 60);
						return 1;
					}
					case 3:
					{
					    if(PlayerInfo[playerid][jDinero] < 120) return Mensaje(playerid,-1,"Necesitas "CR"$120"CB" para poder comprar un balde.");
						Mensaje(playerid,-1,"Compraste un balde.");
						PlayerInfo[playerid][jBalde] = 4;
						QuitarDinero(playerid, 120);
						return 1;
					}
				}
			}
		}
		case REPORTSMENU:
		{
			if(response)
			{
				if(CancelReport[playerid] == listitem) return 1;
				new reportid = ListItemReportId[playerid][listitem];
				if(Reports[reportid][BeingUsed] == 0) return Mensaje(playerid, COLOR_GREY, "Ese reporte ya fue revisado!");
				if(!IsPlayerConnected(Reports[reportid][ReportFrom]))
				{
					Mensaje(playerid, COLOR_GREY, "El que report� se ha desconectado!");
					Reports[reportid][ReportFrom] = 999;
					Reports[reportid][BeingUsed] = 0;
					return 1;
				}
				foreach(new i : Admin)
				{
					if(PlayerInfo[i][pAdmin] > 2 && VerAdmin[i] == 1)
					{
						if(PlayerTemp[playerid][pt_TempName]) va_SendClientMessage(i,0xF00000FF,"Un Admin"CB" acept� el reporte de {FF3300}%s"CB" (ID: %i a ID: %i, #%i).", NombreJugador(Reports[reportid][ReportFrom]), Reports[reportid][ReportFrom], Reports[reportid][ReportadoID], reportid);
						else va_SendClientMessage(i,0xF00000FF,"%s"CB" acept� el reporte de {FF3300}%s"CB" (ID: %i a ID: %i, #%i).", NombreJugador(playerid), NombreJugador(Reports[reportid][ReportFrom]), Reports[reportid][ReportFrom], Reports[reportid][ReportadoID], reportid);
    	    			IDReporte[playerid] = Reports[reportid][ReportadoID];
    	    			format(IDReporteMensaje[playerid], 150, Reports[reportid][Report]);
					}
				}
				MensajeDiscord(NombreJugador(playerid),"Ha aceptado un reporte", WEBHOOK_ACTIVIDAD_STAFF);
				//Spectear(playerid, IDReporte[playerid]);
    			va_SendClientMessage(playerid,-1,"Usa el comando {F4FA58}/spec %d"CB" para verificar el estado del jugador reportado.", IDReporte[playerid]);
				if(PlayerTemp[playerid][pt_TempName]) Mensaje(Reports[reportid][ReportFrom], -1,""CR"Un Administrador est� viendo tu reporte.");
				else va_SendClientMessage(Reports[reportid][ReportFrom], -1,""CR"El Administrador %s est� viendo tu reporte.", NombreJugador(playerid));
				Reports[reportid][CheckingReport] = playerid;
				Reports[reportid][BeingUsed] = 0;
			}
			else
			{
				if(CancelReport[playerid] == listitem) return 1;
				new reportid = ListItemReportId[playerid][listitem];
				if(Reports[reportid][BeingUsed] == 0) return Mensaje(playerid, COLOR_GREY, "Ese reporta ya fue revisado!");
				if(!IsPlayerConnected(Reports[reportid][ReportFrom]))
				{
					Mensaje(playerid, COLOR_GREY, "El que report� se ha desconectado!");
					Reports[reportid][ReportFrom] = 999;
					Reports[reportid][BeingUsed] = 0;
					return 1;
				}
				foreach(new i : Admin)
				{
					if(PlayerInfo[i][pAdmin] > 2 && VerAdmin[i] == 1)
					{
						if(PlayerTemp[playerid][pt_TempName]) va_SendClientMessage(i,0xF00000FF,"Un Admin"CB" rechaz� el reporte de {FF3300}%s"CB" (ID:%d) (#%i).", NombreJugador(Reports[reportid][ReportFrom]), Reports[reportid][ReportFrom], reportid);
						else va_SendClientMessage(i,0xF00000FF,"%s"CB" rechaz� el reporte de {FF3300}%s"CB" (ID:%d) (#%i).", NombreJugador(playerid), NombreJugador(Reports[reportid][ReportFrom]), Reports[reportid][ReportFrom], reportid);
    	    			IDReporte[playerid] = Reports[reportid][ReportadoID];
    	    			format(IDReporteMensaje[playerid], 150, Reports[reportid][Report]);
					}
				}
				if(PlayerTemp[playerid][pt_TempName]) Mensaje(Reports[reportid][ReportFrom], -1,"{FF3300}Un Administrador ha rechazado tu reporte.");
				else va_SendClientMessage(Reports[reportid][ReportFrom], -1,"{FF3300}El administrador %s ha rechazado tu reporte.", NombreJugador(playerid));
				MensajeDiscord(NombreJugador(playerid),"Ha rechazado un reporte", WEBHOOK_ACTIVIDAD_STAFF);
				Reports[reportid][ReportFrom] = 999;
				Reports[reportid][BeingUsed] = 0;
				new reportdialog[3000], itemid = 0;
				for(new i = 0; i < MAX_REPORTS; i++)
				{
					if(Reports[i][BeingUsed] == 1 && itemid < 100)
					{
						ListItemReportId[playerid][itemid] = i;
						itemid++;
						format(reportdialog, sizeof(reportdialog), "%s#%i (%ds) ID:%i a ID:%i | R: %s", reportdialog, i, gettimeVariable - Reports[i][TiempoReport], Reports[i][ReportFrom], Reports[i][ReportadoID], Reports[i][Report]);
						format(reportdialog, sizeof(reportdialog), "%s\n", reportdialog);
					}
				}
				CancelReport[playerid] = itemid;
				format(reportdialog, sizeof(reportdialog), "%s\n", reportdialog);
				format(reportdialog, sizeof(reportdialog), "%sSalir", reportdialog);
				MostrarDialog(playerid, REPORTSMENU, DIALOG_STYLE_LIST, "Reportes", reportdialog, "Aceptar", "Rechazar");
			}
		}
		case ENTREGARSE:
		{
			if(response)
			{
				new dinero = 0,cargos;
				switch(PlayerInfo[playerid][pCargos])
				{
					case 1: dinero = 500,cargos = 0;
					case 2: dinero = 1000,cargos = 1;
					case 3: dinero = 1500,cargos = 2;
					case 4: dinero = 2000,cargos = 3;
					case 5: dinero = 2500,cargos = 4;
				}
				if(dinero != 0)
				{
					if(PlayerInfo[playerid][jDinero] < dinero) return va_SendClientMessage(playerid,-1,"Necesitas "CR"$%s"CB" para poder pagar la fianza.",ConvertirNumero(dinero));
				    QuitarDinero(playerid, dinero);
					DarEstrella(playerid, cargos);
					va_SendClientMessage(playerid, -1, "Pagaste la fianza de "CR"$%s"CB" y se te redujo los cargos.",ConvertirNumero(dinero));
					if(dinero == 500) return 1;
					Jail[playerid] = 1;
				}
				SetTimerEx("Encerrando",500,false,"dd",playerid,-1);
   			}
		}
		case BUSCARCOCHE:
		{
		    if(response)
			{
			    switch(listitem)
				{
					case 0: MostrarDialog(playerid, BUSCARCOCHE2, DIALOG_STYLE_INPUT, "Buscar informaci�n:", "Patente del veh�culo:", "Buscar", "Cancelar");
				}
   			}
		}
		case BUSCARCOCHE2:
		{
		    if(response)
			{
				new str[50], modelo;
				ObtenerVehiculo(playerid, inputtext);
				modelo = GetVehicleModel(AutoBuscado[playerid]);
				if(AutoBuscado[playerid] != 0)
			    {
					format(str, sizeof(str), "%s (%s) - Due�o: %s.", NombreAuto[modelo-400], PatenteBuscada[playerid], NombreJugador(JugadorBuscado[playerid]));
					MostrarDialog(playerid, BUSCARCOCHE3, DIALOG_STYLE_LIST, "Informaci�n del veh�culo", str, "Opciones", "Salir");
				}
   			}
		}
		case BUSCARCOCHE3:
		{
		    if(response) MostrarDialog(playerid, BUSCARCOCHE4, DIALOG_STYLE_LIST, "Opciones", "Localizar\nInformar como veh�culo robado", "Aceptar", "Cancelar");
		}
		case BUSCARCOCHE4:
		{
		    if(response)
			{
				switch(listitem)
				{
				    case 0:
					{
						new modelo, zone[MAX_ZONE_NAME];
						modelo = GetVehicleModel(AutoBuscado[playerid]);
						GetCar3DZone(AutoBuscado[playerid], zone, sizeof(zone));
						va_SendClientMessage(playerid,-1, "Detalles [ Veh�culo: "CR"%s "CB"| Patente: "CR"%s"CB" | Localizaci�n: {2EA3F5}%s"CB" ]", NombreAuto[modelo-400], PatenteBuscada[playerid], zone);
						Mensaje(playerid,-1,""CR"Se ha marcado en el mapa la ubicaci�n actual del veh�culo.");
						new Float:x,Float:y,Float:z;
						GetVehiclePos(AutoBuscado[playerid], x,y,z);
						CrearCheckpoint(playerid,x,y,z, 7.0);
	 				}
	 				case 1:
	 				{
	 				    new modelo, mensaje[150];
	 				    modelo = GetVehicleModel(AutoBuscado[playerid]);
	 				    format(mensaje, 150,"{3399FF}[Central de Polic�a]"CB" reportando: Se busca %s robado, patente %s.", NombreAuto[modelo-400], PatenteBuscada[playerid]);
						SendRadioMessage(1,-1,mensaje,INVALID_PLAYER_ID, 1);
						SendRadioMessage(2,-1,mensaje,INVALID_PLAYER_ID, 1);
						ReportCrimen(playerid,5);
						new Float:x,Float:y,Float:z;
						GetVehiclePos(AutoBuscado[playerid], x,y,z);
						CrearCheckpoint(playerid,x,y,z, 7.0);
	 				}
 				}
   			}
   			AutoBuscado[playerid] = 0;
		}
		case GPS2:
		{
			if(response)
			{
				new car = ObtenerOrdenAuto(playerid,listitem);
				if(GetVehicleInterior(autos[car][playerid]) == 4)
				{
					for(new c = 0; c < MAX_PCASAS; c++)
					{
						if(GetVehicleVirtualWorld(autos[car][playerid]) == PlayerInfo[playerid][CasaID][c]+1)
						{
							Mensaje(playerid,-1,"Tu veh�culo se encuentra dentro de un garaje.");
							Mensaje(playerid,-1,"Se ha marcado en el mapa la ubicaci�n de entrada del mismo.");
							CrearCheckpoint(playerid,PropInfo[PlayerInfo[playerid][CasaID][c]][pGX],PropInfo[PlayerInfo[playerid][CasaID][c]][pGY],PropInfo[PlayerInfo[playerid][CasaID][c]][pGZ],5.0);
							return 1;
						}
					}
				}
				new Float:x,Float:y,Float:z,modelo;
				modelo = GetVehicleModel(autos[car][playerid]);
				GetVehiclePos(autos[car][playerid], x,y,z);
				if(GetVehicleVirtualWorld(autos[car][playerid]) > 0)
				{
					for(new e = 1; e < MAX_ESTACIONA; e++)
					{
						if(GetVehicleInterior(autos[car][playerid]) == InfoEst[e][estInt] && GetVehicleVirtualWorld(autos[car][playerid]) == InfoEst[e][estVirW])
						{
							if(GetVehicleInterior(autos[car][playerid]) == 100 && GetVehicleVirtualWorld(autos[car][playerid]) == 4) va_SendClientMessage(playerid,-1,"El veh�culo se encuentra en el {8baab7}nivel %d"CB" del estacionamiento de "CR"Easter Basin Docks"CB".",ObtenerNivelEsta(z));
							else Mensaje(playerid,-1,"Tu veh�culo se encuentra dentro de un estacionamiento.");
							Mensaje(playerid,-1,"Se ha marcado en el mapa la ubicaci�n de entrada del mismo.");
							CrearCheckpoint(playerid,InfoEst[e][estX],InfoEst[e][estY],InfoEst[e][estZ],5.0);
							return 1;
						}
					}
				}
				if(GetVehicleInterior(autos[car][playerid]) == 0 && GetVehicleVirtualWorld(autos[car][playerid]) == 0)
				{
					CrearCheckpoint(playerid,x,y,z, 5.0);
					new zone[MAX_ZONE_NAME];
					GetCar3DZone(autos[car][playerid], zone, sizeof(zone));
					Mensaje(playerid,-1,""CR"Se ha marcado en el mapa la ubicaci�n actual del veh�culo.");
 					va_SendClientMessage(playerid,-1, "Detalles [ Veh�culo: "CR"%s "CB"| Patente: "CR"%s"CB" | Localizaci�n: {2EA3F5}%s"CB" ]", NombreAuto[modelo-400], Patente[playerid][car], zone);
					Localizando[playerid] = true;
					return 1;
				}
				else return Mensaje(playerid,-1,"Ocurri� un error al localizar tu veh�culo, por favor utiliza "CR"/servicio grua - estacionamiento municipal.");
			}
		}
		


			/*	case DPRENDAS:
		{
			if(!response) return 1;
			SlotP[playerid] = listitem+1;
			switch(listitem)
			{
				case 0:
				{
					if(PlayerInfo[playerid][pObj][0] == 0 || PlayerInfo[playerid][pObj][0] == INVALID_TOY_ID) return Mensaje(playerid,-1,"Prenda inv�lida.");
					if(UsandoObj[0][playerid] == 0) { format(string,700,"Vender prenda ({FFCA00}10"Moneda1""CB")"); }
					if(UsandoObj[0][playerid] == 1) { format(string,700,"Vender prenda ({FFCA00}10"Moneda1""CB")"); }
					MostrarDialog(playerid,DPRENDAS2,DIALOG_STYLE_LIST,GetWeaponNameEx(PlayerInfo[playerid][pObj][0]),string,"Elegir","Cerrar");
				}
				case 1:
				{
					if(PlayerInfo[playerid][pObj][1] == 0 || PlayerInfo[playerid][pObj][1] == INVALID_TOY_ID) return Mensaje(playerid,-1,"Prenda inv�lida.");
					if(UsandoObj[1][playerid] == 0) { format(string,700,"Vender prenda ({FFCA00}10"Moneda1""CB")"); }
					if(UsandoObj[1][playerid] == 1) { format(string,700,"Vender prenda ({FFCA00}10"Moneda1""CB")"); }
					MostrarDialog(playerid,DPRENDAS2,DIALOG_STYLE_LIST,GetWeaponNameEx(PlayerInfo[playerid][pObj][1]),string,"Elegir","Cerrar");
				}
				case 2:
				{
					if(PlayerInfo[playerid][pObj][2] == 0 || PlayerInfo[playerid][pObj][2] == INVALID_TOY_ID) return Mensaje(playerid,-1,"Prenda inv�lida.");
					if(UsandoObj[2][playerid] == 0) { format(string,700,"Vender prenda ({FFCA00}10"Moneda1""CB")"); }
					if(UsandoObj[2][playerid] == 1) { format(string,700,"Vender prenda ({FFCA00}10"Moneda1""CB")"); }
					MostrarDialog(playerid,DPRENDAS2,DIALOG_STYLE_LIST,GetWeaponNameEx(PlayerInfo[playerid][pObj][2]),string,"Elegir","Cerrar");
				}
				case 3:
				{
					if(PlayerInfo[playerid][pObj][3] == 0 || PlayerInfo[playerid][pObj][3] == INVALID_TOY_ID) return Mensaje(playerid,-1,"Prenda inv�lida.");
					if(UsandoObj[3][playerid] == 0) { format(string,700,"Vender prenda ({FFCA00}10"Moneda1""CB")"); }
					if(UsandoObj[3][playerid] == 1) { format(string,700,"Vender prenda ({FFCA00}10"Moneda1""CB")"); }
					MostrarDialog(playerid,DPRENDAS2,DIALOG_STYLE_LIST,GetWeaponNameEx(PlayerInfo[playerid][pObj][3]),string,"Elegir","Cerrar");
				}
			}
		}
		case DPRENDAS2:
		{
			if(!response) return 1;
			new pName[50];
			GetPlayerName(playerid,pName,24);
			if(SlotP[playerid] == 1)
			{

						if(IsPlayerAttachedObjectSlotUsed(playerid,0))
						{
							RemovePlayerAttachedObject(playerid,0);
							UsandoP[playerid]--;
						}
						mysql_format(Conecction, Query, sizeof(Query), "DELETE FROM `prendas` WHERE `Propietario`='%s' AND `Slot`='1'",pName);
						mysql_pquery(Conecction, Query);
						PlayerInfo[playerid][pObj] = INVALID_TOY_ID;
						PlayerInfo[playerid][Moneda] += 10;
						Mensaje(playerid,-1,"Has vendido esta prenda por {FFCA00}10"Moneda1""CB".");
						NPrendas[playerid]--;
						UsandoObj[playerid][0] = 0;
			}
			if(SlotP[playerid] == 2)
			{
						if(IsPlayerAttachedObjectSlotUsed(playerid,1))
						{
							RemovePlayerAttachedObject(playerid,1);
							UsandoP[playerid]--;
						}
						mysql_format(Conecction, Query, sizeof(Query), "DELETE FROM `prendas` WHERE `Propietario`='%s' AND `Slot`='2'",pName);
						mysql_pquery(Conecction, Query);
						PlayerInfo[playerid][pObj][1] = INVALID_TOY_ID;
						PlayerInfo[playerid][Moneda] += 10;
						Mensaje(playerid,-1,"Has vendido esta prenda por {FFCA00}10"Moneda1""CB".");
						NPrendas[playerid]--;
						UsandoObj[playerid][1] = 0;
			}
			if(SlotP[playerid] == 3)
			{

						if(IsPlayerAttachedObjectSlotUsed(playerid,2))
						{
							RemovePlayerAttachedObject(playerid,2);
							UsandoP[playerid]--;
						}
						mysql_format(Conecction, Query, sizeof(Query), "DELETE FROM `prendas` WHERE `Propietario`='%s' AND `Slot`='3'",pName);
						mysql_pquery(Conecction, Query);
						PlayerInfo[playerid][pObj][2] = INVALID_TOY_ID;
						PlayerInfo[playerid][Moneda] += 10;
						Mensaje(playerid,-1,"Has vendido esta prenda por {FFCA00}10"Moneda1""CB".");
						NPrendas[playerid]--;
						UsandoObj[playerid][2] = 0;
			}
			if(SlotP[playerid] == 4)
			{

						if(IsPlayerAttachedObjectSlotUsed(playerid, 3))
						{
							RemovePlayerAttachedObject(playerid, 3);
							UsandoP[playerid]--;
						}
						mysql_format(Conecction, Query, sizeof(Query), "DELETE FROM `prendas` WHERE `Propietario`='%s' AND `Slot`='4'",pName);
						mysql_pquery(Conecction, Query);
						PlayerInfo[playerid][pObj][3] = INVALID_TOY_ID;
						PlayerInfo[playerid][Moneda] += 10;
						Mensaje(playerid,-1,"Has vendido esta prenda por {FFCA00}10"Moneda1""CB".");
						NPrendas[playerid]--;
						UsandoObj[playerid][3] = 0;
				}
		}*/
		case PRODUCTOS_FARMACIA:
  		{
		    if(response == 1)
		    {
	   	        switch(listitem)
	   	        {
			        case 0:
			        {
			            if(PlayerInfo[playerid][jDinero] < 40000) return Mensaje(playerid,-1,"No tienes el dinero suficiente ($40.000) para comprar este producto.");


			            PlayerInfo[playerid][pMedicamentos] += 100;
			            Mensaje(playerid,-1,"Compraste un pack de {CC9933}100 medicamentos "CB"por {66FF00}$40.000"CB".");
			            QuitarDinero(playerid, 40000);
			        }
			        case 1:
			        {
			            if(PlayerInfo[playerid][jDinero] < 7250) return Mensaje(playerid,-1,"No tienes el dinero suficiente para comprar este producto.");
	                    if(PlayerInfo[playerid][pKitm] > 2 && PlayerInfo[playerid][VIP] != 3) return Mensaje(playerid, -1, "Solo puedes tener {FF9933}3 kits m�dico "CB"en tu inventario.");
			            if (PlayerInfo[playerid][pKitm] > 9 && PlayerInfo[playerid][VIP] == 3) return Mensaje(playerid, -1, "Solo puedes tener {FF9933}10 kits m�dico "CB"en tu inventario.");
						format(string, sizeof(string), "%s compr� algo de la farmacia", PlayerInfo[playerid][NombreTemporal]);
			            ProxDetector(30.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
			            PlayerInfo[playerid][pKitm] += 1;
			            Mensaje(playerid,-1,"Compraste un {CC9933}kit m�dico "CB"por {66FF00}$7.250"CB".");
			            QuitarDinero(playerid, 7250);
			        }
			    }
		    }
		}
		case GPS:
		{
			if(response)
			{
				switch(listitem)
				{
				    case 0:
					{
						format(string, sizeof(string), "Concesionaria Unity (Veh�culos baratos)\nConcesionaria 2 Grotti\nConcesionaria Coutt And Schutz\nConcesionaria Wang Cars (Los Santos)\nConcesionaria Wang Cars (San Fierro)");
						MostrarDialog(playerid,GPS3, DIALOG_STYLE_LIST,"Selecciona un concesionario",string,"Ver mapa","Cerrar");
						return 1;
					}
					case 1:
					{
						format(string, sizeof(string), "Banco central de Los Santos\nBanco central de San Fierro\nBanco central de Las Venturas");
						MostrarDialog(playerid,GPS4, DIALOG_STYLE_LIST,"Selecciona un banco",string,"Ver mapa","Cerrar");
						return 1;
					}
					case 2:
					{
						format(string, sizeof(string), "24/7 en Los Santos\n24/7 en San Fierro");
						MostrarDialog(playerid,GPS5, DIALOG_STYLE_LIST,"Selecciona una tienda",string,"Ver mapa","Cerrar");
						return 1;
					}
					case 3:
					{
						format(string, sizeof(string), "Fabricante de armas\nCamionero\nM�dico\nTaxista\nGuardaespaldas\nMec�nico\nBasurero\nLocutor de radio\nTransportista\nMinero\nPescador\nCriminal\nProstituci�n");
						MostrarDialog(playerid,GPS6, DIALOG_STYLE_LIST,"Selecciona un trabajo",string,"Ver mapa","Cerrar");
						return 1;
					}
					case 4:
					{
						format(string, sizeof(string), "Edificio municipal de Los Santos\nDepartamento de polic�a de Los Santos\nDepartamento Militar\nEscuela de aviaci�n");
						MostrarDialog(playerid,GPS7, DIALOG_STYLE_LIST,"Selecciona un lugar",string,"Ver mapa","Cerrar");
						return 1;
					}
					case 5:
					{
						format(string, sizeof(string), "Sub Urban\nZIP\nBinco\nVictim\nDidier Sachz\nPro Laps");
						MostrarDialog(playerid,GPS8, DIALOG_STYLE_LIST,"Selecciona una tienda",string,"Ver mapa","Cerrar");
						return 1;
					}
					case 6:
					{
						format(string, sizeof(string), "Taller Tunning\nFerreter�a Los Santos\nCentro de cultivo");
						MostrarDialog(playerid,L_IMPORTANTES, DIALOG_STYLE_LIST,"Selecciona un lugar de inter�s",string,"Seleccionar","Cerrar");
						return 1;

					}
					case 7:
					{
					    PosicionGPS(playerid, 687.6191,-1596.0323,14.1213, 5);
					
					}
					case 8: PaintCercano(playerid);
					case 9: AbrirGPS(playerid);
				}
			}
		}
		case L_IMPORTANTES:
		{
			if(response)
			{
				switch(listitem)
				{
				    case 0: PosicionGPS(playerid, 1147.5715,1351.7931,10.5474, 5); //TUNING
				    case 1: PosicionGPS(playerid, 2431.6504,-1777.9565,13.5516, 5); //ferreteria
				    case 2: MostrarDialog(playerid,C_GPS, DIALOG_STYLE_LIST,"Selecciona un lugar","Centro de cultivo Leafy Hollow\nCentro de cultivo The Farm","Seleccionar","Cerrar");
				}
            }
        }
  		case C_GPS:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: PosicionGPS(playerid,-1101.1317,-1619.5129,76.3672, 5);
					case 1: PosicionGPS(playerid,-1072.7458,-1218.5299,129.2188, 5);
				}
			}
		}
		case GPS3:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: PosicionGPS(playerid,1653.3037,-1893.1719,13.5521, 5);
					case 1: PosicionGPS(playerid,554.2869,-1266.4493,17.2422, 5);
					case 2: PosicionGPS(playerid,2127.0918,-1124.2750,25.4550, 5);
					case 3: PosicionGPS(playerid,1494.1000,-1737.0425,13.3828, 5);
					case 4: PosicionGPS(playerid,-1987.9141,289.5139,34.3957, 5);
				}
			}
		}
		case GPS4:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: PosicionGPS(playerid,1462.1840,-1019.6361,24.6326, 5);
					case 1: PosicionGPS(playerid,-1580.7654,859.5545,7.4429, 5);
					case 2: PosicionGPS(playerid,2433.5603,2289.6563,10.8203, 5);
				}
			}
		}
		case BANCO:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						format(string,sizeof(string),"Coloca en n�meros la cantidad que deseas retirar");
						MostrarDialog(playerid, BANCO1, DIALOG_STYLE_INPUT, "Retiro", string, "Retirar","Cancelar");
						return 1;
					}
					case 1:
					{
						format(string,sizeof(string),"Coloca en n�meros la cantidad que deseas depositar");
						MostrarDialog(playerid, BANCO4, DIALOG_STYLE_INPUT, "Deposito", string, "Depositar","Cancelar");
						return 1;
					}
					case 2:
					{
						Mensaje(playerid,-1,"====================================================");
						format(string,sizeof(string),""CB"El saldo actual, de tu cuenta bancaria, es de "CR"$%s"CB".",ConvertirNumero(PlayerInfo[playerid][pBanco]));
						Mensaje(playerid,-1,string);
						Mensaje(playerid,-1,"====================================================");
						return 1;
					}
					case 3:
					{
						if(gettimeVariable < TiempoMoney[playerid])
						{
							new time = TiempoMoney[playerid]-gettimeVariable;
							if(time > 60) va_SendClientMessage(playerid,-1,"Por favor espera {FF0000}%d:%d "CB"(m:s)"CB".",time/60,time%(60));
							else if(time < 60) va_SendClientMessage(playerid,-1,"Por favor espera {FF0000}%d segundos"CB".",time);
							return 1;
						}
      					if(PlayerInfo[playerid][horasjugadas] < 6) return Mensaje(playerid, -1, "Necesitas por lo menos haber jugador 6 horas para poder transferir dinero.");
						if(PlayerInfo[playerid][jNivel] < 3) return Mensaje(playerid,-1,"Necesitas nivel 3 para transferir dinero entre cuentas bancarias.");
						format(string,sizeof(string),"Coloca la ID del jugador al que haras la transferencia.");
						MostrarDialog(playerid, BANCO2, DIALOG_STYLE_INPUT, "Transferencia", string, "Transferir","Cancelar");
						return 1;
					}
				}
			}
		}
		case BANCO1:
		{
			if(response)
			{
				if(strval(inputtext) <= 0) return Mensaje(playerid,-1,"Monto inv�lido.");
				if(PlayerInfo[playerid][pBanco] >= strval(inputtext))
				{
					DarDinero(playerid, strval(inputtext));
					PlayerInfo[playerid][pBanco] -= strval(inputtext);
					Mensaje(playerid,-1,"===========================================================");
					format(string,sizeof(string),""CB"Acabas de retirar "CR"$%s"CB", ahora tu saldo es de "CR"$%s"CB".", ConvertirNumero(strval(inputtext)), ConvertirNumero(PlayerInfo[playerid][pBanco]));
					Mensaje(playerid,-1,string);
					Mensaje(playerid,-1,"===========================================================");
				}
				else if(PlayerInfo[playerid][pBanco] < strval(inputtext)) return Mensaje(playerid,-1,"No tienes ese monto en tu cuenta bancaria.");
			}
		}
		case BANCO2:
		{
			if(response)
			{
				if(!IsPlayerConnected(strval(inputtext))) return Mensaje(playerid,-1,"No se ha encontrado esa cuenta bancaria.");
				if(EsNumerico(inputtext))
				{
					format(string,sizeof(string),"El titular de la cuenta a depositar %s, coloca el monto", NombreJugador(strval(inputtext)));
					MostrarDialog(playerid, BANCO3, DIALOG_STYLE_INPUT, "Deposito", string, "Depositar", "Cancelar");
					Deposito[playerid] = strval(inputtext);
				}
			}
		}
		case BANCO3:
		{
			if(response)
			{
				if(strval(inputtext) > 0 && strval(inputtext) < 1000001)
				{
					if(PlayerInfo[playerid][pBanco] >= strval(inputtext))
					{
                        if(gettimeVariable > Transferir[playerid])
						{
							PlayerInfo[playerid][pBanco] -= strval(inputtext);
							PlayerInfo[Deposito[playerid]][pBanco] += strval(inputtext);
							Mensaje(playerid,-1,"===========================================================");
							format(string,sizeof(string),"Acabas de transferir "CR"$%s"CB" a %s.", ConvertirNumero(strval(inputtext)),NombreJugador(Deposito[playerid]));
							Mensaje(playerid,-1,string);
							Mensaje(playerid,-1,"===========================================================");
							format(string,sizeof(string),"ESTADO DE CUENTA"CB": Has recibido un deposito con el monto de "CR"$%s"CB" por parte de %s.", ConvertirNumero(strval(inputtext)),NombreJugador(playerid));
							Mensaje(Deposito[playerid],COLOR_AMARILLO2,string);
							new string2[128];
							new year, month,day;
							new hour,minuite,second;
							getdate(year, month, day);
							gettime(hour,minuite,second);
							format(string2, sizeof(string2), "%02d/%02d/%02d %02d:%02d:%02d", day,month,year,hour,minuite,second);
							mysql_format(Conecction, Query, sizeof(Query),"INSERT INTO `log_transacciones` (`Fecha`, `Enviador`, `Receptor`, `Monto`) VALUES ('%e','%d', '%d', '%e')", string2, PlayerInfo[playerid][p_DBID], PlayerInfo[Deposito[playerid]][p_DBID], inputtext);
							mysql_tquery(Conecction, Query);
							format(string2, sizeof(string2), "Notificaci�n: %s (ID: %d - Nivel: %d - %dhs) transfiere $%s a %s (ID: %d - Nivel: %d - %dhs).", NombreJugador(playerid), playerid, PlayerInfo[playerid][jNivel], PlayerInfo[playerid][horasjugadas], ConvertirNumero(strval(inputtext)), NombreJugador(Deposito[playerid]), Deposito[playerid], PlayerInfo[Deposito[playerid]][jNivel], PlayerInfo[Deposito[playerid]][horasjugadas]);
							MensajeAdmin(COLOR_CHEAT, string2, 4);
							Deposito[playerid] = INVALID_PLAYER_ID;
							Transferir[playerid] = gettimeVariable + 180;
						}
						else
						{
						    new numero = Transferir[playerid] - gettimeVariable;
						    if(numero < 60) return va_SendClientMessage(playerid, -1, "No se te permite transferir dinero. Espera "CR"%ds"CB" para enviar otra transacci�n bancaria.", numero);
							else if(numero >= 60) return va_SendClientMessage(playerid, -1, "No se te permite transferir dinero. Espera "CR"%dm %ds"CB" para enviar otra transacci�n bancaria.", numero/60, numero%(60));
						}
					}
				}
				else return Mensaje(playerid,-1,"Ingresa un monto menor o igual a 1000,000.");
			}
		}
		case BANCO4:
		{
			if(response)
			{
				if(strval(inputtext) > 0 && strval(inputtext) < 1000001)
				{
					if(PlayerInfo[playerid][jDinero] >= strval(inputtext))
					{
						QuitarDinero(playerid, strval(inputtext));
						PlayerInfo[playerid][pBanco] += strval(inputtext);
						Mensaje(playerid,-1,"===========================================================");
						format(string, sizeof(string), ""CB"Acabas de depositar "CR"$%s"CB", ahora tu saldo es de "CR"$%s"CB".",ConvertirNumero(strval(inputtext)), ConvertirNumero(PlayerInfo[playerid][pBanco]));
						Mensaje(playerid,-1,string);
						Mensaje(playerid,-1,"===========================================================");
					}
				}
				else return Mensaje(playerid,-1,"Ingresa un monto menor o igual a 1000,000.");
			}
		}
		case VENDERAUTO:
		{
			if(response)
			{
				new sellcar[128*MAX_PAUTOS];
				for(new i = 0; i < MAX_PAUTOS; i++)
				{
					if(VehicleInfo[playerid][i][vModelo] < 400) continue;
					format(sellcar, sizeof(sellcar), "%s Veh�culo: {F6E200}%s"CB" | Patente: "CR"%s"CB" | Precio: "CR"%s%s\n",sellcar,GetVehicleName(autos[i][playerid]),Patente[playerid][i],ConvertirNumero(VehicleInfo[playerid][i][vPrecio]/2), MonedaVenta(VehicleInfo[playerid][i][vMonedaa]));
				}
				MostrarDialog(playerid, VENDERAUTO2, DIALOG_STYLE_LIST, "Veh�culo que deseas vender", sellcar, "Vender","Cancelar");
			}
		}

		case VENDERAUTO2:
		{
			if(response)
			{

				new car = ObtenerOrdenAuto(playerid,listitem);
				if(autos[car][playerid] == 0) return Mensaje(playerid,-1,"No puedes vender un veh�culo que no existe.");
				new modelo,query[900];
				modelo = GetVehicleModel(autos[car][playerid]);
				switch(VehicleInfo[playerid][car][vMonedaa])
				{
				    case 0: va_SendClientMessage(playerid, -1, "Muchas gracias por vendernos tu "CR"%s"CB" ({009BE4}%s"CB"). Te pagamos: "CR"$%s"CB".",NombreAuto[modelo-400], Patente[playerid][car], ConvertirNumero(VehicleInfo[playerid][car][vPrecio]/2)),DarDinero(playerid, VehicleInfo[playerid][car][vPrecio]/2);
				    case 1: va_SendClientMessage(playerid, -1, "Muchas gracias por vendernos tu "CR"%s"CB" ({009BE4}%s"CB"). Te pagamos: "CR"%s"Moneda1""CB".",NombreAuto[modelo-400], Patente[playerid][car], ConvertirNumero(VehicleInfo[playerid][car][vPrecio]/2)),PlayerInfo[playerid][Moneda] += VehicleInfo[playerid][car][vPrecio]/2;
				    case 2: va_SendClientMessage(playerid, -1, "Muchas gracias por vendernos tu "CR"%s"CB" ({009BE4}%s"CB"). Te pagamos: "CR"%s"Moneda1""CB".",NombreAuto[modelo-400], Patente[playerid][car], ConvertirNumero(VehicleInfo[playerid][car][vPrecio]/2)),PlayerInfo[playerid][Moneda] += VehicleInfo[playerid][car][vPrecio]/2;
					case 3: va_SendClientMessage(playerid, -1, "Muchas gracias por vendernos tu "CR"%s"CB" ({009BE4}%s"CB"). Te pagamos: {D1A231}%s "Moneda3""CB".",NombreAuto[modelo-400], Patente[playerid][car], ConvertirNumero(VehicleInfo[playerid][car][vPrecio]/2)),PlayerInfo[playerid][Credits] += VehicleInfo[playerid][car][vPrecio]/2;				}
				TuningEliminarTodo(playerid,car);
				mysql_format(Conecction,query, 900, "DELETE FROM `p_autos` WHERE `ID` = '%d' AND `UserID` = '%d'",VehicleInfo[playerid][car][v_DBID],PlayerInfo[playerid][p_DBID]);
				mysql_tquery(Conecction,query);
				new temp_VehicleInfo[vInfo];
				VehicleInfo[playerid][car] = temp_VehicleInfo;
				for(new i = 1; i < 11; i++) EspacioBaul[playerid][car][i] = 0;
				for(new c = 0; c < 13; c++) Componentes[playerid][c][car] = 0;
				bloqueado[autos[car][playerid]] = 0;
				alarma[autos[car][playerid]] = 0;
				MotorAuto[autos[car][playerid]] = 0;
				DestroyVehicle(autos[car][playerid]);
				autos[car][playerid] = 0;
				return 1;
			}
		}

		case SELECT_VEH:
		{
			if(response)
			{
				new car = ObtenerOrdenAuto(playerid,listitem);
				if(autos[car][playerid] == 0) return Mensaje(playerid,-1,"No puedes vender un veh�culo que no existe.");
				
				User_Temp[playerid][VehSelect] = car;

				MostrarDialog(playerid, SELECT_MONEDA, DIALOG_STYLE_LIST, "�En que moneda deseas vender tu veh�culo?", "{2BCC63}D�lares\n"CR""Moneda1"\n{D9DC18}Coins", "Continuar", "Cancelar");

				return 1;
			}
		}
		case SELECT_MONEDA:
		{
			if(!response) return LimpiarVarsVenta(playerid);
			User_Temp[playerid][MonedaSelect] = listitem+1;
			new str[140];
			format(str, sizeof(str), "{FFFFFF}�En que precio deseas vender tu veh�culo {AD46D1}%s{FFFFFF}?", GetVehicleName(autos[User_Temp[playerid][VehSelect]][playerid]));
			MostrarDialog(playerid, SELECT_PRECIO, DIALOG_STYLE_INPUT, "Venta de veh�culo a otro usuario", str, "Continuar", "Cancelar");
			return 1;
		}
		case SELECT_PRECIO:
		{
			if(!response) return LimpiarVarsVenta(playerid);
			if(isnull(inputtext) || !EsNumerico(inputtext))
			{
				new str[210];
				format(str, sizeof(str), "{FFFFFF}�En que precio deseas vender tu veh�culo {AD46D1}%s{FFFFFF}?\nEscribe el precio en n�meros, no uses puntos ni signos.", GetVehicleName(autos[User_Temp[playerid][VehSelect]][playerid]));
				MostrarDialog(playerid, SELECT_PRECIO, DIALOG_STYLE_INPUT, "Venta de veh�culo a otro usuario", str, "Continuar", "Cancelar");
			}
			
			User_Temp[playerid][PrecioSelect] = strval(inputtext);  
			/*new str[120];
			format(str, sizeof(str), "{FFFFFF}Ingresa la ID del jugador al que le quieras vender tu {AD46D1}%s{FFFFFF}.", GetVehicleName(autos[User_Temp[playerid][VehSelect]][playerid]));
			MostrarDialog(playerid, SELECT_JUGADOR, DIALOG_STYLE_INPUT, "Venta de veh�culo a otro usuario", str, "Siguiente", "Cancelar");*/
			new dialog[2500], cuenta;
			foreach(new i: StreamedPlayer[playerid])
			{
				if(i == playerid) continue;
				if(EstaEnP(playerid, i, 15) && PlayerInfo[i][jNivel] > 5)
				{
					format(dialog, sizeof dialog, "%s"CR"%s"CB" (%d)\n", dialog,NombreJugador(i), i);
					User_Temp[playerid][Cercanos][cuenta] = i;
					cuenta ++;
				}
			}
			if(cuenta == 0)
			{
				return Mensaje(playerid, -1, "No hay jugadores cerca tuyo.");
			}
			MostrarDialog(playerid, SELECT_JUGADOR, DIALOG_STYLE_LIST, "�A cual jugador se lo quieres ofrecer?", dialog, "Siguiente", "Cancelar");
			
		}

		case SELECT_JUGADOR:
		{
			if(response)
			{
				new id = User_Temp[playerid][Cercanos][listitem];
				if(User_Temp[id][PlayerVendedor] != INVALID_PLAYER_ID) 
				{
					LimpiarVarsVenta(playerid);
					return Mensaje(playerid, -1, "Ese jugador est� en otra venta.");
				}
				if(PlayerInfo[id][jNivel] < 6) 
				{
					LimpiarVarsVenta(playerid);
					return Mensaje(playerid, -1, "No puedes venderle a ese jugador.");
				}
				if(id > MAX_PLAYERS || id < 0) return Mensaje(playerid, -1, "Ese jugador no est� conectado (1).");
				if(!IsPlayerConnected(id)) return Mensaje(playerid, -1, "Ese jugador no est� conectado.");
				if(!EstaEnP(playerid,id,15)) return Mensaje(playerid, -1, "Ese jugador no est� cerca tuyo."); 


				switch(PlayerInfo[id][VIP])
				{
					case 1: if(ObtenerAutos(id) > 2) return Mensaje(playerid, -1, "Esa persona no puede tener m�s veh�culos.");
					case 2: if(ObtenerAutos(id) > 3) return Mensaje(playerid, -1, "Esa persona no puede tener m�s veh�culos.");
					case 3: if(ObtenerAutos(id) > 5) return Mensaje(playerid, -1, "Esa persona no puede tener m�s veh�culos.");
					default: if(ObtenerAutos(id) > 1) return Mensaje(playerid, -1, "Esa persona no puede tener m�s veh�culos.");
				}
				new str[220], moneda[9];
				User_Temp[playerid][PlayerSelect] = id;
				if(User_Temp[playerid][MonedaSelect] == 1) moneda = "D�lares";
				else if(User_Temp[playerid][MonedaSelect] == 2) moneda = ""Moneda1"";
				else if(User_Temp[playerid][MonedaSelect] == 3) moneda = "Coins";
				new motor[22];
				if(VehicleInfo[playerid][User_Temp[playerid][VehSelect]][Aceleracion] == 1) format(motor, sizeof motor, "Tiene mejora de motor");
				else format(motor, sizeof motor, "Sin mejora de motor");
				
				
				format(str, sizeof(str), "{FFFFFF}Le est�s ofreciendo tu veh�culo {AD46D1}%s{FFFFFF},\n al jugador {AD46D1}%s{FFFFFF} por {AD46D1}%s %s{FFFFFF}\n%s.", GetVehicleName(autos[User_Temp[playerid][VehSelect]][playerid]), NombreJugador(User_Temp[playerid][PlayerSelect]),ConvertirNumero(User_Temp[playerid][PrecioSelect]), moneda, motor);
				
				MostrarDialog(playerid, DIALOG_CONFIRMAR, DIALOG_STYLE_MSGBOX, "confirmar venta de veh�culo", str, "Confirmar", "Cancelar");
			}
			else return LimpiarVarsVenta(playerid);
			

		}

		case DIALOG_CONFIRMAR:
		{

			if(!response) return LimpiarVarsVenta(playerid);
		
			else
			{
				if(IsPlayerConnected(User_Temp[playerid][PlayerSelect]))
				{
					new str[200], moneda[9];
					if(User_Temp[playerid][MonedaSelect] == 1) moneda = "D�lares";
					else if(User_Temp[playerid][MonedaSelect] == 2) moneda = ""Moneda1"";
					else if(User_Temp[playerid][MonedaSelect] == 3) moneda = "Coins";

					User_Temp[User_Temp[playerid][PlayerSelect]][PlayerVendedor] = playerid;

					new motor[22];
					if(VehicleInfo[playerid][User_Temp[playerid][VehSelect]][Aceleracion] == 1) format(motor, sizeof motor, "Tiene mejora de motor");
					else format(motor, sizeof motor, "Sin mejora de motor");

					format(str, sizeof(str), "{FFFFFF}El jugador {AD46D1}%s{FFFFFF} te ofrece su veh�culo {AD46D1}%s{FFFFFF},\npor {AD46D1}%s %s{FFFFFF}\n%s.", NombreJugador(playerid), GetVehicleName(autos[User_Temp[playerid][VehSelect]][playerid]), ConvertirNumero(User_Temp[playerid][PrecioSelect]), moneda, motor);
					Mensaje(playerid, -1, "Espera a que el comprador acepte la oferta.");
					MostrarDialog(User_Temp[playerid][PlayerSelect], DIALOG_CONFIRMARC, DIALOG_STYLE_MSGBOX, "Compra de veh�culos", str, "Aceptar", "Cancelar");
				}
			}

		}
		case DIALOG_CONFIRMARC:
		{
			new id = User_Temp[playerid][PlayerVendedor];
			
			if(!response)
			{
				User_Temp[id][PlayerSelect] = INVALID_PLAYER_ID;
				User_Temp[id][MonedaSelect] = 0;
				User_Temp[id][VehSelect] = 0;
				User_Temp[id][PrecioSelect] = 0;
				User_Temp[id][PlayerVendedor] = INVALID_PLAYER_ID;

				User_Temp[playerid][PlayerSelect] = INVALID_PLAYER_ID;
				User_Temp[playerid][MonedaSelect] = 0;
				User_Temp[playerid][VehSelect] = 0;
				User_Temp[playerid][PrecioSelect] = 0;
				User_Temp[playerid][PlayerVendedor] = INVALID_PLAYER_ID;

				Mensaje(playerid, -1, "No aceptaste la compra del veh�culo.");
				Mensaje(id, -1, "El comprador no acept� la oferta.");

			}
			else if(response)
			{
				new bool:error = false;
				switch(PlayerInfo[playerid][VIP])
				{
					case 1: if(ObtenerAutos(playerid) > 2) error = true;
					case 2: if(ObtenerAutos(playerid) > 3) error = true;
					case 3: if(ObtenerAutos(playerid) > 5) error = true;
					default: if(ObtenerAutos(playerid) > 1) error = true;
				}

				if(error)
				{
					Mensaje(playerid, -1, "No puedes tener m�s veh�culos...");
					User_Temp[id][PlayerSelect] = INVALID_PLAYER_ID;
					User_Temp[id][MonedaSelect] = 0;
					User_Temp[id][VehSelect] = 0;
					User_Temp[id][PrecioSelect] = 0;
					User_Temp[playerid][PlayerSelect] = INVALID_PLAYER_ID;
					User_Temp[playerid][MonedaSelect] = 0;
					User_Temp[playerid][VehSelect] = 0;
					User_Temp[playerid][PrecioSelect] = 0;
					User_Temp[playerid][PlayerVendedor] = INVALID_PLAYER_ID;
					return 1;

				}

				new car = autos[User_Temp[id][VehSelect]][id];
				new slotcar = User_Temp[id][VehSelect];
				//id = vendedor
				// User_Temp[id][VehSelect] =
				if(car == 0) return Mensaje(playerid, -1, "Error (7134)");
				new slot = CompraSlot(playerid);
				if(slot == -1)
				{
					User_Temp[id][PlayerSelect] = INVALID_PLAYER_ID;
					User_Temp[id][MonedaSelect] = 0;
					User_Temp[id][VehSelect] = 0;
					User_Temp[id][PrecioSelect] = 0;
					User_Temp[playerid][PlayerSelect] = INVALID_PLAYER_ID;
					User_Temp[playerid][MonedaSelect] = 0;
					User_Temp[playerid][VehSelect] = 0;
					User_Temp[playerid][PrecioSelect] = 0;
					User_Temp[playerid][PlayerVendedor] = INVALID_PLAYER_ID;
					Mensaje(playerid, -1, "No tienes espacio para m�s veh�culos.");
					return 1;
				}
				new bool:error2 = false;
				switch(User_Temp[id][MonedaSelect])
				{
					case 1:
					{
						if(PlayerInfo[playerid][jDinero] < User_Temp[id][PrecioSelect])
						{
							error2 = true;
						}
					}
					case 2:
					{
						if(PlayerInfo[playerid][Moneda] < User_Temp[id][PrecioSelect])
						{
							error2 = true;
						}
					}
					case 3:
					{
						if(PlayerInfo[playerid][Credits] < User_Temp[id][PrecioSelect])
						{
							error2 = true;
						}
					}

				}
				if(error2)
				{
					new moneda[9];
					if(User_Temp[playerid][MonedaSelect] == 1) moneda = "D�lares";
					else if(User_Temp[playerid][MonedaSelect] == 2) moneda = ""Moneda1"";
					else if(User_Temp[playerid][MonedaSelect] == 3) moneda = "Coins";

					va_SendClientMessage(playerid, -1, "No tienes los %s %s necesarios.", ConvertirNumero(User_Temp[id][PrecioSelect]), moneda);
					User_Temp[id][PlayerSelect] = INVALID_PLAYER_ID;
					User_Temp[id][MonedaSelect] = 0;
					User_Temp[id][VehSelect] = 0;
					User_Temp[id][PrecioSelect] = 0;
					User_Temp[playerid][PlayerSelect] = INVALID_PLAYER_ID;
					User_Temp[playerid][MonedaSelect] = 0;
					User_Temp[playerid][VehSelect] = 0;
					User_Temp[playerid][PrecioSelect] = 0;
					User_Temp[playerid][PlayerVendedor] = INVALID_PLAYER_ID;
					return 1;
				}
				if(User_Temp[id][PlayerSelect] != playerid)
				{
					Mensaje(playerid,-1, "Ocurri� un error al completar la compra.");
					LimpiarVarsVenta(id);
					LimpiarVarsVenta(playerid);
					return 1;
				}
				switch(User_Temp[id][MonedaSelect])
				{
					case 1:
					{
						QuitarDinero(playerid, User_Temp[id][PrecioSelect]);
						DarDinero(id, User_Temp[id][PrecioSelect]);
					}
					case 2:
					{
						PlayerInfo[playerid][Moneda] -= User_Temp[id][PrecioSelect];
						PlayerInfo[id][Moneda] += User_Temp[id][PrecioSelect];
					}
					case 3:
					{
						PlayerInfo[playerid][Credits] -= User_Temp[id][PrecioSelect];
						PlayerInfo[id][Credits] += User_Temp[id][PrecioSelect];
					}

				}

				


				mysql_format(Conecction,Query, 120, "UPDATE `p_autos` SET `UserID` = '%d' WHERE `ID` = '%d' LIMIT 1",PlayerInfo[playerid][p_DBID],VehicleInfo[id][slotcar][v_DBID]);
				mysql_tquery(Conecction,Query, "CargarAutoComprado", "ddd", playerid,slot, VehicleInfo[id][slotcar][v_DBID]);

				

				new temp_TuningObjetos[e_VEHICLE_OBJECTS];
				for(new i = 0; i != MAX_TOBJETOS; i ++)
				{
					
					DestroyDynamicObjectEx(TuningObjetos[id][slotcar][i][vobject_OBJECT_ID]);
					
					TuningObjetos[id][slotcar][i] = temp_TuningObjetos;
				}

				new autoss = autos[slotcar][id];
				new temp_VehicleInfo[vInfo];
				VehicleInfo[id][slotcar] = temp_VehicleInfo;
				for(new i = 1; i < 11; i++) EspacioBaul[id][slotcar][i] = 0;
				for(new c = 0; c < 13; c++) Componentes[id][c][slotcar] = 0;
				bloqueado[autos[slotcar][id]] = 0;
				alarma[autos[slotcar][id]] = 0;
				MotorAuto[autos[slotcar][id]] = 0;
				autos[slotcar][id] = 0;
				DestroyVehicle(autoss);
				GuardarCuenta(id);
				Mensaje(id, -1, "Vendiste el veh�culo exitosamente");
				User_Temp[id][PlayerSelect] = INVALID_PLAYER_ID;
				User_Temp[id][MonedaSelect] = 0;
				User_Temp[id][VehSelect] = 0;
				User_Temp[id][PrecioSelect] = 0;
				User_Temp[playerid][PlayerSelect] = INVALID_PLAYER_ID;
				User_Temp[playerid][MonedaSelect] = 0;
				User_Temp[playerid][VehSelect] = 0;
				User_Temp[playerid][PrecioSelect] = 0;
				User_Temp[playerid][PlayerVendedor] = INVALID_PLAYER_ID;
				
			}

		}

		
		case SELECT_CASA:
		{
			if(!response) return 0;
			new home = ObtenerOrdenPropiedad(playerid,listitem);
			if(PlayerInfo[playerid][CasaID][home] > 0)
			{
				User_Temp[playerid][CasaSelect] = home;
				MostrarDialog(playerid, SELECT_MONEDAC, DIALOG_STYLE_LIST, "�En que moneda deseas vender tu propiedad?", "{2BCC63}D�lares\n"CR""Moneda1"\n{D9DC18}Coins", "Continuar", "Cancelar");

			}

		}

		case SELECT_MONEDAC:
		{
			User_Temp[playerid][MonedaSelect] = listitem+1;
			new moneda[9], str[100];
			switch(User_Temp[playerid][MonedaSelect])
			{
				case 1: moneda = "d�lares";
				case 2: moneda = ""Moneda1"";
				case 3: moneda = "coins";
			}
			format(str, sizeof(str), "{FFFFFF}�En cu�ntos "CR"%s"CB" deseas vender tu propiedad?", moneda);
			MostrarDialog(playerid, SELECT_PRECIOC, DIALOG_STYLE_INPUT, "Venta de propiedad a otro usuario", str, "Continuar", "Cancelar");
		}
		case SELECT_PRECIOC:
		{
			if(!response) return 1;
			if(isnull(inputtext) || !EsNumerico(inputtext))
			{
				new moneda[9], str[100];
				switch(User_Temp[playerid][MonedaSelect])
				{
					case 1: moneda = "d�lares";
					case 2: moneda = ""Moneda1"";
					case 3: moneda = "coins";
				}
				format(str, sizeof(str), "{FFFFFF}�En cu�ntos "CR"%s"CB" deseas vender tu propiedad?", moneda);
				MostrarDialog(playerid, SELECT_PRECIOC, DIALOG_STYLE_INPUT, "Venta de propiedad a otro usuario", str, "Continuar", "Cancelar");
			}
			
			User_Temp[playerid][PrecioSelect] = strval(inputtext);  
			new dialog[2500], line_str[50], cuenta;
			foreach(new i: StreamedPlayer[playerid])
			{
				if(i == playerid) continue;
				if(EstaEnP(playerid, i, 15) && PlayerInfo[i][jNivel] > 5)
				{
					format(line_str, sizeof line_str, ""CR"%s"CB" (%d)\n", NombreJugador(i), i);
					User_Temp[playerid][Cercanos][cuenta] = i;
					strcat(dialog, line_str);
					cuenta ++;
				}
			}
			if(cuenta == 0)
			{
				return Mensaje(playerid, -1, "No hay jugadores cerca tuyo.");
			}
			MostrarDialog(playerid, SELECT_JUGADORC, DIALOG_STYLE_LIST, "�A cual jugador le quieres ofrecer?", dialog, "Confirmar", "Cancelar");
			
		}

		case SELECT_JUGADORC:
		{
			if(response)
			{
				new id = User_Temp[playerid][Cercanos][listitem];
				if(User_Temp[id][PlayerVendedor] != INVALID_PLAYER_ID) return Mensaje(playerid, -1, "Ese jugador est� en otra venta.");
				if(id > MAX_PLAYERS || id < 0) return Mensaje(playerid, -1, "Ese jugador no est� conectado (1).");
				if(!IsPlayerConnected(id)) return Mensaje(playerid, -1, "Ese jugador no est� conectado.");
				if(!EstaEnP(playerid,id,15)) return Mensaje(playerid, -1, "Ese jugador no est� cerca tuyo."); 

				if(User_Temp[id][PlayerVendedor] != INVALID_PLAYER_ID) 
				{
					LimpiarVarsVenta(playerid);
					return Mensaje(playerid, -1, "Ese jugador est� en otra venta.");
				}
				
				new str[215], moneda[9];
				User_Temp[playerid][PlayerSelect] = id;
				User_Temp[id][PlayerVendedor] = playerid;

				new ubicacion[60];
				switch(User_Temp[playerid][MonedaSelect])
				{
					case 1: moneda = "d�lares";
					case 2: moneda = ""Moneda1"";
					case 3: moneda = "coins";
				}
				new home = User_Temp[playerid][CasaSelect];
				if(PlayerInfo[playerid][CasaID][home] > 0)
				{
					foreach(new p : Propiedades)
					{
						if(PropInfo[p][propiedad_ID] == PlayerInfo[playerid][CasaID][home] && PropInfo[p][pPosX] != 0)
						{
							format(ubicacion,sizeof ubicacion, "%s",PropInfo[p][pLocalizacion]);
							break;
						}
					}
				}

				format(str, sizeof(str), "{FFFFFF}El jugador {AD46D1}%s{FFFFFF} te ofrece su propiedad ubicada en {AD46D1}%s{FFFFFF},\n  por {AD46D1}%s %s{FFFFFF}.", NombreJugador(playerid), ubicacion, ConvertirNumero(User_Temp[playerid][PrecioSelect]), moneda);
				Mensaje(playerid, -1, "Espera a que el comprador acepte la oferta.");
				MostrarDialog(User_Temp[playerid][PlayerSelect], CONFIRMARC_CASA, DIALOG_STYLE_MSGBOX, "Compra de propiedades", str, "Aceptar", "Cancelar");
			}
		}

		case CONFIRMARC_CASA:
		{
			new id = User_Temp[playerid][PlayerVendedor];
			if(!response)
			{
				Mensaje(User_Temp[playerid][PlayerVendedor], -1, "El comprador no acept� la oferta.");
				Mensaje(playerid, -1, "No aceptaste la compra");
				User_Temp[id][PlayerSelect] = INVALID_PLAYER_ID;
				User_Temp[id][MonedaSelect] = 0;
				User_Temp[id][CasaSelect] = 0;
				User_Temp[id][PrecioSelect] = 0;
				User_Temp[playerid][PlayerSelect] = INVALID_PLAYER_ID;
				User_Temp[playerid][MonedaSelect] = 0;
				User_Temp[playerid][CasaSelect] = 0;
				User_Temp[playerid][PrecioSelect] = 0;
				User_Temp[playerid][PlayerVendedor] = INVALID_PLAYER_ID;
				return 1;
			}
			if(User_Temp[id][PlayerSelect] != playerid)
			{
				Mensaje(playerid,-1, "Ocurri� un error al completar la compra.");
				LimpiarVarsVenta(id);
				LimpiarVarsVenta(playerid);
				return 1;
			}
			new bool:error2 = false;
			switch(User_Temp[id][MonedaSelect])
			{
				case 1:
				{
					if(PlayerInfo[playerid][jDinero] < User_Temp[id][PrecioSelect])
					{
						error2 = true;
					}
				}
				case 2:
				{
					if(PlayerInfo[playerid][Moneda] < User_Temp[id][PrecioSelect])
					{
						error2 = true;
					}
				}
				case 3:
				{
					if(PlayerInfo[playerid][Credits] < User_Temp[id][PrecioSelect])
					{
						error2 = true;
					}
				}

			}
			if(error2)
			{
				new moneda[9];
				if(User_Temp[playerid][MonedaSelect] == 1) moneda = "D�lares";
				else if(User_Temp[playerid][MonedaSelect] == 2) moneda = ""Moneda1"";
				else if(User_Temp[playerid][MonedaSelect] == 3) moneda = "Coins";

				va_SendClientMessage(playerid, -1, "No tienes los %s %s necesarios.", ConvertirNumero(User_Temp[id][PrecioSelect]), moneda);
				User_Temp[id][PlayerSelect] = INVALID_PLAYER_ID;
				User_Temp[id][MonedaSelect] = 0;
				User_Temp[id][CasaSelect] = 0;
				User_Temp[id][PrecioSelect] = 0;
				User_Temp[playerid][PlayerSelect] = INVALID_PLAYER_ID;
				User_Temp[playerid][MonedaSelect] = 0;
				User_Temp[playerid][CasaSelect] = 0;
				User_Temp[playerid][PrecioSelect] = 0;
				User_Temp[playerid][PlayerVendedor] = INVALID_PLAYER_ID;
				return 1;
			}
			
			

			
			if(ObtenerCasas(playerid) > PlayerInfo[playerid][VIP]) return va_SendClientMessage(playerid,-1,"S�lo puedes tener hasta %d propiedades con tu membres�a VIP actual.",PlayerInfo[playerid][VIP]+1);
			
			switch(User_Temp[id][MonedaSelect])
			{
				case 1:
				{
					QuitarDinero(playerid, User_Temp[id][PrecioSelect]);
					DarDinero(id, User_Temp[id][PrecioSelect]);
				}
				case 2:
				{
					PlayerInfo[playerid][Moneda] -= User_Temp[id][PrecioSelect];
					PlayerInfo[id][Moneda] += User_Temp[id][PrecioSelect];
				}
				case 3:
				{
					PlayerInfo[playerid][Credits] -= User_Temp[id][PrecioSelect];
					PlayerInfo[id][Credits] += User_Temp[id][PrecioSelect];
				}

			}

			new hslot = SlotPropiedad(playerid),query[260];
			if(hslot != -1)
			{

				new home = User_Temp[id][CasaSelect];
				if(PlayerInfo[id][CasaID][home] > 0)
				{
					foreach(new p : Propiedades)
					{
						if(PropInfo[p][propiedad_ID] == PlayerInfo[id][CasaID][home] && PropInfo[p][pPosX] != 0)
						{
							PlayerInfo[playerid][CasaID][hslot] = PlayerInfo[id][CasaID][home];
							mysql_format(Conecction, query, sizeof(query),"UPDATE `usuarios` SET `CasaID%d`='%d' WHERE `ID`='%d'",hslot+1,PlayerInfo[playerid][CasaID][hslot],PlayerInfo[playerid][p_DBID]);
							mysql_tquery(Conecction, query); //darle la casa

							mysql_format(Conecction, query, sizeof(query),"UPDATE `usuarios` SET `CasaID%d`='0' WHERE `ID`='%d'",home+1,PlayerInfo[id][p_DBID]);
							mysql_tquery(Conecction, query); //quitarle la casa
							PlayerInfo[id][CasaID][home] = 0;

							format(PropInfo[p][pPropietario],40,"%s",NombreJugador(playerid));
							mysql_format(Conecction, query, sizeof(query),"UPDATE `propiedades` SET `EnVenta`='0', `Propietario`='%e',`IDPropietario`='%d' WHERE `ID`='%d'", PropInfo[p][pPropietario], PlayerInfo[playerid][p_DBID], PropInfo[p][propiedad_ID]);
							mysql_tquery(Conecction, query);
							Mensaje(playerid,-1,"Compraste la propiedad, usa "CR"/localizar propiedad"CB".");
							PropInfo[p][pIDPropietario] = PlayerInfo[playerid][p_DBID];
							RevisarLogro(playerid, PropInfo[p][pTipo]+7);
							CargarPropiedad(p,1);
							break;
						}
					}
				}

			}

		}

        case VENDERCASA:
        {
            if(response)
            {
				new casa[128*MAX_PCASAS];
				
					
				for(new i = 0; i < MAX_PCASAS; i++)
				{
					if(PlayerInfo[playerid][CasaID][i] == 0) continue;
					new p = PlayerInfo[playerid][CasaID][i];
					switch(PropInfo[p][pEnVentaPor])
					{
						case 0: format(casa,sizeof(casa),"%s Propiedad ubicada en %s. (Valor de la propiedad: "CR"$%s"CB")\n",casa,PropInfo[p][pLocalizacion],ConvertirNumero(PropInfo[p][pPrecio]));
						case 1: format(casa,sizeof(casa),"%s Propiedad ubicada en %s. (Valor de la propiedad: "CR"%s"Moneda1""CB")\n",casa,PropInfo[p][pLocalizacion],ConvertirNumero(PropInfo[p][pPrecio]));
						case 2: format(casa,sizeof(casa),"%s Propiedad ubicada en %s. (Valor de la propiedad: {D1A231}%s Coins"CB")\n",casa,PropInfo[p][pLocalizacion],ConvertirNumero(PropInfo[p][pPrecio]));
					}
					
				}
                MostrarDialog(playerid,VENDERCASA1,DIALOG_STYLE_LIST,"Selecciona la propiedad que deseas vender",casa,"Vender","Cancelar");
            }
        }
		

    	case VENDERCASA1:
    	{
    	    if(!response) return 0;
			new home = ObtenerOrdenPropiedad(playerid,listitem);
			if(PlayerInfo[playerid][CasaID][home] > 0)
			{
				foreach(new p : Propiedades)
				{
    				if(PropInfo[p][propiedad_ID] == PlayerInfo[playerid][CasaID][home] && PropInfo[p][pPosX] != 0)
					{
						switch(PropInfo[p][pEnVentaPor])
						{
		    				case 0: format(string,sizeof(string),"Vendiste tu propiedad ubicada en "CR"%s"CB" por "CR"$%s.",PropInfo[p][pLocalizacion],ConvertirNumero(PropInfo[p][pPrecio]/2)),DarDinero(playerid,PropInfo[p][pPrecio]/2);
						    case 1: format(string,sizeof(string),"Vendiste tu propiedad ubicada en "CR"%s"CB" por "CR"%s "Moneda1".",PropInfo[p][pLocalizacion],ConvertirNumero(PropInfo[p][pPrecio]/2)),PlayerInfo[playerid][Moneda] += PropInfo[p][pPrecio]/2;
						    case 2: format(string,sizeof(string),"Vendiste tu propiedad ubicada en "CR"%s"CB" por "CR"%s Coins.",PropInfo[p][pLocalizacion],ConvertirNumero(PropInfo[p][pPrecio]/2)),PlayerInfo[playerid][Credits] += PropInfo[p][pPrecio]/2;
						}
						Mensaje(playerid,-1,string);
						PlayerInfo[playerid][CasaID][home] = 0;
						mysql_format(Conecction, Query, sizeof(Query),"UPDATE `usuarios` SET `CasaID%d`='0',`Moneda`='%d' WHERE `ID`='%d' LIMIT 1",home+1,PlayerInfo[playerid][Moneda],PlayerInfo[playerid][p_DBID]);
						mysql_tquery(Conecction, Query);
						PropInfo[p][pEnVenta] = 1;
						format(PropInfo[p][pPropietario],40,"Nadie");
						PropInfo[p][pAbierta] = 1;
						PropInfo[p][pRoperoAbierto] = 0;
						PropInfo[p][pIDPropietario] = 0;
						mysql_format(Conecction, Query, sizeof(Query),"UPDATE `propiedades` SET `Propietario`='Nadie',`IDPropietario`='0',`EnVenta`='1' WHERE `ID`='%d'",p);
						mysql_tquery(Conecction, Query);
						CargarPropiedad(p,1);
						GuardarPropiedad(p);
						break;
					}
			    }
			}
    	}
		case LOCALIZARCASA:
    	{
    	    if(!response) return 0;
			new home = ObtenerOrdenPropiedad(playerid,listitem);
			if(PlayerInfo[playerid][CasaID][home] > 0)
			{
				foreach(new p : Propiedades)
				{
    				if(PropInfo[p][propiedad_ID] == PlayerInfo[playerid][CasaID][home] && PropInfo[p][pPosX] != 0)
				    {
						new estadopuerta[9];
						if(PropInfo[p][pAbierta] == 1) estadopuerta = "Abierta";
						if(PropInfo[p][pAbierta] == 0) estadopuerta = "Cerrada";
						Mensaje(playerid,-1,""CR"Se ha marcado en el mapa la ubicaci�n de la propiedad.");
						va_SendClientMessage(playerid,-1, "Detalles [ Interior: "CR"%d "CB"| Puerta: "CR"%s"CB" | Localizaci�n: {2EA3F5}%s"CB" ]", PropInfo[p][pInterior], estadopuerta, PropInfo[p][pLocalizacion]);
						CrearCheckpoint(playerid,PropInfo[p][pPosX],PropInfo[p][pPosY],PropInfo[p][pPosZ],3.0);
						break;
					}
			    }
			}
    	}
		case SEXO:
		{
			if(!response) return ExpulsarJugador(playerid, "Escape al momento de ingresar sexo");
			if(response)
			{
				new QueryC[1024], day, month, year, skin = SKIN_INICIO_HOMBRE;
				getdate(year,month,day);
				if(listitem == 1) skin = SKIN_INICIO_MUJER;
				mysql_format(Conecction, QueryC, sizeof(QueryC), "INSERT INTO `usuarios` (username,password,posX,posY,posZ,vida,skin,Registro,Email,EMS,Sexo) VALUES ('%e', '%e','948.9481','-1662.2152','13.5448','100','%d','%02d/%02d/%02d','%e',0,'%d')", PlayerInfo[playerid][NombreTemporal],PlayerInfo[playerid][pPassword],skin,day,month,year,PlayerInfo[playerid][pEmail],listitem+1);
				mysql_tquery(Conecction, QueryC, "UsuarioRegistrado", "dd", playerid, g_MysqlRaceCheck[playerid]);
				Usuarios[Cantidad]++;
				mysql_format(Conecction, QueryC, 100, "UPDATE `registros` SET `Cantidad`='%d'", Usuarios[Cantidad]);
				mysql_tquery(Conecction, QueryC);
			}
		}
		case TRABAJOS:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						new mensaje[]="Hay muchos trabajos disponibles para que te ganes la vida.\nElige el que m�s te guste y comienza a trabajar.\n\nPara tener dos trabajos a la vez, necesitas cuenta VIP.\n( Mas informaci�n en la web: "WebName")";
						MostrarDialog(playerid, INFOMEDICO, DIALOG_STYLE_MSGBOX, "Ayuda sobre los trabajos", mensaje, "Aceptar","");
						return 1;
					}
					case 1:
					{
						new Byte[1200];
						strcat(Byte,""CB"El "CR"trabajo de m�dico"CB" se consigue en el {00cbff}Hospital General de Los Santos"CB", puedes encontrarlo en tu GPS.");
						strcat(Byte,"\nPara trabajar de m�dico necesitas tener como m�nimo "CR"nivel 2"CB".\n\nUna vez tengas el trabajo, necesitas ponerte el uniforme para comenzar a trabajar.");
						strcat(Byte,"\n\n"CB"El uniforme te lo puedes poner dentro del hospital o en la parte trasera de una ambulancia.\nusando el comando "CR"/medico\n\n");
						strcat(Byte,""CR"M�dico de calle"CB":\nCuando alguien solicite asistencia m�dica se marcar� en el mapa un icono de color verde, al que tendr�s\nque dirigirte para salvarle la vida.");
						strcat(Byte,"\n\n"CB"Al estar junto a un paciente agonizando tendr�s que "CR"/reanimar "CB"["CR"ID o Nombre"CB"] y luego dentro de la\nambulancia deber�s "CR"/subir paciente"CB".");
						strcat(Byte,"\n\n"CB"Finalmente tienes que llevarlo al hospital para salvar su vida y cobrar tu paga ("CR"$800"CB").");
						strcat(Byte,"\n\n"CB"En algunos casos podr�s reanimar al paciente en el mismo lugar que lo atiendes, todo\ndepende de tu nivel de habilidad como m�dico.");
						strcat(Byte,"\n\n"CR"M�dico de hospital"CB":\n\nPuedes trabajar dentro de cualquier hospital, en este caso\ntienes que usar "CR"/revisar paciente "CB"["CR"ID o Nombre"CB"] cuando se te notifique.");
						strcat(Byte,"\n\n"CB"A continuaci�n deber�s ir a buscar en el botiqu�n lo que creas necesario para el tratamiento.\n\nFinalmente tendr�s que "CR"/atender paciente "CB"["CR"ID o Nombre"CB"] para terminar.");
						MostrarDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,""CB"Ayuda sobre el trabajo de M�dico", Byte, "Aceptar", "");
						return 1;
					}
					case 2:
					{
						if(!TieneTrabajo(playerid, TAXISTA))
						{
							new Byte[500];
							strcat(Byte,"Puedes conseguir este trabajo dentrode Unity Station.");
							strcat(Byte,"\n");
							strcat(Byte,"Esta profesi�n no cuenta con niveles. Ganar�s seg�n el precio que cobres.");
							MostrarDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,""CB"Ayuda sobre el trabajo de Taxista", Byte, "Aceptar", "");
							return 1;
						}
						new Byte[500];
						strcat(Byte,""CB"Para ponerle un costo de ficha al taxi usa "CR"/ficha precio");
						strcat(Byte,"\n");
						strcat(Byte,""CB"Por ejemplo: "CR"/ficha 20");
						strcat(Byte,"\n");
						strcat(Byte,""CB"Cuando tu cliente no tenga dinero, se bajar� del taxi.");
						MostrarDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,""CB"Ayuda sobre el trabajo de Taxista", Byte, "Aceptar", "");
					}
					case 3:
					{
					    if(!TieneTrabajo(playerid, GUARDAESPALDAS))
						{
							new Byte[1000];
							strcat(Byte,"Para conseguir este trabajo en Ganton GYM. Esta profesi�n no cuenta con niveles.");
							strcat(Byte,"\n");
							strcat(Byte,"Un guardaespaldas puede darle el 50% de blindaje a su protegido.");
							strcat(Byte,"\n\n");
							strcat(Byte,"Los guardaespaldas est�n normalmente armados y tienen experiencia en el combate");
							strcat(Byte,"\n");
							strcat(Byte,"cuerpo a cuerpo y desarmado, conducci�n y primeros auxilios.");
							strcat(Byte,"\n");
							strcat(Byte,"Sin embargo, la habilidad m�s importante para un guardaespaldas es evaluar una situaci�n de");
							strcat(Byte,"\n");
							strcat(Byte,"peligo para su protegido y tratar de minimizar los da�os.");
							strcat(Byte,"\n\n");
							strcat(Byte,"Ganar�s seg�n el precio que cobres.");
							MostrarDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,""CB"Ayuda sobre el trabajo de Guardaespaldas", Byte, "Aceptar", "");
							return 1;
						}
						new Byte[500];
						strcat(Byte,""CB"Para cubrir a alguien usa "CR"/cubrir [id o nombre] [precio]");
						strcat(Byte,"\n");
						strcat(Byte,""CB"El precio del chaleco tiene que ser entre $400 y $1000.");
						strcat(Byte,"\n");
						strcat(Byte,""CB"No puedes ofrecer un chaleco en combate, si tu protegido lo est� tampoco podr� recibirlo.");
						strcat(Byte,"\n");
						MostrarDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,""CB"Ayuda sobre el trabajo de Guardaespaldas", Byte, "Aceptar", "");
					}
					case 4:
					{
					    if(!TieneTrabajo(playerid, CAMIONERO))
						{
							MostrarDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,""CB"Ayuda sobre el trabajo de Camionero", ""CB"Este trabajo se obtiene en los muelles de San Fierro\nComienzas en nivel 1, ganando {66B3FF}$1250 "CB"por entrega realizada.\nEl trabajo es legal, siempre y cuando lleves productos legales.\nA medida que aumentes tu nivel como camionero, el pago ser� mayor, y los bonus por transportes ilegales ser�n mejores.\nPor ejmeplo: Nivel 1 de camionero = 2 piezas de armas, Nivel 2 = 5 piezas de armas, etc. Tambi�n aumenta la cantidad de drogas y medicamentos.\nEn caso de perder el punto de entrega, usa "CR"/cp camionero", "Aceptar", "");
							return 1;
						}
						MostrarDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,""CB"Ayuda sobre el trabajo de Camionero", ""CB"Cuando te hayas subido a un cami�n, puedes cargarlo usando "CR"/cargar camion\n"CB"Selecciona lo que llevar�s y se te marcar� en el mapa el punto donde se realizar� la entrega, luego trae el cami�n al muelle.\n"CB"Los camiones de color blanco son para las cuentas normales y los de color negro para usuarios con VIP2.\n"CB"En caso de perder el punto de entrega, usa "CR"/cp camionero\n\n"CR"No intentes usar cheats para realizar la entrega m�s r�pido porque te puede detectar el anticheat.", "Aceptar", "");
					}
					case 5:
				 	{
					    if(!FaccLegal(playerid) && FaccLegal2(playerid))
						{
							MostrarDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,""CB"Ayuda sobre el trabajo de Polic�a", ""CB"La {3399FF}polic�a"CB" es manejada por usuarios comunes, por lo que para entrar tendr�s que cumplir los requisitos que ellos te pidan.\nPuedes revisar nuestro foro "CR"https://"WebName"/foro"CB" para enterarte de cuales son.\n\nGeneralmente se requiere tener un nivel no tan bajo y llevar una buena interpretaci�n de tu personaje. Si eres nuevo\ny no sabes bien de qu� se trata, deja este trabajo para m�s adelante.", "Aceptar", "");
							return 1;
						}
						MostrarDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,""CB"Ayuda sobre el trabajo de Polic�a", ""CB"Los jugadores que tengan cargos(estrellas) estar�n identificados en el radar de distintos colores\n"CB"Desde el amarillo hasta el rojo en el radar.\n"CB"Para esposar a un jugador con cargos usa "CR"/esposar [id o nombre]\n"CB"Cuando ya est� esposado o abatido, necesitas arrestarlo para derivarlo a la comisar�a usando "CR"/arrestar [id o nombre]\n"CB"Para poder entregar al detenido, debes dirigirte a los garajes internos de las comisar�as, estando dentro\n"CB"puedes optar por quitarle cargos y luego entregarlo usando "CR"/entregar [id o nombre]", "Aceptar", "");

					}
					case 6:
					{
					    if(!TieneTrabajo(playerid, ARMERO))
						{
							new Byte[1000];
							strcat(Byte,""CB"Para obtener este trabajo necesitas como m�nimo nivel 3.");
							strcat(Byte,"\n");
							strcat(Byte,""CB"En la f�brica de armas ilegal de Los Santos dan el trabajo.");
							strcat(Byte,"\n");
							strcat(Byte,""CB"En caso de no encontrarla llama a un taxi "CR"/servicio taxi");
							strcat(Byte,"\n");
							strcat(Byte,""CB"Con este empleo podr�s fabricar una gran variedad de armas.");
							strcat(Byte,"\n");
							strcat(Byte,""CB"Igualmente todas aquellas personas que no son armeros, pueden vender sus armas con "CB"/vender "CB"["CR"nombre-del-arma"CB"]["CR"id/nombre"CB"]["CR"precio"CB"].");
							strcat(Byte,"\n");
							strcat(Byte,"\n");
							strcat(Byte,""CB"Listado de armas:");
							strcat(Byte,"\n");
							strcat(Byte,""CB"Pistola 9mm (9mm)");
							strcat(Byte,"\n");
							strcat(Byte,""CB"Pistola 9mm con slenciador (9mm-silenciada)");
							strcat(Byte,"\n");
							strcat(Byte,""CB"Escopeta normal (escopeta)");
							strcat(Byte,"\n");
							strcat(Byte,""CB"Desert Eagle (desert-eagle)");
							strcat(Byte,"\n");
							strcat(Byte,""CB"MP5");
							strcat(Byte,"\n");
							strcat(Byte,""CB"AK-47 (ak47)");
							strcat(Byte,"\n");
							strcat(Byte,""CB"M4");
							strcat(Byte,"\n");
							strcat(Byte,""CB"Rifle");
							strcat(Byte,"\n");
							strcat(Byte,""CB"Escopeta de combate (escopeta-de-combate)");
							strcat(Byte,"\n");
							strcat(Byte,""CB"Granada");
							MostrarDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,""CB"Ayuda sobre el trabajo de Fabricante de armas", Byte, "Aceptar", "");
							return 1;
						}
						new Byte[1000];
						strcat(Byte,""CB"Para crear armas usa "CR"/crear nombre-del-arma");
						strcat(Byte,"\n");
						strcat(Byte,""CB"Cada arma necesita un nivel de habilidad y una cantidad de piezas para poder crearla.");
						strcat(Byte,"\n");
						strcat(Byte,""CB"Listado de armas:");
						strcat(Byte,"\n");
						strcat(Byte,""CB"Nivel 1:");
						strcat(Byte,"\n");
						strcat(Byte,""CB"Pistola 9mm (9mm) (10 piezas)");
						strcat(Byte,"\n");
						strcat(Byte,""CB"Pistola 9mm con slenciador (9mm-silenciada) (12 piezas)");
						strcat(Byte,"\n");
						strcat(Byte,"\n");
						strcat(Byte,""CB"Nivel 2:");
						strcat(Byte,"\n");
						strcat(Byte,""CB"Escopeta normal (escopeta) (20 piezas)");
						strcat(Byte,"\n");
						strcat(Byte,"\n");
						strcat(Byte,""CB"Nivel 3:");
						strcat(Byte,"\n");
						strcat(Byte,""CB"Desert Eagle (desert-eagle) (36 piezas)");
						strcat(Byte,"\n");
						strcat(Byte,"\n");
						strcat(Byte,""CB"Nivel 4:");
						strcat(Byte,"\n");
						strcat(Byte,""CB"MP5 (58 piezas)");
						strcat(Byte,"\n");
						strcat(Byte,"\n");
						strcat(Byte,""CB"Nivel 5:");
						strcat(Byte,"\n");
						strcat(Byte,""CB"AK-47 (ak47) (82 piezas)");
						strcat(Byte,"\n");
						strcat(Byte,""CB"M4 (96 piezas");
						strcat(Byte,"\n\n");
						strcat(Byte,""CB"Nivel 6:");
						strcat(Byte,"\n");
						strcat(Byte,""CB"Rifle (52 piezas)");
						strcat(Byte,"\n\n");
						strcat(Byte,""CB"Nivel 7:");
						strcat(Byte,"\n");
						strcat(Byte,""CB"Escopeta de combate (escopeta-de-combate) (136 piezas)");
						strcat(Byte,"\n\n");
						strcat(Byte,""CB"Nivel 8:");
						strcat(Byte,"\n");
						strcat(Byte,""CB"Granada (156 piezas)");
						MostrarDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,""CB"Ayuda sobre el trabajo de Fabricante de armas", Byte, "Aceptar", "");
					}
					case 7:
					{
					    if(!TieneTrabajo(playerid,MECANICO))
						{
							new Byte[256];
							strcat(Byte,""CB"Para obtener el trabajo de mec�nico, tienes que ir al taller que se encuentra en Blueberry.");
							strcat(Byte,"\n"CB"Este trabajo cuenta con nivel y habilidad.");
							MostrarDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,""CB"Ayuda sobre el trabajo de Mec�nico", Byte, "Aceptar", "");
							return 1;
						}
						new Byte[1000];
						strcat(Byte,"\n");
						strcat(Byte,""CB"Para ponerte en servicio de mec�nico debes acercarte a la caseta y usa "CR"/mecanico");
						strcat(Byte,"\n");
						strcat(Byte,""CB"Cada veh�culo a reparar necesita distintas cantidades de repuestos.");
						strcat(Byte,"\n");
						strcat(Byte,""CB"Los repuestos se compran cerca del taller y tienen un costo de {66B3FF}$100 "CB"cada uno.");
						strcat(Byte,"\n");
						strcat(Byte,""CB"Para saber cuantos necesita cada uno usa "CR"/revisar");
						strcat(Byte,"\n");
						strcat(Byte,""CB"Siempre y cuando est�s cerca de un cliente que llam� al servicio y que tenga el cap� abierto.");
						strcat(Byte,"\n");
						strcat(Byte,""CB"Para ofrecer reparaci�n a alguien usa "CR"/reparar [precio]");
						strcat(Byte,"\n");
						strcat(Byte,""CB"Los clientes que necesiten mec�nicos se marcar� en el mapa de color "CR"celeste"CB".");
						strcat(Byte,"\n");
						strcat(Byte,""CB"Por cada nivel que aumentes reparar�s m�s r�pido.");
						strcat(Byte,"\n");
						MostrarDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,""CB"Ayuda sobre el trabajo de Mec�nico", Byte, "Aceptar", "");
					}
     				case 8:     //Cosechador
					{
			    		new dialog[1000];
			    		strcat(dialog, ""CB"El trabajo de granjero no requiere un nivel, pero tampoco se aumenta la habilidad trabajando.\n");
			    		strcat(dialog, "Este trabajo no ocupa lugar como trabajo primario ni secundario.\n");
			    		strcat(dialog, "En caso de no encontrarla llama a el "CR"/servicio taxi"CB"\n");
			    		strcat(dialog, "Para trabajar de cosechador, necesitas ir a alguna de las granjas de Los Santos.\n\n");
						strcat(dialog, "Las ganancias en dinero es similar a la de camionero.\n");
						strcat(dialog, "A veces tambi�n te dan un premio extra de regalo, los cuales pueden ser:\n\n");
						strcat(dialog, ""CR"Granja de Blueberry:"CB"\n");
			    		strcat(dialog, "Medicamentos (30% probabilidad de conseguirlo)\n");
			    		strcat(dialog, "Crack (10% probabilidad de conseguirlo)\n");
			    		strcat(dialog, "Ramo de flores (10% probabilidad de conseguirlo)\n");
			    		strcat(dialog, "Pala (10% probabilidad de conseguirla)\n\n\n");
			    		strcat(dialog, ""CR"Granja de Flint Range:"CB"\n");
			    		strcat(dialog, "Medicamentos (30% probabilidad de conseguirlo)\n");
			    		strcat(dialog, "Crack (13% probabilidad de conseguirlo)\n");
			    		strcat(dialog, "Ramo de flores (10% probabilidad de conseguirlo)\n");
			    		strcat(dialog, "Cuchillo (10% probabilidad de conseguirlo)\n");
						MostrarDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,""CB"Ayuda sobre el trabajo de Cosechador", dialog, "Aceptar", "");
					}
					case 9:     //Basurero
					{
					    if(!TieneTrabajo(playerid, BASURERO))
						{
							new Byte[1000];
							strcat(Byte,""CB"El trabajo de basurero no requiere de un nivel m�nimo.");
							strcat(Byte,"\n");
							strcat(Byte,""CB"Este trabajo se consigue en el basural que se encuentra entre Los Santos y San Fierro.");
							strcat(Byte,"\n");
							strcat(Byte,""CB"Para trabajar de basurero se necesitan dos personas, una que maneje el cami�n y otra que recolecte la basura.");
							strcat(Byte,"\n");
							strcat(Byte,""CB"Los pagos se incrementan a medida que suben de nivel. Tambi�n el tiempo de recolecci�n disminuye al subir de nivel.");
							strcat(Byte,"\n");
							strcat(Byte,""CB"En las bolsas de basure se puede llegar a encontrar una gran variedad de cosas.");
							strcat(Byte,"\n");
							strcat(Byte,""CB"Para comenzar a trabajar necesitan ponerse la ropa de basurero (cuentas VIP no necesitan).");
							strcat(Byte,"\n");
							MostrarDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,""CB"Ayuda sobre el trabajo de Basurero", Byte, "Aceptar", "");
							return 1;
						}
						new Byte[700];
			    		strcat(Byte, ""CB"El trabajo de transportista requiere nivel 3 de camionero o m�s.\n");
			    		strcat(Byte, "Adem�s para trabajar de transportista necesitas un cami�n DFT-30, no necesariamente tiene que ser tuyo.\n");
			    		strcat(Byte, "Este trabajo se consigue en Las Venturas y lo puedes encontrar en cualquier mapa o GPS.\n");
			    		strcat(Byte, "A medida que aumentes de nivel se agregar�n nuevos recorridos con nuevas cargas y el pago aumentar� "CR"$150"CB" cada nivel.\n");
						MostrarDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,""CB"Ayuda sobre el trabajo de Transportista", Byte, "Aceptar", "");
					}
					case 10:    //Transportista
					{
					    if(!TieneTrabajo(playerid, TRANSPORTISTA))
						{
						    new Byte[1000];
							strcat(Byte,""CB"El trabajo de transportista requiere nivel 3 de camionero o m�s.");
							strcat(Byte,"\n");
							strcat(Byte,""CB"Adem�s de trabajar de transportista necesitas un cami�n DFT-30, no necesariamente tiene que ser tuyo.");
							strcat(Byte,"\n");
							strcat(Byte,""CB"Este trabajo se consigue en Las Venturas y lo puedes encontrar en cualquier mapa o GPS.");
							strcat(Byte,"\n");
							strcat(Byte,""CB"A medida que aumentes de nivel se agregar�n nuevos recorridos con nuevas cargas y el pago aumentar� $150 cada nivel.");
							strcat(Byte,"\n");
							MostrarDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,""CB"Ayuda sobre el trabajo de Transportista", Byte, "Aceptar", "");
							return 1;
						}
			    		new Byte[700];
			    		strcat(Byte, ""CB"El trabajo de transportista requiere nivel 3 de camionero o m�s.\n");
			    		strcat(Byte, "Adem�s para trabajar de transportista necesitas un cami�n DFT-30, no necesariamente tiene que ser tuyo.\n");
			    		strcat(Byte, "Este trabajo se consigue en Las Venturas y lo puedes encontrar en cualquier mapa o GPS.\n");
			    		strcat(Byte, "A medida que aumentes de nivel se agregar�n nuevos recorridos con nuevas cargas y el pago aumentar� "CR"$150"CB" cada nivel.\n");
						MostrarDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,""CB"Ayuda sobre el trabajo de Transportista", Byte, "Aceptar", "");
					}
					case 11:    //Ladr�n
					{
			    		new Byte[700];
			    		strcat(Byte, ""CB"El ladr�n puede robar bienes de diferentes propiedades distribuidas por todo San Andreas.\n\n");
			    		strcat(Byte, "Para forzar cerraduras necesitas como m�nimo nivel 6 o una cuenta VIP y para robar, nivel 3 o cuenta VIP.\n");
                		strcat(Byte, "Para el trabajo de ladr�n se usan diferentes herramientas seg�n tu nivel de habilidad.\n");
                		strcat(Byte, "A medida que aumentes de nivel, podr�s usar otras herramientas para forzar las puertas m�s r�pido.\n");
						MostrarDialog(playerid, INFOLADRON, DIALOG_STYLE_MSGBOX, ""CB"Ayuda sobre el trabajo de Ladr�n", Byte, "Aceptar", "");
					}
					case 12:  // Minero
					{
					    new Byte[700];
					    strcat(Byte, ""CB"El trabajo de "CR"minero"CB" se consigue en una oficina ubicada en "CR"Bone Country"CB", Las Venturas, puedes encontrarla en tu GPS.\n\n");
                		strcat(Byte, "Una vez que consigas el trabajo, tendr�s que dirigirte a la mina que se encuentra al noroeste de la oficina.\n");
						strcat(Byte, "Antes de entrar a la mina tendr�s que ponerte el uniforme, lo puedes encontrar cerca de la entrada de la mina.\n\n");
						strcat(Byte, "Cuando tengas el uniforme, entra a la mina y comienza a picar la {6ebd9e}mina de hierro"CB", luego lleva la roca a la procesadora\nque se encuentra fuera de la mina para recibir tu pago.\n");
                        strcat(Byte, "A medida que subes de nivel podr�s ir picando diferentes rocas.");
						MostrarDialog(playerid, INFOLADRON, DIALOG_STYLE_MSGBOX, ""CB"Ayuda sobre el trabajo de Minero", Byte, "Aceptar","");
						return 1;
					}
					case 13:  // Pescador
					{
						MostrarDialog(playerid, INFOLADRON, DIALOG_STYLE_MSGBOX, ""CB"Ayuda sobre el trabajo de Pescador", ""CB"El trabajo de pescador se consigue en "CR"Ocean Docks"CB", puedes encontrarlo f�cilmente en el GPS.\nPara trabajar de pescador necesitas tener como minimo nivel 2.\nUna vez que tengas el trabajo, necesitas pedir un permiso de pesca gratuito, utilizando el comando "CR"/permiso pesca\n\n"CB"Este trabajo tiene 3 niveles y en cada nivel se habilitan diferentes zonas de pesca.\n\n"CR"Nivel 1"CB":\nPesca de tortugas, con un pago promedio de "CR"$1400\n\nNivel 2"CB":\nPesca de delfines, con un pago promedio de "CR"$2260\n\nNivel 3"CB":\nPesca de tiburones, con un pago promedio de "CR"$3650\n\n{FF3300}*"CB" Los pagos dependen del tipo de animal pescado y del peso del mismo.\n\nLos barcos pesqueros se consiguen en los mueles, pero tambi�n podr�s trabajar con tu propio barco.", "Aceptar","");
						return 1;
					}
					case 14:  // Prostitucion
					{
						new Byte[800];
						strcat(Byte,""CB"El trabajo de prostituci�n se consigue en "CR"Las Venturas"CB", puedes encontrarlo f�cilmente en el "CR"GPS"CB".");
						strcat(Byte,"\n\n");
						strcat(Byte,""CB"Una vez que tengas el trabajo, puedes comenzar a cobrar usando "CR"/ofrecer sexo "CB"["CR"ID"CB"-o-"CR"Nombre"CB"] ["CR"Precio"CB"].");
						strcat(Byte,"\n");
						strcat(Byte,""CB"No necesitas el trabajo para ofrecerlo, pero s� para cobrar por eso.");
						strcat(Byte,"\n\n");
						strcat(Byte,""CR"Quienes reciban sexo oral de prostitutas profesionales obtendr�n"CB":");
						strcat(Byte,"\n");
						strcat(Byte,""CB"- Blindaje "CR"+20%"CB" hasta llegar como m�ximo a "CR"80%"CB".");
						strcat(Byte,"\n\n");
						strcat(Byte,""CR"Quienes reciban sexo oral de personas sin esa ocupaci�n obtendr�n"CB":");
						strcat(Byte,"\n");
						strcat(Byte,""CB"- Blindaje "CR"+10%"CB" hasta llegar como m�ximo a "CR"50%"CB".");
						strcat(Byte,"\n\n");
						strcat(Byte,""CB"Para ofrecer "CR"sexo oral "CB"tienes que estar dentro de un veh�culo.");
						MostrarDialog(playerid, INFOLADRON, DIALOG_STYLE_MSGBOX, ""CB"Ayuda sobre el trabajo de Prostituci�n", Byte, "Aceptar","");
						return 1;
					}
					case 15: // LOCUTOR DE RADIO
					{
					    new dialog[3000];
						strcat(dialog, ""CB"El trabajo de locutor de radio no se consigue pero se adquiere una emisora en el "CR"Centro de radio y televisi�n"CB"\n");
						strcat(dialog, ""CB"Para crear una emisora necesitas {0080FF}VIP2 + $15000"CB"\n");
						strcat(dialog, ""CB"Una vez que tengas tu emisora, dirigete a alguna estaci�n de radio disponible y usa "CR"/transmitir"CB", despues se\n");
						strcat(dialog, ""CB"te asignara un "CR"stream id"CB", el cual lo tienes que memorizar.\n");
						strcat(dialog, "\n"CR"Para poder transmitir\n");
						strcat(dialog, ""CB"Para poder transmitir en tu estaci�n de radio requieres en tu computadora el programa WINAMP y el plugin SHOUTCAST DSP.\n");
						strcat(dialog,  ""CB"Una vez dentro del programa, presiona CTRL+P y saldra un menu, seleccionas Plug-ins, submenu DSP/Effect, y das click, despues\n");
						strcat(dialog, ""CB"haces doble click en el plugin de shoutcast mencionado anteriormente, y abrira otro menu, en el, rellenas los cuadros con lo siguiente:\n");
						strcat(dialog, ""CR"En el submenu LOGIN:\n");
						strcat(dialog, ""CR"Server Address:"CB" radio."WebName"\n");
						strcat(dialog, ""CR"Port:"CB" 8000\n");
						strcat(dialog, ""CR"Stream ID:"CB" El que se te halla asignado con el "CR"/transmitir\n");
						strcat(dialog, "DJ / User ID:"CB" admin\n");
						strcat(dialog, ""CR"Password:"CB" "NameServer"\n");
						strcat(dialog, ""CR"En el submenu Directory:\n");
						strcat(dialog, ""CB"Presionar palomita en Make this stream public\n");
						strcat(dialog, ""CR"Name: "CB"Nombre de tu estaci�n de radio\n");
						strcat(dialog, ""CR"URL: "CB"radio."WebName"\n");
						strcat(dialog, ""CR"En el submenu Enconder:\n");
						strcat(dialog, ""CR"Encoder Type: "CB"MP3 Encoder\n");
						strcat(dialog, ""CR"Encoder Settings: "CB"24kbps, 22050Hz, Mono\n");
						strcat(dialog, ""CB"Luego marcas la opci�n de arriba llamada Auto Connect.\n");
						strcat(dialog, ""CB"Al finalizar, se autoingresara, y quedara guardado, solamente para que cambie el streamid cada que transmitas.\n");
						strcat(dialog, ""CR"Puedes compartir microfonos con "CR"/dar microfono"CB" o "CR"/quitar microfono"CB".\n");
						strcat(dialog, ""CR"Para sincronizarte con tu propia radio, ingresa el comando "CR"/transmision"CB".\n");
						MostrarDialog(playerid, INFOLADRON, DIALOG_STYLE_MSGBOX, ""CB"Ayuda sobre el trabajo de Locutor de radio", dialog, "Aceptar","");
						return 1;
					}
				}
			}
		}
		case CAMIOND:
		{
			if(response)
			{
				AbrirPuertasCamionero(playerid);
				PlayerTemp[playerid][pt_Camionero] = false;
				GameTextForPlayer(playerid, "~g~~<~ CARGANDO CAMION ~>~", 10000, 3);
				BarraProgreso[playerid][1] = 10.0;
				BarraJob(playerid,1);
				ActBarraJob(playerid);
				SetTimerEx("CargarCamion",10000,false,"dd",playerid,listitem+1);
				return 1;
			}
			else CargandoC[playerid] = 0,DescongelarEx(playerid);
		}
		case COMPRARCAMELLO:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: MostrarDialog(playerid, COMPRARCAMELLO2, DIALOG_STYLE_LIST, "Comprar", "Medicamentos\nCrack\nMarihuana\nCoca�na\nHongos\nBomba C4\nChaleco Antibalas", "Aceptar", "Cancelar");
					case 1: MostrarDialog(playerid, VENDERCAMELLO, DIALOG_STYLE_LIST, "Vender", "Medicamentos\nCrack\nMarihuana", "Aceptar", "Cancelar");
				}
			}
			return 1;
		}
		case VENDERCRACK:
		{
			if(response)
			{
				new precio = 250;
				new preciototal = precio * strval(inputtext);
				if(strval(inputtext) <= 0) return Mensaje(playerid,-1,"Los items deben ser mayor a 0");
				if(PlayerInfo[playerid][pCrack] >= strval(inputtext))
				{
					if(DineroCamello >= preciototal)
					{
						format(string, sizeof(string), "Le vendiste al camello %sg de crack por $%s.", ConvertirNumero(strval(inputtext)),ConvertirNumero(preciototal));
						Mensaje(playerid, -1, string);
						DarDinero(playerid, preciototal);
						DineroCamello -= preciototal;
						CrackCamello += strval(inputtext);
						PlayerInfo[playerid][pCrack] -= strval(inputtext);
					}
					else
					{
						SetPlayerChatBubble(Camello, "Lo siento hombre, no tengo dinero para comprarte esa cantidad.", -1, 30.0, 5000);
						Mensaje(playerid,-1,"Lo siento hombre, no tengo dinero para comprarte esa cantidad.");
					}
				}
				else Mensaje(playerid, -1, "No tienes esa cantidad de crack.");
			}
			return 1;
		}
		case VENDERMARIHUANA:
		{
			if(response)
			{
				new precio = 250;
				new preciototal = precio * strval(inputtext);
				if(strval(inputtext) <= 0) return Mensaje(playerid,-1,"Los items deben ser mayor a 0");
				if(PlayerInfo[playerid][pMarihuana] >= strval(inputtext))
				{
					if(DineroCamello >= preciototal)
					{
						format(string, sizeof(string), "Le vendiste al camello %sg de marihuana por $%s.", ConvertirNumero(strval(inputtext)),ConvertirNumero(preciototal));
						Mensaje(playerid, -1, string);
						DarDinero(playerid, preciototal);
						DineroCamello -= preciototal;
						MarihuanaCamello += strval(inputtext);
						PlayerInfo[playerid][pMarihuana] -= strval(inputtext);
					}
					else
					{
						SetPlayerChatBubble(Camello, "Lo siento hombre, no tengo dinero para comprarte esa cantidad.", -1, 30.0, 5000);
						Mensaje(playerid,-1,"Lo siento hombre, no tengo dinero para comprarte esa cantidad.");
					}
				}
				else Mensaje(playerid, -1, "No tienes esa cantidad de marihuana.");
			}
			return 1;
		}
		case VENDERMEDICAMENTOS:
		{
			if(response)
			{
				new precio = 150;
				new preciototal = precio * strval(inputtext);
				if(strval(inputtext) <= 0) return Mensaje(playerid,-1,"Los items deben ser mayor a 0");
				if(PlayerInfo[playerid][pMedicamentos] >= strval(inputtext))
				{
					if(DineroCamello >= preciototal)
					{
						format(string, sizeof(string), "Le vendiste al camello %s medicamentos por $%s.", ConvertirNumero(strval(inputtext)),ConvertirNumero(preciototal));
						Mensaje(playerid, -1, string);
						DarDinero(playerid, preciototal);
						DineroCamello -= preciototal;
						MedicamentosCamello += strval(inputtext);
						PlayerInfo[playerid][pMedicamentos] -= strval(inputtext);
					}
					else
					{
						SetPlayerChatBubble(Camello, "Lo siento hombre, no tengo dinero para comprarte esa cantidad.", -1, 30.0, 5000);
						Mensaje(playerid,-1,"Lo siento hombre, no tengo dinero para comprarte esa cantidad.");
					}
				}
				else Mensaje(playerid, -1, "No tienes esa cantidad de medicamentos.");
			}
			return 1;
		}
		case VENDERCAMELLO:
		{
			if(DineroCamello > 0)
			{
				if(response)
				{
					switch(listitem)
					{
						case 0:
						{
							format(string,sizeof(string), "Selecciona la cantidad de medicamentos que deseas venderle al camello\nTengo $%s y compro $150 a cada uno.",ConvertirNumero(DineroCamello));
							MostrarDialog(playerid, VENDERMEDICAMENTOS, DIALOG_STYLE_INPUT, "Vende medicamentos", string, "Vender", "Cancelar");
						}
						case 1:
						{
							format(string,sizeof(string), "Selecciona la cantidad de gramos de crack que deseas venderle al camello\nTengo $%s y compro $250 a cada gramo.",ConvertirNumero(DineroCamello));
							MostrarDialog(playerid, VENDERCRACK, DIALOG_STYLE_INPUT, "Vende crack", string, "Vender", "Cancelar");
						}
						case 2:
						{
							format(string,sizeof(string), "Selecciona la cantidad de gramos de marihuana que deseas venderle al camello\nTengo $%s y compro $250 a cada gramo.",ConvertirNumero(DineroCamello));
							MostrarDialog(playerid, VENDERMARIHUANA, DIALOG_STYLE_INPUT, "Vende marihuana", string, "Vender", "Cancelar");
						}
					}
				}
			}
			else
			{
			    SetPlayerChatBubble(Camello, "Lo siento hombre, no tengo dinero.", -1, 30.0, 5000);
			    Mensaje(playerid, -1, "Lo siento hombre, no tengo dinero.");
			}
			return 1;
		}
		case COMPRARCAMELLO2:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						if(MedicamentosCamello > 0)
						{
							format(string, sizeof(string), "Elige una cantidad de medicamentos que deseas comprar\nTengo %d medicamentos y los vendo a 250 cada uno.",MedicamentosCamello);
							MostrarDialog(playerid, COMPRARMEDICAMENTOS, DIALOG_STYLE_INPUT, "Comprar medicamentos", string,"Comprar", "Cancelar");
						}
						else
						{
						    SetPlayerChatBubble(Camello, "Lo siento hombre, ya no tengo mas medicamentos.", -1, 30.0, 5000);
						    Mensaje(playerid, -1, "Lo siento hombre, ya no tengo mas medicamentos.");
						}
					}
					case 1:
					{
						if(CrackCamello > 0)
						{
							format(string, sizeof(string), "Elige una cantidad de crack que deseas comprar\nTengo %d gramos de crack y los vendo a 350 cada uno.",CrackCamello);
							MostrarDialog(playerid, COMPRARCRACK, DIALOG_STYLE_INPUT, "Comprar crack", string, "Comprar", "Cancelar");
						}
						else
						{
						    SetPlayerChatBubble(Camello, "Lo siento hombre, ya no tengo mas crack.", -1, 30.0, 5000);
						    Mensaje(playerid, -1, "Lo siento hombre, ya no tengo mas crack.");
						}
					}
					case 2:
					{
						if(MarihuanaCamello > 0)
						{
							format(string, sizeof(string), "Elige una cantidad de marihuana que deseas comprar\nTengo %d gramos de marihuana y los vendo a 350 cada uno.",MarihuanaCamello);
							MostrarDialog(playerid, COMPRARMARIHUANA, DIALOG_STYLE_INPUT, "Comprar marihuana", string, "Comprar", "Cancelar");
						}
						else
						{
						 	SetPlayerChatBubble(Camello, "Lo siento hombre, ya no tengo mas marihuana.", -1, 30.0, 5000),Mensaje(playerid, -1, "Lo siento hombre, ya no tengo mas marihuana.");
						}
					}
					case 3:
					{
						if(CocainaCamello > 0)
						{
							format(string, sizeof(string), "Elige la cantidad de coca�na que deseas comprar\nTengo %d gramos de coca�na y los vendo a 700 cada uno.",CocainaCamello);
							MostrarDialog(playerid, COMPRARCOCAINA, DIALOG_STYLE_INPUT, "Comprar coca�na", string, "Comprar", "Cancelar");
						}
						else
						{
						 	SetPlayerChatBubble(Camello, "Lo siento hombre, ya no tengo mas coca�na.", -1, 30.0, 5000),Mensaje(playerid, -1, "Lo siento hombre, ya no tengo mas coca�na.");
						}
					}
					case 4:
					{
						if(HongosCamello > 0)
						{
							format(string, sizeof(string), "Elige la cantidad de hongos que deseas comprar\nTengo %d hongos y los vendo a 700 cada uno.",HongosCamello);
							MostrarDialog(playerid, COMPRARHONGOS, DIALOG_STYLE_INPUT, "Comprar hongos", string, "Comprar", "Cancelar");
						}
						else
						{
						 	SetPlayerChatBubble(Camello, "Lo siento hombre, ya no tengo mas hongos.", -1, 30.0, 5000),Mensaje(playerid, -1, "Lo siento hombre, ya no tengo mas coca�na.");
						}
					}
					case 5:
					{
						if(PlayerInfo[playerid][jDinero] < 5000) return SetPlayerChatBubble(Camello, "Lo siento hombre, yo no doy prestado, consigue los $5.000.", -1, 30.0, 5000),Mensaje(playerid, -1, "Lo siento hombre, yo no doy prestado, consigue los $5.000.");
		                if(PlayerInfo[playerid][pC4] == 1) return Mensaje(playerid,-1,"Ya tiene una bomba tipo C4.");
						QuitarDinero(playerid, 5000);
		                PlayerInfo[playerid][pC4] = 1;
						DineroCamello += 5000;
					 	Mensaje(playerid, -1, "Compraste una bomba tipo c4 al camello por $5.000");

					}
					case 6:
					{
						if(PlayerInfo[playerid][jDinero] < 3500) return SetPlayerChatBubble(Camello, "Lo siento hombre, yo no doy prestado, consigue los $3500.", -1, 30.0, 5000),Mensaje(playerid, -1, "Lo siento hombre, yo no doy prestado, consigue los $3.500.");
						EstablecerChaleco(playerid, 100);
						QuitarDinero(playerid, 3500);
						DineroCamello += 3500;
					 	Mensaje(playerid, -1, "Compraste un chaleco antibalas al camello por $3500");
					}
				}
			}
		}
		case COMPRARCRACK:
		{
			if(response)
			{
				if(CrackCamello >= strval(inputtext))
				{
					new precio = 350;
					new preciofinal = strval(inputtext) * precio;
					if(strval(inputtext) <= 0) return Mensaje(playerid,-1,"Los items deben ser mayor a 0");
					if(PlayerInfo[playerid][jDinero] >= preciofinal)
					{
						format(string, sizeof(string), "Compraste %sg de crack al camello por $%s.", ConvertirNumero(strval(inputtext)), ConvertirNumero(preciofinal));
						Mensaje(playerid, -1, string);
						QuitarDinero(playerid, preciofinal);
						PlayerInfo[playerid][pCrack] += strval(inputtext);
						CrackCamello -= strval(inputtext);
						DineroCamello += preciofinal;
					}
					else Mensaje(playerid, -1, "No tienes suficiente dinero.");
				}
				else
				{
					SetPlayerChatBubble(Camello, "Lo siento man, no tengo esa cantidad de crack.", -1, 30.0, 5000);
					Mensaje(playerid, -1, "Lo siento man, no tengo esa cantidad de crack.");
				}
			}
			return 1;
		}
		case COMPRARMARIHUANA:
		{
			if(response)
			{
				if(MarihuanaCamello >= strval(inputtext))
				{
					new precio = 350;
					new preciofinal = strval(inputtext) * precio;
					if(strval(inputtext) <= 0) return Mensaje(playerid,-1,"Los items deben ser mayor a 0");
					if(PlayerInfo[playerid][jDinero] >= preciofinal)
					{
						format(string, sizeof(string), "Compraste %sg de marihuana al camello por $%s.", ConvertirNumero(strval(inputtext)), ConvertirNumero(preciofinal));
						Mensaje(playerid, -1, string);
						QuitarDinero(playerid, preciofinal);
						PlayerInfo[playerid][pMarihuana] += strval(inputtext);
						MarihuanaCamello -= strval(inputtext);
						DineroCamello += preciofinal;
					}
					else Mensaje(playerid, -1, "No tienes suficiente dinero.");
				}
			 	else
			 	{
				 	SetPlayerChatBubble(Camello, "Lo siento man, no tengo esa cantidad de marihuana.", -1, 30.0, 5000);
			 	 	Mensaje(playerid, -1, "Lo siento man, no tengo esa cantidad de marihuana.");
				}
			}
			return 1;
		}

		case COMPRARCOCAINA:
		{
			if(response)
			{
				if(CocainaCamello >= strval(inputtext))
				{
					new precio = 700;
					new preciofinal = strval(inputtext) * precio;
					if(strval(inputtext) <= 0) return Mensaje(playerid,-1,"Los items deben ser mayor a 0");
					if(PlayerInfo[playerid][jDinero] >= preciofinal)
					{
						format(string, sizeof(string), "Compraste %sg de cocaina al camello por $%s.", ConvertirNumero(strval(inputtext)), ConvertirNumero(preciofinal));
						Mensaje(playerid, -1, string);
						QuitarDinero(playerid, preciofinal);
						PlayerInfo[playerid][pCocaina] += strval(inputtext);
						CocainaCamello -= strval(inputtext);
						DineroCamello += preciofinal;
					}
					else Mensaje(playerid, -1, "No tienes suficiente dinero.");
				}
			 	else
			 	{
				 	SetPlayerChatBubble(Camello, "Lo siento man, no tengo esa cantidad de cocaina.", -1, 30.0, 5000);
			 	 	Mensaje(playerid, -1, "Lo siento man, no tengo esa cantidad de cocaina.");
				}
			}
			return 1;
		}

		case COMPRARHONGOS:
		{
			if(response)
			{
				if(HongosCamello >= strval(inputtext))
				{
					new precio = 700;
					new preciofinal = strval(inputtext) * precio;
					if(strval(inputtext) <= 0) return Mensaje(playerid,-1,"Los items deben ser mayor a 0");
					if(PlayerInfo[playerid][jDinero] >= preciofinal)
					{
						format(string, sizeof(string), "Compraste %s hongos al camello por $%s.", ConvertirNumero(strval(inputtext)), ConvertirNumero(preciofinal));
						Mensaje(playerid, -1, string);
						QuitarDinero(playerid, preciofinal);
						PlayerInfo[playerid][pHongos] += strval(inputtext);
						HongosCamello -= strval(inputtext);
						DineroCamello += preciofinal;
					}
					else Mensaje(playerid, -1, "No tienes suficiente dinero.");
				}
			 	else
			 	{
				 	SetPlayerChatBubble(Camello, "Lo siento man, no tengo esa cantidad de hongos.", -1, 30.0, 5000);
			 	 	Mensaje(playerid, -1, "Lo siento man, no tengo esa cantidad de hongos.");
				}
			}
			return 1;
		}

		case COMPRARMEDICAMENTOS:
		{
			if(response)
			{
				if(MedicamentosCamello >= strval(inputtext))
				{
					new precio = 250;
					new preciofinal = strval(inputtext) * precio;
					if(strval(inputtext) <= 0) return Mensaje(playerid,-1,"Los items deben ser mayor a 0");
					if(PlayerInfo[playerid][jDinero] >= preciofinal)
					{
						format(string, sizeof(string), "Compraste %s medicamentos al camello por $%s.",ConvertirNumero(strval(inputtext)),ConvertirNumero(preciofinal));
						Mensaje(playerid, -1, string);
						QuitarDinero(playerid, preciofinal);
						PlayerInfo[playerid][pMedicamentos] += strval(inputtext);
						MedicamentosCamello -= strval(inputtext);
						DineroCamello += preciofinal;
					}
					else Mensaje(playerid, -1, "No tienes suficiente dinero.");
				}
				else
				{
					SetPlayerChatBubble(Camello, "Lo siento man, no tengo esa cantidad de medicamentos.", -1, 30.0, 5000);
					Mensaje(playerid, -1, "Lo siento man, no tengo esa cantidad de medicamentos.");
				}
			}
			return 1;
		}
	}
	return 1;
}

public OnPlayerEnterDynamicArea(playerid, areaid)
{
    if(IsPlayerNPC(playerid)) return 1;
    if(Streamer_GetIntData(STREAMER_TYPE_AREA, areaid, E_STREAMER_EXTRA_ID) == AREA_CHEAT) DisableRemoteVehicleCollisions(playerid, true);
	if(PlayerConectado(playerid))
	{
		for(new e = 1; e < 5; e++)
		{
			if(areaid == AreaCabinas[e])
			{
				if(GetPlayerInterior(playerid) == 5 && GetPlayerVirtualWorld(playerid) == 5 && EnCabina[playerid] == 0)
				{
					if(CabinasOcupadasEmisoras[e][0] != 0)
					{
						new id = CabinasOcupadasEmisoras[e][1];
						if(Emisoras[id][CabinaOcupada] == e)
						{
							if(Emisoras[id][TransEmisora] == 1)
							{
								if(e == 1 && !IsPlayerInArea(playerid,335.1406,348.3424, 176.4459,189.2787)) return 1;
								else if(e == 2 && !IsPlayerInArea(playerid,334.5453,348.3273,154.5333,163.1373)) return 1;
								else if(e == 3 && !IsPlayerInArea(playerid,341.4131,348.4351,144.0930,153.1205)) return 1;
								else if(e == 4 && !IsPlayerInArea(playerid,360.7875,366.0172,153.1041,161.7399)) return 1;
								va_SendClientMessage(playerid,-1,"Emisora: %d "CR"- %s",e,Emisoras[id][NombreEmisora]);
								MP3Escuchando[playerid] = -1;
								ParlanteEscuchando[playerid] = -1;
								EnCabina[playerid] = e;
								if(ShowSound[playerid] == 1)
								{
									new stringa[128];
									format(stringa, sizeof(stringa), "http://radio."WebName":8000/listen.pls?sid=%d", Emisoras[id][EmisoraID]);
									PlayAudioStreamForPlayer(playerid, stringa);
								}
								return 1;
							}
							return 1;
						}
						return 1;
					}
					return 1;
				}
				return 1;
			}
		}
		if(areaid == AreaFabrica)
		{
			if(PlayerInfo[playerid][pObj][0] == 19472 && UsandoObj[0][playerid] == 1 || PlayerInfo[playerid][pObj][1] == 19472 && UsandoObj[1][playerid] == 1 || PlayerInfo[playerid][pObj][2] == 19472 && UsandoObj[2][playerid] == 1 || PlayerInfo[playerid][pObj][3] == 19472 && UsandoObj[3][playerid] == 1 ) return 1;
		    foreach(new f : Fabricas)
			{
				if(PlayerInfo[playerid][jMiembro] == Fabricas[f][pBanda])
				{
			    	if(GetPlayerVirtualWorld(playerid) == Fabricas[f][pVW] && GetPlayerInterior(playerid) == Fabricas[f][pInt])
			    	{
						if(HornoEncendido[0][f] == 1 || HornoEncendido[1][f] == 1 || HornoEncendido[2][f] == 1)
						{
					        TextDrawShowForPlayer(playerid,Sangre2);
							Mensaje(playerid,-1,"Entraste en un area de "CR"gases t�xicos"CB", perder�s"CR" salud"CB" por no usar una {317fca}m�scara anti-gas"CB".");
							DANOF[playerid] = SetTimerEx("DanoFabrica",1000,true,"d",playerid);
	      					return 1;
						}
					}
				}
	 		}
			return 1;
		}
		if(areaid == ZonaTuning) DisableRemoteVehicleCollisions(playerid, true);
		if(areaid == ZonaSalon)
		{
			if(Alquilado == true)
			{
				if(Boleto[playerid] == false)
				{
			    	if(strcmp(Alquilador,NombreJugador(playerid),true) == 1)
					{
						if(PlayerTemp[playerid][Specteando] == 0) Mensaje(playerid,-1,"Los guardias del sal�n te expulsaron por no haber pagado la entrada."),SetPosEx(playerid, 1423.4301,-1180.1801,25.9922, 0, 0, 0);
					}
				}
				else
				{
					if(Escuchando[playerid] == false)
					{
    					Escuchando[playerid] = true;
				    	if(ShowSound[playerid] == 1)
						{
	    					new mensa[128];
					    	format(mensa,sizeof(mensa),"http://radio."WebName":8000/listen.pls?sid=%d", PuertoSalon);
			 				PlayAudioStreamForPlayer(playerid, mensa);
						}
					}
				}
			}
		}
     	if(AvisoTerritorio[playerid] == 1 && GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 0)
		{
		    foreach(new i : Territorios)
			{
				if(areaid == Tdata[i][tzone])
				{
					if(Tdata[i][tValid] == 1)
					{
						if(IsPlayerInArea(playerid, Tdata[i][minX], Tdata[i][maxX],Tdata[i][minY], Tdata[i][maxY]))
						{
							if(Tdata[i][tactiva] == 0)
	  						{
								if(Tdata[i][tBanda] == 2) return Mensaje(playerid,-1,"Entraste a un territorio no conquistado utiliza "CR"/conquistar"CB" para tomarlo.");
								else return va_SendClientMessage(playerid,-1,"Entraste al territorio de la banda {%s}'%s'"CB".",BandasInfo[Tdata[i][tBanda]][BColor],BandasInfo[Tdata[i][tBanda]][BNombre]);
	 						}
	 						else return va_SendClientMessage(playerid,-1,"Este territorio est� siendo atacado por la banda {%s}'%s'"CB".",BandasInfo[Tdata[i][tactiva]][BColor],BandasInfo[Tdata[i][tactiva]][BNombre]);
 						}
					}
				}
			}
		}
	}
	foreach(new i : Player)
	{
        if(areaid == GetPVarInt(i, "BBArea"))
        {
			if(ShowSound[playerid] == 1)
			{
				new url[100];
				GetPVarString(i, "BBStation", url, sizeof(url));
				PlayAudioStreamForPlayer(playerid, url, GetPVarFloat(i, "BBX"), GetPVarFloat(i, "BBY"), GetPVarFloat(i, "BBZ"), 30.0, 1);
				Mensaje(playerid, COLOR_GREY, "Escuchas m�sica de un parlante cercano.");
			}
			break;
		}
	}

	for(new i = 0; i < sizeof Zonasegura; i ++)
	{
		if(areaid == Zonasegura[i])
		{
			for(new e = 0; e < sizeof SafeZoneText; e++) TextDrawShowForPlayer(playerid, SafeZoneText[e]);
			ZonaSegura[playerid] = 1;
			break;
		}
	}
	return 1;
}

public OnPlayerLeaveDynamicArea(playerid, areaid)
{
    if(IsPlayerNPC(playerid)) return 1;
	new bool:adentro;
    if(Streamer_GetIntData(STREAMER_TYPE_AREA, areaid, E_STREAMER_EXTRA_ID) == AREA_CHEAT)
    {
		foreach(new i : Player)
        {
            if(IsPlayerInDynamicArea(playerid, AreaCheat[i]))
            {
                adentro = true;
                break;
            }
        }
        if(adentro) DisableRemoteVehicleCollisions(playerid, true);
        else DisableRemoteVehicleCollisions(playerid, false);
    }
	if(ParlanteEscuchando[playerid] != -1)
	{
		foreach(new i : Player)
		{
			if(GetPVarType(i, "BBArea"))
	    	{
				if(areaid == GetPVarInt(i, "BBArea"))
				{
					StopAudioStreamForPlayer(playerid);
					Mensaje(playerid, COLOR_GREY, "Te alejas de la zona y la m�sica deja de oirse poco a poco");
					ParlanteEscuchando[playerid] = -1;
					break;
				}
			}		
		}
	}
	

	for(new e = 1; e < 5; e++)
	{
		if(areaid == AreaCabinas[e])
		{
			if(CabinasOcupadasEmisoras[e][0] != 0)
			{
				new id = CabinasOcupadasEmisoras[e][1];
				if(Emisoras[id][CabinaOcupada] == e)
				{
					if(Emisoras[id][TransEmisora] == 1)
					{
						StopAudioStreamForPlayer(playerid);
						EnCabina[playerid] = 0;
						if(id == playerid)
						{
							if(CabinasOcupadasEmisoras[e][0] == 1)
							{
								CabinasOcupadasEmisoras[e][0] = 0;
								CabinasOcupadasEmisoras[e][1] = -1;
								Emisoras[playerid][TransEmisora] = 0;
								Emisoras[playerid][CabinaOcupada] = 0;
								format(Emisoras[playerid][URLEmisora], 128, "http://radio."WebName":8000/listen.pls");
								new string[150];
								format(string,sizeof(string),""CB"Radio disponible {C0C0C0}[N%d]",e);
								UpdateDynamic3DTextLabelText(CabinasTextos[e], COLOR_BLANCO, string);
								Mensaje(playerid, COLOR_BLANCO, "Has dejado de transmitir en esta cabina.");
								RemovePlayerAttachedObject(playerid,4);
								foreach(new id2 : Player)
								{
									
									if(TieneMicrofono[id2] == e) RemovePlayerAttachedObject(id2,4),TieneMicrofono[id2] = 0;
									if(IsPlayerInDynamicArea(id2, AreaCabinas[e])) Mensaje(id2, COLOR_BLANCO, "La emisora que estabas escuchando dejo de transmitir."),StopAudioStreamForPlayer(id2);
									if(IsPlayerInAnyVehicle(id2) && EmisoraEscuchando[GetPlayerVehicleID(id2)] == e || MP3Escuchando[id2] == e || ParlanteEscuchando[id2] == e)
									{
										MP3Escuchando[playerid] = -1;
										MP3Escuchando[id2] = -1;
										ParlanteEscuchando[playerid] = -1;
										ParlanteEscuchando[id2] = -1;
										Mensaje(id2, COLOR_BLANCO, "La emisora que estabas escuchando dejo de transmitir.");
										StopAudioStreamForPlayer(id2);
									}
									
								}
								foreach(new vehicleid: Vehicle)
								{
									if(EmisoraEscuchando[vehicleid] == e) EmisoraEscuchando[vehicleid] = -1;
								}
								return 1;
							}
							return 1;
						}
						return 1;
					}
					return 1;
				}
				return 1;
			}
			return 1;
		}
	}
	if(areaid == ZonaTuning) DisableRemoteVehicleCollisions(playerid, false);
	if(areaid == ZonaFC)
    {
      	if(PlayerInfo[playerid][pTipoCarcel] == 4 && StatusFC[playerid] == 1 && PlayerInfo[playerid][pTiempoCarcel] > 0)
      	{
    	  	new rand;
			rand = random(sizeof(FortCarsonSpawn));
			SetPosEx(playerid, FortCarsonSpawn[rand][0], FortCarsonSpawn[rand][1], FortCarsonSpawn[rand][2], 0, 15, 15);
			return 1;
		}
		return 1;
    }
    if(areaid == ZonaLS)
    {
		new autoid = GetPlayerVehicleID(playerid);
		if(COSECHA(autoid) && VehiculosInfo[autoid][vtrabajo] == 88) return Respawnear(autoid);
		return 1;
    }
    if(areaid == ZonaBB)
    {
		new autoid = GetPlayerVehicleID(playerid);
		if(COSECHA(autoid) && VehiculosInfo[autoid][vtrabajo] == 77) return Respawnear(autoid);
		return 1;
    }
	if(areaid == AreaFabrica)
	{
		KillTimer(DANOF[playerid]);
		TextDrawHideForPlayer(playerid,Sangre2);
	}
	if(areaid == ZonaSalon)
	{
		if(Escuchando[playerid] == true) StopAudioStreamForPlayer(playerid),Escuchando[playerid] = false;
	}

	for(new i = 0; i < sizeof Zonasegura; i ++)
	{
		if(areaid == Zonasegura[i])
		{

			for(new e = 0; e < sizeof SafeZoneText; e++) TextDrawHideForPlayer(playerid, SafeZoneText[e]);
			ZonaSegura[playerid] = 0;
			break;
		}
	}

	/*if(areaid == Zonasegura[0] || areaid == Zonasegura[1] || areaid == Zonasegura[2] || areaid == Zonasegura[3] || areaid == Zonasegura[4])
	{
		ZonaSegura[playerid] = 0;
		GameTextForPlayer(playerid, "~r~HAS SALIDO DE ZONA SEGURA", 2500, 3);
	}*/
	return 1;
}

Funcion:IniciarCargadoClub(playerid)
{
	TextDrawShowForPlayer(playerid, EsperarT[0]);
	TextDrawShowForPlayer(playerid, EsperarT[1]);
	return 1;
}

Funcion:QuitarCargando(playerid)
{
	TextDrawHideForPlayer(playerid, EsperarT[0]);
	TextDrawHideForPlayer(playerid, EsperarT[1]);
	return 1;
}

Funcion:MoverAvion()
{
	if(IsValidObject(avion[0])) MoveObject(avion[0], 2099.9314, -2528.7642, 1956.45000, 20.0);
	if(IsValidObject(avion[1])) MoveObject(avion[1], 2099.9314, -2528.7642, 1956.45000, 20.0);
	return 1;
}
/*
static CargarExtra(playerid)
{
	new Query[600];
	for(new p = 1; p < 5; p++)
	{
		mysql_format(Conecction, Query, sizeof(Query), "SELECT * FROM `prendas` WHERE `Slot` = '%d' AND `UserID` = '%d'",p,PlayerInfo[playerid][p_DBID]);
	 	mysql_tquery(Conecction, Query, "cargarprendas", "ii",p,playerid);
 	}
	for(new i = 0; i < 17; i++)
	{
        mysql_format(Conecction, Query, sizeof(Query), "SELECT * FROM `logros` WHERE `Tipo` = '%d' AND `UserID` = '%d'",i,PlayerInfo[playerid][p_DBID]);
    	mysql_tquery(Conecction, Query, "cargar_logros", "ii",i,playerid);
	}
	return 1;
}*/

static CargarExtra(playerid)
{
	new Query[80];
	mysql_format(Conecction, Query, sizeof(Query), "SELECT * FROM `prendas` WHERE `UserID` = '%d' LIMIT 4",PlayerInfo[playerid][p_DBID]);
	mysql_tquery(Conecction, Query, "cargarprendas", "i",playerid);
 	
	
    mysql_format(Conecction, Query, sizeof(Query), "SELECT * FROM `logros` WHERE `UserID` = '%d' LIMIT 17",PlayerInfo[playerid][p_DBID]);
    mysql_tquery(Conecction, Query, "cargar_logros", "i",playerid);
	
	return 1;
}



task AutoCheats2[7000]()
{
    contadoravion += 7;
    if(contadoravion == 301)
    {
        if(IsValidObject(avion[0]) && avion[0] != INVALID_OBJECT_ID) 
		{
			DestroyObject(avion[0]);
			avion[0] = INVALID_OBJECT_ID;
		}
        if(IsValidObject(avion[1])) {
			DestroyObject(avion[1]);
			avion[1] = INVALID_OBJECT_ID;
		}
        avion[0] = CreateObject(14553, 433.54700, 2499.31616, 1956.43201,   357.00000, 0.00000, 360.00000);
		avion[1] = CreateObject(14548, 433.55844, 2502.92212, 1956.05420,   356.85840, 0.00000, 360.00000);
        contadoravion = 0;
        foreach(new i : Player)
  		{
		    if(ViajeAvion[i] == 1 && EstaEn(i, 20.0, 414.7434, 2533.9641, 19.1484))
	    	{
				SetPosEx(i, 433.6143, 2511.1050, 1952.6047, 0.7009, 0, 0);
				Mensaje(i, -1, "Por favor evita saltar y correr dentro del avi�n.");
				DarArma(i, 46);
				ViajeAvion[i] = 0;
				TextDrawShowForPlayer(i, EsperarT[0]);
				TextDrawShowForPlayer(i, EsperarT[1]);
				SetTimerEx("QuitarCargando", 3000, false, "d", i);
	    	}
		}
        SetTimer("MoverAvion", 1000, false);
    }
	
	/*for(new v, j = GetVehiclePoolSize(); v <= j; v++)
 	{
		if(VehiculosInfo[v][vcomprable] == 1 && GetDistanceVehAC(v) > 5) Respawnear(v);
 	}*/
}

static GetDistanceVehAC(veh)
{
	new Float:x, Float:y, Float:z, Float:distance;
	GetVehiclePos(veh, x, y, z);
	distance = floatsqroot((x-VehiculosInfo[veh][vx])*(x-VehiculosInfo[veh][vx])+(y-VehiculosInfo[veh][vy])*(y-VehiculosInfo[veh][vy])+(z-VehiculosInfo[veh][vz])*(z-VehiculosInfo[veh][vz]));
	return floatround(distance);
}

Funcion:ReJoinNPC(number)
{
    switch(number)
	{
	    case 0: { ConnectNPC("Motorman1","Motorman1"); }
	    case 1: { ConnectNPC("Motorman2","Motorman2"); }
	    case 2: { ConnectNPC("Motorman3","Motorman3"); }
	    case 3: { ConnectNPC("Motorman4","Motorman4"); }
	    case 4: { ConnectNPC("Alexis","Alexis"); }
	    case 5: { ConnectNPC("Marcelo","Marcelo"); }
	    case 6: { ConnectNPC("Alejandro","Alejandro"); }
	    case 7: { ConnectNPC("Camello","Camello"); }
	    case 8: { ConnectNPC("HippePepe","HippePepe"); }
	    case 9: { ConnectNPC("Angelica","Angelica"); }
	    case 10: { ConnectNPC("Jorge","Jorge"); }
	    case 11: { ConnectNPC("Ignacio","Ignacio"); }
	    case 12: { ConnectNPC("Hugo","Hugo"); }
	    case 13: { ConnectNPC("Mao","Mao"); }
	}
	return 1;
}

static LlamadaTransportista(i)
{
	if(TieneTrabajo(i, TRANSPORTISTA))
	{
		if(TelefonoEstado[i] == 0 && tviaje[i] == 0 && EnLlamada[i] == 0 && PlayerInfo[i][MobileSub] == -1 && Jail[i] == 0)
		{
			new string[128];
			format(string, sizeof(string), "El tel�fono de %s est� sonando.", NombreJugador(i));
			ProxDetector(30.0, i, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
			format(string, sizeof(string), "Te est�n llamando por tel�fono desde el n�mero: "CR"4825"CB", usa "CR"/atender"CB" o "CR"/colgar");
			Mensaje(i, -1, string);
			PlayerInfo[i][MobileSub] = 2540;
			SetTimerEx("ColgarLlamada",30000,false,"d",i);
			llamada(i);
		}
	}
	return 1;
}

ptask TimerSeisMinutos[360000](playerid)
{
	if(strcmp(User_Temp[playerid][DiscordID], "0", true) == 0)
	{
	  ShowTDN(playerid, "~w~No tienes la protecci�n de dos factores activada, puedes hacerlo en ~p~/est - Vincular discord~w~.");
	}
	LlamadaTransportista(playerid);
	
	for(new a = 0; a < MAX_PAUTOS; a++)
	{
		if(!IsValidVehicle(autos[a][playerid])) continue;

		if(!AVION(autos[a][playerid]) && IsVehicleInArea(autos[a][playerid],1421,1566,-1775,-1584))
		{
			if(!AutoOcupado(autos[a][playerid])) Auto(playerid,a,5);
		}
		else if(!AVION(autos[a][playerid]) && IsVehicleInArea(autos[a][playerid],-1755,-1552,-193.5,77.5)) //Easter basin docks
		{
			if(!AutoOcupado(autos[a][playerid])) Auto(playerid,a,4);
		}

	}

	/******
	if(!AVION(u) && IsVehicleInArea(u,1421,1566,-1775,-1584)) //LSPD
	{
		for(new a = 0; a < MAX_PAUTOS; a++)
		{
			if(!IsValidVehicle(autos[a][i])) continue;
			if(u == autos[a][i] && AutoOcupado(u) == 0) Auto(i,a,5);
		}
	}
	if(!AVION(u) && IsVehicleInArea(u,-1755,-1552,-193.5,77.5)) //Easter basin docks
	{
		for(new a = 0; a < MAX_PAUTOS; a++)
		{
			if(!IsValidVehicle(autos[a][i])) continue;
			if(u == autos[a][i] && AutoOcupado(u) == 0) Auto(i,a,4);
		}
	}
	*/
	return 1;
}

Funcion:LoadBarrelMeta(id,fab)
{
	Quimicos[id] = 0;
	QuimicosActivo[fab] = 0;
}
Funcion:MejoraMotor(playerid)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new Keysa,fairea,lra;
		GetPlayerKeys(playerid,Keysa,fairea,lra);
		if(Keysa == KEY_SPRINT)
		{
			new autoid = GetPlayerVehicleID(playerid);
			
			new Float:velocidad = GetVehicleSpeed(autoid);
			if(MotorAuto[autoid] == 1)
			{
				for(new a = 0; a < MAX_PAUTOS; a++)
				{
					if(autos[a][playerid] == autoid && VehicleInfo[playerid][a][Aceleracion] == 1 && VehicleInfo[playerid][a][AceleracionActiva] == 1)
					{

						new Float:health;
						GetVehicleHealth(autoid, health);
						if(health < 380.0)
						{
							Mensaje(playerid,-1, "La mejora de motor fue desactivada autom�ticamente, el veh�culo est� en mal estado.");
							VehicleInfo[playerid][a][AceleracionActiva] = 0;
							KillTimer(TimerMejora[playerid]);
						}
						if(velocidad < GetVehicleTopSpeed(autoid)+20)
						{
							new Float:xx,Float:xy,Float:xz;
							GetVehicleVelocity(autoid, xx, xy, xz);
							SetVehicleVelocity(autoid, xx+(xx / 6), xy+(xy / 6), xz+(xz / 6));
						}

						break;
					}
				}
			}
			
		}
	}
	else{
		KillTimer(TimerMejora[playerid]);
	}
}

Funcion:SREFERIDOS2(playerid, inputtext)
{
	if(cache_num_rows())
	{
		new name[26], IPA[24], conectado;
		new plrIP[24];
		GetPlayerIp(playerid, plrIP, sizeof(plrIP));
		new h = cache_num_rows();
		for(new i = 0; i < h; i++)
		{
			cache_get_value_name(i, "Username", name);
			cache_get_value_name(i, "IP", IPA);
			cache_get_value_name_int(i, "Online",conectado);
		}
		if(strcmp(plrIP, IPA, true) == 0)
		{
			MostrarDialog(playerid, DIALOG_REFERIDO2, DIALOG_STYLE_INPUT, "Ingresa el c�digo de referido.", "{AB0505}No puedes ser referido de ese jugador.\n{FFFFFF}El c�digo de referido {1DAB1F}solo contiene n�meros{FFFFFF}.\nSi no lo conoces p�dele a tu amigo que use el comando {1DAB1F}/referidos{FFFFFF}.", "{1DAB1F}Continuar", "{CF3030}Cancelar");
			return 1;
		}
		new Queris[120];
		mysql_format(Conecction, Queris, sizeof(Queris), "INSERT INTO referidos (JugadorRefiriendo, JugadorReferido) VALUES ('%d', %d)",inputtext,  PlayerInfo[playerid][p_DBID] );
		mysql_tquery(Conecction, Queris);
		new str[144];
		if(conectado)
		{
			foreach(new i: Player)
			{
				if ( PlayerInfo[i][p_DBID]  == inputtext){
					format(str, sizeof(str), "Muchas gracias por invitar a {1DAB1F}%s{FFFFFF}.", NombreJugador(playerid));
					Mensaje(i, -1, str);
					Mensaje(i, -1, "Tendr� que llegar al nivel 7 para que recibas tus recompensas.");
					break;
				}
			}
		}

		format(str, sizeof(str),"{FFFFFF}Ahora eres el referido de {1DAB1F}%s{FFFFFF}.\nLlega al nivel {1DAB1F}7{FFFFFF} para que {1DAB1F}%s{FFFFFF} pueda recibir sus recompensas.", name, name);
		MostrarDialog(playerid, DRECARGA, DIALOG_STYLE_MSGBOX, "Excelente...", str, "{1DAB1F}Continuar", "");

	}
	else
	{
		MostrarDialog(playerid, DIALOG_REFERIDO2, DIALOG_STYLE_INPUT, "Ingresa el c�digo de referido.", "{AB0505}Este c�digo no existe, asegurate de ingresar uno v�lido.\n{FFFFFF}El c�digo de referido {1DAB1F}solo contiene n�meros{FFFFFF}.\nSi no lo conoces p�dele a tu amigo que use el comando {1DAB1F}/referidos{FFFFFF}.", "{1DAB1F}Continuar", "{CF3030}Cancelar");
	}
	return 1;
}

Funcion:SelectReferidos(playerid)
{
	new h = cache_num_rows();
	if(h)
	{
		new Queri[120];
		DarRecompensasReferido(playerid, h);
		mysql_format(Conecction, Queri, sizeof(Queri), "UPDATE referidos SET RecompensaRecibida = '1' WHERE JugadorRefiriendo='%d' AND  Completado = '1'", PlayerInfo[playerid][p_DBID]);
		mysql_tquery(Conecction, Queri);

	}
	return 1;
}

static DarRecompensasReferido(playerid, cantidad = 1)
{
	PlayerInfo[playerid][pMedicamentos] += 100*cantidad;
	DarDinero(playerid, 200000*cantidad);
	PlayerInfo[playerid][pCrack] += 50*cantidad;
	PlayerInfo[playerid][Credits] += 10*cantidad;

	new str[450];

	format(str, sizeof(str), "{FFFFFF}Tu(s) referido(s) ha llegado al nivel {00FF00}7{FFFFFF}.\n\n{FFFFFF}Has recibido:\n{00FF00}%d {FFFFFF}medicamentos.\n{00FF00}%d {FFFFFF}d�lares.\n{00FF00}%d {FFFFFF}Crack.\n{00FF00}%d {F8FC08}coins{FFFFFF}.", 100*cantidad, 200000*cantidad,  50*cantidad, 10*cantidad);
	MostrarDialog(playerid, DRECARGA, DIALOG_STYLE_MSGBOX, "Felicidades.", str, "Aceptar", "");

	return 1;
}

Funcion:NivelReferido(playerid)
{

	if(cache_num_rows())
	{
		new Queri[260];
		new name[26], refiriendo, conectado = 0;

		cache_get_value_name(0, "Username", name);
		cache_get_value_name_int(0, "JugadorRefiriendo", refiriendo);


		foreach(new i: Player)
		{
			if (PlayerInfo[i][p_DBID] == refiriendo){

				format(Queri, sizeof(Queri), "Muchas gracias por invitar a {1DAB1F}%s{FFFFFF}, el ha llegado al nivel 8.", NombreJugador(playerid));
				Mensaje(i, -1, Queri);
				Mensaje(i, -1, "Has recibido tus recompensas.");
				mysql_format(Conecction, Queri, sizeof(Queri), "UPDATE referidos SET Completado = '1', RecompensaRecibida = '1' WHERE JugadorReferido='%d' LIMIT 1", PlayerInfo[playerid][p_DBID]);
				mysql_tquery(Conecction, Queri);
				conectado = 1;
				DarRecompensasReferido(i);
				break;
			}
		}
		if (!conectado){
			mysql_format(Conecction, Queri, sizeof(Queri), "UPDATE referidos SET Completado = '1' WHERE JugadorReferido='%d' LIMIT 1", PlayerInfo[playerid][p_DBID]);
			mysql_tquery(Conecction, Queri);

		}



	}
	return 1;
}
FormatTimeleft(segundos)
{
    new time[200];
    new minutos,Horas,dias,semanas, meses, yeras;

    if(segundos > 59)	{ 	minutos = segundos / 60;	segundos = segundos - (minutos * 60);	}
    if(minutos > 59)	{	Horas = minutos / 60;		minutos = minutos - (Horas * 60);		}
    if(Horas > 23)		{	dias = Horas / 24; 			Horas = Horas - (dias * 24);			}
    if(dias > 7)		{	semanas = (dias / 7); 		dias = dias - (semanas * 7);			}
    if(semanas >= 4) 	{	meses = floatround(semanas / 4.345); semanas = semanas - floatround(meses * 4.345);						}
	if(meses > 12)      {   yeras = (meses / 12); 		meses = meses - (yeras * 12);   		}

	if(yeras > 0 && yeras < 10) format(time,sizeof(time),"%d a�o(s), %d mes(es)",yeras, meses);
	else if(yeras >= 10) format(time,sizeof(time),"No actualizado");
	else if(meses > 0) format(time,sizeof(time),"%d mes(es), %d semana(s)", meses, semanas);
    else if(semanas > 0) format(time,sizeof(time),"%d semana(s), %d dia(s)",semanas, dias);
	else if(dias > 0) format(time,sizeof(time),"%d dia(s), %dh, %dm, %ds",dias, Horas,minutos,segundos);
    else if(Horas > 0) format(time,sizeof(time),"%dh, %dm, %ds",Horas,minutos,segundos);
    else if(minutos > 0) format(time,sizeof(time),"%dm, %ds",minutos,segundos);
    else format(time,sizeof(time),"%d segundos",segundos);
    return time;
}

Funcion:SREFERIDOS(playerid)
{
	new h = cache_num_rows();
	if(h)
	{
		new completado, nombre[MAX_PLAYER_NAME+1], nivel, time, online, completados, total, textocomple[15], line_str[800], dialog[115 * 20];
		dialog = "Nombre\tNivel\t�lt. conexi�n\tCompletado\n";
		for(new i = 0; i < h; i++)
		{
			total ++;
			cache_get_value_name(i, "Username", nombre);
			cache_get_value_name_int(i, "Conexion", time);
			cache_get_value_name_int(i, "Completado", completado);
			cache_get_value_name_int(i, "Nivel", nivel);
			cache_get_value_name_int(i, "Online", online);

			if(completado)
			{
				completados ++;
				textocomple = "{80D465}S�";

			}
			else{
				textocomple = "No";
			}
			if(online == 0) format(line_str, sizeof line_str, "%s\t%d\t%s\t%s\n", nombre, nivel,FormatTimeleft(gettimeVariable - time),textocomple);
			else format(line_str, sizeof line_str, "%s\t%d\tConectado\t%s"CB"\n", nombre, nivel, textocomple);
			strcat(dialog, line_str);
		}


		new miembrotot[70];
		format(miembrotot, sizeof miembrotot,"Referidos completados: "CR"%d"CB"/"CR"%d"CB"." , completados, total);
		return MostrarDialog(playerid, DIALOG_INFO, DIALOG_STYLE_TABLIST_HEADERS, miembrotot, dialog, "Aceptar", "");

	}
	else{
		Mensaje(playerid, -1, "No tienes referidos, usa el comando /referidos para ver tu c�digo.");
	}
	return 1;
}
DialogMenu(playerid)
{
	new str[178+1];
	format(str, sizeof(str), "%sDar dinero\nDar dinero bancario\nDar "Moneda1"\nDar Coins\nDar Piezas\nDar Crack\nDar Medicamentos\nDar Coca�na\nDar Hongos\nDar Marihuana\nDar Semillas para mari", str);
	format(str, sizeof(str), "%shuana\nDar Experiencia", str);
	MostrarDialog(playerid, MENU_ADMIN, DIALOG_STYLE_LIST, "Men� administrativo", str, "Aceptar", "Cancelar");
	return 1;
}
DialogTiendaDP(playerid)
{
	new str[395+1];
	format(str, sizeof(str), "%s"CR"�"CB" Men� de vestimentas ({AD46D1}"Moneda1"{FFFFFF})\n"CR"�"CB" Men� de vestimentas ({AD46D1}Coins{FFFFFF})\n"CR"�"CB" Men� de veh�cu", str);
	format(str, sizeof(str), "%slos ({AD46D1}"Moneda1"{FFFFFF})\n"CR"�"CB" Men� de veh�culos ({AD46D1}Coins{FFFFFF})\n"CR"�"CB" Cambiar n�mero telef�nico ({AD46D1}"Moneda1"{FFFFFF})\n"CR"�"CB" Cambiar sexo ({AD46D1}10 "Moneda1"{F", str);
	format(str, sizeof(str), "%sFFFFF})\n"CR"�"CB" Membres�a vip", str);
	MostrarDialog(playerid, TIENDA_DP, DIALOG_STYLE_LIST, "{FFFFFF}Tienda {AD46D1}"NameServer"", str, "Continuar", "Cancelar");
}
Funcion:QuitarPass()
{
	
    SendRconCommand("hostname "NameHost"");
	CargarFabricas();
	CargarPortones();
  	SendRconCommand("password 0");
	//SendRconCommand("minconnectiontime 100");
	SendRconCommand("cookielogging 0");
	/*for(new ea; ea < UltimaBanda; ea++)
	{
		ContarMiembros(ea);
	}*/
	//LoadNPCs();
  	return 1;
}




static ContarMiembros(bandaid)
{
	new Query[60];
	mysql_format(Conecction, Query, sizeof(Query), "SELECT ID FROM usuarios WHERE `Faccion`='%d'",bandaid);
	mysql_tquery(Conecction, Query, "DarIntengrantes", "d", bandaid);
	
}

Funcion:DarIntegrantes(bandaid)
{
	//if(BandasInfo[bandaid][BIntegrantes] == cache_num_rows()) return 1;
	BandasInfo[bandaid][BIntegrantes] = cache_num_rows();
	new queria[90];
	mysql_format(Conecction, queria, sizeof(queria), "UPDATE `facciones` SET `Integrantes`='%d' WHERE `id`='%d' LIMIT 1", BandasInfo[bandaid][BIntegrantes],bandaid);
	mysql_tquery(Conecction, queria);
	return 1;
}

MensajedeCheater(const razon[])
{
	if(MandoAvisoCheat == 0)
	{
		MensajeAll(-1, razon);
		MandoAvisoCheat = 1;
	}
	return 1;
}
static OnPlayerHealthChange(playerid,Float:newhealth)
{
	if(!IsPlayerConnected(playerid)) return true;
    if(IsPlayerNPC(playerid)) return true;
 	if(PlayerInfo[playerid][pAdmin] > ADMIN_LVL_AYUDANTE) return true;

	new estado = GetPlayerState(playerid);
	if(JugadorLogeado[playerid] == 1 && estado != PLAYER_STATE_WASTED && estado != PLAYER_STATE_SPAWNED)
	{
		if(PlayerInfo[playerid][jNivel] > 2)
		{
			if(VidaJugador[playerid] < newhealth && TiempoVida[playerid] < gettimeVariable && PlayerInfo[playerid][Agonizando] == 0)
			{
				PlayerTemp[playerid][VidaDetectado][0] = 1;
	  			new string[144];
				format(string,sizeof(string),"El jugador {FF3300}%s(ID: %d)"CB" fue expulsado por el anticheat. Raz�n:{FF3300} Cheat de vida"CB".",NombreJugador(playerid),playerid);
				MensajedeCheater(string);
				ExpulsarJugador(playerid, "Cheat de vida");
				return true;
			}
		}
	}
	VidaJugador[playerid] = newhealth;
	return true;
}

static OnPlayerArmourChange(playerid,Float:newhealth)
{
	if(!IsPlayerConnected(playerid)) return true;
    if(IsPlayerNPC(playerid)) return true;
	if(PlayerInfo[playerid][pAdmin] > ADMIN_LVL_AYUDANTE) return true;
	if(ChalecoJugador[playerid] < newhealth)
	{
		if(JugadorLogeado[playerid] == 1 && TiempoChaleco[playerid] < gettimeVariable)
  		{
			PlayerTemp[playerid][VidaDetectado][1] = 1;
   			new string[300];
			format(string,sizeof(string),"El jugador {FF3300}%s(ID: %d)"CB" fue expulsado por el anticheat. Raz�n:{FF3300} Cheat de blindaje"CB".",NombreJugador(playerid),playerid);
			MensajedeCheater(string);
			ExpulsarJugador(playerid, "Cheat de blindaje");
			return true;
		}
	}
	ChalecoJugador[playerid] = newhealth;
	return true;
}

public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
	if(IsPlayerNPC(playerid)) return 1;
	new panels, tires;
	GetVehicleDamageStatus(vehicleid,panels,doors,lights,tires);
	if(GetDoorState(doors, DOOR_TRUNK, IS_REMOVED) && GetDoorState(doors, DOOR_TRUNK, IS_REMOVED) && GetDoorState(doors, DOOR_DRIVER, IS_REMOVED) && GetDoorState(doors, DOOR_PASSENGER, IS_REMOVED))
	{
		new string[250];
		format(string,sizeof(string),"[!]"CB" El anticheat ha detectado que el usuario "CR"%s(ID:%d)"CB" rompe las puertas de los veh�culos. (N:%d- %dhs) - P:%d/PL:%.2f",NombreJugador(playerid),playerid,PlayerInfo[playerid][jNivel],PlayerInfo[playerid][horasjugadas],GetPlayerPing(playerid), NetStats_PacketLossPercent(playerid));
		MensajeAdmin(COLOR_CHEAT, string, 3);
   	}
    return 1;
}

Funcion:OnVehicleCreate(vehicleid)
{
    bloqueado[vehicleid] = 0;
    alarma[vehicleid] = 1;
    VehicleVida[vehicleid] = 1000.0;
    VidaVehiculo[vehicleid] = 1000.0;
	return true;
}

public OnGameModeExit()
{
    foreach(new f : Fabricas) GuardarFabrica(f);
	print("GameModeExit");
    return 1;
}
/*
static Queries()
{
	EnableHookQuery(QHOOK_RULES, true);
	new Rules[][Query_Rules] = {

		{ "weburl", "www."WebName"" },
		{ "Versi�n", "0.3.7-WestZone" },
		{ "IP", "sv."WebName"" },
		{ "Tienda", "tienda."WebName"" },
		{ "Discord", "discord."WebName"" }
		
	};
	SetServerRules(Rules); // Set a rules
}*/
#if defined UsarFakeOnline
forward UpdateFakeOnline();
public UpdateFakeOnline()
{
	if(FAKEPLAYERS == 0) FO_SetValue(FAKEPLAYERS);
	else FO_SetValue(FAKEPLAYERS + random(5));
}
#endif





public OnGameModeInit()
{

	

	Streamer_SetVisibleItems(STREAMER_TYPE_OBJECT, 995);
	#if defined ChatDeVoz
	gstream = SvCreateGStream(0xffff0000, "G"); // blue color
	#endif
	#if defined UsarFakeOnline
	FO_SetMode(FO_RELATIVE);
	SetTimer("UpdateFakeOnline", 1000, true);
	#endif
	#if defined UsarDiscordConnector
	g_CanalVerificacion = DCC_Channel:DCC_FindChannelById("1043959479072456856");
	ServidorDiscord = DCC_FindGuildById("890683142938193991");
	RolStaffDiscord = DCC_FindRoleById("890703780180557824");
	#endif
	SetCrashDetectLongCallTime(1000000);
	new MySQLOpt: option_id = mysql_init_options();
	mysql_set_option(option_id, AUTO_RECONNECT, true);
	Conecction = mysql_connect(IPBD, UserBD,PassBD, NameBD, option_id); //HOST
	if(Conecction == MYSQL_INVALID_HANDLE || mysql_errno(Conecction) != 0)
	{
	    print("-------------------------------------------");
     	print("Conexi�n fallida con la base de datos - GM.");
	    print("-------------------------------------------");
		//mysql_tquery(Conecction, "UPDATE usuarios SET Online = 0;");
     	SendRconCommand("exit");
		return 1;
	}
	else
	{
	    print("--------------------------------------------");
     	print("Conexi�n correcta con la base de datos - GM.");
	    print("--------------------------------------------");
		mysql_set_charset("latin1",Conecction);
		mysql_tquery(Conecction, "UPDATE `usuarios` SET Online = '0'");
	}

    #if defined UsarForo
	Conecction2 = mysql_connect(IPBD, UserBD,PassBD, "foro", option_id); //HOST
	if(Conecction2 == MYSQL_INVALID_HANDLE || mysql_errno(Conecction2) != 0)
	{
	    print("-------------------------------------------");
     	print("Conexi�n fallida con la base de datos - FORO.");
	    print("-------------------------------------------");
		//mysql_tquery(Conecction, "UPDATE usuarios SET Online = 0;");
     	//SendRconCommand("exit");
		//return 1;
	}
	else
	{
	    print("--------------------------------------------");
     	print("Conexi�n correcta con la base de datos - FORO.");
	    print("--------------------------------------------");
		mysql_set_charset("latin1",Conecction2);
	}
	#endif
	CargarTodoInit();
	for(new arenaid=0;arenaid<MAX_ARENAS;arenaid++) {DueloInfo[arenaid][DesocupadaLK]=1;}
	return 1;
}

static CargarTodoInit()
{
	new horas,minutos,segundos;
	mysql_log(ERROR | WARNING);
	LoadNPCs();
	CargarUsers();
	
	SetTimer("ReactivarCaja",1000,false);
	SetTimer("ReactivarCaja2",1000,false);
	SetTimer("ReactivarCaja3",1000,false);
	EnConteo = false;
    ReporteEstado = 1;
    ComandoEstado = 1;
	PaydayDado = 0;
	DudaEstado = 0;
	AdEstado = 0;
	BaileP[1] = 1;
	BaileP[2] = 3;
	BaileP[3] = 2;
	BaileP[4] = 4;
	BaileP[5] = 1;
	BaileP[6] = 2;
	ExpObj = 0;
	BoxObj = 0;
	ConObj = 0;
    Humo1Ojb = 0;
    Humo2Ojb = 0;
	CrackCamello = 15000;
	MarihuanaCamello = 15000;
	MedicamentosCamello = 15000;
	DineroCamello = 1000000;
	HongosCamello = 30000;
	CocainaCamello = 30000;
	gettime(horas,minutos,segundos);
	CabinasOcupadasEmisoras[1][0] = 0;
	CabinasOcupadasEmisoras[1][1] = -1;
	CabinasOcupadasEmisoras[2][0] = 0;
	CabinasOcupadasEmisoras[2][1] = -1;
	CabinasOcupadasEmisoras[3][0] = 0;
	CabinasOcupadasEmisoras[3][1] = -1;
	CabinasOcupadasEmisoras[4][0] = 0;
	CabinasOcupadasEmisoras[4][1] = -1;
	MandoAvisoCheat = 0;
	EventoActivo = 0;
	NotificaEvento = 0;
	for(new i = 0; i < sizeof(PintarVeh);i++)
	{
		CreateDynamic3DTextLabel("{FF9E00}Taller de Pintura\n{FFFFFF}Pulsa "CR"'H'"CB" para pintar tu veh�culo.",-1,PintarVeh[i][0],PintarVeh[i][1],PintarVeh[i][2]+0.7,10,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,0,0,0,-1,100.0);
		CreateDynamicPickup(365, 1, PintarVeh[i][0],PintarVeh[i][1],PintarVeh[i][2], 0, 0, -1, 100.0);
	}
	for(new i = 0; i < sizeof(EnTunning);i++)
	{
		CreateDynamic3DTextLabel(""CB"Pulsa "CR"'H'"CB" para tunear tu veh�culo.",-1,EnTunning[i][0],EnTunning[i][1],EnTunning[i][2]+0.7,10,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,0,0,0,-1,100.0);
		CreateDynamicPickup(19627, 1, EnTunning[i][0],EnTunning[i][1],EnTunning[i][2], 0, 0, -1, 100.0);
	}
	for(new i = 0; i < sizeof(EnMejoraM);i++)
	{
		CreateDynamic3DTextLabel(""CB"Pulsa "CR"'H'"CB" para mejorar el motor de tu veh�culo.",-1,EnMejoraM[i][0],EnMejoraM[i][1],EnMejoraM[i][2]+0.7,10,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,0,0,0,-1,100.0);
		CreateDynamicPickup(19917, 1, EnMejoraM[i][0],EnMejoraM[i][1],EnMejoraM[i][2], 0, 0, -1, 100.0);
	}
	Globo = CreateDynamicObject(19337, 1483.66833, -1617.19543, 13.03780,   0.00000, 0.00000, 0.00000);
	AreaCabinas[1] = CreateDynamicRectangle(348.7999, 189.7051, 334.6652, 175.9970);
	AreaCabinas[2] = CreateDynamicRectangle(348.8812, 163.4289, 334.2779, 154.2770);
	AreaCabinas[3] = CreateDynamicRectangle(348.8767, 153.6340, 341.2415, 143.9793);
	AreaCabinas[4] = CreateDynamicRectangle(360.3442, 152.6125, 366.6700, 162.1205);
	
	
	for(new i = 0; i < sizeof ZonasSeguras; i ++)
	{
		Zonasegura[i] = CreateDynamicRectangle(ZonasSeguras[i][0], ZonasSeguras[i][1], ZonasSeguras[i][2], ZonasSeguras[i][3]);
		GangzoneSeguras[i] = GangZoneCreate(ZonasSeguras[i][0], ZonasSeguras[i][1], ZonasSeguras[i][2], ZonasSeguras[i][3]);
		
	}


	/*Zonasegura[0] = CreateDynamicRectangle(1440.428, -1737.13, 1573.528, -1591.064);
 	Zonasegura[1] = CreateDynamicRectangle(1984.234, -1456.841, 2102.122, -1354.199);
 	Zonasegura[2] = CreateDynamicRectangle(1143.807, -1437.102, 1326.343, -1259.454);
 	Zonasegura[3] = CreateDynamicRectangle(649, -1391.5, 791, -1323.5);
	Zonasegura[4] =	CreateDynamicRectangle(998.1006, 1225.698, 1173.819, 1388.157);*/

	AreaFabrica = CreateDynamicRectangle(-1988.2349,197.7967,-2003.4601,190.8682);
	ZonaFC = CreateDynamicRectangle(97.65625,1339.84375,281.25,1486.328125);
	ZonaLS = CreateDynamicRectangle(-606, -1586, -149, -1245);
	ZonaBB = CreateDynamicRectangle(-293, -173, 124, 204);
	ZonaTuning = CreateDynamicRectangle(205, -30.5, 305, 69.5);
	ZonaSalon = CreateDynamicRectangle(-1244.693847, -1139.976074, 2027.578979, 2129.051025, 1, 13, -1);

	

	//portones milicia
	/*PortonesM[0] = CreateDynamicObject(975, 670.6646, -599.4364, 16.8724, 0.0000, 0.0000, -90.0000); //prinicipal
	PortonesM[1] = CreateDynamicObject(975, 651.0548, -611.1961, 17.0123, 0.0000, 0.0000, 180.0000); //tercero
	PortonesM[2] = CreateDynamicObject(975, 641.1544, -540.0040, 16.8624, 0.0000, 0.0000, 180.0000); //segundo*/

	

 	BarreraTren[0] = CreateDynamicObject(968,2283.0757000,-1155.2064000,26.7173000,0.0000000,-29.0000000,-94.0000000); //
	BarreraTren[1] = CreateDynamicObject(968,2291.7705000,-1144.3254000,26.7408000,0.0000000,-29.0000000,90.0000000); //
	BarreraTren[2] = CreateDynamicObject(968,2204.1255000,-1651.6556000,15.3319000,0.0000000,25.0000000,75.0000000); //
	BarreraTren[3] = CreateDynamicObject(968,2220.6826000,-1642.8675000,15.4477000,0.0000000,25.0000000,-105.0000000); //
	BarreraTren[4] = CreateDynamicObject(968,2206.8242000,-1725.6763000,13.6095000,0.0000000,-25.0000000,90.0000000); //
	BarreraTren[5] = CreateDynamicObject(968,2193.9961000,-1739.4002000,13.5469000,0.0000000,25.0000000,90.0000000); //

	new textura;
	new paredx,ofi1,ofi2,ofi3,ofi4,tuberis1,tuberis2,tuberis3,luz1,luz2,luz3,luz4,luz5;
	textura = CreateDynamicObject(19465, 1438.34998, 594.84003, 1002.51001,   0.00000, 0.00000, 90.00000,-1,99);
	SetDynamicObjectMaterial(textura, 0, 14577, "casinoVault01", "copbtm_brown", 0);

	tuberis1 = CreateDynamicObject(3498, -1992.27856, 194.13660, 1044.25415,  0.00000, 0.00000, 0.00000);
	tuberis2 = CreateDynamicObject(3498, -1999.21558, 194.13660, 1044.25415,  0.00000, 0.00000, 0.00000);
	tuberis3 = CreateDynamicObject(3498, -1995.67456, 194.13660, 1044.25415,  0.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(tuberis1, 0, 11090, "cf_metals_sfse", "gen_chrome",-1);
    SetDynamicObjectMaterial(tuberis2, 0, 11090, "cf_metals_sfse", "gen_chrome",-1);
    SetDynamicObjectMaterial(tuberis3, 0, 11090, "cf_metals_sfse", "gen_chrome",-1);

	paredx = CreateDynamicObject(19378, -2017.89246, 239.64149, 1035.45874,  0.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(paredx,  0, 19437, "all_walls", "mp_carter_bwall",-1);

	ofi1 = CreateDynamicObject(19376, -2017.92236, 249.42850, 1035.43884,  0.00000, 0.00000, 0.00000);
	ofi2 = CreateDynamicObject(19376, -2017.92236, 259.06250, 1035.43884,  0.00000, 0.00000, 0.00000);
	ofi3 = CreateDynamicObject(19376, -2022.61121, 255.01019, 1035.43884,   0.00000, 0.00000, 90.00000);
	ofi4 = CreateDynamicObject(19376, -2026.90845, 250.15170, 1035.43884,  0.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(ofi1, 0, 19437, "all_walls", "mp_motel_carpet1",-1);
    SetDynamicObjectMaterial(ofi2, 0, 19437, "all_walls", "mp_motel_carpet1",-1);
    SetDynamicObjectMaterial(ofi3, 0, 19437, "all_walls", "mp_motel_carpet1",-1);
    SetDynamicObjectMaterial(ofi4, 0, 19437, "all_walls", "mp_motel_carpet1",-1);

	luz1 = CreateDynamicObject(945, -2008.72021, 227.01640, 1044.36536,  0.00000, 0.00000, 0.00000);
	luz2 = CreateDynamicObject(945, -2012.54199, 226.99699, 1044.36536,  0.00000, 0.00000, 0.00000);
	luz3 = CreateDynamicObject(945, -2016.40686, 226.98024, 1044.36536,  0.00000, 0.00000, 0.00000);
	luz4 = CreateDynamicObject(945, -2004.86218, 227.01640, 1044.36536,  0.00000, 0.00000, 0.00000);
	luz5 = CreateDynamicObject(945, -2001.04065, 227.01640, 1044.36536,  0.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(luz1, 0, 19382, "all_walls", "mirror01");
    SetDynamicObjectMaterial(luz2, 0, 19382, "all_walls", "mirror01");
    SetDynamicObjectMaterial(luz3, 0, 19382, "all_walls", "mirror01");
    SetDynamicObjectMaterial(luz4, 0, 19382, "all_walls", "mirror01");
    SetDynamicObjectMaterial(luz5, 0, 19382, "all_walls", "mirror01");

	new textura2;
	textura2 = CreateDynamicObject(19003, 1408.39880, 592.47119, 1000.03729,   0.00000, 180.00000, 90.00000);
	SetDynamicObjectMaterial(textura2,1,3055,"kmb_shut","shutters",0);

	new cobj0 = CreateDynamicObject(2631, -2197.219971, -84.580002, 1015.520020, 0.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(cobj0, 0, 18646, "matcolours", "red-2");

	new cobj1 = CreateDynamicObject(2631, -2201.120117, -84.580002, 1015.520020, 0.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(cobj1, 0, 18646, "matcolours", "red-2");

	new cobj2 = CreateDynamicObject(2631, -2205.020020, -84.580002, 1015.520020, 0.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(cobj2, 0, 18646, "matcolours", "red-2");

	new cobj3 = CreateDynamicObject(2631, -2208.919922, -84.580002, 1015.520020, 0.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(cobj3, 0, 18646, "matcolours", "red-2");
	
	//Admin
	new obje[6];
	obje[0] = CreateDynamicObject(19552, 32.01710, -20.54350, 50.07250,   0.00000, 0.00000, -22.00000, 999);
	obje[1] = CreateDynamicObject(19552, 89.89330, -43.91820, 112.51250,   0.00000, 90.00000, -22.00000, 999);
	obje[2] = CreateDynamicObject(19552, -25.99010, 2.88450, 112.51250,   0.00000, 90.00000, -22.00000, 999);
	obje[3] = CreateDynamicObject(19552, 8.53050, -78.45670, 112.51250,   0.00000, 90.00000, 68.00000, 999);
	obje[4] = CreateDynamicObject(19552, 55.41294, 37.34594, 112.51250,   0.00000, 90.00000, 68.00000, 999);
	for(new a = 0; a<5; a++) { SetDynamicObjectMaterial(obje[a], 0, 0, "none", "none", 0x00000000); }

	format(DialogFormatColores, sizeof DialogFormatColores, "");
	for(new i = 0; i != sizeof(RandomColors); i++)
	{
		format(DialogFormatColores, sizeof(DialogFormatColores), "%s{%06x}Color %d\n", DialogFormatColores,RandomColors[i] >>> 8, i + 1);
	}
	format(DialogFormatColoresV, sizeof DialogFormatColoresV, "");
	for(new i = 0; i != sizeof(VehicleColoursTableRGBA); i++)
	{
		format(DialogFormatColoresV, sizeof(DialogFormatColoresV), "%s{%06x}Color %d\n", DialogFormatColoresV,VehicleColoursTableRGBA[i] >>> 8, i + 1);
	}
	new objectos[5];
	objectos[0] = CreateDynamicObject(18765, -1194.37000, 2030.91003, 1244.81995,   0.00000, 0.00000, 359.89999);
	objectos[1] = CreateDynamicObject(18765, -1192.71997, 2032.48999, 1244.83997,   0.00000, 0.00000, 359.89999);
	objectos[2] = CreateDynamicObject(18765, -1190.88000, 2032.51001, 1244.85999,   0.00000, 0.00000, 359.89999);
	objectos[3] = CreateDynamicObject(18765, -1189.50000, 2030.90002, 1244.80005,   0.00000, 0.00000, 359.89999);
	for(new a = 0; a<4; a++) { SetDynamicObjectMaterial(objectos[a], 0, 9362, "sfn_byofficeint", "CJ_Black_metal", 0xFFFFFFFF); }
	
	new objesf[3];
	objesf[0] = CreateDynamicObject(18766, -1058.53162, -660.99762, 28.70969,  0.00000, 0.00000, 0.00000);
	objesf[1] = CreateDynamicObject(18766, -1058.62756, -664.53271, 28.70970,  0.00000, 0.00000, 0.00000);
    for(new a = 0; a<3; a++) { SetDynamicObjectMaterial(objesf[a], 0, 9362, "sfn_byofficeint", "CJ_Black_metal", 0xFFFFFFFF); }
    
	/*for(new i; i < MAX_MARIHUANA; i++)
    {
		MariInfo[i][Estado] = 0;
		MariInfo[i][Creado] = 0;
		format(MariInfo[i][Plantador], 24, "Nadie");
    }*/
    
    for(new i; i < MAX_ESTACIONA; i++)
    {
		format(InfoEst[i][estDuenoN], 40, "Nadie");
    }
   	// Tienda
	RopaHombre = LoadModelSelectionMenu("RopaHombre.txt");
	RopaMujer = LoadModelSelectionMenu("RopaMujer.txt");
	RopaHombreCoin = LoadModelSelectionMenu("RopaHombreCoin.txt");
	RopaMujerCoin = LoadModelSelectionMenu("RopaMujerCoin.txt");
	barp = LoadModelSelectionMenu("boteszr.txt");
	motorp = LoadModelSelectionMenu("motos.txt");
	vehrp = LoadModelSelectionMenu("autos.txt");
	helicopterostienda = LoadModelSelectionMenu("heliszr.txt");
	botesespecial = LoadModelSelectionMenu("botesespecial.txt");
	helicopterosespecial = LoadModelSelectionMenu("helicopterosespecial.txt");
	vehiculosespecial = LoadModelSelectionMenu("vehiculosespecial.txt");
	motosespeciales = LoadModelSelectionMenu("motosespeciales.txt");

	//Timers
	SetTimer("CargarTodo",2000, false);
	
	SetTimer("QuitarPass",10000, false);

	
	SendRconCommand("hostname [ES] "NameServer" Roleplay | [Cargando GameMode...]");
	SendRconCommand("mapname Roleplay en espa�ol");
	SendRconCommand("weburl www."WebName"");
	SendRconCommand("language Espa�ol - Spanish");
	SetGameModeText("Roleplay en espa�ol");
	SendRconCommand("rcon_password "RconPass"");
	SendRconCommand("rcon 0");
	SendRconCommand("password vzrp");
	CargarPuertas();
	CargarCasas();
	CargarEstacionamientos();
	CargarActores();
	CargarActores2();
	FuncionActionQueue();
	TerritoriosCarga();
	Alquilado = false;
	HorasSalon = 0;
	Personas = 0;
	PrecioSalon = 0;
	NivelSalon = 0;
	TipoEvento = 0;

	format(Alquilador,sizeof(Alquilador),"Nadie");
	format(NombreEvento,sizeof(NombreEvento),"Sin Nombre");
	format(DescriEvento,sizeof(DescriEvento),"Sin Descripci�n");

	IconoAutosPoli[0] = CreateDynamicPickup(1247, 1, 1590.3337,-1620.1376,13.3828,-1,-1,-1,100.0);
	IconoAutosPoli[1] = CreateDynamicPickup(1247, 1, 2257.9387,2452.7776,10.8203,-1,-1,-1,100.0);
	IconoAutosPoli[2] = CreateDynamicPickup(1247, 1, 261.1901,1438.9509,10.5859,-1,-1,-1,100.0);
	IconoAutosPoli[3] = CreateDynamicPickup(1247, 1, -1597.6935,661.8955,7.1875,-1,-1,-1,100.0);

	//CreateDynamic3DTextLabel(""CB"Departamente de Polic�a\nPulsa "CR"'Y'"CB" para solicitar un veh�culo",0xFFFFFF00,1590.3337,-1620.1376,13.3828,4.0);
	//CreateDynamic3DTextLabel(""CB"Departamente de Polic�a\nPulsa "CR"'Y'"CB" para solicitar un veh�culo",0xFFFFFF00,2257.9387,2452.7776,10.8203,4.0);
	//CreateDynamic3DTextLabel(""CB"Departamente de Polic�a\nPulsa "CR"'Y'"CB" para solicitar un veh�culo",0xFFFFFF00,261.1901,1438.9509,10.5859,4.0);
	//CreateDynamic3DTextLabel(""CB"Departamente de Polic�a\nPulsa "CR"'Y'"CB" para solicitar un veh�culo",0xFFFFFF00,-1597.6935,661.8955,7.1875,4.0);

    ModoCombate = GangZoneCreate(-4500.000000, -4500.000000, 4500.000000, 4500.000000); // Modo combate
	
	mares = GangZoneCreate(865.637451, -2475.890136 ,912.910888, -2426.340087); // Zona de pesca
	//TerritorioTriads = GangZoneCreate(2348.647949, -1730.892700, 2540.647949, -1634.892700); // Territorio triads
	//TerritorioGrove = GangZoneCreate(1074.637329, -2087.426025, 1290.637329, -1991.426025); // Territorio grove
	MapaIsla[0] = GangZoneCreate(699.495789, -3370.885498, 939.497009, -2988.496582);
	MapaIsla[1] = GangZoneCreate(699.354797, -3786.686035, 923.457886, -3451.511475);
	MapaIsla[2] = GangZoneCreate(543.090515, -3357.107422, 659.825012, -3005.243652);
	MapaIsla[3] = GangZoneCreate(939.512329, -3269.397949, 1005.782288, -3237.667236);
	MapaIsla[4] = GangZoneCreate(926.667725, -3292.828613, 939.792786, -3198.567871);
	MapaIsla[5] = GangZoneCreate(831.784912, -3401.909668, 843.367676, -3360.958740);
	MapaIsla[6] = GangZoneCreate(939.512329, -3121.840576, 1005.782288, -3089.510254);
	MapaIsla[7] = GangZoneCreate(926.667725, -3145.140869, 939.792786, -3051.080322);
	MapaIsla[8] = GangZoneCreate(922.612915, -3560.024902, 988.748901, -3527.897949);
	MapaIsla[9] = GangZoneCreate(912.653076, -3583.444824, 923.490784, -3489.126221);
	MapaIsla[10] = GangZoneCreate(922.612915, -3712.796143, 988.748901, -3680.633301);
	MapaIsla[11] = GangZoneCreate(912.653076, -3736.059570, 923.490784, -3642.111816);
	MapaIsla[12] = GangZoneCreate(818.093201, -3853.676758, 850.474121, -3787.641846);
	MapaIsla[13] = GangZoneCreate(794.810181, -3788.306885, 888.573120, -3771.824219);
	MapaIsla[14] = GangZoneCreate(714.160828, -3355.597900, 923.854919, -3006.016357);
	MapaIsla[15] = GangZoneCreate(714.183777, -3770.673096, 908.801514, -3465.858887);
	MapaIsla[16] = GangZoneCreate(559.121277, -3340.700195, 643.953125, -3020.855957);
	MapaIsla[17] = GangZoneCreate(755.094177, -3609.119141, 776.094421, -3594.147705);
	MapaIsla[18] = GangZoneCreate(755.107117, -3666.347168, 776.182312, -3651.539551);
	MapaIsla[19] = GangZoneCreate(775.992310, -3711.885986, 855.606079, -3511.179443);
	MapaIsla[20] = GangZoneCreate(755.953979, -3314.379395, 882.530579, -3047.050049);
	MapaIsla[21] = GangZoneCreate(824.236084, -3033.350342, 842.650879, -1788.086304);
	MapaIsla[22] = GangZoneCreate(741.561279, -3048.197510, 896.448486, -3033.452637);
	MapaIsla[23] = GangZoneCreate(741.654907, -3743.179199, 756.519226, -3046.847656);
	MapaIsla[24] = GangZoneCreate(881.542786, -3328.104492, 896.479919, -3046.793945);
	MapaIsla[25] = GangZoneCreate(586.665527, -3188.382080, 896.233826, -3173.396729);
	MapaIsla[26] = GangZoneCreate(742.157288, -3328.195801, 896.051880, -3313.302490);
	MapaIsla[27] = GangZoneCreate(586.612305, -3313.185059, 616.388916, -3048.381836);
	MapaIsla[28] = GangZoneCreate(2721.185059, -2629.112549, 2770.076172, -2580.368408);
	MapaIsla[29] = GangZoneCreate(2720.773926, -2581.061768, 2798.123291, -2558.056885);
	MapaIsla[30] = GangZoneCreate(2797.535400, -2577.362793, 2831.663330, -2572.610840);
	MapaIsla[31] = GangZoneCreate(2826.761963, -2630.495117, 2831.663330, -2572.610840);

	CreateDynamicMapIcon(2041.3850,-2632.4158,13.5469, 63, 0, 0, 0, -1, 500.0);   		// Paint Aero LS
	CreateDynamicMapIcon(-1171.0649,-169.3947,14.1484, 63, 0, 0, 0, -1, 500.0);   		// Paint Aero SF
	CreateDynamicMapIcon(1317.2406,1480.4854,10.8203, 63, 0, 0, 0, -1, 500.0);			// Paint Aero LV
	CreateDynamicMapIcon(-1808.7142,945.9161,24.8906, 29, 0, 0, 0, -1, 500.0);			// Pizzeria
	CreateDynamicMapIcon(-1720.9456,1359.7822,7.1853, 29, 0, 0, 0, -1, 500.0);			// Pizzeria
	CreateDynamicMapIcon(2083.3376,2224.7012,11.0234, 29, 0, 0, 0, -1, 500.0);			// Pizzeria
	CreateDynamicMapIcon(2756.7642,2477.3533,11.0625, 29, 0, 0, 0, -1, 500.0);			// Pizzeria
	CreateDynamicMapIcon(2638.7839,1849.7867,11.0234, 29, 0, 0, 0, -1, 500.0);			// Pizzeria
	CreateDynamicMapIcon(2331.8098,75.0506,26.6210, 29, 0, 0, 0, -1, 500.0);			// Pizzeria
	CreateDynamicMapIcon(1367.5475,248.2522,19.5669, 29, 0, 0, 0, -1, 500.0);			// Pizzeria
	CreateDynamicMapIcon(203.3945,-201.9418,1.5781, 29, 0, 0, 0, -1, 500.0);			// Pizzeria
	CreateDynamicMapIcon(2105.4844,-1806.4695,13.5547, 29, 0, 0, 0, -1, 500.0);			// Pizzeria
	CreateDynamicMapIcon(2351.8242,2533.6289,10.8203, 29, 0, 0, 0, -1, 500.0);			// Pizzeria
	CreateDynamicMapIcon(2330.6023,2533.6121,10.8203, 29, 0, 0, 0, -1, 500.0);			// Pizzeria
	CreateDynamicMapIcon(2309.5044,2533.6143,10.8203, 29, 0, 0, 0, -1, 500.0);			// Pizzeria
	CreateDynamicMapIcon(-1735.7610,1244.9299,7.5469, 18, 0, 0, 0, -1, 500.0);			// Materiales I (SF)
	CreateDynamicMapIcon(1422.6765,-1319.3438,13.5547, 18, 0, 0, 0, -1, 500.0); 		// Materiales II (LS)
	CreateDynamicMapIcon(2823.3486,-1420.3571,16.2562, 18, 0, 0, 0, -1, 500.0); 		// Materiales III (LS)
	CreateDynamicMapIcon(1173.7434,-1323.3525,15.1953, 22, 0, 0, 0, -1, 500.0);			// Hospital LS
	CreateDynamicMapIcon(2027.2164,-1420.3737,16.9922, 22, 0, 0, 0, -1, 500.0);			// Hospital Grove
	CreateDynamicMapIcon(-2665.0000,640.1640,14.4531, 22, 0, 0, 0, -1, 500.0);			// Hospital SF
	CreateDynamicMapIcon(1607.4094,1815.2427,10.8203, 22, 0, 0, 0, -1, 500.0);			// Hospital LV
	CreateDynamicMapIcon(1564.6022,-1675.2286,61.8959, 30, 0, 0, 0, -1, 500.0);			// LSPD
	CreateDynamicMapIcon(-1605.5137,710.2757,13.8672, 30, 0, 0, 0, -1, 500.0);			// SFPD
	CreateDynamicMapIcon(2290.1978,2431.4529,10.8203, 30, 0, 0, 0, -1, 500.0);			// LVPD
	CreateDynamicMapIcon(-1954.3665,142.0110,26.8579, 42, 0, 0, 0, -1, 1000.0); 		// Estacion Tren SF
	CreateDynamicMapIcon(1729.2218,-1949.7788,14.1172, 42, 0, 0, 0, -1, 1000.0); 		// Estacion Tren LS 1
	CreateDynamicMapIcon(824.6184,-1354.0803,13.5379, 42, 0, 0, 0, -1, 1000.0); 		// Estacion Tren LS 2
	CreateDynamicMapIcon(1433.2081,2628.2771,11.3926, 42, 0, 0, 0, -1, 1000.0); 		// Estacion Tren LV 1
	CreateDynamicMapIcon(2854.0220,1290.9554,11.3906, 42, 0, 0, 0, -1, 1000.0); 		// Estacion Tren LV
	CreateDynamicMapIcon(2244.4436,-1665.2526,15.4766, 45, 0, 0, 0, -1, 1000.0); 		// Binco
	CreateDynamicMapIcon(1456.4785,-1137.6067,23.9485, 45, 0, 0, 0, -1, 1000.0); 		// ZIP
	CreateDynamicMapIcon(499.5177,-1360.6284,16.3690, 45, 0, 0, 0, -1, 1000.0); 		// Pro Laps
	CreateDynamicMapIcon(454.2013,-1477.9746,30.8137, 45, 0, 0, 0, -1, 1000.0); 		// DS
	CreateDynamicMapIcon(2112.9055,-1211.4561,23.9629, 45, 0, 0, 0, -1, 1000.0); 		// Sub Urban
	CreateDynamicMapIcon(461.7039,-1500.7959,31.0453, 45, 0, 0, 0, -1, 1000.0); 		// Victim
	CreateDynamicMapIcon(-2109.6641,-444.1529,38.7344, 33, 0, 0, 0, -1, 500.0);			// Camion
	CreateDynamicMapIcon(-1618.9741,56.8790,3.5495, 51, 0, 0, 0, -1, 500.0);			// Camion
	CreateDynamicMapIcon(-1581.2299,867.9284,7.6953, 52, 0, 0, 0, -1, 500.0); 			// Banco SF
	CreateDynamicMapIcon(1498.4614,-1580.7184,13.5498, 52, 0, 0, 0, -1, 500.0); 		// Banco LSPD
	CreateDynamicMapIcon(2449.4690,2290.2200,10.8203, 52, 0, 0, 0, -1, 500.0); 			// Banco LV
	CreateDynamicMapIcon(1457.1293,-1009.9208,26.8438, 52, 0, 0, 0, -1, 500.0); 		// Banco LS grande
	CreateDynamicMapIcon(1656.1246,-1883.6947,13.1237, 55, 0, 0, 0, -1, 500.0);			// Conce Barato
	CreateDynamicMapIcon(2127.5342,-1123.4701,24.9874, 55, 0, 0, 0, -1, 500.0);			// Conce Coutt And Schutz
	CreateDynamicMapIcon(557.6544,-1260.8588,16.8133, 55, 0, 0, 0, -1, 500.0);			// Conce GROTTI
	CreateDynamicMapIcon(-1989.7445,288.3349,33.9223, 55, 0, 0, 0, -1, 500.0);			// Conce Wang Cars
	CreateDynamicMapIcon(1464.9510,-1780.9888,13.9439, 55, 0, 0, 0, -1, 500.0);			// Conce Wang Cars Los Santos
	CreateDynamicMapIcon(1790.4875,-1291.0826,13.5947, 57, 0, 0, 0, -1, 500.0);			// Edificio Municipal
	CreateDynamicMapIcon(1377.0063,1152.7563,10.8203, 60, 0, 0, 0, -1, 300.0);			// Trabajo Transportista
	CreateDynamicMapIcon(2227.6040,-1714.0569,13.5551, 60, 0, 0, 0, -1, 500.0);			// Trabajo Guardaespalda
	CreateDynamicMapIcon(-384.8158,2206.0991,42.4235, 60, 0, 0, 0, -1, 500.0);			// Trabajo Minero
	CreateDynamicMapIcon(1742.9551,-1864.2202,13.5741, 60, 0, 0, 0, -1, 300.0);			// Trabajo Taxi
	CreateDynamicMapIcon(114.7220,-151.4292,1.5781, 60, 0, 0, 0, -1, 300.0);			// Trabajo Mecanico
	CreateDynamicMapIcon(1178.1359,-1361.3021,14.2302, 60, 0, 0, 0, -1, 300.0);			// Trabajo Medico
	CreateDynamicMapIcon(-177.6093,-1549.4420,6.3284, 60, 0, 0, 0, -1, 300.0);			// Trabajo Basurero
	CreateDynamicMapIcon(2122.9236,-2275.1238,20.6719, 60, 0, 0, 0, -1, 300.0);			// Trabajo Armero
	CreateDynamicMapIcon(-1715.4917,-65.0561,3.6473, 60, 0, 0, 0, -1, 300.0);			// Trabajo Camionero
	CreateDynamicMapIcon(2789.3672,-2574.6675,3.1683, 60, 0, 0, 0, -1, 300.0);			// Trabajo Pescador
	CreateDynamicMapIcon(2014.8224,1150.4775,10.8203, 60, 0, 0, 0, -1, 200.0);			// Trabajo Prostituci�n
	CreateDynamicMapIcon(-2181.3389,703.2298,53.8906, 60, 0, 0, 0, -1, 200.0);			// Trabajo Criminal
	CreateDynamicMapIcon(2362.7698,2306.3025,8.1406, 58, 0, 0, 0, -1, 300.0);			// Academia
	CreateDynamicMapIcon(2014.8101,1107.0100,10.9203, 21, -1, -1, -1, -1, 500.0);       // Striptease
	CreateDynamicMapIcon(263.592102, 22.960014, 2.170951, 63, -1, 0, 0);                // BSTC
	CreateDynamicMapIcon(690.9043,-1607.1835,14.5957, 59, -1, 0, 0);                	// Tienda DP
	CreateDynamic3DTextLabel(""CB"Para meter a prisi�n alguien\nUsa "CR"/entregar",0xFFFFFF00,688.2739,-491.1295,0.0544,4.0); // Entregar Milicia
	CreateDynamicPickup(1247, 1, 688.2739,-491.1295,0.0544,-1,-1,-1,100.0);     	//Entregar Milica

	CreateDynamic3DTextLabel(""CB"Los militares\npueden ponerse su "CR"/uniforme militar\n"CB"de este casillero.",0xFFFFFF00,219.2500,69.6230,1005.0391, 3.0);
	CreateDynamic3DTextLabel(""CR"Equipo militar\n"CB"Usa"CR" /armas"CB" para tomar una\n"CB"Usa"CR" /chaleco"CB" para colocarte uno",COLOR_BLANCO,219.1590,67.0800,1005.0466, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1, -1,-1, 100.0);
	CreateDynamicPickup(1275, 1, 219.2500,69.6230,1005.0391,-1,-1,-1,100.0);     	//uniforme
	CreateDynamicPickup(1242, 1, 219.1590,67.0800,1005.0466,-1,-1,-1,100.0);     	//chaleco

	CreateDynamic3DTextLabel(""CB"Ascensor\nPulsa "CR"'Y'"CB" para ingresar",0xFFFFFF00,246.5009,87.8434,1003.6406,4.0); // Ascensor Milicia
	CreateDynamic3DTextLabel(""CB"Ascensor\nPulsa "CR"'Y'"CB" para ingresar",0xFFFFFF00,627.0826,-554.3762,47.3112,4.0); // Ascensor Milicia

	CreateDynamic3DTextLabel(""CB"Departamento Militar\nPulsa "CR"'Y'"CB" para ingresar",0xFFFFFF00,632.2560,-587.9955,16.3359,4.0); // Entrada Milicia
	CreateDynamicPickup(19130, 1, 632.2560,-587.9955,16.3359,-1,-1,-1,100.0);     	//Entrada Milicia


	TextoCarrera = CreateDynamic3DTextLabel("{FF3300}Boleteria cerrada\n"CR"Horarios de los eventos:"CB" Carreras a cada hora!",COLOR_BLANCO,1101.2697,1613.1414,12.5469,10.0);
	TextoSalon = CreateDynamic3DTextLabel(""CB"Puedes "CR"/alquilar salon"CB" de eventos.\nCosto por hora: {00D61C}$20.000",COLOR_BLANCO, -1250.3397,2093.7437,1246.6360, 10.0);
	CabinasTextos[1] = CreateDynamic3DTextLabel(""CB"Radio disponible {C0C0C0}[N1]", COLOR_BLANCO, 349.4757, 179.4740, 1041.7256, 6);
	CabinasTextos[2] = CreateDynamic3DTextLabel(""CB"Radio disponible {C0C0C0}[N2]", COLOR_BLANCO, 349.5319, 161.5695, 1041.6917, 6);
	CabinasTextos[3] = CreateDynamic3DTextLabel(""CB"Radio disponible {C0C0C0}[N3]", COLOR_BLANCO, 349.5096, 150.0904, 1041.7167, 6);
	CabinasTextos[4] = CreateDynamic3DTextLabel(""CB"Radio disponible {C0C0C0}[N4]", COLOR_BLANCO, 361.9887, 152.0883, 1041.7084, 6);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'F'"CB" para usar el elevador.",COLOR_BLANCO,2117.8284,2415.0774,10.8428,8.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'F'"CB" para usar el elevador.",COLOR_BLANCO,2117.8284,2415.0774,15.1228,8.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'F'"CB" para usar el elevador.",COLOR_BLANCO,2117.8284,2415.0774,19.4428,8.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'F'"CB" para usar el elevador.",COLOR_BLANCO,2117.8284,2415.0774,23.7228,8.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'F'"CB" para usar el elevador.",COLOR_BLANCO,2117.8284,2415.0774,28.0428,8.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'F'"CB" para usar el elevador.",COLOR_BLANCO,2117.8284,2415.0774,32.3428,8.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'F'"CB" para usar el elevador.",COLOR_BLANCO,2117.8284,2415.0774,36.6228,8.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'F'"CB" para usar el elevador.",COLOR_BLANCO,2117.8284,2415.0774,40.9428,8.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'F'"CB" para usar el elevador.",COLOR_BLANCO,2117.8284,2415.0774,45.2228,8.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'F'"CB" para usar el elevador.",COLOR_BLANCO,2117.8284,2415.0774,49.5428,8.0);
	//Fabricas
 	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'H'"CB" para salir en el veh�culo.",COLOR_BLANCO,-1976.4287,212.0480,1035.8162+1.0,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0); //Salida Fabrica Garaje
    CreateDynamic3DTextLabel(""CB"Pulsa "CR"'H'"CB" para ver la lista de actividades.",COLOR_BLANCO,-2018.3846,248.9650,1035.8389+0.6,3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0); //Actividades
    CreateDynamic3DTextLabel("{779ab5}Keypad\n"CB"Pulsa "CR"'Y'"CB" para usar.", COLOR_BLANCO, -2022.8929, 253.0043, 1036.1030, 2);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'H'"CB" para\nadministrar la f�brica.",COLOR_BLANCO,-2020.4500,251.5991,1035.9010+0.2,3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0); //Administrar Fabrica
    CreateDynamic3DTextLabel(""CB"Pulsa "CR"'H'"CB" para dejar un "CR"bolso con dinero"CB".",COLOR_BLANCO,235.7830,109.9401,1010.2188+0.2,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0); //Pulsa 'H' Para dejar un bolso con dinero.
	//End
	CreateDynamic3DTextLabel("{009BE4}Piso: 9\n"CB"Pulsa "CR"'F'"CB" para usar el elevador.",COLOR_BLANCO,1783.6853,-1300.7665,65.8125,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{009BE4}Piso: 14\n"CB"Pulsa "CR"'F'"CB" para usar el elevador.",COLOR_BLANCO,1783.8641,-1300.7637,93.0391,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{009BE4}Piso: 17\n"CB"Pulsa "CR"'F'"CB" para usar el elevador.",COLOR_BLANCO,1783.6937,-1300.7670,109.3594,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Para crear tu emisora usa "CR"/crear radio\nCosto: "CR"$15.000", 0xFFFFFFAA,393.7036, 185.4025, 1040.1156, 9.0);
    CreateDynamic3DTextLabel(""CB"Puede "CR"/inscribirse"CB" para participar en la carrera.\nCosto:"CR" $2.000",COLOR_BLANCO,-1447.7421,-313.3544,1052.0969,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1,-1,25.0);
	CreateDynamic3DTextLabel(""CB"Puede "CR"/inscribirse"CB" para participar en la carrera.\nCosto:"CR" $2.000",COLOR_BLANCO,-1394.2090,-560.8654,1061.2335,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1,-1,25.0);
	CreateDynamic3DTextLabel(""CB"Los pescadores pueden "CR"/lanzar arpon"CB" para pescar en esta zona.",COLOR_BLANCO,893.5552,-2447.8867,-0.3858,20.0);
	CreateDynamic3DTextLabel(""CB"Para vender tu veh�culo, escribe"CR" /vender vehiculo"CB".",COLOR_BLANCO,1802.7854,-1303.8938,93.0391,20.0);
	CreateDynamic3DTextLabel(""CB"Para interactuar con la municipalidad pulsa "CR"'Y'"CB".",COLOR_BLANCO,1802.0935,-1287.3749,13.6365,10.0);
	CreateDynamic3DTextLabel(""CB"Para ser de M�dico, pulsa la tecla {3399FF}'Y'"CB"\nPara recibir ayuda sobre los trabajos disponibles, escribe "CR"/ayuda trabajos"CB".",COLOR_BLANCO,1178.1359,-1361.3021,14.2302,5.0);
	CreateDynamic3DTextLabel(""CB"Para ser fabricante y vendedor de armas, pulsa la tecla {3399FF}'Y'"CB"\nPara recibir ayuda sobre los trabajos disponibles, escribe "CR"/ayuda trabajos"CB".",COLOR_BLANCO,2122.9236,-2275.1238,20.6719,5.0);
	CreateDynamic3DTextLabel(""CB"Para ser de Camionero, pulsa la tecla {3399FF}'Y'"CB"\nPara recibir ayuda sobre los trabajos disponibles, escribe "CR"/ayuda trabajos"CB".",COLOR_BLANCO,-1715.4917,-65.0561,3.6473,5.0);
	CreateDynamic3DTextLabel(""CB"Para ser de Guardaespaldas, pulsa la tecla {3399FF}'Y'"CB"\nPara recibir ayuda sobre los trabajos disponibles, escribe "CR"/ayuda trabajos"CB".",COLOR_BLANCO,2227.6040,-1714.0569,13.5551,5.0);
	CreateDynamic3DTextLabel(""CR"�Busca un empleo?\n\n"CB"Pulsa la tecla {3399FF}'Y'"CB" para confirmar.",COLOR_BLANCO,958.2482,-54.3517,1001.1172,5.0);
	CreateDynamic3DTextLabel(""CR"Trabajo de Cosechador\n "CB"Para comenzar a cosechar utiliza "CR"/cosechar",COLOR_BLANCO,-386.6332,-1470.0067,25.7266,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CR"Trabajo de Cosechador\n "CB"Para comenzar a cosechar utiliza "CR"/cosechar",COLOR_BLANCO,-38.5662,56.1850,3.1172,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Para ser de Taxista, pulsa la tecla {3399FF}'Y'"CB"\nPara recibir ayuda sobre los trabajos disponibles, escribe "CR"/ayuda trabajos"CB".",COLOR_BLANCO,-2024.7489,-113.9102,1038.8187,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 5,5,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Para ser de Basurero, pulsa la tecla {3399FF}'Y'"CB"\nPara recibir ayuda sobre los trabajos disponibles, escribe "CR"/ayuda trabajos"CB".",COLOR_BLANCO,-177.6093,-1549.4420,6.3284,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Para ser de Mec�nico, pulsa la tecla {3399FF}'Y'"CB"\nPara recibir ayuda sobre los trabajos disponibles, escribe "CR"/ayuda trabajos"CB".",COLOR_BLANCO,114.7220,-151.4292,1.5781,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Para ser de Pescador, pulsa la tecla {3399FF}'Y'"CB"\nPara recibir ayuda sobre los trabajos disponibles, escribe "CR"/ayuda trabajos"CB".",COLOR_BLANCO,2790.0251,-2574.5549,3.3469,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Para ser de Transportista, pulsa la tecla {3399FF}'Y'"CB"\nPara recibir ayuda sobre los trabajos disponibles, escribe "CR"/ayuda trabajos"CB".",COLOR_BLANCO,2583.8274,1644.3837,1087.5602,8.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,5,1,-1,100.0); //Aqu� seria para conseguir el Trabajo de Transportista
	CreateDynamic3DTextLabel("Aqu� puedes solicitar un "CR"/encargo"CB"",COLOR_BLANCO, -2187.0981,715.3529,53.8992, 20.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,  0, 0, 0, -1, 20.0);
	CreateDynamic3DTextLabel(""CB"Para unirte al crimen pulsa '"CR"Y"CB"'"CB"\nPara recibir ayuda sobre los trabajos disponibles, escribe "CR"/ayuda trabajos.",COLOR_BLANCO, -2181.7563,714.6966,53.8916, 20.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,  0, 0, 0, -1, 20.0);
	CreateDynamic3DTextLabel(""CB"Usa "CR"/subir"CB" para subir al faro.",COLOR_BLANCO,154.3395,-1946.6226,5.3902,20.0);
	CreateDynamic3DTextLabel(""CB"Usa "CR"/subir"CB" para subir al faro.",COLOR_BLANCO,905.5018,-3022.0146,7.5141,20.0);
	CreateDynamic3DTextLabel(""CB"Usa "CR"/subir"CB" para subir las escaleras.",COLOR_BLANCO,-1182.6328,60.4289,1.9609,10.0);
	CreateDynamic3DTextLabel(""CB"Usa "CR"/subir"CB" para subir las escaleras.",COLOR_BLANCO,-1081.8900,-207.9342,1.9609,10.0);
	CreateDynamic3DTextLabel(""CB"Usa "CR"/subir"CB" para subir las escaleras.",COLOR_BLANCO,-1154.2579,-476.7021,1.9609,10.0);
	CreateDynamic3DTextLabel(""CB"Usa "CR"/subir"CB" para subir las escaleras.",COLOR_BLANCO,-1361.0671,-696.6432,1.9609,10.0);
	CreateDynamic3DTextLabel(""CB"Usa "CR"/subir"CB" para subir las escaleras.",COLOR_BLANCO,-1603.3958,-696.6434,1.9609,10.0);
	CreateDynamic3DTextLabel(""CB"Usa "CR"/subir"CB" para subir las escaleras.",COLOR_BLANCO,-1736.4478,-445.9445,1.9609,10.0);
	CreateDynamic3DTextLabel(""CB"Usa "CR"/subir"CB" para subir las escaleras.",COLOR_BLANCO,-1618.7266,-83.9973,1.9609,10.0);
	CreateDynamic3DTextLabel(""CB"Usa "CR"/subir"CB" para subir las escaleras.",COLOR_BLANCO,-1444.4602,90.2323,1.9609,10.0);
	CreateDynamic3DTextLabel(""CB"Usa "CR"/subir"CB" para subir las escaleras.",COLOR_BLANCO,-1164.6530,369.9854,1.9609,10.0);
	CreateDynamic3DTextLabel(""CB"Usa "CR"/subir"CB" para subir las escaleras.",COLOR_BLANCO,-1115.7904,335.3422,1.9609,10.0);
	CreateDynamic3DTextLabel(""CR"/bajar",COLOR_BLANCO,152.5124,-1952.7639,47.8750,20.0);
	CreateDynamic3DTextLabel(""CR"/bajar",COLOR_BLANCO,909.9585,-3016.6672,49.9987,20.0);
	CreateDynamic3DTextLabel(""CR"/bajar",COLOR_BLANCO,-1183.2729,59.7690,14.1484,10.0);
	CreateDynamic3DTextLabel(""CR"/bajar",COLOR_BLANCO,-1082.6582,-208.3099,14.1440,10.0);
	CreateDynamic3DTextLabel(""CR"/bajar",COLOR_BLANCO,-1155.1638,-476.1771,14.1484,10.0);
	CreateDynamic3DTextLabel(""CR"/bajar",COLOR_BLANCO,-1361.0728,-695.5795,14.1484,10.0);
	CreateDynamic3DTextLabel(""CR"/bajar",COLOR_BLANCO,-1603.4130,-695.7511,14.1440,10.0);
	CreateDynamic3DTextLabel(""CR"/bajar",COLOR_BLANCO,-1735.5591,-445.9360,14.1484,10.0);
	CreateDynamic3DTextLabel(""CR"/bajar",COLOR_BLANCO,-1618.0411,-84.6595,14.1484,10.0);
	CreateDynamic3DTextLabel(""CR"/bajar",COLOR_BLANCO,-1443.7330,89.5017,14.1466,10.0);
	CreateDynamic3DTextLabel(""CR"/bajar",COLOR_BLANCO,-1164.0070,369.3972,14.1484,10.0);
	CreateDynamic3DTextLabel(""CR"/bajar",COLOR_BLANCO,-1116.5095,336.0152,14.1442,10.0);
	CreateDynamic3DTextLabel(""CR"SALA 1",0xFFFFFF00,1160.1355,-1323.6254,-8.2668,4.0);
	CreateDynamic3DTextLabel(""CR"SALA 2",0xFFFFFF00,1160.0181,-1333.1748,-8.2668,4.0);
	CreateDynamic3DTextLabel(""CR"SALA 3",0xFFFFFF00,1153.3662,-1332.9631,-8.2668,4.0);
	CreateDynamic3DTextLabel(""CR"SALA 4",0xFFFFFF00,1160.4609,-1342.7770,-8.2668,4.0);
	CreateDynamic3DTextLabel(""CR"SALA 5",0xFFFFFF00,1153.8414,-1342.8153,-8.2668,4.0);
	CreateDynamic3DTextLabel(""CR"SALA 6",0xFFFFFF00,1153.6920,-1351.9772,-8.2668,4.0);
   	
	CreateDynamic3DTextLabel(""CB"Cerveza "CR"$40 "CR"/comprar cerveza\n"CB"Vino "CR"$60 "CR"/comprar vino\n"CB"Sprunk "CR"$70 "CR"/comprar sprunk",COLOR_BLANCO,499.8982,-20.6732,1000.6797,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{00D61C}Sal�n de eventos"CB"\nEntrada para veh�culos\n\nUsa "CR"/entrar"CB" para ingresar.",COLOR_BLANCO,1410.7946,-1228.7570,13.5469,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para ver el listado de productos.",COLOR_BLANCO,-1262.6428,2119.9490,1246.5457,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para ver el listado de productos.",-1,618.8964,-556.0715,16.3050, 8.0);
 	CreateDynamic3DTextLabel(""CB"Venta de Boletos"CR"\n/comprar boleto",COLOR_BLANCO,831.5464,-1361.7238,-0.5015,5.0);
	CreateDynamic3DTextLabel(""CB"Venta de Boletos"CR"\n/comprar boleto",COLOR_BLANCO,1757.1368,-1943.4417,13.5703,5.0);
	CreateDynamic3DTextLabel(""CB"Venta de Boletos"CR"\n/comprar boleto",COLOR_BLANCO,1746.9652,-1943.4482,13.5703,5.0);
	CreateDynamic3DTextLabel(""CB"Venta de Boletos"CR"\n/comprar boleto",COLOR_BLANCO,-1974.0217,116.7847,27.6875,5.0);
	CreateDynamic3DTextLabel(""CB"Venta de Boletos"CR"\n/comprar boleto",COLOR_BLANCO,1437.3113,2655.2742,11.3926,5.0);
	CreateDynamic3DTextLabel(""CB"Venta de Boletos"CR"\n/comprar boleto",COLOR_BLANCO,1437.4141,2620.1450,11.3926,5.0);
	CreateDynamic3DTextLabel(""CB"Venta de Boletos"CR"\n/comprar boleto",COLOR_BLANCO,2856.5955,1314.5538,11.3906,5.0);
	CreateDynamic3DTextLabel(""CB"Venta de Boletos"CR"\n/comprar boleto",COLOR_BLANCO,2856.5969,1266.9460,11.3906,5.0);
	CreateDynamic3DTextLabel(""CB"Venta de Boletos"CR"\n/comprar boleto",COLOR_BLANCO,826.7249,-1353.6726,13.5369,5.0);
	CreateDynamic3DTextLabel(""CB"Usa "CR"/ver pantalla"CB" para ver\nla ubicaci�n de los trenes.",COLOR_BLANCO,-1959.7164,141.9694,27.6875,5.0);
	CreateDynamic3DTextLabel(""CB"Usa "CR"/ver pantalla"CB" para ver\nla ubicaci�n de los trenes.",COLOR_BLANCO,-1962.3730,130.1360,27.6875,5.0);
	CreateDynamic3DTextLabel(""CB"Usa "CR"/ver pantalla"CB" para ver\nla ubicaci�n de los trenes.",COLOR_BLANCO,1729.7041,-1943.3695,13.5705,5.0);
	CreateDynamic3DTextLabel(""CB"Usa "CR"/ver pantalla"CB" para ver\nla ubicaci�n de los trenes.",COLOR_BLANCO,822.8813,-1353.8101,-0.5078,5.0);
	CreateDynamic3DTextLabel(""CB"Usa "CR"/ver pantalla"CB" para ver\nla ubicaci�n de los trenes.",COLOR_BLANCO,1439.4858,2644.6511,11.3926,5.0);
	CreateDynamic3DTextLabel(""CB"Usa "CR"/ver pantalla"CB" para ver\nla ubicaci�n de los trenes.",COLOR_BLANCO,2856.4263,1296.8097,11.3906,5.0);
	CreateDynamic3DTextLabel(""CB"Usa "CR"/ver pantalla"CB" para ver\nla ubicaci�n de los trenes.",COLOR_BLANCO,181.5000,1243.4573,23.1031,5.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'H'"CB" para solicitar el paso.",COLOR_BLANCO,832.2947,-2958.3792,12.1438,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'H'"CB" para solicitar el paso.",COLOR_BLANCO,834.7955,-2959.8113,12.1212,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
    CreateDynamic3DTextLabel("{D15D00}Semillas de marihuana"CB"\nPaquete de 50 semillas\nCosto: "CR"$1.500"CB"\n"CR"/comprar semillas"CB".",COLOR_BLANCO,-1072.1710,-1202.1224,129.2188,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
    CreateDynamic3DTextLabel("{D15D00}Semillas de marihuana"CB"\nPaquete de 50 semillas\nCosto: "CR"$1.500"CB"\n"CR"/comprar semillas"CB".",COLOR_BLANCO,-1103.5033,-1620.6311,76.3672,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Ropa de m�dico: "CR"/uniforme medico",COLOR_BLANCO,1159.4829,-1356.8820,-10.7922,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 6,6,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Ropa de m�dico: "CR"/uniforme medico",COLOR_BLANCO,-2730.0010,614.3734,1385.6547,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 7,6,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Ropa de m�dico: "CR"/uniforme medico",COLOR_BLANCO,1234.7531,-830.0230,1164.2759,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,6,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Escribe "CR"/socio"CB" para hacerte socio de este hospital.\n"CR"/socio ayuda"CB" para recibir ayuda.\n"CR"/servicio medico"CB" para ser atendido.",COLOR_BLANCO,1147.9966,-1322.4128,-10.7922,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 6,6,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Escribe "CR"/socio"CB" para hacerte socio de este hospital.\n"CR"/socio ayuda"CB" para recibir ayuda.\n"CR"/servicio medico"CB" para ser atendido.",COLOR_BLANCO,-2713.9946,636.8887,1385.6547,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 7,6,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Escribe "CR"/socio"CB" para hacerte socio de este hospital.\n"CR"/socio ayuda"CB" para recibir ayuda.\n"CR"/servicio medico"CB" para ser atendido.",COLOR_BLANCO,1242.1232,-809.9145,1164.2759,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,6,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para ver el botiqu�n.",COLOR_BLANCO,1169.7440,-1353.4617,-10.7922,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 6,6,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para ver el botiqu�n.",COLOR_BLANCO,-2720.8577,647.0939,1385.6547,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 7,6,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para ver el botiqu�n.",COLOR_BLANCO,1235.0538,-821.8724,1164.2759,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,6,-1, 100.0);
	CreateDynamic3DTextLabel(""CR"Venta de propiedades\n "CB"Para vender tu propiedad utiliza "CR"/vender propiedad",COLOR_BLANCO,1809.5894,-1299.8063,65.8125, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 0,0,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Para contratar el servicio de gr�a, escribe "CR"/servicio grua"CB".",COLOR_BLANCO,1819.1549,-1284.6589,109.3594, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 0,0,-1, 100.0);
	CreateDynamic3DTextLabel(""CR"Pay 'n' Spray\n "CB"Para reparar tu veh�culo aereo utiliza"CR" /reparar aereo\n"CB"Costo: "CR"$500",COLOR_BLANCO,2041.3850,-2632.4158,13.5469,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CR"Pay 'n' Spray\n "CB"Para reparar tu veh�culo aereo utiliza"CR" /reparar aereo\n"CB"Costo: "CR"$500",COLOR_BLANCO,-1171.0649,-169.3947,14.1484,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CR"Pay 'n' Spray\n "CB"Para reparar tu veh�culo aereo utiliza"CR" /reparar aereo\n"CB"Costo: "CR"$500",COLOR_BLANCO,1317.2406,1480.4854,10.8203,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	//for(new i = 0; i < sizeof(BaldePosx);i++) { CreateDynamic3DTextLabel("{00BCFE}Agua"CB"\nAqu� puedes "CR"/llenar balde",COLOR_BLANCO,BaldePosx[i][0],BaldePosx[i][1],BaldePosx[i][2],5.0); }
	for(new i = 0; i < sizeof(OperacionesPositions);i++) { CreateDynamic3DTextLabel(""CR"Operaciones bancarias\n"CB"Pulsa "CR"'Y'"CB" para interactuar.",0xFFFFFF50,OperacionesPositions[i][0],OperacionesPositions[i][1],OperacionesPositions[i][2],10.0); }
	for(new a = 0; a < sizeof(RadioPos);a++) { CreateDynamic3DTextLabel(""CB"Radio\n "CR"/emisoras "CR"- "CR"/apagar radio",COLOR_BLANCO,RadioPos[a][0],RadioPos[a][1],RadioPos[a][2],8.0); }
	for(new i = 0; i < sizeof(GasoPos);i++) CreateDynamic3DTextLabel(""CB"Para llenar el tanque utiliza"CR" /llenar tanque\n"CB"Para cargar una cantidad diferente, usa "CR"/combustible [litros]\n"CB"Para comprar un bid�n utiliza "CR"/comprar bidon",COLOR_BLANCO,GasoPos[i][0],GasoPos[i][1],GasoPos[i][2],20,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0,0,-1,100.0);//Gasolinera
	CreateDynamic3DTextLabel(""CB"Para colocarte la ropa utiliza"CR" /mecanico",COLOR_BLANCO,84.3491,-149.0520,2.6000,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{009BE4}Repuestos"CB"\n Costo de cada repuesto: "CR"$100"CB"\n"CR"/comprar repuestos",COLOR_BLANCO,93.3250,-161.6600,2.5938,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CR"Ropa de Basurero\n "CB"Para colocarte la ropa utiliza"CR" /basurero",COLOR_BLANCO,-170.1398,-1556.1694,5.6444,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Usa "CR"/reparar embarcacion"CB" para reparar tu embarcaci�n\n"CB"Costo: "CR"$500",COLOR_BLANCO,2745.3225,-2596.3396,-0.1532,20,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0,0,-1,100.0);
	CreateDynamic3DTextLabel(""CB"Usa "CR"/reparar embarcacion"CB" para reparar tu embarcaci�n\n"CB"Costo: "CR"$500",COLOR_BLANCO,-1636.6896,165.5648,-0.3798,20,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0,0,-1,100.0);
	CreateDynamic3DTextLabel(""CB"Usa "CR"/reparar embarcacion"CB" para reparar tu embarcaci�n\n"CB"Costo: "CR"$500",COLOR_BLANCO,2965.1025,-1496.3701,-0.2706,20,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0,0,-1,100.0);
	CreateDynamic3DTextLabel("{00D2CF}Permiso de pesca"CB"\n Usa "CR"/permiso pesca"CB" para conseguir tu permiso",COLOR_BLANCO,2785.9165,-2575.4348,3.1600,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CR"Trabajo de Minero\n "CB"Para obtener el trabajo de Minero pulsa {3399FF}'Y'"CB"",COLOR_BLANCO,-382.5980,2199.3918,25.4105,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para ver el listado de productos.",COLOR_BLANCO,-28.0060,-89.9514,1003.5469,20,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,-1,-1,-1,100.0);
	
	CreateDynamic3DTextLabel(""CB"Para entrar a esta casa necesitas "CR"/forzar cerradura",COLOR_BLANCO, -2277.1763,-9.9763,38.2523, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Para entrar a esta casa necesitas "CR"/forzar cerradura",COLOR_BLANCO, -2393.9712,-13.1641,35.3125, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Para entrar a esta casa necesitas "CR"/forzar cerradura",COLOR_BLANCO, 2373.8467,-1139.5442,30.0510, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Para entrar a esta casa necesitas "CR"/forzar cerradura",COLOR_BLANCO, -2727.5435,-50.9449,7.0301, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Para entrar a esta casa necesitas "CR"/forzar cerradura",COLOR_BLANCO, -2727.5054,-155.6168,7.2009, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Para entrar a esta casa necesitas "CR"/forzar cerradura",COLOR_BLANCO, 2485.1733,-1997.1724,13.9166, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Para entrar a esta casa necesitas "CR"/forzar cerradura",COLOR_BLANCO, -1448.9193,2647.9514,56.4912, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Para entrar a esta casa necesitas "CR"/forzar cerradura",COLOR_BLANCO, 1762.8772,-2101.1462,13.9916, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Para entrar a esta casa necesitas "CR"/forzar cerradura",COLOR_BLANCO, 1844.5101,770.9579,11.4838, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Para entrar a esta casa necesitas "CR"/forzar cerradura",COLOR_BLANCO, 1344.6938,2610.3264,11.5494, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Para entrar a esta casa necesitas "CR"/forzar cerradura",COLOR_BLANCO, 1667.0402,2610.3267,11.5494, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Para entrar a esta casa necesitas "CR"/forzar cerradura",COLOR_BLANCO, 932.0876,1973.6534,11.6077, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Objetos de valor\nPulsa "CR"'H'"CB" para agarrar uno.",COLOR_BLANCO, -1449.5641,2644.4102,56.5616, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Objetos de valor\nPulsa "CR"'H'"CB" para agarrar uno.",COLOR_BLANCO, 2481.6006,-1988.2667,13.6347, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Objetos de valor\nPulsa "CR"'H'"CB" para agarrar uno.",COLOR_BLANCO, -2731.8608,-163.3383,7.2174, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Objetos de valor\nPulsa "CR"'H'"CB" para agarrar uno.",COLOR_BLANCO, -2395.5342,-17.3052,35.3740, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Objetos de valor\nPulsa "CR"'H'"CB" para agarrar uno.",COLOR_BLANCO, -2279.4539,-15.9261,38.2993, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Objetos de valor\nPulsa "CR"'H'"CB" para agarrar uno.",COLOR_BLANCO, 2369.2874,-1129.8945,30.0510, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Objetos de valor\nPulsa "CR"'H'"CB" para agarrar uno.",COLOR_BLANCO, -2730.4619,-58.3389,7.0453, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Objetos de valor\nPulsa "CR"'H'"CB" para agarrar uno.",COLOR_BLANCO, 940.9933,1975.9020,11.6227, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Objetos de valor\nPulsa "CR"'H'"CB" para agarrar uno.",COLOR_BLANCO, 1757.1731,-2093.3801,13.9916, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Objetos de valor\nPulsa "CR"'H'"CB" para agarrar uno.",COLOR_BLANCO, 1842.3849,767.6443,11.5541, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Objetos de valor\nPulsa "CR"'H'"CB" para agarrar uno.",COLOR_BLANCO, 1356.2726,2612.3572,11.5559, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Objetos de valor\nPulsa "CR"'H'"CB" para agarrar uno.",COLOR_BLANCO, 1679.0486,2612.4893,11.5494, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	EscaparLabel[0] = CreateDynamic3DTextLabel(""CB"Escribe"CR" /escapar"CB" para salir de la casa.",COLOR_BLANCO,-2278.0540,-10.3085,38.2993,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	EscaparLabel[1] = CreateDynamic3DTextLabel(""CB"Escribe"CR" /escapar"CB" para salir de la casa.",COLOR_BLANCO,932.0320,1975.0972,11.6227,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	EscaparLabel[2] = CreateDynamic3DTextLabel(""CB"Escribe"CR" /escapar"CB" para salir de la casa.",COLOR_BLANCO,-2395.8364,-13.1430,35.3481,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	EscaparLabel[3] = CreateDynamic3DTextLabel(""CB"Escribe"CR" /escapar"CB" para salir de la casa.",COLOR_BLANCO,2373.7332,-1137.5479,30.0583,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	EscaparLabel[4] = CreateDynamic3DTextLabel(""CB"Escribe"CR" /escapar"CB" para salir de la casa.",COLOR_BLANCO,-2729.1409,-51.0642,7.0800,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	EscaparLabel[5] = CreateDynamic3DTextLabel(""CB"Escribe"CR" /escapar"CB" para salir de la casa.",COLOR_BLANCO,-2729.1213,-155.6669,7.2174,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	EscaparLabel[6] = CreateDynamic3DTextLabel(""CB"Escribe"CR" /escapar"CB" para salir de la casa.",COLOR_BLANCO,1762.8767,-2099.9766,13.9989,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	EscaparLabel[7] = CreateDynamic3DTextLabel(""CB"Escribe"CR" /escapar"CB" para salir de la casa.",COLOR_BLANCO,2485.0024,-1994.9429,14.2247,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	EscaparLabel[8] = CreateDynamic3DTextLabel(""CB"Escribe"CR" /escapar"CB" para salir de la casa.",COLOR_BLANCO,1842.9286,770.8148,11.5959,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	EscaparLabel[9] = CreateDynamic3DTextLabel(""CB"Escribe"CR" /escapar"CB" para salir de la casa.",COLOR_BLANCO,-1450.1272,2647.8567,56.5355,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	EscaparLabel[10] = CreateDynamic3DTextLabel(""CB"Escribe"CR" /escapar"CB" para salir de la casa.",COLOR_BLANCO,1344.5217,2611.8862,11.5559,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	EscaparLabel[11] = CreateDynamic3DTextLabel(""CB"Escribe"CR" /escapar"CB" para salir de la casa.",COLOR_BLANCO,1666.9180,2612.6965,11.5559,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	for(new i = 0; i < sizeof(VerMapasPositions);i++)
	{
		CreateDynamic3DTextLabel("{3399FF}Puntos de inter�s"CB"\nPulsa "CR"'Y'"CB" para ver el mapa.",0xFFFFFF00,VerMapasPositions[i][0],VerMapasPositions[i][1],VerMapasPositions[i][2]+0.7,10,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,0,0,0,-1,100.0);
        CreateDynamicObject(1444, VerMapasPositions[i][0],VerMapasPositions[i][1],VerMapasPositions[i][2], 0.0000, 0.0000, 90.0000,-1,-1,-1,500.0);
	}
	CreateDynamic3DTextLabel(""CR"Estanter�a\n"CB"Pulsa "CR"'F'"CB" para verla.",0xFFFFFF00,255.7412,-40.2322,1002.0234,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Los polic�as\npueden ponerse su "CR"/uniforme policia\n"CB"de este casillero.",0xFFFFFF00,254.4149,73.7001,1003.6406, 3.0);
	CreateDynamic3DTextLabel(""CR"Blindajes\n "CB"usa"CR" /chaleco"CB" para colocarte uno ",COLOR_BLANCO,249.1478,74.3152,1003.6406, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1, -1,-1, 100.0);
	CreateDynamic3DTextLabel(""CR"Porras\n "CB"usa"CR" /armas"CB" para tomar una ",COLOR_BLANCO,250.4184,73.3132,1003.6406, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1, -1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Vestuario y dep�sito de armas\nUsa "CR"/entrar"CB" para ingresar.",COLOR_BLANCO,638.8741,-218.1260,1276.7928, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 55,55,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Vestuario y dep�sito de armas\nUsa "CR"/entrar"CB" para ingresar.",COLOR_BLANCO,276.2080,122.0958,1004.6172, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Vestuario y dep�sito de armas\nUsa "CR"/entrar"CB" para ingresar.",COLOR_BLANCO,207.9470,142.3866,1003.0234, 7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 7,3,-1, 100.0);
	CreateDynamic3DTextLabel(""CR"Listado de productos\n"CB"Pulsa "CR"'Y'"CB" para interactuar.",COLOR_BLANCO,-225.1540,1404.1327,27.7734,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CR"Listado de productos\n"CB"Pulsa "CR"'Y'"CB" para interactuar.",COLOR_BLANCO,499.6766,-76.0245,998.7578,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CR"Listado de productos\n"CB"Pulsa "CR"'Y'"CB" para interactuar.",COLOR_BLANCO,-784.2098,500.1945,1371.7422,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CR"Listado de productos\n"CB"Pulsa "CR"'Y'"CB" para interactuar.",COLOR_BLANCO,-1396.3044,-320.4939,1052.0834,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CR"Listado de productos\n"CB"Pulsa "CR"'Y'"CB" para interactuar.",COLOR_BLANCO,1214.8663,-13.3527,1000.9219,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 5,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CR"Listado de productos\n"CB"Pulsa "CR"'Y'"CB" para interactuar.",COLOR_BLANCO,969.3787,-45.0186,1001.1172,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 5,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"�Cometi� alg�n crimen?\nAqu� puede "CR"/entregarse",COLOR_BLANCO,240.4520,112.8195,1003.2188,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"�Cometi� alg�n crimen?\nAqu� puede "CR"/entregarse",COLOR_BLANCO,233.3752,158.7853,1003.0234,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CR"/comprar juguetes",COLOR_BLANCO,-103.9013,-22.6749,1000.7188,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CR"/comprar juguetes",COLOR_BLANCO,1214.0737,-13.3524,1000.9219,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 12,-1,-1, 100.0);
	//CreateDynamic3DTextLabel(""CR"Propiedad de Grove Street",COLOR_BLANCO,2495.4424,-1691.1359,14.7656,20,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0,0,-1,100.0);
	//CreateDynamic3DTextLabel(""CR"Propiedad de Triads",COLOR_BLANCO,1122.7065,-2036.9232,69.8942,20,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0,0,-1,100.0);
	CreateDynamic3DTextLabel(""CR"/vender objeto",COLOR_BLANCO, 214.7099,-233.4306,1.7786,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
    CreateDynamic3DTextLabel(""CB"Tienda de objetos\n"CR"/comprar objetos",COLOR_BLANCO,196.3872,-231.1294,1.7786,8.0);
	CreateDynamic3DTextLabel(""CB"Caja de aquarius con 12 unidades\nPrecio: "CR"$1.560\n"CR"/comprar caja",COLOR_BLANCO,93.7855,-305.2337,1.5781,20,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0,0,-1,100.0);
	CreateDynamic3DTextLabel(""CB"Caja de vino con 12 unidades\nPrecio: "CR"$600\n"CR"/comprar caja",COLOR_BLANCO,93.7853,-309.5841,1.5781,20,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0,0,-1,100.0);
 	CreateDynamic3DTextLabel(""CB"Caja de cerveza con 12 unidades\nPrecio: "CR"$480\n"CR"/comprar caja",COLOR_BLANCO,93.7853,-313.7030,1.5781,20,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0,0,-1,100.0);
 	CreateDynamic3DTextLabel(""CB"Caja de sprunk con 12 unidades\nPrecio: "CR"$480\n"CR"/comprar caja",COLOR_BLANCO,86.0509,-315.2853,1.8494,20,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0,0,-1,100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa '"CR"Y"CB"' o usa "CR"/dejar roca",COLOR_BLANCO, -548.2949,2336.7649,83.4777, 2.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CR"/comprar herramientas",0xFFFF00FF,-1072.1169,354.2132,1180.5259,8.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,-1,-1,-1,100.0);
	CreateDynamic3DTextLabel(""CR"/comprar herramientas",0xFFFF00FF,2431.6504,-1777.9565,13.5516,8.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,-1,-1,-1,100.0);

	CreateDynamic3DTextLabel(""CB"Los mineros aqu� pueden\nponerse su "CR"/uniforme minero",COLOR_BLANCO, 269.1445,295.4604,999.8400, 2.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CR"Hierro\n"CB"Nivel de minero necesario: "CR"1"CB"\nPulsa "CR"Y"CB".",COLOR_BLANCO,-740.4136,2392.6699,4.1117,5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID,-1,-1,-1,-1,100.0);
	CreateDynamic3DTextLabel(""CR"Cobre\n"CB"Nivel de minero necesario: "CR"2"CB"\nPulsa "CR"Y"CB".",COLOR_BLANCO,-745.1193,2408.8325,1.3375,5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID,-1,-1,-1,-1,100.0);
	CreateDynamic3DTextLabel(""CR"Titanio\n"CB"Nivel de minero necesario: "CR"3"CB"\nPulsa "CR"Y"CB".",COLOR_BLANCO,-729.0903,2410.1563,7.2710,5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID,-1,-1,-1,-1,100.0);
	CreateDynamic3DTextLabel(""CR"Mercurio\n"CB"Nivel de minero necesario: "CR"4"CB"\nPulsa "CR"Y"CB".",COLOR_BLANCO,-728.3772,2422.0627,7.1895,5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID,-1,-1,-1,-1,100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para ver el listado de productos.",COLOR_BLANCO,373.7276,-118.8039,1001.4922,20,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,-1,-1,-1,100.0);
	CreateDynamic3DTextLabel(""CB"Escribe "CR"/comprar licencia "CB"para adquirir una licencia de piloto.",COLOR_BLANCO,1162.5385,-2.6774,1020.6459,15.0,	INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"/control",COLOR_SERVER,-1192.7047,2064.7141,1254.8612,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Para comprar materiales\nUsa "CR"/comprar materiales"CB"\nCantidad "CR"150 materiales"CB" | Costo: "CR"$1.250"CB".",COLOR_BLANCO,2823.3486,-1420.3571,16.2562,20.0);
	CreateDynamic3DTextLabel(""CB"Para comprar materiales\nUsa "CR"/comprar materiales"CB"\nCantidad "CR"150 materiales"CB" | Costo: "CR"$1.250"CB".",COLOR_BLANCO,1422.6765,-1319.3438,13.5547,20.0);
	CreateDynamic3DTextLabel(""CB"Para comprar materiales\nUsa "CR"/comprar materiales"CB"\nCantidad "CR"750 materiales"CB" | Costo: "CR"$6.250"CB".",COLOR_BLANCO,-1735.7610,1244.9299,7.5469,20.0);
	CreateDynamic3DTextLabel(""CB"Usa "CR"/entrar"CB" para ingresar.",COLOR_BLANCO,186.7460,1428.8141,10.5912,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Porci�n de Pizza\nPrecio: {00CA00}$100\n"CR"/comprar pizza",COLOR_BLANCO,173.1344,1427.7749,10.5912,20.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Vaso de Sprunk\nPrecio: {00CA00}$65\n"CR"/comprar sprunk",COLOR_BLANCO,-19.4871,-180.4452,1007.7656,20.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
 	CreateDynamic3DTextLabel(""CB"Vaso de Sprunk\nPrecio: {00CA00}$65\n"CR"/comprar sprunk",COLOR_BLANCO,-2706.5872,642.0862,1385.6547,20.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	//CreateDynamic3DTextLabel(""CB"Vaso de Sprunk\nPrecio: {00CA00}$65\n"CR"/comprar sprunk",COLOR_BLANCO,1238.7804,-807.9684,1167.9960,20.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	//CreateDynamic3DTextLabel(""CB"Vaso de Sprunk\nPrecio: {00CA00}$65\n"CR"/comprar sprunk",COLOR_BLANCO,-391.6618,2244.6731,42.4125,15.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	//CreateDynamic3DTextLabel(""CB"Vaso de Sprunk\nPrecio: {00CA00}$65\n"CR"/comprar sprunk",COLOR_BLANCO,-404.4212,-1434.0778,25.7266,15.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Vaso de Sprunk\nPrecio: {00CA00}$65\n"CR"/comprar sprunk",COLOR_BLANCO,1161.3102,-7.5683,1020.6459,15.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Vaso de Sprunk\nPrecio: {00CA00}$65\n"CR"/comprar sprunk",COLOR_BLANCO,365.3715,165.4839,1040.1156,15.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
    CreateDynamic3DTextLabel(""CB"Vaso de Sprunk\nPrecio: {00CA00}$65\n"CR"/comprar sprunk",COLOR_BLANCO,1349.7432,2214.1816,12.0156,15.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	//CreateDynamic3DTextLabel(""CB"Vaso de Sprunk\nPrecio: {00CA00}$65\n"CR"/comprar sprunk",COLOR_BLANCO,164.9628,1250.7468,23.1031,15.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	//CreateDynamic3DTextLabel(""CB"Vaso de Sprunk\nPrecio: {00CA00}$65\n"CR"/comprar sprunk",COLOR_BLANCO,172.1788,1431.5389,10.5912,15.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	//CreateDynamic3DTextLabel(""CB"Vaso de Sprunk\nPrecio: {00CA00}$65\n"CR"/comprar sprunk",COLOR_BLANCO,229.6400,141.6814,1003.0234,15.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	//CreateDynamic3DTextLabel(""CB"Vaso de Sprunk\nPrecio: {00CA00}$65\n"CR"/comprar sprunk",COLOR_BLANCO,251.6611,111.4811,1003.2188,15.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	//CreateDynamic3DTextLabel(""CB"Vaso de Sprunk\nPrecio: {00CA00}$65\n"CR"/comprar sprunk",COLOR_BLANCO,1155.5963,-1357.5933,-10.7922,15.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{37db45}Mina Castillo del Diablo"CB"\n\nPulsa '"CR"'Y'"CB"' para ingresar.",COLOR_BLANCO,-611.365, 2325.39, 79.5652+0.75,15.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	

	CreateDynamic3DTextLabel(""CB"Para entrar a la propiedad usa "CR"/entrar",COLOR_BLANCO,300.3342,311.4263,999.1484,15.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Escuela de paracaidismo"CB"\nPuede "CR"/inscribirse"CB" para participar en el siguiente salto.\nCosto: {00CA00}$5.000",0xAFAFAFAA,415.2025,2535.5874,19.1484,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Armamento\n"CR"/agarrar armas",0xFFFFFFAA,1424.2625,491.3984,1007.3831,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1,-1,100.0);
	CreateDynamic3DTextLabel(""CB"Cami�n de caudales\n"CR"/guardar bolso",0xFFFFFFAA,1440.6594,471.9737,1007.3826,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1,-1,100.0);
    CreateDynamic3DTextLabel(""CB"Bolso con dinero para transportar\n"CR"/agarrar bolso",0xFFFFFFAA,1401.6139, 523.4624, 1000.9144,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1,-1,100.0);
    CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para salir.",COLOR_BLANCO,-1447.6458,-548.0417,1061.2260+1.00,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para salir.",COLOR_BLANCO,774.1675,-50.4764,1000.5859+1.00,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para salir.",COLOR_BLANCO,773.9137,-78.8461,1000.6628+1.00,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para salir.",COLOR_BLANCO,-204.3461,-44.4010,1002.2734+1.00,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para salir.",COLOR_BLANCO,412.0151,-54.4452,1001.8984+1.00,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para salir.",COLOR_BLANCO,411.6964,-23.1628,1001.8047+1.00,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para salir.",COLOR_BLANCO,418.6932,-84.3675,1001.8047+1.00,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para salir.",COLOR_BLANCO,316.3925,-170.2967,999.5938+1.00,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para salir.",COLOR_BLANCO,-1427.7034,-291.6166,1051.2515+1.00,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para salir.",COLOR_BLANCO,1783.8291,-1301.7024,13.5026+1.00,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para salir.",COLOR_BLANCO,168.1586,1436.1012,1084.8462+1.00,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para salir.",COLOR_BLANCO,-2240.7715,137.1613,1035.4141+1.00,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para salir.",COLOR_BLANCO,246.7735,62.6075,1003.6406+1.00,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para salir.",COLOR_BLANCO,2332.5701,-1254.7500,1026.29+1.00,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para salir.",COLOR_BLANCO,223.0810,1287.0770,1082.1406+1.00,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para salir.",COLOR_BLANCO,254.1746,-41.6122,1002.0308+1.00,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para salir.",COLOR_BLANCO,-1387.9806,-324.9726,1052.0834+1.00,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0); //LV ESTADIO
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para salir.",COLOR_BLANCO,-1544.0551,-446.6218,6.0068+1.00,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 0,0,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para salir.",COLOR_BLANCO,-1232.5634,54.9100,14.1276+1.00,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 0,0,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para salir.",COLOR_BLANCO,1719.9429,1619.2629,10.0866+1.00,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 0,0,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para salir.",COLOR_BLANCO,390.4993,173.9211,1008.3828+1.00,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 3,3,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para salir.",COLOR_BLANCO,-718.7835,2462.5969,9.9039+1.00,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para salir.",COLOR_BLANCO,251.20,76.40,1003.64+1.00,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'H'"CB" para salir.",COLOR_BLANCO,-1166.5009,2126.8232,1246.5457+1.00,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para salir.",COLOR_BLANCO,2583.3621,-1317.6790,1410.8503+1.00,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para salir a pie y "CR"'H'"CB" para salir en un veh�culo",COLOR_BLANCO,2058.5505,2437.2556,10.8428+1.0,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1,4,100,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para salir a pie y "CR"'H'"CB" para salir en un veh�culo",COLOR_BLANCO,-1257.3156,461.1437,7.2091+1.0,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1,6,100,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"Pulsa "CR"'Y'"CB" para salir a pie y "CR"'H'"CB" para salir en un veh�culo",COLOR_BLANCO,1706.9027,-1876.7185,-48.8961+1.0,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1,-1,-1,-1, 100.0);
	CreateDynamic3DTextLabel(""CB"�Necesitas ayuda?\n"CR"/ayuda club"CB".",COLOR_BLANCO,1206.3390,-1.1021,1000.7919+1.16,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 5,-1,-1, 100.0);
    CreateDynamic3DTextLabel("\n"CB"Pulsa "CR"'Y'"CB" para arrojar\n"CR"$500"CB" a la bailarina",COLOR_BLANCO,1212.3831,-5.3079,1000.9219,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 5, -1,-1, 100.0);
    CreateDynamic3DTextLabel(""CB"Sala privada\n"CR"/entrar",COLOR_BLANCO,1204.8096,12.6643,1000.9219+0.50,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 5,-1,-1, 100.0);

     	  //farmacia
    CreateDynamic3DTextLabel("{00CC33}Farmacos\n"CB"2 productos disponibles.\n\n"CB"Usa {ffcc00}/comprar productos"CB" para comprar",0xFFFFFFFF, 1148.0078,-1324.2789,-10.7849,9.0); //producxtos farma




	NPC_Tren[0] = AddStaticVehicle(538,1700.7551,-1953.6531,15.8746,200.0,1,1);
	NPC_Tren[1] = AddStaticVehicle(538,-1943.1060,162.8389,27.0006,356.9632,1,1);
	NPC_Tren[2] = AddStaticVehicle(538,1468.3735,2632.2500,12.1256,271.2534,1,1);
	//NPC_Tren[3] = AddStaticVehicle(538,2864.7500,1253.2552,12.1256,181.0126,1,1);
	NPC_Tren[4] = AddStaticVehicle(431,1546.1302,-1679.9119,5.9938,179.5670,0,0);
	//NPC_Tren[5] = AddStaticVehicle(431,1546.1302,-1679.9119,5.9938,179.5670,0,0);
	//NPC_Tren[6] = AddStaticVehicle(431,1546.1302,-1679.9119,5.9938,179.5670,0,0);
	
	
	

	GetVehicleParamsEx(NPC_Tren[0], engine, lights, alarm, doors, bonnet, boot, objective);	// Tren 1
	SetVehicleParamsEx(NPC_Tren[0], engine, lights, alarm, 1, bonnet, boot, objective);	// Tren 1
	GetVehicleParamsEx(NPC_Tren[1], engine, lights, alarm, doors, bonnet, boot, objective);	// Tren 2
	SetVehicleParamsEx(NPC_Tren[1], engine, lights, alarm, 1, bonnet, boot, objective);	// Tren 2
	GetVehicleParamsEx(NPC_Tren[2], engine, lights, alarm, doors, bonnet, boot, objective);	// Tren 3
	SetVehicleParamsEx(NPC_Tren[2], engine, lights, alarm, 1, bonnet, boot, objective);	// Tren 3
	//GetVehicleParamsEx(NPC_Tren[3], engine, lights, alarm, doors, bonnet, boot, objective);	// Tren 4
	//SetVehicleParamsEx(NPC_Tren[3], engine, lights, alarm, 1, bonnet, boot, objective);	// Tren 4
	GetVehicleParamsEx(NPC_Tren[4], engine, lights, alarm, doors, bonnet, boot, objective);	// Colectivo FC
	SetVehicleParamsEx(NPC_Tren[4], engine, lights, alarm, 1, bonnet, boot, objective);	// Colectivo FC
	//GetVehicleParamsEx(NPC_Tren[5], engine, lights, alarm, doors, bonnet, boot, objective);	// Colectivo FC
	//SetVehicleParamsEx(NPC_Tren[5], engine, lights, alarm, 1, bonnet, boot, objective);	// Colectivo FC
	GetVehicleParamsEx(NPC_Tren[6], engine, lights, alarm, doors, bonnet, boot, objective);	// Colectivo FC
	SetVehicleParamsEx(NPC_Tren[6], engine, lights, alarm, 1, bonnet, boot, objective);	// Colectivo FC
	SetVehicleNumberPlate(NPC_Tren[4], "LSPD");
	bloqueado[NPC_Tren[4]] = 1;
	//SetVehicleNumberPlate(NPC_Tren[5], "SFPD");
	//bloqueado[NPC_Tren[5]] = 1;
	SetVehicleNumberPlate(NPC_Tren[6], "LVPD");
	bloqueado[NPC_Tren[6]] = 1;

	AddPlayerClass(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
	EnableStuntBonusForAll(0);
	SetWeather(1);
	ShowNameTags(1);
	SetNameTagDrawDistance(40.0);
	DisableInteriorEnterExits();
	ManualVehicleEngineAndLights();
	EnableVehicleFriendlyFire();
	AntiDeAMX();
	UsePlayerPedAnims();
	CargarVehiculos();
	
	Puerta[0] = CreateDynamicObject(1493,-1256.8500, 2096.6799, 1245.5300,0.0000, 0.0000, 0.0000);
	Puerta[1] = CreateDynamicObject(1493,-1244.6700, 2115.6001, 1245.5200,0.0000, 0.0000, 90.0000);
	Puerta[2] = CreateDynamicObject(1493,-1244.7400, 2085.0000, 1245.5300,0.0000, 0.0000, 90.0000);
	Puerta[3] = CreateDynamicObject(1493,-1244.4800, 2087.7700, 1245.5300,0.0000, 0.0000, 0.0000);
	Puerta[4] = CreateDynamicObject(1493,-1232.5699, 2027.9100, 1245.5300,0.0000, 0.0000, 90.0000);
	PuertasDeBotones[2] = CreateDynamicObject(1500, 390.000000, 174.539993, 1039.109985, 0.000000, 0.000000, 180.139999);
	PuertasDeBotones[4] = CreateDynamicObject(1500, 349.260010, 178.690002, 1039.109985, 0.000000, 0.000000, 90.699997);
	PuertasDeBotones[6] = CreateDynamicObject(1500, 349.260010, 160.729996, 1039.109985, 0.000000, 0.000000, 90.699997);
	PuertasDeBotones[8] = CreateDynamicObject(1500, 349.179993, 149.229996, 1039.109985, 0.000000, 0.000000, 90.699997);
	PuertasDeBotones[10] = CreateDynamicObject(1500, 361.209991, 152.330002, 1039.109985, 0.000000, 0.000000, 0.330000);
	PuertasDePD[1] = CreateDynamicObject(1495, 2293.96338, 2492.90576, 2.26210, 0.00000, 0.00000, 90.00000);
	PuertasDePD[2] = CreateDynamicObject(1495, -1622.00586, 688.41931, 6.17870, 0.00000, 0.00000, 0.00000);
	PuertasDePD[3] = CreateDynamicObject(1495, -1619.00366, 688.44952, 6.17870, 0.00000, 0.00000, 180.00000);
	PuertasFC[1] = CreateDynamicObject(19303, 222.24001, 1429.53003, 1091.44995, 0.00000, 0.00000, 0.00000);
	PuertasFC[2] = CreateDynamicObject(19302, 210.33000, 1442.91003, 1091.43994, 0.00000, 0.00000, 0.00000);
	PuertasFC[3] = CreateDynamicObject(19303, 206.67999, 1441.97998, 1085.08997, 0.00000, 0.00000, 90.00000);
	PuertasFC[4] = CreateDynamicObject(1495,  201.39000, 1447.70996, 1083.83997, 0.00000, 0.00000, 90.00000);
	PuertasFC[5] = CreateDynamicObject(19303, 170.35001, 1448.48999, 1085.08997, 0.00000, 0.00000, 90.00000);
	PuertasLVPD[1] = CreateDynamicObject(19302, 208.9700, 178.2600, 1003.2800, 0.0000, 0.0000, 90.0000);
	PuertasLVPD[2] = CreateDynamicObject(19303, 209.0100, 159.1100, 1003.2800, 0.0000, 0.0000, 90.0000);
	PuertasACA[1] = CreateDynamicObject(1495, 638.090027, -187.119995, 1275.800049, 0.000000, 0.000000, 0.000000);
	PuertasACA[2] = CreateDynamicObject(1495, 645.059998, -210.229996, 1275.800049, 0.000000, 0.000000, 180.000000);
	PuertasACA[3] = CreateDynamicObject(1495, 645.114014, -217.080002, 1275.760010, 0.000000, 0.000000, 180.000000);
	PuertasACA[4] = CreateDynamicObject(1495, 642.770020, -226.110001, 1275.760010, 0.000000, 0.000000, 90.000000);
	PuertasACA[5] = CreateDynamicObject(1495, 642.750000, -237.466003, 1275.760010, 0.000000, 0.000000, -90.000000);
	PuertasACA[6] = CreateDynamicObject(1495, 645.270020, -239.779999, 1275.760010, 0.000000, 0.000000, 0.000000);
	controls[8] = CreateDynamicObject(968,833.4200, -2963.8000, 11.7460 , 0.0000, -90.0000, 0.0000 );
	controls[9] = CreateDynamicObject(968,833.4100, -2954.5200, 12.1000 , 0.0000, 90.0000, 0.0000 );
	controls[10] = CreateDynamicObject(969, -87.72000, -1127.09998, 0.30000, 0.0000, 0.0000, 70.0000,0,0);
	barrera = CreateDynamicObject(968, 1544.6943359375, -1630.73046875, 13.27956199646, 0.000000, 90, 90);
	barsfpd1 = CreateDynamicObject(968, -1572.19849, 658.77289, 6.91940,   0.00000, -90.00000, -90.00000);
	barsfpd2 = CreateDynamicObject(968, -1701.43286, 687.61920, 24.72650,   0.00000, 90.00000, -90.00000);
	barlvpd = CreateDynamicObject(968, 2238.20020, 2450.38770, 10.65880,   0.00000, -90.00000, -90.00000);
	portonsf1 = CreateDynamicObject(19913, -1647.0775, 688.2181, 5.5575,  0.00000, 0.00000, 0.00000);
	portonlv1 = CreateDynamicObject(971, 2293.94263, 2499.31274, 4.24590,   0.00000, 0.00000, -90.00000);
	portonlv2 = CreateDynamicObject(971, 2334.87305, 2443.32471, 7.28530,   0.00000, 0.00000, 60.00000);
	porton = CreateDynamicObject(11327, 1589.267700, -1638.286499, 14.816412, 0, 0, -89.800231);
	reja1 = CreateDynamicObject(971, 288.95001, 1415.96997, 12.90000,   0.00000, 0.00000, 90.00000);
	reja2 = CreateDynamicObject(971, 288.95001, 1407.13000, 12.90000,   0.00000, 0.00000, -90.00000);
	reja3 = CreateDynamicObject(971, 263.14999, 1416.05005, 13.05000,   0.00000, 0.00000, 90.00000);
	reja4 = CreateDynamicObject(971, 263.14999, 1407.20996, 13.05000,   0.00000, 0.00000, -90.00000);
	reja5 = CreateDynamicObject(971, 232.39000, 1420.75000, 13.17000,  0.00000, 0.00000, 0.00000);
	reja6 = CreateDynamicObject(971, 223.59000, 1420.75000, 13.17000,   0.00000, 0.00000, 180.00000);
	puerta_1 = CreateDynamicObject(1495, 1582.63, -1638.02, 12.41,   0.00, 0.00, 0.00);
	puerta_2 = CreateDynamicObject(1495, 216.32820, 116.53640, 998.04547,   0.00, 0.00, 0.00);
	puerta_3 = CreateDynamicObject(1495, 219.33839, 116.53640, 998.04547,   0.00, 0.00, 180.00);
	for(new i = 0; i < 12; i++) CargarCasa(i);
	PuertaAcademia = CreateDynamicObject(1507,634.01001,-287.26999,1275.82996,0.00000,0.00000,90.00000);
	PuertaRobo[0] = CreateDynamicObject(1506, -2277.5667, -9.4666, 37.2482, 0.0000, 0.0000, 269.1064);
	PuertaRobo[1] = CreateDynamicObject(1506, 931.28186, 1974.06372, 10.61430,   0.00000, 0.00000, 0.00000);
	PuertaRobo[2] = CreateDynamicObject(1506, -2394.86670, -12.35760, 34.27060,   0.00000, 0.00000, 269.82654);
	PuertaRobo[3] = CreateDynamicObject(1498, 2373.00244, -1138.55103, 29.03120,   0.00000, 0.00000, -0.95999);
	PuertaRobo[4] = CreateDynamicObject(1504, -2728.5708, -50.4009, 6.0173,   0.00000, 0.00000, 269.9400);
	PuertaRobo[5] = CreateDynamicObject(1506, -2728.5442, -155.0267, 6.2020,   0.00000, 0.00000, 269.7597);
	PuertaRobo[6] = CreateDynamicObject(1498, 1762.12488, -2100.72290, 12.96590,   0.00000, 0.00000, 0.00000);
	PuertaRobo[7] = CreateDynamicObject(1506, 2484.4492, -1996.0295, 13.2080, 0.0000, 0.0000,0.1800);
	PuertaRobo[8] = CreateDynamicObject(1506, 1844.1000, 770.1200, 10.4400,   0.0000, 0.0000, 90.0000);
	PuertaRobo[9] = CreateDynamicObject(1506, -1449.19824, 2647.20459, 55.48900,   0.00000, 0.00000, 90.00000);
	PuertaRobo[10] = CreateDynamicObject(1506, 1343.9200, 2610.7400, 10.4000,   0.0000, 0.0000, 0.0000);
	PuertaRobo[11] = CreateDynamicObject(1506, 1666.2400, 2610.7400, 10.4000,   0.0000, 0.0000, 0.0000);
	CreateDynamicPickup(1239, 1,-2024.7489,-113.9102,1038.8187,5,5,-1,100.0);		// Trabajo taxi
	CreateDynamicPickup(1239, 1,114.7220,-151.4292,1.5781,0,0,-1,100.0); 			// Trabajo Mecanico
	CreateDynamicPickup(1239, 1,-177.6093,-1549.4420,6.3284,0,0,-1,100.0); 			// Trabajo Basurero
	CreateDynamicPickup(1239, 1,1819.1549,-1284.6589,109.3594,0,0,-1,100.0); 		// Servicio Grua
	CreateDynamicPickup(1239, 1,1802.7854,-1303.8938,93.0391,0,0,-1,100.0); 		// Vender Vehiculo
	CreateDynamicPickup(1239, 1,1809.5894,-1299.8063,65.8125,0,0,-1,100.0); 		// Vender Propiedad
	CreateDynamicPickup(1247, 1, 240.4520,112.8195,1003.2188,-1,-1,-1,100.0);     	// Entregarse
	CreateDynamicPickup(1247, 1, 233.3752,158.7853,1003.0234,-1,-1,-1,100.0);     	// Entregarse LV
	CreateDynamicPickup(1314, 1, 1147.9966,-1322.4128,-10.7922,-1,-1,-1,100.0); 	// Dentro del Hospital LS
	CreateDynamicPickup(1314, 1, -2713.9946,636.8887,1385.6547,-1,-1,-1,100.0); 	// Dentro del Hospital SF
	CreateDynamicPickup(1314, 1, 1242.1232,-809.9145,1164.2759,-1,-1,-1,100.0); 	// Dentro del Hospital LV
	CreateDynamicPickup(1276, 1, 175.4841,-92.5689,1002.1417, -1, -1, -1, 100.0);	// Prendas
	CreateDynamicPickup(1275, 1,-170.1398,-1556.1694,5.6444,0,0,-1,100.0);  		// Ropa Basurero
	CreateDynamicPickup(1275, 1, 269.1445,295.4604,999.8400,-1,-1,-1,100.0);    	// Uniforme Minero
	CreateDynamicPickup(1275, 1,84.3491,-149.0520,2.6000,0,0,-1,100.0);				// Ropa Mecanico
	CreateDynamicPickup(1239, 1,1178.1359,-1361.3021,14.2302,0);					// Trabajo M�dico
	CreateDynamicPickup(1239, 1,-386.6332,-1470.0067,25.7266,0);					// Trabajo Cosechador
	CreateDynamicPickup(1239, 1,-38.5662,56.1850,3.1172,0);							// Trabajo Cosechador
	CreateDynamicPickup(1239, 1,2122.9236,-2275.1238,20.6719,0);					// Trabajo Armero
	CreateDynamicPickup(1239, 1,2227.6040,-1714.0569,13.5551,0);					// Trabajo Guardaespalda
	CreateDynamicPickup(1239, 1,-382.5980,2199.3918,25.4105,-1);					// Trabajo Minero
	CreateDynamicPickup(1239, 1,-1715.4917,-65.0561,3.6473,0);						// Trabajo Camionero
	CreateDynamicPickup(1239, 1,2583.8274,1644.3837,1087.5602,5);					// Trabajo Transportista
	CreateDynamicPickup(1279, 1,2823.3486,-1420.3571,16.2562,0);					// Materiales 1 LS
	CreateDynamicPickup(1279, 1,1422.6765,-1319.3438,13.5547,0);					// Materiales 2 LS
	CreateDynamicPickup(1279, 1,-1735.7610,1244.9299,7.5469,0);						// Materiales 3 SF
	CreateDynamicPickup(1279, 1,289.8924,-41.1509,1001.5156,0);					// cambiar clave y name
	IconoRopa [0] = CreateDynamicPickup(1275,1,203.9402,-43.4233,1001.8047,-1);  	// Venta de Ropa
	IconoRopa [1] = CreateDynamicPickup(1275,1,207.2663,-100.3280,1005.2578,-1);  	// Venta de Ropa
	IconoRopa [2] = CreateDynamicPickup(1275,1,161.4108,-83.2519,1001.8047,-1);  	// Venta de Ropa
	IconoRopa [3] = CreateDynamicPickup(1275,1,207.1053,-129.1776,1003.5078,-1);  	// Venta de Ropa
	IconoRopa [4] = CreateDynamicPickup(1275,1,206.3747,-7.2380,1001.2109,-1);  	// Venta de Ropa
	IconoRopa [5] = CreateDynamicPickup(1275,1,204.3488,-159.3513,1000.5234,-1);  	// Venta de Ropa
}

Funcion:CargarAutos()
{
	new AUTOSP = 0;
	new h = cache_num_rows();
	for(new i = 0; i < h; i++)
	{
		new Float:POS[4],COLOR[2],MODELO, stringinfovehiculo[70],vehicleid,ID_DB = 0;
		cache_get_value_name_int(i, "id", ID_DB);
		if(ID_DB == 0) continue;
		
		cache_get_value_name_int(i, "modelo", MODELO);
		
		cache_get_value_name_float(i, "x", POS[0]);
		cache_get_value_name_float(i, "y", POS[1]);
		cache_get_value_name_float(i, "z", POS[2]);
		cache_get_value_name_float(i, "a", POS[3]);
		cache_get_value_name_int(i, "color1", COLOR[0]);
		cache_get_value_name_int(i, "color2", COLOR[1]);
		vehicleid = CreateVehicle(MODELO, POS[0],POS[1],POS[2],POS[3], COLOR[0],COLOR[1], 500);

		VehiculosInfo[vehicleid][vmodelo] = MODELO;
		VehiculosInfo[vehicleid][vx] = POS[0];
		VehiculosInfo[vehicleid][vy] = POS[1];
		VehiculosInfo[vehicleid][vz] = POS[2];
		VehiculosInfo[vehicleid][va] = POS[3];
        VehiculosInfo[vehicleid][vcolor2] = COLOR[1];
        VehiculosInfo[vehicleid][vcolor1] = COLOR[0];
        VehiculosInfo[vehicleid][vID] = ID_DB;
		VehicleFuel[vehicleid] = CombustibleCoche(vehicleid);

		cache_get_value_name_int(i, "moneda", VehiculosInfo[vehicleid][vmoneda]);
		cache_get_value_name(i, "propietario", VehiculosInfo[vehicleid][vpropietario]);
		cache_get_value_name_int(i, "precio", VehiculosInfo[vehicleid][vprecio]);
		cache_get_value_name_int(i, "comprable", VehiculosInfo[vehicleid][vcomprable]);
		cache_get_value_name_int(i, "faccion", VehiculosInfo[vehicleid][vfaccion]);
		cache_get_value_name_int(i, "trabajo", VehiculosInfo[vehicleid][vtrabajo]);
		cache_get_value_name_int(i, "Vida", VehiculosInfo[vehicleid][vVida]);
		cache_get_value_name_int(i, "Interior", VehiculosInfo[vehicleid][vInterior]);
		cache_get_value_name_int(i, "VirtualWorld", VehiculosInfo[vehicleid][vVirtualWorld]);
		cache_get_value_name_int(i, "Capo", VehiculosInfo[vehicleid][vCapo]);
		cache_get_value_name_int(i, "Puertas", VehiculosInfo[vehicleid][vPuertas]);
		cache_get_value_name_int(i, "tipoambu", VehiculosInfo[vehicleid][vAmbu]);
		

		if(VehiculosInfo[vehicleid][vcomprable] == 1)
		{
			switch(VehiculosInfo[vehicleid][vmoneda])
			{
				case 0: format(stringinfovehiculo, sizeof(stringinfovehiculo), ""CR"%s\nPrecio: $%d", NombreAuto[VehiculosInfo[vehicleid][vmodelo]-400],VehiculosInfo[vehicleid][vprecio]);
				case 1: format(stringinfovehiculo, sizeof(stringinfovehiculo), ""CR"%s\nPrecio: "CR"%d "Moneda1"", NombreAuto[VehiculosInfo[vehicleid][vmodelo]-400],VehiculosInfo[vehicleid][vprecio]);
			}
			CreateDynamic3DTextLabel(stringinfovehiculo,0xDBED16FF,0.0,0.0,1.0,10.0,INVALID_PLAYER_ID,vehicleid, 1, 0,0,-1, 100.0);
		}
		if(VehiculosInfo[vehicleid][vVida] != 0) SetVehicleHealthAC(i,VehiculosInfo[vehicleid][vVida]);
		if(VehiculosInfo[vehicleid][vInterior] != 0) LinkVehicleToInteriorAC(i,VehiculosInfo[vehicleid][vInterior]);
		if(VehiculosInfo[vehicleid][vVirtualWorld] != 0) SetVehicleVirtualWorld(i,VehiculosInfo[vehicleid][vVirtualWorld]);
		if(VehiculosInfo[vehicleid][vCapo] != 0)
		{
			GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, 1, boot, objective);
		}
		if(VehiculosInfo[vehicleid][vPuertas] != 0)
		{
			GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(vehicleid, engine, lights, alarm, 1, bonnet, boot, objective);
			bloqueado[vehicleid] = 1;
		}
		AUTOSP ++;
	}
	printf("Se cargaron %d autos de la DB",AUTOSP);
	return 1;
}

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	/*new aa;
	foreach(new i : Player)
	{
		if(!IsPlayerNPC(i) && SpecJugador[i] == playerid)
		{
			SetPlayerInterior(i, newinteriorid);
			SetPlayerVirtualWorld(i, GetPlayerVirtualWorld(playerid));
			if(aa == 0) SetTimerEx("ActualizarSpec",1000,0,"d",playerid);
			aa = 1;
		}
	}*/
	SetTimerEx("ActualizarSpec",1000,0,"d",playerid);
	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{
	KillTimer(FloodTimer[playerid]);
	TieneVC[playerid] = false;
	#if defined ChatDeVoz
	if (lstream[playerid]) {
		SvDeleteStream(lstream[playerid]);
		lstream[playerid] = SV_NULL;
	}
	#endif
	format(User_Temp[playerid][DiscordID], 2, "0");
	NecesitaCodigo[playerid] = false;
	User_Temp[playerid][CodigoDiscord] = -1;
	Iter_Remove(Admin, playerid);
	if(PlayerInfo[playerid][pAdmin] > 0)
	{
		MensajeDiscord(NombreJugador(playerid),"Ha salido de servicio administrativo", WEBHOOK_ACTIVIDAD_STAFF);
		
	}
	if(PlayerInfo[playerid][pDuty] > 0)
	{
		MensajeDiscord(NombreJugador(playerid), "Sale en 10-07 desde la comisaria mas cercana", WEBHOOK_ACTIVIDAD_SAPD);
	}
	KillTimer(TimerLogeo[playerid]);

	
	if(EnVehTemporal[playerid] != INVALID_VEHICLE_ID)
	{
		new vehicleid = EnVehTemporal[playerid];
		EnVehTemporal[playerid] = INVALID_VEHICLE_ID;
		MotorAuto[vehicleid] = 0;
		DestroyVehicle(vehicleid);
	}
	if(EstaEnEvento[playerid] == 1)
 	{
  		SetPosEx(playerid, User_Temp[playerid][pt_EVENTO_POS][0],User_Temp[playerid][pt_EVENTO_POS][1],User_Temp[playerid][pt_EVENTO_POS][2], 0, User_Temp[playerid][pt_EVENTO_INT], User_Temp[playerid][pt_EVENTO_VW]);
		EstaEnEvento[playerid] = 0;
		EstablecerVida(playerid,100);
		EstablecerChaleco(playerid, 0);
		QuitarArmas(playerid, 1);
		SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
 	}
	KillTimer(TimerEsposar[playerid]);
	LimpiarEstado(playerid);
	if(GetPVarInt(playerid, "PlacedBB") != INVALID_STREAMER_ID)
	{
		PickUpBoombox(playerid);
	}
	ParlanteEscuchando[playerid] = -1;
	AntiVidas[playerid] = false;
	UsandoVPN[playerid] = false;
	if (cache_is_valid(PlayerInfo[playerid][Cache_ID]))
	{
		cache_delete(PlayerInfo[playerid][Cache_ID]);
		PlayerInfo[playerid][Cache_ID] = MYSQL_INVALID_CACHE;
	}
	if(PlayerBienvenida[playerid])
	{
		DeletePlayer3DTextLabel(playerid, bienvenida[playerid]);
		PlayerBienvenida[playerid] = false;
	}
	if(PlayerDuelo[playerid][Estaenduelo]==1)
	{
		DueloInfo[PlayerDuelo[playerid][ArenaID]][DesocupadaLK] =1;
		DueloInfo[PlayerDuelo[playerid][ArenaID]][DesafiadorLK]=-1;
		DueloInfo[PlayerDuelo[playerid][ArenaID]][DesafiadoLK] =-1;
		DueloInfo[PlayerDuelo[playerid][ArenaID]][IniciarLK]  =  0;
		new string[142];
		format(string,sizeof(string),"%s (%d) a salido del servidor a mitad de un duelo, %s (%d) es el ganador por default",NombreJugador(playerid),playerid,NombreJugador(PlayerDuelo[playerid][Contrincante]),PlayerDuelo[playerid][Contrincante]);
		SendClientMessageToAll(-1,string);
		//
        
        SetPosEx(PlayerDuelo[playerid][Contrincante], PlayerDuelo[PlayerDuelo[playerid][Contrincante]][Posa][0],PlayerDuelo[PlayerDuelo[playerid][Contrincante]][Posa][1],PlayerDuelo[PlayerDuelo[playerid][Contrincante]][Posa][2],0.0,0,0);
        SetPosEx(playerid, PlayerDuelo[playerid][Posa][0],PlayerDuelo[playerid][Posa][1],PlayerDuelo[playerid][Posa][2],0.0,0,0);
        
		//
	
		PlayerDuelo[playerid][ArenaID]=-1;
		PlayerDuelo[PlayerDuelo[playerid][Contrincante]][ArenaID]=-1;
		PlayerDuelo[PlayerDuelo[playerid][Contrincante]][Estaenduelo]=0;
		PlayerDuelo[PlayerDuelo[playerid][Contrincante]][Contrincante]=-1;
		PlayerDuelo[playerid][Estaenduelo]=0;
		PlayerDuelo[playerid][Contrincante]=-1;
		SetTimerEx("Revivir",400*30,false,"d",PlayerDuelo[playerid][Contrincante]);
	}
	DestroyDynamicObjectEx(C4PJ[playerid]);
	switch(RoboCaja[playerid])
		{
			case 1:{
				RobadaTM = 0;
				KillTimer(tAbrirCaja);
			}
			case 2:{
				RobadaTM2 = 0;
				KillTimer(tAbrirCaja2);
			}
			case 3:{
				RobadaTM3 = 0;
				KillTimer(tAbrirCaja3);
			}
		}
	if(IsPlayerNPC(playerid))
	{
		new string[32];
		switch(reason)
		{
			case 0: format(string, sizeof string, "Timeout (perdi� conexi�n)");
			case 1: format(string, sizeof string, "Quiteo por si solo (??)");
			case 2: format(string, sizeof string, "El GM lo kicke�");
			default: format(string, sizeof string, "Indefinido %d (wtf)");
		}
		printf("El NPC ID %d se ha desconectado! Raz�n: %s", playerid,string);
	}
    #if DEBUG_GM == 1
    printf("(OnPlayerDisconnect) PlayerID: %d | Reason: %d", playerid, reason);
    #endif
    if(IsPlayerNPC(playerid))
    {
        if(!strcmp(NombreJugador(playerid),"Motorman1")) 						{ ReJoinNPC(0); }
		else if(!strcmp(NombreJugador(playerid),"Motorman2")) 					{ ReJoinNPC(1); }
		else if(!strcmp(NombreJugador(playerid),"Motorman3")) 					{ ReJoinNPC(2); }
		else if(!strcmp(NombreJugador(playerid),"Motorman4")) 					{ ReJoinNPC(3); }
		else if(!strcmp(NombreJugador(playerid), "Alexis", true)) 				{ ReJoinNPC(4); }
		else if(!strcmp(NombreJugador(playerid), "Marcelo", true)) 				{ ReJoinNPC(5); }
		else if(!strcmp(NombreJugador(playerid), "Alejandro", true)) 			{ ReJoinNPC(6); }
		else if(!strcmp(NombreJugador(playerid), "Camello", true))              { UpdateDynamic3DTextLabelText(TextBot[0],COLOR_BLANCO,""); ReJoinNPC(7); }
        else if(!strcmp(NombreJugador(playerid), "HippePepe", true))			{ UpdateDynamic3DTextLabelText(TextBot[1],COLOR_BLANCO,""); KillTimer(TimerTxtMarcelo); ReJoinNPC(8); }
		else if(!strcmp(NombreJugador(playerid), "Angelica", true))				{ UpdateDynamic3DTextLabelText(TextBot[2],COLOR_BLANCO,""); ReJoinNPC(9); }
		else if(!strcmp(NombreJugador(playerid), "Jorge", true))				{ UpdateDynamic3DTextLabelText(TextBot[3],COLOR_BLANCO,""); ReJoinNPC(10); }
		else if(!strcmp(NombreJugador(playerid), "Ignacio", true))				{ UpdateDynamic3DTextLabelText(TextBot[4],COLOR_BLANCO,""); ReJoinNPC(11); }
		else if(!strcmp(NombreJugador(playerid), "Hugo", true))					{ UpdateDynamic3DTextLabelText(TextBot[6],COLOR_BLANCO,""); ReJoinNPC(12); }
		else if(!strcmp(NombreJugador(playerid), "Mao", true))					{ UpdateDynamic3DTextLabelText(TextBot[7],COLOR_BLANCO,""); ReJoinNPC(13); }
    }
	g_MysqlRaceCheck[playerid]++;
	KillTimer(LoginTimer[playerid]);
	KillTimer(TM[playerid]);
	KillTimer(llamadasonido1[playerid]);
	KillTimer(llamadasonido2[playerid]);
	KillTimer(HCurando[playerid]);
	KillTimer(FabCurando[playerid]);
	KillTimer(MensajeLoro[playerid]);
	KillTimer(TimerBailando[playerid]);
	KillTimer(CLlamada[playerid]);
	if(IsValidDynamicArea(AreaCheat[playerid])) DestroyDynamicArea(AreaCheat[playerid]);
    if(EnCarreras[playerid] > 0) SacarCarrera(playerid, 2);
	if(PlayerTemp[playerid][TieneEncargo] > 0) CancelarCriminal(playerid);
    if(PlayerInfo[playerid][jMiembro] == 1 && PlayerInfo[playerid][pDuty] == 1) frecuencias[Frecuencia[playerid]]--;
 	if(PlayerTemp[playerid][BailarinaPlayer] > 0) DesconectarClub(playerid, PlayerTemp[playerid][BailarinaPlayer]);
	if(strcmp(Alquilador, NombreJugador(playerid), true) == 0) SalonTimer();
	/*foreach(new i : Player)
	{
	    if(PlayerInfo[i][pAdmin] >= ADMIN_LVL_GLOBAL2)
	    {
	        if(JugadorLogeado[playerid] == 1) SendDeathMessageToPlayer(i, INVALID_PLAYER_ID, playerid, 201);
		}
	}*/
	if(Companero[playerid] != -1)
	{
		RecorridoBasu[Companero[playerid]] = 0;
		PBasura[Companero[playerid]] = 0;
		Companero[Companero[playerid]] = -1;
		BorrarCheckpoint(Companero[playerid]);
		Mensaje(Companero[playerid], -1, "Tu compa�ero se ha marchado y el recorrido fue cancelado.");
	}
	EntrandoAV[playerid] = -1;
	if(IsPlayerInAnyVehicle(playerid))
	{
		new vrID = GetPlayerVehicleID(playerid);
		if(EmisoraEscuchando[vrID] != -1)
		{
		    new playerState = GetPlayerState(playerid);
			if(playerState == PLAYER_STATE_DRIVER)
			{
				vehicleData[vrID][broadVehicleOwner] = INVALID_PLAYER_ID;
				foreach(new i : Player)
				{
					if(IsPlayerInVehicle(i, vrID)) StopAudioStreamForPlayer(i);
				}
				EmisoraEscuchando[vrID] = -1;
			}
		}
	}
	if(Emisoras[playerid][TransEmisora] == 1)
	{
		CerrarEmisora(Emisoras[playerid][CabinaOcupada]);
		Emisoras[playerid][TransEmisora] = 0;
		Emisoras[playerid][CabinaOcupada] = -1;
	}
	if(PlayerTemp[playerid][TraeDinero] == 1)
	{
        foreach(new f : Fabricas)
		{
		    if(PlayerInfo[playerid][jMiembro] == Fabricas[f][pBanda]) DarDineroFabrica(f,1000000);
        }
	}
	foreach(new i : Player)
	{
		if(SpecJugador[i] == playerid) TogglePlayerSpectating(i,false);
	}
	TextDrawHideForPlayer(playerid, CarreraT[0]);
	TextDrawHideForPlayer(playerid, CarreraT[1]);
	TextDrawHideForPlayer(playerid, CarreraT[2]);
	TextDrawHideForPlayer(playerid, CarreraT2[playerid][3]);
	TextDrawHideForPlayer(playerid, CarreraT[4]);
	TextDrawHideForPlayer(playerid, CarreraT2[playerid][5]);
	TextDrawHideForPlayer(playerid, CarreraT[6]);
	TextDrawHideForPlayer(playerid, CarreraT2[playerid][7]);
	for(new i = 0; i < MAX_REPORTS; i++)
	{
		if(Reports[i][ReportFrom] == playerid)
		{
			Reports[i][ReportFrom] = 999;
			Reports[i][BeingUsed] = 0;
		}
		if(Reports[i][ReportadoID] == playerid)
		{
			Reports[i][ReportFrom] = 999;
			Reports[i][BeingUsed] = 0;
		}
	}
	if(PlayerInfo[playerid][pCama] > 0)
	{
		Camas[PlayerInfo[playerid][pCama]-1][PlayerInfo[playerid][pVwCama]] = 0;
		PlayerInfo[playerid][pCama] = 0;
		PlayerInfo[playerid][pVwCama] = 0;
		PlayerInfo[playerid][pAtendido] = 0;
		PlayerInfo[playerid][pMedicina] = 0;
		PlayerInfo[playerid][pEnfermedad] = 0;
	}
	DestroyDynamicObjectEx(objetost[0][playerid]);
	DestroyDynamicObjectEx(objetost[1][playerid]);
	DestroyDynamicObjectEx(objetost[2][playerid]);
	DestroyDynamicObjectEx(objetost[3][playerid]);
	DestroyDynamicObjectEx(objetost[4][playerid]);
	DestroyDynamicObjectEx(objetox1[playerid]);
	DestroyDynamicObjectEx(objetox2[playerid]);
	new temp_TuningObjetos[e_VEHICLE_OBJECTS];
	for(new i = 0; i != MAX_TOBJETOS; i ++)
	{
		for(new a = 0; a != MAX_PAUTOS; a ++)
		{
			DestroyDynamicObjectEx(TuningObjetos[playerid][a][i][vobject_OBJECT_ID]);
			TuningObjetos[playerid][a][i] = temp_TuningObjetos;
		}
	}
	new szMessage[85];
	switch (reason)
	{
		case 0: format(szMessage, sizeof(szMessage), "%s(%d) se desconect� [Timeout]", NombreJugador(playerid),playerid);
		case 1:
		{
			format(szMessage, sizeof(szMessage), "%s(%d) se desconect� [/quit]", NombreJugador(playerid),playerid);
			if(EnCombate[playerid] == 1)
			{
			    if(!FaccLegal(playerid))
				{
					QuitarArmas(playerid, 1);
					format(szMessage, sizeof(szMessage), "%s(%d) perdi� las armas por cerrar el juego en combate.", NombreJugador(playerid),playerid);
					ProxDetector(15.0, playerid, szMessage, COLOR_COMBATE,COLOR_COMBATE,COLOR_COMBATE,COLOR_COMBATE,COLOR_COMBATE);
					KillTimer(TimerCombate[playerid]);
				}
			}
		}
		case 2: format(szMessage, sizeof(szMessage), "%s(%d) se desconect� [Baneado o Kickeado]", NombreJugador(playerid),playerid);
	}
	foreach(new i : StreamedPlayer[playerid])
	{
	    if(FaccLegal(playerid) || PlayerInfo[i][pAdmin] >= ADMIN_LVL_JUEGO1)
	    {
		    new Float:Pos[3];
		    GetPlayerPos(i,Pos[0],Pos[1],Pos[2]);
		    if(EstaEn(playerid,30,Pos[0],Pos[1],Pos[2])) Mensaje(i,COLOR_COMBATE,szMessage);
		}
	}
	new caller = PlayerInfo[playerid][MobileSub];
	if(IsPlayerConnected(caller) && caller != -1)
	{
		Mensaje(caller, -1, "Colgaron la llamada.");
		SetPlayerSpecialAction(caller, SPECIAL_ACTION_STOPUSECELLPHONE);
		PlayerInfo[caller][MobileSub] = -1;
		EnLlamada[caller] = 0;
		finllamada(caller);
	}
	if(Manejando[playerid] == 1) DarArmas(playerid);
	foreach(new i: StreamedVehicle[playerid])
	{
		if(Chofer[i] == playerid)
		{
			Chofer[i] = INVALID_PLAYER_ID;
			CamionCargado[i] = 0;
		}
	}
	BorrarCheckpoint(playerid);
	if(GetPlayerScore(playerid) == 0) return 1;
	if(LogeoCorrecto[playerid] == 0) return 1;
	SaveAccount(playerid);
	return 1;
}

public OnPlayerCommandReceived(playerid, cmdtext[])
{
	printf("[CMD] [%s - %d]: %s", NombreJugador(playerid), playerid, cmdtext);
	if(LogeoCorrecto[playerid] == 0 || SpawnCorrecto[playerid] == 0 || GetPlayerScore(playerid) == 0) return false;
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_AYUDANTE)
    {
    	if(ComandoEstado == 0) { Mensaje(playerid,-1,"No puedes usar comandos durante el reinicio del servidor."); return false; }
	    if(GetTickCount() - PlayerTemp[playerid][pt_Antiflood] < 999 && PlayerInfo[playerid][pDuty] == 0 && PlayerInfo[playerid][pDutyM] == 0) { Mensaje(playerid, 0xFF8C00FF, "L�mite de comandos por segundo: 1"); return false; }
  	}
	//if(PlayerInfo[playerid][jNivel] < 6) GetSpam(playerid, cmdtext);
    SacarAyudaComandos(playerid);
	return 1;
}

public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
	if(success == 0 || success == -1)
	{
		new 
            guessCmd[32], dist;
		dist = Command_Guess(guessCmd, cmdtext);

        if (dist < 3)
        {
            va_SendClientMessage(playerid, -1, "({FF3300}%s"CB") Comando desconocido, sugerencia; {FF3300}%s"CB".", cmdtext, guessCmd);
        }
		else va_SendClientMessage(playerid, -1,"({FF3300}%s"CB") Comando desconocido, usa "CR"/ayuda"CB" para recibir ayuda.", cmdtext);
	}
	PlayerTemp[playerid][pt_Antiflood] = GetTickCount();
	return 1;
}

Funcion:ShowStats(playerid,targetid)
{
	if(IsPlayerConnected(playerid) && IsPlayerConnected(targetid))
 	{
 		new string[1200];
		new NivelUser = PlayerInfo[targetid][jNivel];
		new ExpUser = PlayerInfo[targetid][jExperiencia];
		new ExpMonto = PlayerInfo[targetid][NivelExp];
		if(ExpUser == ExpMonto) format(string, sizeof(string), ""CB"| Nivel: "CR"%d"CB" | Reputaci�n: "CR"%d"CB"/"CR"%d"CB" | "CR"/comprar nivel"CB" - Costo: "CR"$%s"CB" |\n", NivelUser,ExpUser,ExpMonto,ConvertirNumero(PlayerInfo[targetid][PrecioNivel]));
		else if(ExpUser != ExpMonto) format(string, sizeof(string), ""CB"| Nivel:"CR" %d"CB" | Reputaci�n: {FFC600}%d"CB"/"CR"%d "CB"| Costo del siguiente nivel: "CR"$%s"CB" |\n", NivelUser,ExpUser,ExpMonto,ConvertirNumero(PlayerInfo[targetid][PrecioNivel]));
		new trabajoss[120];
		trabajoss="Trabajos:";
		new trabajos = CuantosTrabajos(targetid);
		new cuenta;
		for(new i; i < trabajos; i++)
		{
			if(PlayerInfo[targetid][Trabajo][i] > 0)
			{
				cuenta ++;
				format(trabajoss, sizeof trabajoss,"%s %s |", trabajoss, NombreTrabajo(PlayerInfo[targetid][Trabajo][i]));
				
			}
		}
		if(cuenta == 0) trabajoss = "";
		format(string, sizeof(string), "%s"CB"| Asesinatos: "CR"%s"CB" | %s \n",string,ConvertirNumero(PlayerInfo[targetid][pAsesinatos]),trabajoss);
		
		if(PlayerInfo[targetid][jMiembro] > 0)
		{
			new banda = PlayerInfo[targetid][jMiembro];
			format(string, sizeof(string), "%s"CB"| Integrante de: {FFC600}%s"CB" | Rango: {FFC600}%s"CB" | "CB"Territorios: "CR"%d"CB" |\n",string, BandasInfo[banda][BNombre], RangoBanda(banda, PlayerInfo[targetid][pRango]), GetTerritorios(PlayerInfo[targetid][jMiembro]));
		}
		format(string, sizeof(string), "%s"CB"| Para ver tus pertenencias, escribe "CR"/inventario "CB"|\n",string);
		MostrarDialog(playerid, 8956, DIALOG_STYLE_MSGBOX, "Estadisticas de tu cuenta", string,"Aceptar", "");
		if(PlayerInfo[playerid][pAdmin] > ADMIN_LVL_GLOBAL2 && targetid != playerid)
		{
			va_SendClientMessage(playerid,-1,"ID: %d | VIP: %d | HJ: %d | S: %d | N: %d", PlayerInfo[targetid][p_DBID], PlayerInfo[targetid][VIP], PlayerInfo[targetid][horasjugadas], PlayerInfo[targetid][jSexo], PlayerInfo[targetid][pNumero]);
			va_SendClientMessage(playerid,-1,"Email: %s", PlayerInfo[targetid][pEmail]);
			va_SendClientMessage(playerid,-1,"Banda ID: %d", PlayerInfo[targetid][jMiembro]);
		}
		return 1;
	}
	return 1;
}

IsVehicleInEstacionamiento(vehicleid)
{
	if(!IsValidVehicle(vehicleid)) return 0;
	if(GetVehicleInterior(vehicleid) == 100) return 1;
	return 0;
}

Funcion:PayDay2()
{
	new string[350];
	foreach(new i : Player)
	{
		PlayerPlaySound(i,1138,0.0,0.0,0.0);
		if(JugadorLogeado[i] == 1)
		{
		    TiempoPD[i] = 0;
			new paga = PlayerInfo[i][jNivel]*100+50;
			new suma,intereses,string2[350],string3[350],seguros,sumat;
			new gastosest;
			for(new a = 0; a < MAX_PAUTOS; a++)
			{
				if(VehicleInfo[i][a][vModelo] < 400) continue;
				seguros += VehicleInfo[i][a][vPrecio]/100;
				if(IsVehicleInEstacionamiento(autos[a][i]) == 1) gastosest += 150;
			}
			intereses = PlayerInfo[i][pBanco]/500;
			if(intereses > 1500) intereses = 1500;
			suma = paga-seguros;
			sumat = suma+intereses;

			new gananciasest;
			for(new e = 1; e < MAX_ESTACIONA; e++)
			{
			    if(InfoEst[e][estDuenoID] == PlayerInfo[i][p_DBID])
			    {
			        foreach(new v: Vehicle)
			        {
			            if(GetVehicleVirtualWorld(v) == InfoEst[e][estVirW] && GetVehicleInterior(v) == InfoEst[e][estInt]) gananciasest += 150;
			        }
			    }
			}
			PlayerInfo[i][pBanco] -= gastosest;
			PlayerInfo[i][pBanco] += gananciasest;
			new ganaciasresta;
			foreach(new p : Propiedades)
			{
	    		for(new n = 0; n < MAX_PCASAS; n++)
	    		{
			    	if(PropInfo[p][propiedad_ID] == PlayerInfo[i][CasaID][n] && PropInfo[p][pTipo] == 3)
					{
						ganaciasresta += PropInfo[p][pGanancias];
						PropInfo[p][pGanancias] = 0;
					}
				}
			}
			PlayerInfo[i][pBanco] += ganaciasresta;
			Mensaje(i, COLORCARGO0, "{F0F0F0}/_____________ RESUMEN DE TU CUENTA _____________/");
			if(gastosest > 0) format(string, sizeof(string), " Gastos por estacionamiento privado: {FF3300}$%s", ConvertirNumero(gastosest)),Mensaje(i, -1, string);
			if(gananciasest > 0) format(string, sizeof(string), " Ganancias por estacionamiento privado: "CR"$%s", ConvertirNumero(gananciasest)),Mensaje(i, -1, string);
			if(ganaciasresta > 0) format(string, sizeof(string), " Ganancias por restaurante: "CR"$%s", ConvertirNumero(ganaciasresta)),Mensaje(i, -1, string);
			if(seguros > 0) format(string, sizeof(string), " Seguro de veh�culos: {FF3300}$%s",ConvertirNumero(seguros)),Mensaje(i, -1,string);
			if(suma >= 0)
			{
				format(string3, sizeof(string3), " Pago diario: "CR"$%s "CB"| Gastos: {FF3300}$%s "CB" | Total: "CR"$%s", ConvertirNumero(paga),ConvertirNumero(seguros),ConvertirNumero(suma)),Mensaje(i, -1,string3);
				format(string2, sizeof(string2), " Saldo Bancario: "CR"$%s"CB" | Ganancias (intereses): "CR"$%s",ConvertirNumero(PlayerInfo[i][pBanco]+suma), ConvertirNumero(intereses)),Mensaje(i, -1,string2);
			}
			else if(suma < 0)
			{
				format(string3, sizeof(string3), " Pago diario: "CR"$%s "CB"| Gastos: {FF3300}$%s "CB" | Total: {FF3300}$%s", ConvertirNumero(paga),ConvertirNumero(seguros),ConvertirNumero(suma)),Mensaje(i, -1,string3);
				format(string2, sizeof(string2), " Saldo Bancario: "CR"$%s"CB" | Ganancias (intereses): "CR"$%s",ConvertirNumero(PlayerInfo[i][pBanco]-suma), ConvertirNumero(intereses)),Mensaje(i, -1,string2);
			}
			Mensaje(i, COLORCARGO0, "{F0F0F0}/________________ FIN DEL RESUMEN ________________/");
			PlayerInfo[i][pBanco] += sumat;
			PlayerInfo[i][horasjugadas]++;
			if(PlayerInfo[i][jExperiencia] < PlayerInfo[i][NivelExp])
			{
				PlayerInfo[i][jExperiencia]++;
                BarraExp(i, 1);
			}
		}
	}
	return 1;
}

Funcion:PayDay()
{
	new string[350];
	foreach(new i : Player)
	{
		if(JugadorLogeado[i] == 1)
		{
			if(TiempoPD[i] < 1200)
			{
			    TiempoPD[i] = 0;
				Mensaje(i, COLOR_GREY, "No jugaste el tiempo suficiente para recibir tu pago diario.");
				continue;
			}
			new paga = (PlayerInfo[i][jNivel]*50)+50;
			new suma,intereses,string2[350],string3[350],sumat,seguros;
			new gastosest;
			for(new a = 0; a < MAX_PAUTOS; a++)
			{
				if(VehicleInfo[i][a][vModelo] < 400) continue;
				seguros += VehicleInfo[i][a][vPrecio]/100;
				if(IsVehicleInEstacionamiento(autos[a][i]) == 1) gastosest += 150;
			}
			intereses = PlayerInfo[i][pBanco]/500;
			switch(PlayerInfo[i][VIP])
			{
				case 1: if(intereses > 4000) intereses = 4000;
				case 2: if(intereses > 5000) intereses = 5000;
				case 3: if(intereses > 7000) intereses = 7000;
				default: if(intereses > 3000) intereses = 3000;
			}
			suma = paga-seguros;
			sumat = suma+intereses;
			new gananciasest;
			for(new e = 1; e < MAX_ESTACIONA; e++)
			{
			    if(InfoEst[e][estDuenoID] == PlayerInfo[i][p_DBID])
			    {
			        foreach(new v: Vehicle)
			        {
			            if(GetVehicleVirtualWorld(v) == InfoEst[e][estVirW] &&  GetVehicleInterior(v) == InfoEst[e][estInt]) gananciasest += 150;
			        }
			    }
			}
			PlayerInfo[i][pBanco] -= gastosest;
			PlayerInfo[i][pBanco] += gananciasest;
			new ganaciasresta;
			foreach(new p : Propiedades)
			{
	    		for(new n = 0; n < MAX_PCASAS; n++)
	    		{
			    	if(PropInfo[p][propiedad_ID] == PlayerInfo[i][CasaID][n] && PropInfo[p][pTipo] == 3)
					{
						ganaciasresta += PropInfo[p][pGanancias];
						PropInfo[p][pGanancias] = 0;
					}
				}
			}
			PlayerInfo[i][pBanco] += ganaciasresta;
			Mensaje(i, COLORCARGO0, "{F0F0F0}/_____________ RESUMEN DE TU CUENTA _____________/");
			if(gastosest > 0) format(string, sizeof(string), " Gastos por estacionamiento privado: {FF3300}$%s", ConvertirNumero(gastosest)),Mensaje(i, -1, string);
			if(gananciasest > 0) format(string, sizeof(string), " Ganancias por estacionamiento privado: "CR"$%s", ConvertirNumero(gananciasest)),Mensaje(i, -1, string);
			if(ganaciasresta > 0) format(string, sizeof(string), " Ganancias por restaurante: "CR"$%s", ConvertirNumero(ganaciasresta)),Mensaje(i, -1, string);
			if(seguros > 0) format(string, sizeof(string), " Seguro de veh�culos: {FF3300}$%s",ConvertirNumero(seguros)),Mensaje(i, -1,string);
			if(FaccLegal(i))
			{
				format(string2, sizeof(string2), " Pago por servir a la Ley: "CR"$7.000"),Mensaje(i, -1,string2);
				sumat=sumat+7000;
			}
			if(suma >= 0)
			{
				format(string3, sizeof(string3), " Pago diario: "CR"$%s "CB"| Gastos: {FF3300}$%s "CB" | Total: "CR"$%s", ConvertirNumero(paga),ConvertirNumero(seguros),ConvertirNumero(suma)),Mensaje(i, -1,string3);
				format(string2, sizeof(string2), " Saldo Bancario: "CR"$%s"CB" | Ganancias (intereses): "CR"$%s",ConvertirNumero(PlayerInfo[i][pBanco]+suma), ConvertirNumero(intereses)),Mensaje(i, -1,string2);
			}
			else if(suma < 0)
			{
				format(string3, sizeof(string3), " Pago diario: "CR"$%s "CB"| Gastos: {FF3300}$%s "CB" | Total: {FF3300}$%s", ConvertirNumero(paga),ConvertirNumero(seguros),ConvertirNumero(suma)),Mensaje(i, -1,string3);
				format(string2, sizeof(string2), " Saldo Bancario: "CR"$%s"CB" | Ganancias (intereses): "CR"$%s",ConvertirNumero(PlayerInfo[i][pBanco]-suma), ConvertirNumero(intereses)),Mensaje(i, -1,string2);
			}
			if(Emisoras[i][TransEmisora] == 1)
			{
				new emisoraid, pagalocutor = 0, oyentes = 0;
				emisoraid = Emisoras[i][CabinaOcupada];
				oyentes = GetOyentesEmisora(emisoraid);
				pagalocutor = 6000+(oyentes*1000);
				sumat += pagalocutor;
				format(string, sizeof(string), "Ganancias por la emisora de radio: "CR"$%s", ConvertirNumero(pagalocutor));
				Mensaje(i, -1, string);
			}
			if(PlayerInfo[i][jMiembro] > 2)
			{
				new territorios = 0, pagaterritorios = 0;
				territorios = GetTerritorios(PlayerInfo[i][jMiembro]);
				if(territorios > 0)
				{
					pagaterritorios = 5000+(territorios*500);
					format(string, sizeof(string), "Ganancias por territorios conquistados: "CR"$%s", ConvertirNumero(pagaterritorios));
					Mensaje(i, -1, string);
					sumat += pagaterritorios;
				}
			}
			Mensaje(i, COLORCARGO0, "{F0F0F0}/________________ FIN DEL RESUMEN ________________/");
			PlayerInfo[i][pBanco] += sumat;
            TiempoPD[i] = 0;
			PlayerInfo[i][horasjugadas]++;
			if(PlayerInfo[i][jExperiencia] < PlayerInfo[i][NivelExp]) PlayerInfo[i][jExperiencia]++;
			if(PayDayDoble)
			{
				if(PlayerInfo[i][jExperiencia] < PlayerInfo[i][NivelExp]) PlayerInfo[i][jExperiencia]++;
				Mensaje(i, -1, ""CR"�Felicidades!"CB" Recibiste un punto de "CR"experiencia extra"CB" (PayDay x2 activado).");
			}
			BarraExp(i, 1);
		}
	}
	return 1;
}

Funcion:SacarVehiculo(playerid)
{
	RemovePlayerFromVehicle(playerid);
	new Float:sx, Float:sy, Float:sz;
	GetPlayerPos(playerid, sx, sy, sz);
	SetPlayerPosAC(playerid, sx, sy, sz);
	EnAuto[playerid] = 0;
	return 1;
}

Funcion:Cerrar_Rejas1()
{
	MoveDynamicObjectEx(reja1,  288.9500, 1415.9700, 12.9000, 2);
	MoveDynamicObjectEx(reja2,  288.9500, 1407.1300, 12.9000, 2);
	return 1;
}
Funcion:Cerrar_Rejas2()
{
	MoveDynamicObjectEx(reja3,  263.1500, 1416.0500, 13.0500, 2);
	MoveDynamicObjectEx(reja4,  263.1500, 1407.2100, 13.0500, 2);
	return 1;
}
Funcion:Cerrar_Rejas3()
{
	MoveDynamicObjectEx(reja5,  232.3900, 1420.7500, 13.1700, 2);
	MoveDynamicObjectEx(reja6,  223.5900, 1420.7500, 13.1700, 2);
	return 1;
}

Funcion:CerrarPorton(i)
{
	MoveDynamicObjectEx(PortonInfo[i][PortonObjetoID],  PortonInfo[i][pXc], PortonInfo[i][pYc], PortonInfo[i][pZc], 3, PortonInfo[i][pRXc], PortonInfo[i][pRYc], PortonInfo[i][pRZc]);
}

static AbrirPorton(i)
{
	MoveDynamicObjectEx(PortonInfo[i][PortonObjetoID],  PortonInfo[i][pXa], PortonInfo[i][pYa], PortonInfo[i][pZa], 4, PortonInfo[i][pRXa], PortonInfo[i][pRYa], PortonInfo[i][pRZa]);
	SetTimerEx("CerrarPorton", 3500, 0, "d", i);
	return 1;
}

Funcion:Cerrar_Porton() return MoveDynamicObjectEx(porton, 1589.267700, -1638.286499, 14.816412, 2);
Funcion:Cerrar_Barrera() return MoveDynamicObjectEx(barrera, 1544.6943359375, -1630.73046875, 13.27956199646-0.0001, 0.0001, 0, 90, 90);
Funcion:Cerrar_BarreraSF1() return MoveDynamicObjectEx(barsfpd1, -1572.19849, 658.77289, 6.91940-0.0001, 0.0001, 0.00000, -90.00000, -90.00000);
Funcion:Cerrar_BarreraSF2() return MoveDynamicObjectEx(barsfpd2, -1701.43286, 687.61920, 24.72650-0.0001, 0.0001, 0.00000, 90.00000, -90.00000);
Funcion:Cerrar_BarreraLV() return MoveDynamicObjectEx(barlvpd, 2238.20020, 2450.38770, 10.65880-0.0001, 0.0001, 0.00000, -90.00000, -90.00000);
Funcion:Cerrar_PortonSF() return MoveDynamicObjectEx(portonsf1, -1647.0775, 688.2181, 5.5575, 2.5);
Funcion:Cerrar_PortonLV1() return MoveDynamicObjectEx(portonlv1, 2293.94263, 2499.31274, 4.24590, 2.5);
Funcion:Cerrar_PortonLV2() return MoveDynamicObjectEx(portonlv2, 2334.87305, 2443.32471, 7.28530, 2.5);
Funcion:TimerLogin(playerid) return ExpulsarJugador(playerid, "Expulsado por inactividad en el login");
Funcion:CerrarIsla1() return MoveDynamicObjectEx(controls[8], 833.4200, -2963.8000, 11.7460-SPEED_CONTROLS, SPEED_CONTROLS, 0.00000, -90.00000, 0.00000);
Funcion:CerrarIsla2() return MoveDynamicObjectEx(controls[9], 833.4100, -2954.5200, 12.1000-SPEED_CONTROLS, SPEED_CONTROLS, 0.00000, 90.00000, 0.00000);

Funcion:SinGasolina(playerid)
{
	new szMessage[100];
    format(szMessage, sizeof(szMessage), "%s intenta encender el motor de su veh�culo pero no puede.", NombreJugador(playerid));
	ProxDetector(15.0, playerid, szMessage, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
	Mensaje(playerid, -1, "El veh�culo necesita combustible.");
	return 1;
}

Funcion:ClearReports()
{
	for(new i=0;i<MAX_REPORTS;i++)
	{
		strmid(Reports[i][Report], "Ninguno", 0, 4, 4);
		Reports[i][ReportadoID] = 999;
		Reports[i][CheckingReport] = 999;
        Reports[i][ReportFrom] = 999;
        Reports[i][HasBeenUsed] = 0;
        Reports[i][BeingUsed] = 0;
        Reports[i][TiempoReport] = 0;
	}
	return 1;
}


static TimerLaserYArmas(playerid)
{
	new arma = GetPlayerWeapon(playerid);
	if(PlayerInfo[playerid][pWP8] == 16 || PlayerInfo[playerid][pWP8] == 17 || PlayerInfo[playerid][pWP8] == 18)
	{
		if(arma != 16 && PlayerInfo[playerid][pWP8] == 16) { SetPlayerAttachedObject(playerid,9,342,8, 0.018998,-0.017999,0.138999,167.299987,-81.500083,-76.099929, 1.000000, 1.000000, 1.000000); }
		if(arma == 16 && PlayerInfo[playerid][pWP8] == 16) { RemovePlayerAttachedObject(playerid,9); }
		if(arma != 17 && PlayerInfo[playerid][pWP8] == 17) { SetPlayerAttachedObject(playerid,9,343,8, 0.018998,-0.017999,0.138999,167.299987,-81.500083,-76.099929, 1.000000, 1.000000, 1.000000); }
		if(arma == 17 && PlayerInfo[playerid][pWP8] == 17) { RemovePlayerAttachedObject(playerid,9); }
		if(arma != 18 && PlayerInfo[playerid][pWP8] == 18) { SetPlayerAttachedObject(playerid,9,344,8, 0.018998,-0.017999,0.138999,167.299987,-81.500083,-76.099929, 1.000000, 1.000000, 1.000000); }
		if(arma == 18 && PlayerInfo[playerid][pWP8] == 18) { RemovePlayerAttachedObject(playerid,9); }
	}
	else
	{
		if(arma != 10 && PlayerInfo[playerid][pWP10] == 10) { SetPlayerAttachedObject(playerid,9,321,8, -0.064001,-0.009999,0.065000,-100.199996,144.700042,156.200149, 1.000000, 1.000000, 1.000000); }
		if(arma == 10 && PlayerInfo[playerid][pWP10] == 10) { RemovePlayerAttachedObject(playerid,9); }
		if(arma != 11 && PlayerInfo[playerid][pWP10] == 11) { SetPlayerAttachedObject(playerid,9,322,8, -0.064001,-0.009999,0.065000,-100.199996,144.700042,156.200149, 1.000000, 1.000000, 1.000000); }
		if(arma == 11 && PlayerInfo[playerid][pWP10] == 11) { RemovePlayerAttachedObject(playerid,9); }
		if(arma != 12 && PlayerInfo[playerid][pWP10] == 12) { SetPlayerAttachedObject(playerid,9,323,8, -0.064001,-0.009999,0.065000,-100.199996,144.700042,156.200149, 1.000000, 1.000000, 1.000000); }
		if(arma == 12 && PlayerInfo[playerid][pWP10] == 12) { RemovePlayerAttachedObject(playerid,9); }
		if(arma != 13 && PlayerInfo[playerid][pWP10] == 13) { SetPlayerAttachedObject(playerid,9,324,8, -0.064001,-0.009999,0.065000,-100.199996,144.700042,156.200149, 1.000000, 1.000000, 1.000000); }
		if(arma == 13 && PlayerInfo[playerid][pWP10] == 13) { RemovePlayerAttachedObject(playerid,9); }
		if(arma != 14 && PlayerInfo[playerid][pWP10] == 14) { SetPlayerAttachedObject(playerid,9,325,8, -0.064001,-0.009999,0.065000,-100.199996,144.700042,156.200149, 1.000000, 1.000000, 1.000000); }
		if(arma == 14 && PlayerInfo[playerid][pWP10] == 14) { RemovePlayerAttachedObject(playerid,9); }
	}
	// Slot 8	-	(Lanzallamas, Minigun, RPG, Bazuca | AK-47 - M4)
	if(PlayerInfo[playerid][pWP7] == 35 || PlayerInfo[playerid][pWP7] == 36  || PlayerInfo[playerid][pWP7] == 37 || PlayerInfo[playerid][pWP7] == 38)
	{
		if(arma != 35 && PlayerInfo[playerid][pWP7] == 35) { SetPlayerAttachedObject(playerid,8,359,1,  0.165996, -0.121996, -0.053998, 172.799972, 156.600006, 3.699996, 1.000000, 1.000000, 1.000000);}
		if(arma == 35 && PlayerInfo[playerid][pWP7] == 35) { RemovePlayerAttachedObject(playerid,8); }
		if(arma != 36 && PlayerInfo[playerid][pWP7] == 36) { SetPlayerAttachedObject(playerid,8,360,1,  0.165996, -0.121996, -0.053998, 172.799972, 156.600006, 3.699996, 1.000000, 1.000000, 1.000000);}
		if(arma == 36 && PlayerInfo[playerid][pWP7] == 36) { RemovePlayerAttachedObject(playerid,8); }
		if(arma != 37 && PlayerInfo[playerid][pWP7] == 37) { SetPlayerAttachedObject(playerid,8,361,1,  0.086000, -0.094000, -0.166000, 165.5999908, 145.899963, 15.999979, 1.000000, 1.000000, 1.000000);}
		if(arma == 37 && PlayerInfo[playerid][pWP7] == 37) { RemovePlayerAttachedObject(playerid,8); }
		if(arma != 38 && PlayerInfo[playerid][pWP7] == 38) { SetPlayerAttachedObject(playerid,8,362,1,  0.086000, -0.094000, -0.166000, 165.5999908, 145.899963, 15.999979, 1.000000, 1.000000, 1.000000);}
		if(arma == 38 && PlayerInfo[playerid][pWP7] == 38) { RemovePlayerAttachedObject(playerid,8); }
	}
	else
	{
		if(arma != 30 && PlayerInfo[playerid][pWP5] == 30) { SetPlayerAttachedObject(playerid,8,355,1,  0.192999,-0.075999,-0.105000,-4.499993,25.899999,-171.699859, 1.000000, 1.000000, 1.000000);}
		if(arma == 30 && PlayerInfo[playerid][pWP5] == 30) { RemovePlayerAttachedObject(playerid,8); }
		if(arma != 31 && PlayerInfo[playerid][pWP5] == 31) { SetPlayerAttachedObject(playerid,8,356,1,  0.192999,-0.075999,-0.105000,-4.499993,25.899999,-171.699859, 1.000000, 1.000000, 1.000000); }
		if(arma == 31 && PlayerInfo[playerid][pWP5] == 31) { RemovePlayerAttachedObject(playerid,8); }
	}
	if(PlayerInfo[playerid][pWP3] == 25 || PlayerInfo[playerid][pWP3] == 26 || PlayerInfo[playerid][pWP3] == 27)
	{
		if(arma != 25 && PlayerInfo[playerid][pWP3] == 25) { SetPlayerAttachedObject(playerid,7,349,1,  0.195999,-0.102999,0.088999,172.099899,-137.700027,0.800023, 1.000000, 1.000000, 1.000000);}
		if(arma == 25 && PlayerInfo[playerid][pWP3] == 25) { RemovePlayerAttachedObject(playerid,7); }
		if(arma != 26 && PlayerInfo[playerid][pWP3] == 26) { SetPlayerAttachedObject(playerid,7,350,1,  0.195999,-0.102999,0.088999,172.099899,-137.700027,0.800023, 1.000000, 1.000000, 1.000000);}
		if(arma == 26 && PlayerInfo[playerid][pWP3] == 26) { RemovePlayerAttachedObject(playerid,7); }
		if(arma != 27 && PlayerInfo[playerid][pWP3] == 27) { SetPlayerAttachedObject(playerid,7,351,1,  0.195999,-0.102999,0.088999,172.099899,-137.700027,0.800023, 1.000000, 1.000000, 1.000000);}
		if(arma == 27 && PlayerInfo[playerid][pWP3] == 27) { RemovePlayerAttachedObject(playerid,7); }
	}
	else
	{
		if(arma != 33 && PlayerInfo[playerid][pWP6] == 33) { SetPlayerAttachedObject(playerid,7,357,1,  0.195999,-0.102999,0.088999,172.099899,-137.700027,0.800023, 1.000000, 1.000000, 1.000000);}
		if(arma == 33 && PlayerInfo[playerid][pWP6] == 33) { RemovePlayerAttachedObject(playerid,7); }
		if(arma != 34 && PlayerInfo[playerid][pWP6] == 34) { SetPlayerAttachedObject(playerid,7,358,1,  0.195999,-0.102999,0.088999,172.099899,-137.700027,0.800023, 1.000000, 1.000000, 1.000000);}
		if(arma == 34 && PlayerInfo[playerid][pWP6] == 34) { RemovePlayerAttachedObject(playerid,7); }
	}
	if(arma != 3  && PlayerInfo[playerid][pWP1] == 3)  { SetPlayerAttachedObject(playerid,6,334,7,  -0.032002,0.009000,-0.096000,-69.900108,145.399993,166.899917, 1.000000, 1.000000, 1.000000);}
	if(arma == 3  && PlayerInfo[playerid][pWP1] == 3)  { RemovePlayerAttachedObject(playerid,6); }
	if(arma != 4  && PlayerInfo[playerid][pWP1] == 4)  { SetPlayerAttachedObject(playerid,6,335,7,  -0.032002,0.009000,-0.096000,-69.900108,145.399993,166.899917, 1.000000, 1.000000, 1.000000);}
	if(arma == 4  && PlayerInfo[playerid][pWP1] == 4)  { RemovePlayerAttachedObject(playerid,6); }
	if(arma != 2  && PlayerInfo[playerid][pWP1] == 2)  { SetPlayerAttachedObject(playerid,6,333,1,  0.067997,-0.188999,0.063998,-4.000112,139.299972,115.199958, 1.000000, 1.000000, 1.000000);}
	if(arma == 2  && PlayerInfo[playerid][pWP1] == 2)  { RemovePlayerAttachedObject(playerid,6); }
	if(arma != 5  && PlayerInfo[playerid][pWP1] == 5)  { SetPlayerAttachedObject(playerid,6,336,1,  0.067997,-0.188999,0.063998,-4.000112,139.299972,115.199958, 1.000000, 1.000000, 1.000000);}
	if(arma == 5  && PlayerInfo[playerid][pWP1] == 5)  { RemovePlayerAttachedObject(playerid,6); }
	if(arma != 6  && PlayerInfo[playerid][pWP1] == 6)  { SetPlayerAttachedObject(playerid,6,337,1,  0.067997,-0.188999,0.063998,-4.000112,139.299972,115.199958, 1.000000, 1.000000, 1.000000);}
	if(arma == 6  && PlayerInfo[playerid][pWP1] == 6)  { RemovePlayerAttachedObject(playerid,6); }
	if(arma != 7  && PlayerInfo[playerid][pWP1] == 7)  { SetPlayerAttachedObject(playerid,6,338,1,  0.067997,-0.188999,0.063998,-4.000112,139.299972,115.199958, 1.000000, 1.000000, 1.000000);}
	if(arma == 7  && PlayerInfo[playerid][pWP1] == 7)  { RemovePlayerAttachedObject(playerid,6); }
	if(arma != 8  && PlayerInfo[playerid][pWP1] == 8)  { SetPlayerAttachedObject(playerid,6,339,1,  0.067997,-0.188999,0.063998,-4.000112,139.299972,115.199958, 1.000000, 1.000000, 1.000000);}
	if(arma == 8  && PlayerInfo[playerid][pWP1] == 8)  { RemovePlayerAttachedObject(playerid,6); }
	if(arma != 9  && PlayerInfo[playerid][pWP1] == 9)  { SetPlayerAttachedObject(playerid,6,341,1,  0.076000,-0.160999,0.179999,-5.499979,141.900146,1.099987, 1.000000, 1.000000, 1.000000);}
	if(arma == 9  && PlayerInfo[playerid][pWP1] == 9)  { RemovePlayerAttachedObject(playerid,6); }
	if(arma != 29 && PlayerInfo[playerid][pWP4] == 29) { SetPlayerAttachedObject(playerid,5,353,7, 0.018998,-0.060998,-0.067000,-74.499992,11.800035,9.500157, 1.000000, 1.000000, 1.000000); }
	if(arma == 29 && PlayerInfo[playerid][pWP4] == 29) { RemovePlayerAttachedObject(playerid,5); }
	if(arma != 28 && PlayerInfo[playerid][pWP4] == 28) { SetPlayerAttachedObject(playerid,5,352,7, 0.018998,-0.060998,-0.067000,-74.499992,11.800035,9.500157, 1.000000, 1.000000, 1.000000); }
	if(arma == 28 && PlayerInfo[playerid][pWP4] == 28) { RemovePlayerAttachedObject(playerid,5); }
	if(arma != 32 && PlayerInfo[playerid][pWP4] == 32) { SetPlayerAttachedObject(playerid,5,372,7, 0.018998,-0.060998,-0.067000,-74.499992,11.800035,9.500157, 1.000000, 1.000000, 1.000000); }
	if(arma == 32 && PlayerInfo[playerid][pWP4] == 32) { RemovePlayerAttachedObject(playerid,5); }
	if(PlayerInfo[playerid][pWP4] != 29 && PlayerInfo[playerid][pWP4] != 28 && PlayerInfo[playerid][pWP4] != 32) RemovePlayerAttachedObject(playerid,5);
	if(PlayerInfo[playerid][pWP1] != 3 && PlayerInfo[playerid][pWP1] != 4 && PlayerInfo[playerid][pWP1] != 2 && PlayerInfo[playerid][pWP1] != 5 && PlayerInfo[playerid][pWP1] != 6 && PlayerInfo[playerid][pWP1] != 7 && PlayerInfo[playerid][pWP1] != 8 && PlayerInfo[playerid][pWP1] != 9) RemovePlayerAttachedObject(playerid,6);
	if(PlayerInfo[playerid][pWP8] == 16 || PlayerInfo[playerid][pWP8] == 17 || PlayerInfo[playerid][pWP8] == 18)
	{
		if(PlayerInfo[playerid][pWP8]  != 16 && PlayerInfo[playerid][pWP8]  != 17 && PlayerInfo[playerid][pWP8]  != 18) RemovePlayerAttachedObject(playerid,9);
	}
	else
	{
		if(PlayerInfo[playerid][pWP10] != 10 && PlayerInfo[playerid][pWP10] != 11 && PlayerInfo[playerid][pWP10] != 12 && PlayerInfo[playerid][pWP10] != 13 && PlayerInfo[playerid][pWP10] != 14)	{ RemovePlayerAttachedObject(playerid,9); }
	}
	if(PlayerInfo[playerid][pWP7] == 35 || PlayerInfo[playerid][pWP7] == 36 || PlayerInfo[playerid][pWP7] == 37 || PlayerInfo[playerid][pWP7] == 38)
	{
		if(PlayerInfo[playerid][pWP7]  != 35 && PlayerInfo[playerid][pWP7]  != 36 && PlayerInfo[playerid][pWP7]  != 37 && PlayerInfo[playerid][pWP7]  != 38) RemovePlayerAttachedObject(playerid,8);
	}
	else
	{
		if(PlayerInfo[playerid][pWP5]  != 30 && PlayerInfo[playerid][pWP5]  != 31) RemovePlayerAttachedObject(playerid,8);
	}
	if(PlayerInfo[playerid][pWP3] == 25 || PlayerInfo[playerid][pWP3] == 26 || PlayerInfo[playerid][pWP3] == 27)
	{
		if(PlayerInfo[playerid][pWP3] != 25 && PlayerInfo[playerid][pWP3] != 27 && PlayerInfo[playerid][pWP3]  != 26) RemovePlayerAttachedObject(playerid,7);
	}
	else
	{
		if(PlayerInfo[playerid][pWP6] != 33 && PlayerInfo[playerid][pWP6]  != 34) RemovePlayerAttachedObject(playerid,7);
	}


	if(PlayerInfo[playerid][pEstadoLaser] == 1) 
	{
		switch (GetPlayerWeapon(playerid))
		{
			case 0..18:
			{
				RemovePlayerAttachedObject(playerid, 4);
			}
			case 35..46:
			{
				RemovePlayerAttachedObject(playerid, 4);
			}
			case 23:
			{
				if (IsPlayerAiming(playerid))
				{
					if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
					{
						SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pColorLaser], 6,
						0.108249, 0.030232, 0.118051, 1.468254, 350.512573, 364.284240);
					}
					else
					{
						SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pColorLaser], 6,
						0.108249, 0.030232, 0.118051, 1.468254, 349.862579, 364.784240);
					}
				}
				else
				{
					if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
					{
						SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pColorLaser], 6,
						0.078248, 0.027239, 0.113051, -11.131746, 350.602722, 362.384216);
					}
					else
					{
						SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pColorLaser], 6,
						0.078248, 0.027239, 0.113051, -11.131746, 350.602722, 362.384216);
					}
				}
			}
			case 24:
			{
				if (IsPlayerAiming(playerid))
				{
					if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
					{
						SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pColorLaser], 6,
						0.108249, 0.030232, 0.118051, 1.468254, 350.512573, 364.284240);
					}
					else
					{
						SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pColorLaser], 6,
						0.108249, 0.030232, 0.118051, 1.468254, 349.862579, 364.784240);
					}
				}
				else
				{
					if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
					{
						SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pColorLaser], 6,
						0.078248, 0.027239, 0.113051, -11.131746, 350.602722, 362.384216);
					}
					else
					{
						SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pColorLaser], 6,
						0.078248, 0.027239, 0.113051, -11.131746, 350.602722, 362.384216);
					}
				}
			}
			case 27:
			{
				if (IsPlayerAiming(playerid))
				{
					if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
					{
						SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pColorLaser], 6,
						0.588246, -0.022766, 0.138052, -11.531745, 347.712585, 352.784271);
					}
					else
					{
						SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pColorLaser], 6,
						0.588246, -0.022766, 0.138052, 1.468254, 350.712585, 352.784271);
					}
				}
				else
				{
					if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
					{
						SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pColorLaser], 6,
						0.563249, -0.01976, 0.134051, -11.131746, 351.602722, 351.384216);
					}
					else
					{
						SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pColorLaser], 6,
						0.563249, -0.01976, 0.134051, -11.131746, 351.602722, 351.384216);
					}
				}
			}
			case 30:
			{
				if (IsPlayerAiming(playerid))
				{
					if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
					{
						SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pColorLaser], 6,
						0.628249, -0.027766, 0.078052, -6.621746, 352.552642, 355.084289);
					}
					else
					{
						SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pColorLaser], 6,
						0.628249, -0.027766, 0.078052, -1.621746, 356.202667, 355.084289);
					}
				}
				else
				{
					if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
					{
						SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pColorLaser], 6,
						0.663249, -0.02976, 0.080051, -11.131746, 358.302734, 353.384216);
					}
					else
					{
						SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pColorLaser], 6,
						0.663249, -0.02976, 0.080051, -11.131746, 358.302734, 353.384216);
					}
				}
			}
			case 31:
			{
				if (IsPlayerAiming(playerid))
				{
					if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
					{
						SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pColorLaser], 6,
						0.528249, -0.020266, 0.068052, -6.621746, 352.552642, 355.084289);
					}
					else
					{
						SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pColorLaser], 6,
						0.528249, -0.020266, 0.068052, -1.621746, 356.202667, 355.084289);
					}
				}
				else
				{
					if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
					{
						SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pColorLaser], 6,
						0.503249, -0.02376, 0.065051, -11.131746, 357.302734, 354.484222);
					}
					else
					{
						SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pColorLaser], 6,
						0.503249, -0.02376, 0.065051, -11.131746, 357.302734, 354.484222);
					}
				}
			}
			case 34:
			{
				if (IsPlayerAiming(playerid))
				{
					if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
					{
						SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pColorLaser], 6,
						0.528249, -0.020266, 0.068052, -6.621746, 352.552642, 355.084289);
					}
					else
					{
						SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pColorLaser], 6,
						0.528249, -0.020266, 0.068052, -1.621746, 356.202667, 355.084289);
					}
				}
				else
				{
					if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
					{
						SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pColorLaser], 6,
						0.658248, -0.03276, 0.133051, -11.631746, 355.302673, 353.584259);
					}
					else
					{
						SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pColorLaser], 6,
						0.658248, -0.03276, 0.133051, -11.631746, 355.302673, 353.584259);
					}
				}
			}
			case 29:
			{
				if (IsPlayerAiming(playerid))
				{
					if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
					{
						SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pColorLaser], 6,
						0.298249, -0.02776, 0.158052, -11.631746, 359.302673, 357.584259);
					}
					else
					{
						SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pColorLaser], 6,
						0.298249, -0.02776, 0.158052, 8.368253, 358.302673, 352.584259);
					}
				}
				else
				{
					if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
					{
						SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pColorLaser], 6,
						0.293249, -0.027759, 0.195051, -12.131746, 354.302734, 352.484222);
					}
					else
					{
						SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pColorLaser], 6,
						0.293249, -0.027759, 0.195051, -12.131746, 354.302734, 352.484222);
					}
				}
			}
		}
		if(IsPlayerInAnyVehicle(playerid) && IsPlayerAttachedObjectSlotUsed(playerid, 4) || IsPlayerInWater(playerid) && IsPlayerAttachedObjectSlotUsed(playerid, 4))
		{
			RemovePlayerAttachedObject(playerid, 4);
		}
	}
	return 1;
}

ptask TimerArmas[650](playerid)
{
	
	if(AC_SP && !CheatSpeedDetectado[playerid] && GetPlayerSurfingVehicleID(playerid) == INVALID_VEHICLE_ID && !EnCarro[playerid])
	{
		new Float:Velocity[3];
		GetPlayerVelocity(playerid, Velocity[0], Velocity[1], Velocity[2]);
		if(Velocity[2] == 0)
		{
			//if(Velocity[0] < 0.0) Velocity[0] = Velocity[0]*-1;
			//if(Velocity[1] < 0.0) Velocity[1] = Velocity[1]*-1;
			if(floatabs(Velocity[0])+floatabs(Velocity[1]) > 0.47)
			{
				new Float:objPos[3];
				GetDynamicObjectPos(Globo, objPos[0], objPos[1], objPos[2]);

				if(!IsPlayerInRangeOfPoint(playerid, 40.0, objPos[0], objPos[1], objPos[2]))
				{
					if(AvisosSpeed[playerid] < MAX_AVISOS_SPEED)
					{
						AvisosSpeed[playerid] ++;
						SetTimerEx("ResetAvisosSpeed",5000,false,"d",playerid);
					}
					else
					{
						new string[144];
						format(string, sizeof(string), "[!]"CB" El anticheat ha detectado que el usuario "CR"%s(ID:%d)"CB" es posible cheater velocidad a pie.", NombreJugador(playerid), playerid);
						MensajeAdmin(COLOR_CHEAT, string, 3);
						CheatSpeedDetectado[playerid] = true;
						AvisosSpeed[playerid] = 0;
						SetTimerEx("ResetCheatSpeed",1000,false,"d",playerid);
					}
				}
			}
		}
	}


	PlayerAnticheats(playerid);
	MicroBeat(playerid);
	if(TestLaser)
	{
		TimerLaserYArmas(playerid);
	}
	
	/*if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1 && (GetPlayerCameraMode(playerid) == 7 || GetPlayerCameraMode(playerid) == 8 || GetPlayerCameraMode(playerid) == 51) && GetPlayerWeapon(playerid) != 34)
	{
		if(TieneFabrica(PlayerInfo[playerid][jMiembro])) return 1;
		new string[250];
		format(string,sizeof(string),"[!]"CB" El anticheat ha detectado que el usuario "CR"%s(ID:%d)"CB" es posible cheater de mira (N:%d- %dhs)",NombreJugador(playerid),i,PlayerInfo[playerid][jNivel],PlayerInfo[playerid][horasjugadas]);
		MensajeAdmin(COLOR_CHEAT, string, 3);
		ExpulsarJugador(playerid, "Posible cheater de mira");
	}*/
	
	if(PlayerInfo[playerid][Agonizando] == 1 && PacienteAmbu[playerid] == 0)
	{
		ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0, 1);
		ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0, 1);
		SetPlayerArmedWeapon(playerid, 0);
	}
	
}

Funcion:EnviarJail(playerid)
{
	new string[256];
    format(string,sizeof(string),"Te encuentras sancionado por %s.", PlayerInfo[playerid][pRazonSan]);
	Mensaje(playerid, 0xAA3333FF, string);
	if(PlayerInfo[playerid][pTiempoJail] < 60) format(string, sizeof(string), "Tiempo restante para cumplir la condena: "CR"%ds", PlayerInfo[playerid][pTiempoJail]);
	else if(PlayerInfo[playerid][pTiempoJail] >= 60) format(string, sizeof(string), "Tiempo restante para cumplir la condena: "CR"%dm %ds", PlayerInfo[playerid][pTiempoJail]/60, PlayerInfo[playerid][pTiempoJail]%(60));
	Mensaje(playerid,-1,string);
	SetPlayerPosAC(playerid, 346.870025,309.259033,999.155700);
	SetPlayerInterior(playerid, 6);
	San[playerid] = 1;
	SetPlayerVirtualWorld(playerid, playerid);
	QuitarArmas(playerid, 1);
}

Funcion:CurarON(playerid) Curando[playerid] = 1;

Funcion:CurandoHospital(playerid)
{
	if(!IsPlayerPaused(playerid))
 	{
		new Float:Vida;
		GetPlayerHealth(playerid,Vida);
		if(PlayerTemp[playerid][CurandoHosp] == 1)
		{
			if(Vida < 100)
			{
				new animname[32],animlib[32];
				GetAnimationName(GetPlayerAnimationIndex(playerid),animlib,32,animname,32);
				EstablecerVida(playerid,Vida+1);
				if(strcmp(animlib,"INT_HOUSE",true))
				{
					if(strcmp(animname ,"BED_In_R",true)) ApplyAnimation(playerid,"INT_HOUSE","BED_In_R",4.1,0,0,0,1,0,1);
				}
			}
			else
			{
				PlayerTemp[playerid][CurandoHosp] = 0;
				new Float:Angle;
				if(Vida > 100) EstablecerVida(playerid, 100);
				HCalculo[playerid] = 0;
				KillTimer(HCurando[playerid]);
				GetPlayerFacingAngle(playerid,Angle);
				SetPlayerFacingAngle(playerid,Angle+180);
				ApplyAnimation(playerid,"INT_HOUSE","BED_Out_R",3.00,0,0,0,0,0,1);
				Mensaje(playerid,-1,"Tu revisi�n ha culminado, puedes volver a casa.");
				Camas[PlayerInfo[playerid][pCama]-1][PlayerInfo[playerid][pVwCama]] = 0;
				PlayerInfo[playerid][pCama] = 0;
				PlayerInfo[playerid][pEnfermedad] = 0;
			}
   		}
	}
	return 1;
}

Funcion:CurandoFabrica(playerid)
{
	new Float:Vida;
	GetPlayerHealth(playerid,Vida);
	if(PlayerTemp[playerid][CurandoFab] == 1)
	{
		if(Vida < 50)
		{
			new animname[32],animlib[32];
			GetAnimationName(GetPlayerAnimationIndex(playerid),animlib,32,animname,32);
			EstablecerVida(playerid,Vida+2);
			if(strcmp(animlib,"INT_HOUSE",true) && strcmp(animname ,"BED_In_R",true)) return ApplyAnimation(playerid,"INT_HOUSE","BED_In_R",4.1,0,0,0,1,0,1);
		}
		else
		{
			new Float:Angle;
			PlayerTemp[playerid][CurandoFab] = 0;
			Muriendo[playerid] = 0;
			MarcadoMedicos[playerid] = 0;
			KillTimer(FabCurando[playerid]);
			GetPlayerFacingAngle(playerid,Angle);
			SetPlayerFacingAngle(playerid,Angle+180);
			ApplyAnimation(playerid,"INT_HOUSE","BED_Out_R",3.00,0,0,0,0,0,1);
			Mensaje(playerid,-1,"Tu recuperaci�n fue un �xito, puedes volver a trabajar.");

		}
  	}
	return 1;
}

Funcion:Float:DistanciaJugadorCamara(playerid)
{
	if(GetPlayerState(playerid) != PLAYER_STATE_SPECTATING)
	{
		new Float:pP[3],Float:tP[3],Float:Float_NaN;
		if(!GetPlayerPos(playerid,pP[0],pP[1],pP[2]) || !GetPlayerCameraPos(playerid,tP[0],tP[1],tP[2])) return Float_NaN;
		pP[0] -= tP[0], pP[1] -= tP[1],	pP[2] -= tP[2];
		return floatsqroot(floatpower(pP[0],2.0) + floatpower(pP[1],2.0) + floatpower(pP[2],2.0));
	}
	else return floatsqroot(0);
}

Funcion:resetearcoches()
{
	foreach(new i: Vehicle)
	{
        foreach(new u : Player)
		{
			for(new a = 0; a < MAX_PAUTOS; a++) if(i == autos[a][u]) goto _no_borrar;
			if(IsPlayerInVehicle(u,i)) goto _no_borrar;
		}
		for(new e = 0; e < sizeof(NPC_Tren); e++)
		{
			if(i == NPC_Tren[e]) goto _no_borrar;
		}
		foreach(new f : Fabricas) if(i == Fabricas[f][Auto1F] || i == Fabricas[f][Auto2F]) goto _no_borrar;

		Respawnear(i);
		LinkVehicleToInteriorAC(i, 0);
		SetVehicleVirtualWorld(i, 0);
		_no_borrar:
	}
	return 1;
}

Funcion:resetearcochestrabajo()
{
    foreach(new i: Vehicle)
	{
        foreach(new u : Player)
		{
		    new Float:health;
		    GetVehicleHealth(i, health);
			for(new a = 0; a < MAX_PAUTOS; a++) if(i == autos[a][u]) goto _no_borrar;
			if(IsPlayerInVehicle(u,i)) goto _no_borrar;
			if(health > 375) goto _no_borrar;
		}
		for(new e = 0; e < sizeof(NPC_Tren); e++)
		{
			if(i == NPC_Tren[e]) goto _no_borrar;
		}
		Respawnear(i);
		LinkVehicleToInteriorAC(i, 0);
		SetVehicleVirtualWorld(i, 0);
		_no_borrar:
	}
	return 1;
}

ptask AutoCheats[2000](playerid)
{

	if(JugadorLogeado[playerid] == 1 && UsandoVPN[playerid] && PlayerInfo[playerid][jNivel] < 6 && strcmp(User_Temp[playerid][DiscordID], "0", true) == 0)
	{
		CongelarEx(playerid);
		if(User_Temp[playerid][CodigoDiscord] == -1) User_Temp[playerid][CodigoDiscord] = randomEx(10000,99999);
		new string[430];
		format(string, sizeof(string), "{FFFFFF}Hola, hemos detectado que usas VPN, para seguir jugando tendr�s que vincular tu {AD46D1}discord{FFFFFF}, para vincular tu discord escribe {AD46D1}!vincular %d{FFFFFF} en cualquier canal de nuestro discord.\n\nSi no est�s en nuestro Discord, ingresa usando el enlace: {AD46D1}https://discord."WebName"{FFFFFF}.\n\n*  {AD2A2A}Permanecer�s congelado hasta que vincules tu discord.", User_Temp[playerid][CodigoDiscord]);
		MostrarDialog(playerid, DIALOG_AYUDA, DIALOG_STYLE_MSGBOX, "Proxy/VPN {AD2A2A}detectado{FFFFFF} (Vincula tu discord)",string, "Aceptar", "");
	}

	if(GetPlayerMoney(playerid) > PlayerInfo[playerid][jDinero])
	{
		if(CuentaDinero[playerid] >= 5) ResetPlayerMoney(playerid),GivePlayerMoney(playerid, PlayerInfo[playerid][jDinero]);
		else if(CuentaDinero[playerid] < 5) CuentaDinero[playerid]++;
	}


	if(AntiBypass) {
		if(GetPlayerScore(playerid) == 0 && GetPlayerWeapon(playerid) != 0) return ExpulsarJugador(playerid, "Armas LVL 0");
	}

	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		//AntiFlyHack(playerid);
		if(GetPlayerAnimationIndex(playerid) == 1058) //Escoba Voladora
		{
			new string[144];
			format(string,sizeof(string),"[!]"CB" El anticheat ha detectado que el usuario "Rojo"%s(ID:%d)"CB" us� Fly Hack",NombreJugador(playerid),playerid);
			MensajeAdmin(COLOR_CHEAT, string, 3);
			ExpulsarJugador(playerid, "Anticheat - Fly Hack");
		}
	}
	AutosCheats(playerid);
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		AntiRC(playerid);
	}
	return 1;
}

static AutosCheats(i)
{
	new autoid = GetPlayerVehicleID(i);
	if(IsPlayerInAnyVehicle(i))
	{
		if(autoid != EnAuto[i] && PlayerInfo[i][pAdmin] < ADMIN_LVL_GLOBAL1)
		{
			if(AvisosAuto[i] < 5) AvisosAuto[i]++;
			else if(AvisosAuto[i] >= 5)
			{
				TimerWeapons[i] = gettimeVariable + 3;
				ResetPlayerWeapons(i);
				DarArmas(i);
			}
		}
	}
}

ptask RestarLaGasolina[120000](playerid)
{
	if(PlayerInfo[playerid][CorreoVerificado] == 0)
	{
	    ShowTDN(playerid, "~w~No tienes tu correo verificado, verificalo en el ~p~/pcu~w~ y obten una recompensa adicional.");
	}
	new v = GetPlayerVehicleID(playerid);
	if(v > 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(MotorAuto[v] == 1)
		{
			if(VehicleFuel[v] >= 1)
			{
				VehicleFuel[v]--;
				for(new a = 0; a < MAX_PAUTOS; a++) if(v == autos[a][playerid]){ VehicleInfo[playerid][a][vGas] = VehicleFuel[v]; break;}
				SinGaso[v] = 0;
				ActualizarVelo(playerid);
				
			}
			else if(VehicleFuel[v] < 1)
			{
				ActualizarVelo(playerid);
				GetVehicleParamsEx(v, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(v, 0, lights, alarm, doors, bonnet, boot, objective);
				SinGaso[v] = 1;
				MotorAuto[v] = 0;
			}
		}
	}
	return 1;
}

/*
task Gasolinass[120000]()
{
	foreach(new i: Vehicle)
	{
		foreach(new u : Player)
		{
			if(JugadorLogeado[u] == 1)
			{
				if(MotorAuto[i] == 1)
				{
					if(VehicleFuel[i] >= 1)
					{
						if(IsPlayerInVehicle(u,i) && GetPlayerState(u) == PLAYER_STATE_DRIVER)
						{
							VehicleFuel[i]--;
							for(new a = 0; a < MAX_PAUTOS; a++) if(i == autos[a][u]) VehicleInfo[u][a][vGas] = VehicleFuel[i];
							SinGaso[u] = 0;
						    if(ShowVelo[u] == 1)
		  					{
	                            new td_str[16];
	                            format(td_str, sizeof td_str, "%d/%d", VehicleFuel[i], CombustibleCoche(i));
		                        PlayerTextDrawSetString(u, PlayerVelocimetro[u][ptdCombustible][0], td_str);
	                            new Float:barraGas = 547.000000 + floatmul(floatdiv(float(VehicleFuel[i]), float(CombustibleCoche(i))), 66.349976);
	                            if(barraGas > 613.349976) barraGas = 613.349976;
	                            PlayerTextDrawTextSize(u, PlayerVelocimetro[u][ptdCombustible][1], barraGas, 0.000000);
	                            PlayerTextDrawUseBox(u, PlayerVelocimetro[u][ptdCombustible][1], 1);
								PlayerTextDrawShow(u, PlayerVelocimetro[u][ptdCombustible][1]);
							}
						}
					}
					else if(VehicleFuel[i] < 1)
					{
	    				if(ShowVelo[u] == 1)
						{
	                        new td_str[16];
	                        format(td_str, sizeof td_str, "%d/%d", VehicleFuel[i], CombustibleCoche(i));
	                        PlayerTextDrawSetString(u, PlayerVelocimetro[u][ptdCombustible][0], td_str);
	                        PlayerTextDrawUseBox(u, PlayerVelocimetro[u][ptdCombustible][1], 0);
							PlayerTextDrawShow(u, PlayerVelocimetro[u][ptdCombustible][1]);
						}
						GetVehicleParamsEx(i, engine, lights, alarm, doors, bonnet, boot, objective);
						SetVehicleParamsEx(i, 0, lights, alarm, doors, bonnet, boot, objective);
						SinGaso[i] = 1;
						MotorAuto[i] = 0;
					}
				}
			}
		}
	}
}*/

ptask TiempoTresSegundos[3000](playerid)
{
	
	if(UsandoVPN[playerid] && PlayerTemp[playerid][pt_Congelado] && PlayerInfo[playerid][jNivel] < 6 && strcmp(User_Temp[playerid][DiscordID], "0", true) == 0)
	{
		new Float:Velocity[3];
		GetPlayerVelocity(playerid, Velocity[0], Velocity[1], Velocity[2]);
		if(Velocity[0] > 0.01 || Velocity[1] > 0.01 || Velocity[2] > 0.01 || Velocity[0] < -0.01 || Velocity[1] < -0.01)
		{
			new string[144];
			format(string,sizeof(string),"El jugador {FF3300}%s(ID: %d)"CB" fue expulsado por el anticheat raz�n:{FF3300} Cheat Spoofing"CB".",NombreJugador(playerid),playerid);
			MensajedeCheater(string);
			ExpulsarJugador(playerid, "Cheater (39)");
		}
		
	}
	TiemposDeTresSegundos(playerid);
	return 1;
}

static TiemposDeTresSegundos(u)
{
	if(gettimeVariable < TimerForzado[u]) GameTextForPlayer(u,"~n~~r~~w~FORZANDO CERRADURA", 3000, 3);
	if(PlayerTemp[u][TimerReparar] > 0) GameTextForPlayer(u, "~w~REPARANDO VEHICULO...", 1000, 5);
	if(MarcadoMedicos[u] > 0) GameTextForPlayer(u,"~n~~n~~w~~<~ ~r~MALHERIDO ~w~~>~~n~~w~esperando servicio medico",3000,3);


	if(PlayerInfo[u][pCargos] > 0 && VariableCaido[u] > 0 && EnPatrulla[u] == 0 && Esposando[u] == 0)
	{
		if(GetPlayerAnimationIndex(u) != 1537)
		{
			SetPlayerArmedWeapon(u, 0);
			ApplyAnimation(u, "SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0, 1);
			ApplyAnimation(u, "SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0, 1);
		}
	}
	if(VariableCaido[u] > 0 && Esposando[u] > 0 && PlayerInfo[u][pCargos] > 0)
	{
		if (GetPlayerSpecialAction(u) != SPECIAL_ACTION_CUFFED)
		{
			SetPlayerSpecialAction(u,SPECIAL_ACTION_CUFFED);
		}
	}
	if(PlayerInfo[u][pCargos] == 0) MarcarJugador(u,COLORCARGO0,1);
	else if((Esposando[u] == 2 || PlayerInfo[u][pCargos] > 0 && VariableCaido[u] == 1) && EnPatrulla[u] == 0) MarcarJugador(u,COLORCARGO7,1);
	else if(PlayerInfo[u][pCargos] == 1) MarcarJugador(u,COLORCARGO1,1);
	else if(PlayerInfo[u][pCargos] == 2) MarcarJugador(u,COLORCARGO2,1);
	else if(PlayerInfo[u][pCargos] == 3) MarcarJugador(u,COLORCARGO3,1);
	else if(PlayerInfo[u][pCargos] == 4) MarcarJugador(u,COLORCARGO4,1);
	else if(PlayerInfo[u][pCargos] == 5) MarcarJugador(u,COLORCARGO5,1);
	else if(PlayerInfo[u][pCargos] >= 6) MarcarJugador(u,COLORCARGO6,1);
	if(PlayerInfo[u][pDuty] == 1) SetPlayerColor(u,TEAM_BLUE_COLOR);
	if(PlayerInfo[u][pDutyM] == 1) SetPlayerColor(u,COLOR_MILITAR);
	
	if(MarcadoMedicos[u] == 1 || LlamadaTaxi[u] == 1 || LlamadaMeca[u] == 1)
	{
		foreach(new i : Player)
		{
			if(MarcadoMedicos[u] == 1 && TieneTrabajo(i, MEDICO) && RopaMedi[i] != 0) SetPlayerMarkerForPlayer(i, u, COLORABATIDO);
			if(LlamadaTaxi[u] == 1 && TieneTrabajo(i, TAXISTA) && EnTaxi[i] == 1) SetPlayerMarkerForPlayer(i, u, COLOR_AMARILLO);
			if(LlamadaMeca[u] == 1 && (RopaMeca[i] == 1 || PlayerInfo[i][VIP] > 0) && TieneTrabajo(i,MECANICO)) SetPlayerMarkerForPlayer(i, u, COLOR_AZUL);

		}
	}

	/*if(MarcadoMedicos[u] == 1)
	{
		foreach(new i : Player)
		{
			if((TieneTrabajo(i, MEDICO)) && RopaMedi[i] != 0) SetPlayerMarkerForPlayer(i, u, COLORABATIDO);
		}
	}


	if(LlamadaTaxi[u] == 1)
	{
		foreach(new i : Player)
		{
			if((TieneTrabajo(i, TAXISTA)) && EnTaxi[i] == 1) SetPlayerMarkerForPlayer(i, u, COLOR_AMARILLO);
		}
	}
	if(LlamadaMeca[u] == 1)
	{
		foreach(new i : Player)
		{
			if((RopaMeca[i] == 1 || PlayerInfo[i][VIP] > 0) && TieneTrabajo(i,MECANICO)) SetPlayerMarkerForPlayer(i, u, COLOR_AZUL);
		}
	}*/
	return 1;
}

task TimerDeCincoSegundos[5000]()
{
	gettime(Hora, Minuto, Segundo); //Obtener Hora para tiempos optimos
	//Carrera LV
	if(Minuto == 2 && PaydayDado == 0)
	{
		PayDay();
		PaydayDado = 1;
		VerEnCarreras();
		ResetearCarrera();
		HabilitarCarreras = 1;
		UpdateDynamic3DTextLabelText(TextoCarrera,COLOR_BLANCO,""CR"Boleteria abierta\n"CB"Costo de la entrada: "CR"$600\n"CR"/comprar entrada");
		ConteoCarrera = 10;
		SetTimer("EmpezarCarrera",60*1000,0);
		new string[250];
		format(string,sizeof(string),"En "CR"%d minutos"CB" comienza la carrera, ya se inscribieron "CR"%d"CB" corredores.",ConteoCarrera,ParticipantesCarrera);
		foreach(new i : Player) if(EstaEn(i,250,-1408.8688,-304.5082,1056.4351) && GetPlayerInterior(i) == 7) Mensaje(i,-1,string);
	}
	if(Minuto == 3 && PaydayDado == 1) PaydayDado = 0;
	//PlantasMarihuana();
	
	for(new h = 0; h < MAX_TERRITORIOS; h++)
	{
		if(Tdata[h][tValid] == 1)
		{
			if(Tdata[h][tactiva] != 0) Conquistado(h);
		}
	}


	#if defined UsarDiscordConnector
	new string[30];
	new jugadores = Iter_Count(Player);
	//if(FAKEPLAYERS != 0) jugadores += FAKEPLAYERS + random(5);
	format(string, sizeof string, ""NameServer" con %d jugadores", jugadores);
	DCC_SetBotActivity(string);
	#endif
	MandoAvisoCheat = 0;
	if(TrenUno > 0)
	{
 		if(EstaEn(TrenUno,150.0,2286.9500, -1151.3966, 29.3280))
 		{
 		    if(PasoTrenBarrera[1][0] == 0)
 		    {
 		        PasoTrenBarrera[1][0] = 1;
	    		MoveDynamicObjectEx(BarreraTren[0],2283.0757,-1155.2064,26.7173-0.0001,0.0001,0.00000, -90.00000, -94.00000);
	    		MoveDynamicObjectEx(BarreraTren[1],2291.7705,-1144.3254,26.7408-0.0001,0.0001,0.0000, -90.0000, 90.0000);
				foreach(new i : Player) { if(EstaEn(i,50.0,2286.9500, -1151.3966, 29.3280) && ShowSound[i] == 1) PlayAudioStreamForPlayer(i,"https://"URL"/Campanas.mp3",2286.9500, -1151.3966, 29.3280,150.0,1); }
	 		}
		}
		else if(PasoTrenBarrera[1][0] == 1)
		{
			PasoTrenBarrera[1][0] = 0;
 			MoveDynamicObjectEx(BarreraTren[0],2283.0757,-1155.2064,26.7173+0.0001,0.0001,0.0000, -29.0000, -94.0000);
    		MoveDynamicObjectEx(BarreraTren[1],2291.7705,-1144.3254,26.7408+0.0001,0.0001,0.00000, -29.0000, 90.00000);
 		}
 		if(EstaEn(TrenUno,150.0,2204.49951, -1651.11450, 18.10880))
 		{
 		    if(PasoTrenBarrera[1][1] == 0)
 		    {
 		        PasoTrenBarrera[1][1] = 1;
 		        MoveDynamicObjectEx(BarreraTren[2],2204.1255,-1651.6556,15.3319-0.0001,0.0001,0.0000, 90.0000, 75.0000);
 		        MoveDynamicObjectEx(BarreraTren[3],2220.6826,-1642.8675,15.4477-0.0001,0.0001,   0.00000, 90.00000, -105.00000);
				foreach(new i : Player) { if(EstaEn(i,50.0,2204.49951, -1651.11450, 18.10880) && ShowSound[i] == 1) PlayAudioStreamForPlayer(i,"https://"URL"/Campanas.mp3",2204.49951, -1651.11450, 18.10880,150.0,1); }
 		    }
 		}
 		else if(PasoTrenBarrera[1][1] == 1)
 		{
 		    PasoTrenBarrera[1][1] = 0;
 		    MoveDynamicObjectEx(BarreraTren[2],2204.1255,-1651.6556,15.3319+0.0001,0.0001,   0.00000, 25.00000, 75.00000);
 		    MoveDynamicObjectEx(BarreraTren[3],2220.6826,-1642.8675,15.4477+0.0001,0.0001,0.0000, 25.0000, -105.0000);
 		}
 		if(EstaEn(TrenUno,150.0,2194.43652, -1726.57410, 16.39810))
 		{
 		    if(PasoTrenBarrera[1][2] == 0)
 		    {
 		        PasoTrenBarrera[1][2] = 1;
 		        MoveDynamicObjectEx(BarreraTren[4],2206.8242, -1725.6763, 13.60950-0.0001,0.0001,0.0000, -90.0000, 90.0000);
 		        MoveDynamicObjectEx(BarreraTren[5],2193.9961, -1739.4002, 13.54690-0.0001,0.0001,0.0000, 90.0000, 90.0000);
				foreach(new i : Player) { if(EstaEn(i,50.0,2194.43652, -1726.57410, 16.39810) && ShowSound[i] == 1) PlayAudioStreamForPlayer(i,"https://"URL"/Campanas.mp3",2194.43652, -1726.57410, 16.39810,150.0,1); }
 		    }
 		}
 		else if(PasoTrenBarrera[1][2] == 1)
 		{
 		    PasoTrenBarrera[1][2] = 0;
 		    MoveDynamicObjectEx(BarreraTren[4],2206.8242, -1725.6763, 13.60950+0.0001,0.0001,   0.00000, -25.00000, 90.00000);
 		    MoveDynamicObjectEx(BarreraTren[5],2193.9961, -1739.4002, 13.54690+0.0001,0.0001,   0.00000, 25.00000, 90.00000);
 		}
	}
	if(TrenDos > 0)
	{
 		if(EstaEn(TrenDos,150.0,2286.9500, -1151.3966, 29.3280))
 		{
 		    if(PasoTrenBarrera[2][0] == 0)
 		    {
 		        PasoTrenBarrera[2][0] = 1;
	    		MoveDynamicObjectEx(BarreraTren[0],2283.0757,-1155.2064,26.7173-0.0001,0.0001,0.00000, -90.00000, -94.00000);
	    		MoveDynamicObjectEx(BarreraTren[1],2291.7705,-1144.3254,26.7408-0.0001,0.0001,0.0000, -90.0000, 90.0000);
				foreach(new i : Player) if(EstaEn(i,50.0,2286.9500, -1151.3966, 29.3280) && ShowSound[i] == 1) PlayAudioStreamForPlayer(i,"https://"URL"/Campanas.mp3",2286.9500, -1151.3966, 29.3280,150.0,1);
	 		}
		}
		else if(PasoTrenBarrera[2][0] == 1)
		{
			PasoTrenBarrera[2][0] = 0;
 			MoveDynamicObjectEx(BarreraTren[0],2283.0757,-1155.2064,26.7173+0.0001,0.0001,0.0000, -29.0000, -94.0000);
    		MoveDynamicObjectEx(BarreraTren[1],2291.7705,-1144.3254,26.7408+0.0001,0.0001,0.00000, -29.0000, 90.00000);
 		}
 		if(EstaEn(TrenDos,150.0,2204.49951, -1651.11450, 18.10880))
 		{
 		    if(PasoTrenBarrera[2][1] == 0)
 		    {
 		        PasoTrenBarrera[2][1] = 1;
 		        MoveDynamicObjectEx(BarreraTren[2],2204.1255,-1651.6556,15.3319-0.0001,0.0001,0.0000, 90.0000, 75.0000);
 		        MoveDynamicObjectEx(BarreraTren[3],2220.6826,-1642.8675,15.4477-0.0001,0.0001,   0.00000, 90.00000, -105.00000);
				foreach(new i : Player) if(EstaEn(i,50.0,2204.49951, -1651.11450, 18.10880) && ShowSound[i] == 1) PlayAudioStreamForPlayer(i,"https://"URL"/Campanas.mp3",2204.49951, -1651.11450, 18.10880,150.0,1);
 		    }
 		}
 		else if(PasoTrenBarrera[2][1] == 1)
 		{
 		    PasoTrenBarrera[2][1] = 0;
 		    MoveDynamicObjectEx(BarreraTren[2],2204.1255,-1651.6556,15.3319+0.0001,0.0001,   0.00000, 25.00000, 75.00000);
 		    MoveDynamicObjectEx(BarreraTren[3],2220.6826,-1642.8675,15.4477+0.0001,0.0001,0.0000, 25.0000, -105.0000);
 		}
 		if(EstaEn(TrenDos,150.0,2194.43652, -1726.57410, 16.39810))
 		{
 		    if(PasoTrenBarrera[2][2] == 0)
 		    {
 		        PasoTrenBarrera[2][2] = 1;
 		        MoveDynamicObjectEx(BarreraTren[4],2206.8242, -1725.6763, 13.60950-0.0001,0.0001,0.0000, -90.0000, 90.0000);
 		        MoveDynamicObjectEx(BarreraTren[5],2193.9961, -1739.4002, 13.54690-0.0001,0.0001,0.0000, 90.0000, 90.0000);
				foreach(new i : Player) if(EstaEn(i,50.0,2194.43652, -1726.57410, 16.39810) && ShowSound[i] == 1) PlayAudioStreamForPlayer(i,"https://"URL"/Campanas.mp3",2194.43652, -1726.57410, 16.39810,150.0,1);
 		    }
 		}
 		else if(PasoTrenBarrera[2][2] == 1)
 		{
 		    PasoTrenBarrera[2][2] = 0;
 		    MoveDynamicObjectEx(BarreraTren[4],2206.8242, -1725.6763, 13.60950+0.0001,0.0001,   0.00000, -25.00000, 90.00000);
 		    MoveDynamicObjectEx(BarreraTren[5],2193.9961, -1739.4002, 13.54690+0.0001,0.0001,   0.00000, 25.00000, 90.00000);
 		}
	}
	if(TrenTres > 0)
	{
 		if(EstaEn(TrenTres,150.0,2286.9500, -1151.3966, 29.3280))
 		{
 		    if(PasoTrenBarrera[3][0] == 0)
 		    {
 		        PasoTrenBarrera[3][0] = 1;
	    		MoveDynamicObjectEx(BarreraTren[0],2283.0757,-1155.2064,26.7173-0.0001,0.0001,0.00000, -90.00000, -94.00000);
	    		MoveDynamicObjectEx(BarreraTren[1],2291.7705,-1144.3254,26.7408-0.0001,0.0001,0.0000, -90.0000, 90.0000);
				foreach(new i : Player) { if(EstaEn(i,50.0,2286.9500, -1151.3966, 29.3280) && ShowSound[i] == 1) PlayAudioStreamForPlayer(i,"https://"URL"/Campanas.mp3",2286.9500, -1151.3966, 29.3280,150.0,1); }
	 		}
		}
		else if(PasoTrenBarrera[3][0] == 1)
		{
			PasoTrenBarrera[3][0] = 0;
 			MoveDynamicObjectEx(BarreraTren[0],2283.0757,-1155.2064,26.7173+0.0001,0.0001,0.0000, -29.0000, -94.0000);
    		MoveDynamicObjectEx(BarreraTren[1],2291.7705,-1144.3254,26.7408+0.0001,0.0001,0.00000, -29.0000, 90.00000);
 		}
 		if(EstaEn(TrenTres,150.0,2204.49951, -1651.11450, 18.10880))
 		{
 		    if(PasoTrenBarrera[3][1] == 0)
 		    {
 		        PasoTrenBarrera[3][1] = 1;
 		        MoveDynamicObjectEx(BarreraTren[2],2204.1255,-1651.6556,15.3319-0.0001,0.0001,0.0000, 90.0000, 75.0000);
 		        MoveDynamicObjectEx(BarreraTren[3],2220.6826,-1642.8675,15.4477-0.0001,0.0001,   0.00000, 90.00000, -105.00000);
				foreach(new i : Player) { if(EstaEn(i,50.0,2204.49951, -1651.11450, 18.10880) && ShowSound[i] == 1) PlayAudioStreamForPlayer(i,"https://"URL"/Campanas.mp3",2204.49951, -1651.11450, 18.10880,150.0,1); }
			}
 		}
 		else if(PasoTrenBarrera[3][1] == 1)
 		{
 		    PasoTrenBarrera[3][1] = 0;
 		    MoveDynamicObjectEx(BarreraTren[2],2204.1255,-1651.6556,15.3319+0.0001,0.0001,   0.00000, 25.00000, 75.00000);
 		    MoveDynamicObjectEx(BarreraTren[3],2220.6826,-1642.8675,15.4477+0.0001,0.0001,0.0000, 25.0000, -105.0000);
 		}
 		if(EstaEn(TrenTres,150.0,2194.43652, -1726.57410, 16.39810))
 		{
 		    if(PasoTrenBarrera[3][2] == 0)
 		    {
 		        PasoTrenBarrera[3][2] = 1;
 		        MoveDynamicObjectEx(BarreraTren[4],2206.8242, -1725.6763, 13.60950-0.0001,0.0001,0.0000, -90.0000, 90.0000);
 		        MoveDynamicObjectEx(BarreraTren[5],2193.9961, -1739.4002, 13.54690,0.0001,0.0000, 90.0000, 90.0000);
				foreach(new i : Player) { if(EstaEn(i,50.0,2194.43652, -1726.57410, 16.39810) && ShowSound[i] == 1) PlayAudioStreamForPlayer(i,"https://"URL"/Campanas.mp3",2194.43652, -1726.57410, 16.39810,150.0,1); }
 		    }
 		}
 		else if(PasoTrenBarrera[3][2] == 1)
 		{
 		    PasoTrenBarrera[3][2] = 0;
 		    MoveDynamicObjectEx(BarreraTren[4],2206.8242, -1725.6763, 13.60950+0.0001,0.0001,   0.00000, -25.00000, 90.00000);
 		    MoveDynamicObjectEx(BarreraTren[5],2193.9961, -1739.4002, 13.54690+0.0001,0.0001,   0.00000, 25.00000, 90.00000);
 		}
	}
	if(TrenCuatro > 0)
	{
 		if(EstaEn(TrenCuatro,150.0,2286.9500, -1151.3966, 29.3280))
 		{
 		    if(PasoTrenBarrera[4][0] == 0)
 		    {
 		        PasoTrenBarrera[4][0] = 1;
	    		MoveDynamicObjectEx(BarreraTren[0],2283.0757,-1155.2064,26.7173-0.0001,0.0001,0.00000, -90.00000, -94.00000);
	    		MoveDynamicObjectEx(BarreraTren[1],2291.7705,-1144.3254,26.7408-0.0001,0.0001,0.0000, -90.0000, 90.0000);
				foreach(new i : Player) { if(EstaEn(i,50.0,2286.9500, -1151.3966, 29.3280) && ShowSound[i] == 1) PlayAudioStreamForPlayer(i,"https://"URL"/Campanas.mp3",2286.9500, -1151.3966, 29.3280,150.0,1); }
	 		}
		}
		else if(PasoTrenBarrera[4][0] == 1)
		{
			PasoTrenBarrera[4][0] = 0;
 			MoveDynamicObjectEx(BarreraTren[0],2283.0757,-1155.2064,26.7173+0.0001,0.0001,0.0000, -29.0000, -94.0000);
    		MoveDynamicObjectEx(BarreraTren[1],2291.7705,-1144.3254,26.7408+0.0001,0.0001,0.00000, -29.0000, 90.00000);
 		}
 		if(EstaEn(TrenCuatro,150.0,2204.49951, -1651.11450, 18.10880))
 		{
 		    if(PasoTrenBarrera[4][1] == 0)
 		    {
 		        PasoTrenBarrera[4][1] = 1;
 		        MoveDynamicObjectEx(BarreraTren[2],2204.1255,-1651.6556,15.3319-0.0001,0.0001,0.0000, 90.0000, 75.0000);
 		        MoveDynamicObjectEx(BarreraTren[3],2220.6826,-1642.8675,15.4477-0.0001,0.0001,   0.00000, 90.00000, -105.00000);
				foreach(new i : Player) { if(EstaEn(i,50.0,2204.49951, -1651.11450, 18.10880) && ShowSound[i] == 1) PlayAudioStreamForPlayer(i,"https://"URL"/Campanas.mp3",2204.49951, -1651.11450, 18.10880,150.0,1); }
 		    }
 		}
 		else if(PasoTrenBarrera[4][1] == 1)
 		{
 		    PasoTrenBarrera[4][1] = 0;
 		    MoveDynamicObjectEx(BarreraTren[2],2204.1255,-1651.6556,15.3319+0.0001,0.0001,   0.00000, 25.00000, 75.00000);
 		    MoveDynamicObjectEx(BarreraTren[3],2220.6826,-1642.8675,15.4477+0.0001,0.0001,0.0000, 25.0000, -105.0000);
 		}
 		if(EstaEn(TrenCuatro,150.0,2194.43652, -1726.57410, 16.39810))
 		{
 		    if(PasoTrenBarrera[4][2] == 0)
 		    {
 		        PasoTrenBarrera[4][2] = 1;
 		        MoveDynamicObjectEx(BarreraTren[4],2206.8242, -1725.6763, 13.60950-0.0001,0.0001,0.0000, -90.0000, 90.0000);
 		        MoveDynamicObjectEx(BarreraTren[5],2193.9961, -1739.4002, 13.54690-0.0001,0.0001,0.0000, 90.0000, 90.0000);
				foreach(new i : Player) { if(EstaEn(i,50.0,2194.43652, -1726.57410, 16.39810) && ShowSound[i] == 1) PlayAudioStreamForPlayer(i,"https://"URL"/Campanas.mp3",2194.43652, -1726.57410, 16.39810,150.0,1); }
 		    }
 		}
 		else if(PasoTrenBarrera[4][2] == 1)
 		{
 		    PasoTrenBarrera[4][2] = 0;
 		    MoveDynamicObjectEx(BarreraTren[4],2206.8242, -1725.6763, 13.60950+0.0001,0.0001,   0.00000, -25.00000, 90.00000);
 		    MoveDynamicObjectEx(BarreraTren[5],2193.9961, -1739.4002, 13.54690+0.0001,0.0001,   0.00000, 25.00000, 90.00000);
 		}
	}
    
	return 1;
}


Funcion:TiempoArresto(playerid)
{
	new string[144];
	if(Esposando[playerid] == 0) return 1;
	if(GetPlayerInterior(playerid) > 0) SetTimerEx("Encerrando2",500,false,"d",playerid);
	GetPlayerPos(playerid, DeathX[playerid], DeathY[playerid], DeathZ[playerid]);
	if(PlayerTemp[playerid][CargosRobo] != 0) PlayerTemp[playerid][CargosRobo] = 0,PlayerTemp[playerid][ArrestadoTienda] = 1;
	VariableCaido[playerid] = 1;
	Esposando[playerid] = 2;
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_CUFFED);
	CongelarEx(playerid);
	format(string,sizeof(string),"%s no se resiste al arresto y espera ser detenido.",NombreJugador(playerid));
	ProxDetector(30.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
	format(string, sizeof(string), "[Radio de polic�a] (%s %s) dice: %s fue capturado, ahora lo llevo a la comisaria.", RangoPolicia(Oficial[playerid]),NombreJugador(Oficial[playerid]),NombreJugador(playerid));
	ProxDetector(20.0, Oficial[playerid], string,-1,ColorChatNormal1,ColorChatNormal2,ColorChatNormal3,ColorChatNormal4);
	format(string, sizeof(string), "{3399FF}[Radio de Polic�a]"CB" %s reportando: "CR"%s"CB"[%d] fue capturado, ahora lo llevo a la comisar�a.",NombreJugador(Oficial[playerid]), NombreJugador(playerid),playerid);
	SendRadioMessage(1, -1, string,Oficial[playerid], 1);
	SendRadioMessage(2, -1, string,Oficial[playerid], 1);
	Oficial[playerid] = INVALID_PLAYER_ID;
	MarcarJugador(playerid,COLORCARGO7,1);
	return 1;
}

public OnVehicleSpawn(vehicleid)
{
    #if DEBUG_GM == 1
    printf("(OnVehicleSpawn) VehicleID: %d", vehicleid);
    #endif

	if(VehiculosInfo[vehicleid][SpawnManual] == 1)
	{
		ClearVehicleVariables(vehicleid);
		DestroyVehicle(vehicleid);
		return 1;
	}

	foreach(new i : Player)
	{
		
  		for(new a = 0; a < MAX_PAUTOS; a++) if(vehicleid == autos[a][i]) return Auto(i,a,3);
		
	}
	foreach(new f : Fabricas)
	{
		if(vehicleid == Fabricas[f][Auto1F]) return RespawnVF1(f);
		if(vehicleid == Fabricas[f][Auto2F]) return RespawnVF2(f);
	}

	/*
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i))
		{
  			for(new a = 0; a < MAX_PAUTOS; a++) if(vehicleid == autos[a][i]) return Auto(i,a,3);
		}
	}*/
	
	if(VehiculosInfo[vehicleid][vfaccion] > 0) bloqueado[vehicleid] = 0;
	SetVehicleHealthAC(vehicleid, 1000.0);
    EmisoraEscuchando[vehicleid] = -1;
	VehicleFuel[vehicleid] = CombustibleCoche(vehicleid);
	MotorAuto[vehicleid] = 0;
	SinGaso[vehicleid] = 0;
	Balde[vehicleid] = 0;
	Luces[vehicleid] = 0;
	return 1;
}

public OnVehicleMod(playerid, vehicleid, componentid)
{
    #if DEBUG_GM == 1
    printf("(OnVehicleMod) PlayerID: %d | VehicleID: %d", playerid, vehicleid);
    #endif
	if(!ComponenteValido((GetVehicleModel(vehicleid)), componentid))
	{
        ExpulsarJugador(playerid, "Componente invalido.");
        return 0;
	}
	QuitarDineroTransfender(playerid, PrecioTransfender[componentid-1000]);
	new interior = GetPlayerInterior(playerid);
	if(interior == 2 && EstaEn(playerid,15.0,616.7820,-74.815,997.6350))	return 1;	//Loco Low
	if(interior == 3 && EstaEn(playerid,15.0,615.2851,-124.2390,997.6350))	return 1;	//Wheel Arch Angels
	if(interior == 1 && EstaEn(playerid,15.0,617.5380,-1.9900,1000.6829))	return 1;	//Transfender
	new string[250];
	format(string, sizeof(string), "El jugador {FF3300}%s(ID: %d)"CB" fue expulsado por el anticheat. Raz�n:{FF3300} Cheat de tuneo (%d)"CB".",NombreJugador(playerid),playerid, GetVehicleModel(vehicleid));
	MensajedeCheater(string);
	ExpulsarJugador(playerid, "Cheat de tuneo");
	return 1;
}

Funcion:Reinicio()
{
	if(TiempoReinicio == 1)
	{
		MensajeAll(0xB1F6F6F6, "El servidor se reiniciar� autom�ticamente en 1 minuto.");
		SetTimerEx("Conteo", 1000, false, "i", 59);
		TiempoReinicio--;
		return 1;
	}
	if(TiempoReinicio > 0)
	{
		if(TiempoReinicio <= 3)
		{
			va_SendClientMessageToAll(0xB1F6F6F6, "El servidor se reiniciar� autom�ticamente en %d minutos.", TiempoReinicio);
		}
		TiempoReinicio--;
		return 1;
	}
	
	if(TiempoReinicio == 0)
	{
		MensajeAll(0xB1F6F6F6, "El servidor se reiniciara ahora.");
		KillTimer(TimerReinicio);
		SendRconCommand("gmx");
	}
	return 1;
}

Funcion:Conteo(Tiempo)
{
	if(Tiempo >= 1)
	{
		if(Tiempo == 30)
		{
			foreach(new i : Player)
			{
				GuardarCuenta(i);
			}
		}
		if(Tiempo <= 10)
		{
			new string[128];
			format(string, 128, "El servidor se reiniciar� autom�ticamente en %d segundos.", Tiempo);
			MensajeAll(0xB1F6F6F6, string);
		}
		TimerReinicio2 = SetTimerEx("Conteo", 1000, false, "i", Tiempo-1);
	}
	return 1;
}

Funcion:CargarVehiculos()
{
	mysql_tquery(Conecction, "SELECT * FROM `vehicles`", "CargarAutos");
	return 1;
}

Funcion:TextoCombate(playerid)
{
	if(EnCombate[playerid] == 1)
	{
		if(TiempoCombate[playerid] > 0)
		{
			if(CColocado[playerid] == 0)
			{
				GangZoneShowForPlayer(playerid,ModoCombate,0xF600008D);
			    GangZoneFlashForPlayer(playerid,ModoCombate,0x00000000);
				TiempoCombate[playerid]--;
				CColocado[playerid] = 1;
			}
			else
			{
				GangZoneHideForPlayer(playerid, ModoCombate);
				GangZoneStopFlashForPlayer(playerid, ModoCombate);
				TiempoCombate[playerid]--;
				CColocado[playerid] = 0;
			}
		}
		else if(TiempoCombate[playerid] <= 0)
		{
			GangZoneHideForPlayer(playerid, ModoCombate);
			GangZoneStopFlashForPlayer(playerid, ModoCombate);
			TiempoCombate[playerid] = 0;
			CColocado[playerid] = 0;
			EnCombate[playerid] = 0;
			KillTimer(TimerCombate[playerid]);
		}
	}
	else if(EnCombate[playerid] == 0)
	{
		GangZoneHideForPlayer(playerid, ModoCombate);
		GangZoneStopFlashForPlayer(playerid, ModoCombate);
		TiempoCombate[playerid] = 0;
		CColocado[playerid] = 0;
		EnCombate[playerid] = 0;
		KillTimer(TimerCombate[playerid]);
	}
}

public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid, bodypart)
{
	if(!IsPlayerConnected(playerid)) return 1;
	

	if(issuerid != INVALID_PLAYER_ID && ZonaSegura[playerid] == 0 && weaponid == 34 && bodypart == 9 && User_Temp[playerid][pt_PLAYER_EVENTODM] && User_Temp[issuerid][pt_PLAYER_EVENTODM])
	{
		if(ShowSound[issuerid] == 1)
		{
	    	PlayAudioStreamForPlayer(issuerid,"https://a.tumblr.com/tumblr_o0lqddSVbs1v3gveto1.mp3");
	    }
   		if(ShowSound[playerid] == 1)
		{
	    	PlayAudioStreamForPlayer(playerid,"https://a.tumblr.com/tumblr_o0lqddSVbs1v3gveto1.mp3");
	    }
	    EstablecerVida(playerid, 0.0);
	}
	if(issuerid != INVALID_PLAYER_ID)
	{
		if(PlayerInfo[playerid][jNivel] < 3)
		{
	    	new Float:old_health;
	    	GetPlayerHealth(playerid, old_health);
	    	EstablecerVida(playerid, old_health + amount);
 		}
		Agresor[playerid] = issuerid;
		TiempoAgresor[playerid] = 15;
		ColocarCombate(issuerid);
		ColocarCombate(playerid);
		if(ViendoGPS[playerid] == 1) CerrarGPS(playerid);
		if(IsPlayerInAnyVehicle(issuerid) && GetPlayerState(issuerid) == PLAYER_STATE_DRIVER) return 1;
		if(PlayerInfo[issuerid][pTiempoCarcel] > 0 || PlayerInfo[issuerid][pTiempoJail] > 0) return 1;
		new LugarCargo[50],expulsar = 0;
		LugarCargo = "Feli";
		if(EstaEn(issuerid,180.0,1759.6833,-1892.0160,13.5556) && GetPlayerInterior(issuerid) == 0) LugarCargo = "en Unity Station";
		else if(EstaEn(issuerid,130.0,1173.2209,-1332.7537,13.9884) && GetPlayerInterior(issuerid) == 0) LugarCargo = "en Hospital Central";
		else if(EstaEn(issuerid,70.0,2030.1166,-1413.7969,16.9989) && GetPlayerInterior(issuerid) == 0) LugarCargo = "en el Hospital Country General";
		else if((EstaEn(issuerid,70.0,-1745.5931,-131.6944,3.7314) || EstaEn(Agresor[playerid],450.0,-1652.7432,23.0748,4.4347)) && GetPlayerInterior(issuerid) == 0) LugarCargo ="en los Muelles de San Fierro";
		else if(EstaEn(issuerid,100.0,-384.4948,-1474.2228,25.7266) && GetPlayerInterior(issuerid) == 0) LugarCargo ="en las Granjas de Flint Range";
		else if(EstaEn(issuerid,100.0,-148.6831,-1577.2129,9.3045) && GetPlayerInterior(issuerid) == 0) LugarCargo = "en el basural";
		else if(EstaEn(issuerid,200.0,-2647.9409,605.9929,15.2346) && GetPlayerInterior(issuerid) == 0) LugarCargo = "en el Hospital de San Fierro";
		else if(EstaEn(issuerid,200.0,1611.4006,1781.1265,37.8510) && GetPlayerInterior(issuerid) == 0) LugarCargo = "en el Hospital de Las Venturas";
		else if(EstaEn(issuerid,200.0,-563.0829,2347.7573,79.1133) && GetPlayerInterior(issuerid) == 0) LugarCargo = "en la Mina"; //minero
		else if(EstaEn(issuerid,250,1156.8682,-1334.6033,-10.7922) && GetPlayerInterior(issuerid) == 6 && GetPlayerVirtualWorld(issuerid) == 6) LugarCargo = "en Hospital Central",expulsar = 1;
        else if(EstaEn(issuerid,250,1239.3762,-822.5826,1164.2759) && GetPlayerInterior(issuerid) == 6 && GetPlayerVirtualWorld(issuerid) == 9) LugarCargo = "en el Hospital Country General",expulsar = 2;
        else if(EstaEn(issuerid,250,-2714.3257,628.0117,1385.6547) && GetPlayerInterior(issuerid) == 6 && GetPlayerVirtualWorld(issuerid) == 7) LugarCargo = "en el Hospital de San Fierro",expulsar = 3;
        else if(EstaEn(issuerid,250,1239.3762,-822.5826,1164.2759) && GetPlayerInterior(issuerid) == 6 && GetPlayerVirtualWorld(issuerid) == 8) LugarCargo = "en el Hospital de Las Venturas",expulsar = 4;
		else if(EstaEn(issuerid,250,369.4387,169.1839,1040.1156) && GetPlayerInterior(issuerid) == 5 && GetPlayerVirtualWorld(issuerid) == 5) LugarCargo = "en el Estudio de Radio y Televisi�n",expulsar = 5;
		else if(EstaEn(issuerid,200,1551.7198,-1675.6492,15.9741) && GetPlayerInterior(issuerid) == 0) LugarCargo = "enfrente de la Comisar�a";
        else if(EstaEn(issuerid,50,830.2910,3.9240,1004.1797) && GetPlayerInterior(issuerid) == 3) LugarCargo = "en el Banco Plaza";
		else if(EstaEn(issuerid,80,1092.2074,-141.3113,1001.1160) && GetPlayerInterior(issuerid) == 3) LugarCargo = "en Banco Central de Los Santos";
		else if(EstaEn(issuerid,25,2311.8379,-8.2884,26.7422) && GetPlayerInterior(issuerid) == 0 && GetPlayerVirtualWorld(issuerid) != 0) LugarCargo = "en Banco de San Fierro";
		else if(EstaEn(issuerid,200,-1622.6633,702.1961,11.2764) && GetPlayerInterior(issuerid) == 0) LugarCargo = "enfrente de la Comisar�a de San Fierro";
		else if(EstaEn(issuerid,200,2282.8855,2454.9976,9.8203) && GetPlayerInterior(issuerid) == 0) LugarCargo = "enfrente de la Comisar�a de Las Venturas";
		else if(EstaEn(issuerid,30,374.6797,-124.4743,1001.4995) && GetPlayerInterior(issuerid) == 5) LugarCargo = "en The Well Stacked Pizza";
		else if(EstaEn(issuerid,30,-29.1592,-83.4654,1003.5542) && GetPlayerInterior(issuerid) == 18) LugarCargo = "en 24/7";
        else if(EstaEn(issuerid,30,767.7672,4.7224,1000.7183) && GetPlayerInterior(issuerid) == 5) LugarCargo = "en GYM";
		else if(EstaEn(issuerid,50,-1412.7083,-310.4966,1058.1694) && GetPlayerInterior(issuerid) == 7 && GetPlayerVirtualWorld(issuerid) == 7) LugarCargo = "en el Estadio de Las Venturas",expulsar = 6;
		else if(EstaEn(issuerid,100,1094.0922,1597.0083,12.5469) && GetPlayerInterior(issuerid) == 0) LugarCargo = "en el Estadio de Las Venturas";
		else if(EstaEn(issuerid,100,278.6463,1411.3732,10.4271) && GetPlayerInterior(issuerid) == 0 && Jail[issuerid] == 0) LugarCargo = "en el penal de Fort Carson";
		if(strcmp(LugarCargo,"Feli"))
		{
			if(!FaccLegal2(issuerid) && !IsPlayerInAnyVehicle(issuerid) && GetPlayerState(issuerid) != PLAYER_STATE_DRIVER && PlayerInfo[issuerid][pCargos] < 1)
			{
				new string[144];
				DarEstrella(issuerid,1);
				CagoSeguro[issuerid] = 1;
				format(PlayerInfo[issuerid][QuienC],MAX_PLAYER_NAME+1,"Zona segura (%d)", playerid);
				if(Advertido[issuerid] == 0)
				{
					format(string, 144,"{3399FF}[Central de polic�a]"CB" reportando: (("CR"%s"CB")) [%d] disturbios %s.",NombreJugador(issuerid),issuerid,LugarCargo);
					SendRadioMessage(1,-1,string,INVALID_PLAYER_ID, 1);
					SendRadioMessage(2,-1,string,INVALID_PLAYER_ID, 1);
					ReportCrimen(issuerid,1);
					Mensaje(issuerid,-1,"Fuiste descubierto por un guardia de seguridad, escapa de la zona.");
					Mensaje(issuerid,-1,"Si te escondes bien durante 5 minutos, la polic�a perder� tu rastro.");
					Advertido[issuerid] = 1;
					SetTimerEx("Advert",30000,false,"d",issuerid);
					SetTimerEx("BajarCargo",300000,false,"d",issuerid);
					ReportCrimen(issuerid,4);
				}
				switch(expulsar)
				{
				    case 1: SetPosEx(issuerid,1172.0782,-1323.3225,15.4029,90.7454,0,0);
				    case 2: SetPosEx(issuerid,2034.0798,-1401.6808,17.2939,90.7454,0,0);
				    case 3: SetPosEx(issuerid,-2665.0000,640.1640,14.4531,90.7454,0,0);
				    case 4: SetPosEx(issuerid,1607.4094,1815.2427,10.8203,90.7454,0,0);
					case 5: SetPosEx(issuerid,649.0013,-1360.7864,13.5868,0,0,0);
					case 6:
					{
						SetPosEx(issuerid,1094.0922,1597.0083,12.5469,0,0,0);
						if(EnCarreras[issuerid] > 0) SacarCarrera(issuerid, 1);
					}
				}
			}
		}

		new Float:chaleco;
		GetPlayerArmour(playerid, chaleco);
		if(issuerid != INVALID_PLAYER_ID && chaleco == 0 && !AntiVidas[playerid])
		{
			new Float:salud;
			AntiVidas[playerid] = true;
			GetPlayerHealth(playerid, salud);
			SetTimerEx("AntiVida", 30, 0, "dff", playerid,floatsub(salud,amount), amount);
			
		}
		
	}
	return 1;
}
static DarPoint(playerid)
{
	new asd = GetPlayerInterior(playerid), dsa = GetPlayerVirtualWorld(playerid);
	foreach(new d: Puertas)
	{
		if(DoorData[d][drobo] != -1)
		{
			if(EstaEn(playerid,15.0,DoorData[d][dsX], DoorData[d][dsY], DoorData[d][dsZ])) // Puerta
			{
				if(asd == DoorData[d][dint] && dsa == DoorData[d][dvw])
				{
					PosTienda[playerid][0] = DoorData[d][dX];
					PosTienda[playerid][1] = DoorData[d][dY];
					PosTienda[playerid][2] = DoorData[d][dZ];
 				    return 1;
				}
			}
		}
	}
	return 1;
}

Funcion:TimerTiendas(u)
{
	if(IsPlayerAiming(u) && EnTiendaRobo(u) && GetPlayerState(u) == PLAYER_STATE_ONFOOT)
	{
		if(gettimeVariable > TiempoApuntar[u])
		{
			new arma = GetPlayerWeapon(u);
			if(arma >= 22 && arma <= 42)
			{
				foreach(new i : Actores)
	   			{
					new actor = GetPlayerTargetDynamicActor(u), interior = GetPlayerInterior(u), vw = GetPlayerVirtualWorld(u);
					if(actor == ActorData[i][ActorPlayer] && ActorData[i][Robable] == 1)
					{
						TiempoApuntar[u] = gettimeVariable + 1/2;
						if(PlayerInfo[u][pCargos] > 0) Mensaje(u,-1,"La "CR"polic�a"CB" te est� buscando, "CR"no puedes robar"CB" un negocio en este momento.");
						else if(interior == PlayerInfo[u][TiendaInt] && vw == PlayerInfo[u][TiendaVw]) Mensaje(u,-1,"No puedes robar el "CR"mismo negocio"CB" seguidamente.");
						else if(TieneTrabajo(u, BASURERO)) Mensaje(u,-1,"No puedes asaltar negocios siendo basurero.");
						else if(TieneTrabajo(u, MEDICO)) Mensaje(u,-1,"No puedes asaltar negocios siendo medico.");
						else if(DarPoint(u) && GetDistanceBetweenPoints(PlayerInfo[u][TiendasX],PlayerInfo[u][TiendasY],0,PosTienda[u][0],PosTienda[u][1],0) < 250) Mensaje(u,-1,"No puedes robar un negocio "CR"tan cercano"CB" al de tu �ltimo robo.");
						else if(ActorData[actor][RoboEstado] == 0)
						{
							ActorData[actor][RoboEstado] = 1;
						 	RobandoTienda(u,actor);
							return 1;
	  					}
						PlayerPlaySound(u,1085,0.0,0.0,0.0);
						break;
	   				}
		   		}
	   		}
   		}
		SetTimerEx("TimerTiendas",1000,false,"d",u);
	}
	return 1;
}

Funcion:RobandoTienda(playerid,actor)
{
	if(IsPlayerConnected(playerid))
	{
		if(IsPlayerAiming(playerid))
		{
			if(GetPlayerTargetDynamicActor(playerid) == actor)
			{
				if(EnTiendaRobo(playerid) && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && ActorData[actor][RoboEstado] > 0)
				{
					new playerWeapon = GetPlayerWeapon(playerid);
					if(playerWeapon >= 22 && playerWeapon <= 42)
					{
						new asdasd = ActorData[actor][RoboEstado];
						switch(asdasd)
						{
							case 1: ApplyDynamicActorAnimation(actor, "PED", "handsup",4.1,0,0,0,1,0);
							case 3: ApplyDynamicActorAnimation(actor, "MISC", "plyr_shkhead",4.1,0,0,0,1,0);
							case 4..7: ApplyDynamicActorAnimation(actor, "CASINO", "Roulette_bet",4.1,1,0,0,1,0);
				 			case 8: return TiendaRobada(playerid,actor);
						}
						SetTimerEx("RobandoTienda",2000,false,"dd",playerid,actor);
						ActorData[actor][RoboEstado]++;
						return 1;
					}
				}
			}
			SetTimerEx("TimerTiendas",1000,false,"d",playerid);
		}
	}
	LimpiarNegocio(actor);
	return 1;
}

static LimpiarNegocio(actor)
{
	ApplyDynamicActorAnimation(actor, "RIOT", "RIOT_FUKU",4.1,0,0,0,1,0);
	ActorData[actor][RoboEstado] = 0;
	return 1;
}

static TiendaID(playerid)
{
 	new vw = GetPlayerVirtualWorld(playerid), interior = GetPlayerInterior(playerid);
	switch(interior)
	{
		case 1: { if(vw < 4) return 3; else return 11; }
		case 3: { if(vw < 2) return 7; else return 12; }
		case 5: { if(vw < 13) return 0; else return 9; }
		case 10: return 1;
		case 11: return 5;
		case 14: return 8;
		case 15: return 10;
		case 18: { if(vw < 15) return 2; else if(vw > 14 && vw < 19) return 4; else if(vw == 19) return 6; }
	}
	return 0;
}

static AvisoRobo(playerid)
{
	new string[250],zona[MAX_ZONE_NAME];
	GetPoint3DZone(PosTienda[playerid][0],PosTienda[playerid][1],PosTienda[playerid][2],zona, sizeof(zona));
	format(string, 200,"{3399FF}[Central de polic�a]"CB" reportando: (("CR"%s"CB")) [%d] asalt� un negocio en %s.",NombreJugador(playerid),playerid,zona);
	SendRadioMessage(1,-1,string,INVALID_PLAYER_ID, 1);
	SendRadioMessage(2,-1,string,INVALID_PLAYER_ID, 1);
	format(PlayerInfo[playerid][QuienC], 8, "Negocio");
	DarEstrella(playerid, 2);
	return 1;
}

static TiendaRobada(playerid, actor)
{
	if(IsPlayerConnected(playerid))
	{
		DarPoint(playerid);
		if(tviaje[playerid] != 0 || Carga[playerid] != 0) PlayerTemp[playerid][RoboConJob] = 1;
		new label[128], tienda = TiendaID(playerid), vw = GetPlayerVirtualWorld(playerid), interior = GetPlayerInterior(playerid);
		DineroRobo[tienda][vw] = 5000 + random(1571);
		TRobada[tienda][vw] = 1;
		PlayerTemp[playerid][CargosRobo] = gettimeVariable + 300;
		PlayerInfo[playerid][TiendaInt] = interior;
		PlayerInfo[playerid][TiendaVw] = vw;
		PlayerInfo[playerid][TiendasX] = PosTienda[playerid][0];
		PlayerInfo[playerid][TiendasY] = PosTienda[playerid][1];
		AvisoRobo(playerid);
		TiempoApuntar[playerid] = gettimeVariable + 4;
		SetTimerEx("RecargarTienda",59500,false,"dd",tienda,actor);
		SetTimerEx("ArrestoTienda",60000,false,"d",playerid);
		ApplyDynamicActorAnimation(actor, "PED", "DUCK_cower",4.1,0,0,0,1,0);
		Mensaje(playerid,-1,"Un empleado acci�no "CR"la alarma"CB" y la "CR"polic�a"CB" te vio por las c�maras de seguridad.");
		Mensaje(playerid,-1,"Escapa del negocio y permanece lejos de la polic�a durante "CR"5 minutos"CB" para perderlos.");
		PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
		format(label, sizeof(label), ""CR"$%d\n"CB"Pulsa "CR"'H'"CB" para tomar el dinero.",DineroRobo[tienda][vw]);
		if(IsValidDynamic3DTextLabel(DineroTiendas[tienda][vw])) UpdateDynamic3DTextLabelText(DineroTiendas[tienda][vw], COLOR_BLANCO, label);
		else DineroTiendas[tienda][vw] = CreateDynamic3DTextLabel(label, COLOR_BLANCO, TiendaSpawn[tienda][0], TiendaSpawn[tienda][1], TiendaSpawn[tienda][2], 2.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, vw, interior);
		ObjetoDinero[tienda][vw] = CreateDynamicPickup(1212, 1, TiendaSpawn[tienda][0], TiendaSpawn[tienda][1], TiendaSpawn[tienda][2], vw, interior, -1, 2.0, -1, 0);
		foreach(new i : Player)
		{
			if(ShowSound[i] == 1)
			{
				if(EstaEn(i,15.0,TiendaSpawn[tienda][0], TiendaSpawn[tienda][1], TiendaSpawn[tienda][2])) PlayAudioStreamForPlayer(i,"https://"URL"/Alarma.mp3",TiendaSpawn[tienda][0], TiendaSpawn[tienda][1], TiendaSpawn[tienda][2],50.0,1);
				else if(EstaEn(i,50.0,PosTienda[playerid][0],PosTienda[playerid][1],PosTienda[playerid][2])) PlayAudioStreamForPlayer(i,"https://"URL"/Alarma.mp3",PosTienda[playerid][0],PosTienda[playerid][1],PosTienda[playerid][2],50.0,1);
			}
		}
	}
	else LimpiarNegocio(actor);
	return 1;
}

Funcion:EncerrarRobo(playerid)
{
	Encerrando2(playerid);
	DescongelarEx(playerid);
	SetCameraBehindPlayer(playerid);
	return 1;
}

Funcion:DestruirPolicia(actor) DestroyDynamicActorEx(actor);

Funcion:ArrestoTienda(i)
{
	if(IsPlayerConnected(i))
	{
		new tienda = TiendaID(i), vw = GetPlayerVirtualWorld(i), inte = GetPlayerInterior(i);
		if(EnTiendaRobo(i) && PlayerTemp[i][CargosRobo] != 0)
		{
			if(PlayerInfo[i][TiendaInt] == inte && PlayerInfo[i][TiendaVw] == vw)
			{
				PlayerTemp[i][ArrestadoTienda] = 1;
				CongelarEx(i);
				ActorPolicia[tienda][vw] = CreateDynamicActor(280,ActorPolice[tienda][0],ActorPolice[tienda][1],ActorPolice[tienda][2],ActorPolice[tienda][3]);
	        	SetDynamicActorVirtualWorld(ActorPolicia[tienda][vw], vw);
				SetPlayerPosAC(i, ArrestoPlayer[tienda][0],ArrestoPlayer[tienda][1],ArrestoPlayer[tienda][2]);
				SetPlayerFacingAngle(i, ArrestoPlayer[tienda][3]);
				SetPlayerCameraPos(i, ArrestoCamaras[tienda][0],ArrestoCamaras[tienda][1],ArrestoCamaras[tienda][2]);
				SetPlayerCameraLookAt(i, ArrestoCamaras[tienda][3],ArrestoCamaras[tienda][4],ArrestoCamaras[tienda][5]);
				SetPlayerSpecialAction(i,SPECIAL_ACTION_HANDSUP);
				ApplyDynamicActorAnimation(ActorPolicia[tienda][vw], "PED", "ARRESTgun", 4.0,0,1,1,1,1);
				GameTextForPlayer(i, "~r~Arrestado", 10000, 3);
				SetTimerEx("DestruirPolicia",10000,false,"d",ActorPolicia[tienda][vw]);
				SetTimerEx("EncerrarRobo",10000,false,"d",i);
			}
		}
 	}
	return 1;
}

static TomarDinero(playerid)
{
	new tienda = TiendaID(playerid), vw = GetPlayerVirtualWorld(playerid);
	if(TRobada[tienda][vw] == 1 && DineroRobo[tienda][vw] != 0)
	{
		va_SendClientMessage(playerid,-1,"Acabas de robar "CR"$%d"CB" del negocio, escapa o ser�s arrestado.",DineroRobo[tienda][vw]);
		DarDinero(playerid,DineroRobo[tienda][vw]);
		ApplyAnimation(playerid,"BAR","Barserve_give",4.1,0,0,0,0,0);
		UpdateDynamic3DTextLabelText(DineroTiendas[tienda][vw], COLOR_BLANCO, "");
  		DestroyDynamicPickupEx(ObjetoDinero[tienda][vw]);
		DineroRobo[tienda][vw] = 0;
 	}
	return 1;
}

Funcion:RecargarTienda(tienda,actor)
{
	new vw = GetDynamicActorVirtualWorld(actor);
	if(TRobada[tienda][vw] == 1)
	{
		UpdateDynamic3DTextLabelText(DineroTiendas[tienda][vw], COLOR_BLANCO, "");
		DestroyDynamicPickupEx(ObjetoDinero[tienda][vw]);
		ActorData[actor][RoboEstado] = 0;
		DineroRobo[tienda][vw] = 0;
		TRobada[tienda][vw] = 0;
		ClearDynamicActorAnimations(actor);
		ApplyDynamicActorAnimation(actor, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	}
	return 1;
}

Funcion:CargarQuimicos(id)
{
	new asd, asd2;
	if(id == 1) { asd = 0; asd2 = 6; }
	if(id == 2) { asd = 5; asd2 = 10; }
	if(id == 3) { asd = 10; asd2 = 15; }
	if(id == 4) { asd = 15; asd2 = 20; }
	if(id == 5) { asd = 20; asd2 = 25; }
	if(id == 6) { asd = 25; asd2 = 30; }
	for(new n=asd; n<asd2; n++)
	{
		
		DestroyDynamic3DTextLabelEx(MetaCompraText[n]);
		
		//if(IsValidDynamic3DTextLabel(MetaCompraText[n])) UpdateDynamic3DTextLabelText(MetaCompraText[n], COLOR_BLANCO, ""CB"Pulsa "CR"'H'"CB" para levantar el tanque.");
		/*if(!IsValidDynamic3DTextLabel(MetaCompraText[n])) */
		MetaCompraText[n] = CreateDynamic3DTextLabel(""CB"Pulsa "CR"'H'"CB" para levantar el tanque.", COLOR_BLANCO, QuimicosSpawn[n][0], QuimicosSpawn[n][1], QuimicosSpawn[n][2], 2.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0,-1,100.0);
		DestroyDynamicObjectEx(MetaCompra[n]);
		MetaCompra[n] = CreateDynamicObject(3632, QuimicosSpawn[n][0], QuimicosSpawn[n][1], QuimicosSpawn[n][2], 0.000000, 0.000000, 82.894028);
	}
 	return 1;
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
    new estado = GetPlayerState(playerid);
	if(PlayerInfo[playerid][VIP] >= 3 && HabilitarAnim(playerid))
	{
		if (((newkeys & KEY_WALK && newkeys & KEY_UP) || (newkeys & KEY_WALK && newkeys & KEY_DOWN) || (newkeys & KEY_WALK && newkeys & KEY_LEFT) || (newkeys & KEY_WALK && newkeys & KEY_RIGHT))
		|| ((oldkeys & KEY_WALK && newkeys & KEY_UP) || (oldkeys & KEY_WALK && newkeys & KEY_DOWN) || (oldkeys & KEY_WALK && newkeys & KEY_LEFT) || (oldkeys & KEY_WALK && newkeys & KEY_RIGHT))
		|| ((newkeys & KEY_WALK && oldkeys & KEY_UP) || (newkeys & KEY_WALK && oldkeys & KEY_DOWN) || (newkeys & KEY_WALK && oldkeys & KEY_LEFT) || (newkeys & KEY_WALK && oldkeys & KEY_RIGHT)))
		{
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
	}
	
	if(estado == PLAYER_STATE_ONFOOT)
	{
	
		new weaponid = GetPlayerWeapon(playerid);
		if((WEAPON_COLT45 <= weaponid <= WEAPON_CAMERA) && weaponid != WEAPON_BOMB)
		{
			if(!Apuntando[playerid] && (newkeys & KEY_HANDBRAKE) & KEY_HANDBRAKE)
			{
				Apuntando[playerid] = true;
			}
			else if((newkeys & KEY_HANDBRAKE) != KEY_HANDBRAKE && (oldkeys & KEY_HANDBRAKE) == KEY_HANDBRAKE)
			{
				Apuntando[playerid] = false;
			}
		}
	}
	if(Tiempos_User[playerid][Tiempo_Traba] - gettimeVariable < 0)
	{
		if(newkeys & KEY_SPRINT && newkeys & KEY_YES || newkeys & KEY_HANDBRAKE && newkeys & KEY_YES && GetPlayerVehicleID(playerid))
		{
			new Float:Pos[3];
			for(new i = 0; i < MAX_PAUTOS; i++)
			{
				if(!IsValidVehicle(autos[i][playerid])) continue;
				GetVehiclePos(autos[i][playerid], Pos[0], Pos[1], Pos[2]);
				if(EstaEn(playerid, 5.0, Pos[0], Pos[1], Pos[2]))
				{
					if(bloqueado[autos[i][playerid]] == 0)
					{
						CerrarAuto(playerid);
					}
					else
					{
						AbrirAuto(playerid);
					}
					Tiempos_User[playerid][Tiempo_Traba] = gettimeVariable + 2;
				}
			}
		}
	}
	
	//if(newkeys & KEY_HANDBRAKE && estado == PLAYER_STATE_ONFOOT && GetPlayerWeapon(playerid) == 4) SetPlayerArmedWeapon(playerid, 0);
    if(PRESSED(KEY_HANDBRAKE))
	{
		if(EnTiendaRobo(playerid) && IsPlayerAiming(playerid) && estado == PLAYER_STATE_ONFOOT && !FaccLegal2(playerid))
		{
			new arma = GetPlayerWeapon(playerid);
			if(gettimeVariable > TiempoApuntar[playerid] && arma >= 22 && arma <= 42) return TimerTiendas(playerid);
		}
	}
	if(newkeys & KEY_CTRL_BACK)
	{
		if(PlayerTemp[playerid][CargosRobo] != 0)
		{
		    for(new i = 0; i < sizeof TiendaSpawn; i++) if(EstaEn(playerid, 2.0, TiendaSpawn[i][0], TiendaSpawn[i][1], TiendaSpawn[i][2])) return TomarDinero(playerid);
		}
	}
	
 	if(newkeys & KEY_FIRE && newkeys & KEY_LOOK_BEHIND)
	{
		new vid = GetPlayerVehicleID(playerid);
		if(HELISAPD(vid) && FaccLegal(playerid) || SAPD(vid) && FaccLegal(playerid) || EDSA(vid) && FaccLegal(playerid))
		{
		    if(gettimeVariable > TiempoCompu[playerid])
			{
			    TiempoCompu[playerid] = gettimeVariable + 60;
				new count,string[250];
				format(string,sizeof(string),"%s inici� la b�squeda de sospechosos en la computadora de la patrulla.",NombreJugador(playerid));
				ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
				ReportCrimen(playerid,4);
		    	foreach(new i : Player)
			    {
			        if(EstaEnP(playerid,i,20.0) && PlayerInfo[i][pCargos] < 3 && !FaccLegal2(i))
		    	    {
						if(IsPlayerInAnyVehicle(i))
						{
							if(!MOTO(GetPlayerVehicleID(i)))
							{
								continue;
							}
						}

		        	    if((SiTieneArma(i,25) || SiTieneArma(i,27) || SiTieneArma(i,29) || SiTieneArma(i,30) || SiTieneArma(i,31) || SiTieneArma(i,33)))
		            	{
			                format(string, sizeof(string), "{3399FF}[Patrulla de %s]"CB" Resultado: Se detect� a %s armado, proceder con precauci�n.",NombreJugador(playerid),NombreJugador(i));
	                        SendRadioMessage(1,-1,string,INVALID_PLAYER_ID, 1);
		        	        DarEstrella(i,3);
		            		count ++;
			            }
			        }
		    	}
			    if(count == 0)
			    {
					format(string, sizeof(string), "{3399FF}[Patrulla de %s]"CB" Resultado: No se detectaron sospechosos.", NombreJugador(playerid));
	 				SendRadioMessage(1,-1,string,INVALID_PLAYER_ID, 1);
					return 1;
			    }
			}
			else return va_SendClientMessage(playerid,-1,"Por favor espera {FF3300}%d"CB" segundos.", TiempoCompu[playerid] - gettimeVariable);
		}
    }
	if(newkeys & KEY_YES) //mejora motor
	{
		if(estado == PLAYER_STATE_ONFOOT)
		{
			if(gettimeVariable > TiempoEntrarF[playerid]) EntrarF(playerid);
		}
		if(estado == PLAYER_STATE_DRIVER)
		{
			new autoid = GetPlayerVehicleID(playerid);
			for(new a = 0; a < MAX_PAUTOS; a++) 
			{
				if(autos[a][playerid] == autoid)
				{
					if(VehicleInfo[playerid][a][Aceleracion] == 1 && VehicleInfo[playerid][a][AceleracionActiva] == 0)
					{
						VehicleInfo[playerid][a][AceleracionActiva] = 1;
						Mensaje(playerid, -1, "La aceleraci�n ha sido activada, para desactivarla pulsa "CR"[Y]"CB".");
						TimerMejora[playerid] = SetTimerEx("MejoraMotor",500,1,"d",playerid);
					}
					else if(VehicleInfo[playerid][a][Aceleracion] == 1 && VehicleInfo[playerid][a][AceleracionActiva] == 1)
					{
						KillTimer(TimerMejora[playerid]);
						VehicleInfo[playerid][a][AceleracionActiva] = 0;
						Mensaje(playerid, -1, "La aceleraci�n ha sido desactivada, para activarla pulsa "CR"[Y]"CB".");
					}
					break;
				}
			}
		}
	}

    if(newkeys & KEY_YES)
	{
		if(gettimeVariable > TiempoConsumir[playerid])
		{
			if(PlayerTemp[playerid][TienePizza] != 0)
			{
				PlayerInfo[playerid][pHambre] -= 10;
				LoopingAnim(playerid, "FOOD", "EAT_Burger", 3.00, 0, 0, 0, 0, 0);
				if(SedOculta[playerid] == 1) BarraHambre(playerid, 1);
				PlayerTemp[playerid][TienePizza] -= 10;
				if(PlayerInfo[playerid][pHambre] <= 0)
				{
					ClearAnimations(playerid);
					PlayerTemp[playerid][TienePizza] = 0;
					PlayerInfo[playerid][pHambre] = 0;
					RemovePlayerAttachedObject(playerid, 4);
				}
			}
			else if(PlayerTemp[playerid][TieneAquari] != 0)
			{
				PlayerInfo[playerid][pSed] -= 10;
				LoopingAnim(playerid, "BAR", "dnk_stndM_loop", 3.00, 0, 0, 0, 0, 0);
	            if(SedOculta[playerid] == 1) BarraSed(playerid, 1);
				PlayerTemp[playerid][TieneAquari] -= 5;
				if(PlayerInfo[playerid][pSed] <= 0)
				{
					ClearAnimations(playerid);
					PlayerTemp[playerid][TieneAquari] = 0;
					PlayerInfo[playerid][pSed] = 0;
					RemovePlayerAttachedObject(playerid, 4);
				}
				TiempoConsumir[playerid] = gettimeVariable + 2;
			}
			else if(PlayerTemp[playerid][TieneSprunk] != 0)
			{
				PlayerInfo[playerid][pSed] -= 6;
				LoopingAnim(playerid, "BAR", "dnk_stndM_loop", 3.00, 0, 0, 0, 0, 0);
				if(SedOculta[playerid] == 1) BarraSed(playerid, 1);
				PlayerTemp[playerid][TieneSprunk] -= 3;
				if(PlayerInfo[playerid][pSed] <= 0)
				{
					ClearAnimations(playerid);
					PlayerTemp[playerid][TieneSprunk] = 0;
					PlayerInfo[playerid][pSed] = 0;
					RemovePlayerAttachedObject(playerid, 4);
				}
			}
			else if(PlayerTemp[playerid][TieneVino] != 0)
			{
				PlayerTemp[playerid][TieneVino] -= 10;
				PlayerInfo[playerid][pSed] -= 4;
				new borrachera = GetPlayerDrunkLevel(playerid);
				SetPlayerDrunkLevel(playerid, borrachera + 2000);
	            if(SedOculta[playerid] == 1) BarraSed(playerid, 1);
				if(GetPlayerDrunkLevel(playerid) > 15000) return Borracho(playerid);
				LoopingAnim(playerid, "BAR", "dnk_stndM_loop", 3.00, 0, 0, 0, 0, 0);
				if(PlayerTemp[playerid][TieneVino] <= 0)
				{
					ClearAnimations(playerid);
					PlayerTemp[playerid][TieneVino] = 0;
					RemovePlayerAttachedObject(playerid, 4);
				}
			}
			else if(PlayerTemp[playerid][TieneCerveza] != 0)
			{
				PlayerTemp[playerid][TieneCerveza] -= 15;
				PlayerInfo[playerid][pSed] -= 5;
				new borrachera = GetPlayerDrunkLevel(playerid);
				SetPlayerDrunkLevel(playerid, borrachera + 3500);
	            if(SedOculta[playerid] == 1) BarraSed(playerid, 1);
				if(GetPlayerDrunkLevel(playerid) > 15000) return Borracho(playerid);
				LoopingAnim(playerid, "BAR", "dnk_stndM_loop", 3.00, 0, 0, 0, 0, 0);
				if(PlayerTemp[playerid][TieneCerveza] <= 0)
				{
					ClearAnimations(playerid);
					PlayerTemp[playerid][TieneCerveza] = 0;
					RemovePlayerAttachedObject(playerid, 4);
				}
			}
			else if(PlayerTemp[playerid][TienePorro] != 0)
			{
				if(GetPlayerAnimationIndex(playerid) != 1189) return Mensaje(playerid,-1,"No puedes hacer eso en movimiento.");
				new Float:Chaleco, Float:Vida;
				PlayerTemp[playerid][TienePorro] -= 5;
				GetPlayerArmour(playerid, Chaleco);
				GetPlayerHealth(playerid, Vida);
				if(!IsPlayerInAnyVehicle(playerid)) LoopingAnim(playerid, "GANGS", "smkcig_prtl", 3.00, 0, 0, 0, 0, 0);
				if(Vida < 100) EstablecerVida(playerid, Vida+3.0);
				if(Vida > 100) EstablecerVida(playerid, 100.0);
				if(Vida > 99 && Chaleco < 100) EstablecerChaleco(playerid, Chaleco+3.0);
				if(Vida > 99 && Chaleco > 100) EstablecerChaleco(playerid, 100.0);
				if((Vida > 99 && Chaleco > 99) || PlayerTemp[playerid][TienePorro] <= 0) RemovePlayerAttachedObject(playerid, 4);
			}
			TiempoConsumir[playerid] = gettimeVariable + 2;
   		}
	}
	if(newkeys & KEY_SECONDARY_ATTACK && estado == PLAYER_STATE_ONFOOT)
	{
		MostrarRopero(playerid);
		if(PlayerTemp[playerid][TienePorro] > 0) RemovePlayerAttachedObject(playerid, 4),PlayerTemp[playerid][TienePorro] = 0;
	}
	if(newkeys & KEY_CTRL_BACK && estado == PLAYER_STATE_ONFOOT && EnLugarRobo(playerid)) return RobarObjeto(playerid);
	if(newkeys & KEY_YES && estado == PLAYER_STATE_ONFOOT)
	{
		if(EnMinero(playerid))
		{
			cmd_picar(playerid);
		}
		if(EstaEn(playerid, 5.0, 1802.0935,-1287.3749,13.6365))
		{
			MostrarDialog(playerid, municipalidad, DIALOG_STYLE_LIST, "�Qu� deseas realizar?", ""CB"Vender veh�culo\nVender propiedad\nServicio gr�a", "Continuar", "Cancelar");
		}

		if(EstaEn(playerid, 10.0, -548.2949,2336.7649,83.4777))
		{
			FuncDejarRoca(playerid);
		}
		if(EstaEn(playerid, 2.0, 690.9043,-1607.1835,14.5957))
		{
			DialogTiendaDP(playerid);
        }
		if(EstaEn(playerid,2.0,698.6148,-1607.6511,14.5957))
		{
			//prendas normales
			new prendas[] =
			{18897,
			18899,
			18913,
			18917,
			18918,
			18939,
			18942,
			18943,
			18961,
			18962,
			18964,
			18974,
			18971,
			18972,
			18979,
			18976,
			19033};
			ShowModelSelectionMenuEx(playerid, prendas, sizeof(prendas), "Prendas", COMPRAPRENDAS, 16.0, 0.0, -55.0);
			PrendaMarcada[playerid] = 0;
			TipoPrenda[playerid] = 1;
	  		return 1;
		}
		if(EstaEn(playerid,2.0,698.6511,-1604.8923,14.5957))
		{
			//prendas coins
			new prendas[] =
			{19086,
			18941,
			18956,
			19078,
			19096,
			19022,
			19025,
			19024,
			18910,
			19517,
			19077,
			18968,
			18967,
			19114,
			18963,
			19514,
			19036,
			19037,
			19038,
			11704,
			19137,
			19528,
			18911,
			18895,
			18896,
			18891,
			19558,
			19069,
			18893,
			19096,
			19085,
			19469,
			19067,
			19878,
			19873,
			19554,
			2114,
			19094,
			18643,
			1210,
			19317,
			18914,
			18915,
			18916,
			18920,
			19472,
			18953,
			18954,
			18955,
			18956,
			18957,
			18958,
			18959,
			18960,
			18940,
			18941,
			18944,
			18945,
			18946,
			18947,
			18948,
			18949,
			18950,
			18951,
			19064,
			19065,
			19066,
			18973,
			18891,
			18892,
			18893,
			18894,
			18895,
			18896,
			18898,
			18900,
			18901,
			18902,
			18903,
			18904,
			18905,
			18906,
			18907,
			18908,
			18909,
			18910,
			18967,
			18968,
			18969,
			18639,
			18926,
			18927,
			18928,
			18929,
			18930,
			18931,
			18932,
			18933,
			18934,
			18935,
			19095,
			19096,
			19097,
			19098,
			18970,
			18865,
			18866,
			18867,
			18868,
			18869,
			18870,
			18871,
			18872,
			18873,
			19039,
			19040,
			19041,
			19042,
			19043,
			19044,
			19045,
			19046,
			19047,
			19048,
			19049,
			19050,
			19051,
			19052,
			19053,
			18921,
			18922,
			18923,
			18924,
			18925,
			18640,
			18975,
			19136,
			19274,
			18641,
			18644,
			18874,
			18875,
			18890,
			18911,
			18912,
			18919,
			18920,
			18645,
			18977,
			18978,
			19101,
			19102,
			19103,
			19104,
			19105,
			19106,
			19107,
			19108,
			19109,
			19110,
			19111,
			19112,
			19113,
			19114,
			19115,
			19116,
			19117,
			19118,
			19119,
			19120,
			18936,
			18937,
			18938,
			18952,
			18965,
			18966,
			18638,
			19093,
			19160,
			19006,
			19007,
			19008,
			19009,
			19010,
			19011,
			19012,
			19013,
			19014,
			19015,
			19016,
			19017,
			19488,
			19487,
			19018,
			19019,
			19020,
			19021,
			19022,
			19023,
			19024,
			19025,
			19026,
			19027,
			19028,
			19029,
			19030,
			19031,
			19032,
			19034,
			19035,
			19036,
			19037,
			19038,
			19067,
			19068,
			19069,
			19078,
			19079,
			19085,
			19090,
			19091,
			19092,
			19094,
			19137,
			19163,
			19330,
			19331,
			19317,
			19318,
			19319,
			1210,
			3044,
			18632,
			18633,
			18634,
			18635,
			19421,
			19422,
			19423,
			19424,
			18691,
			18690,
			18688,
			19904,
			19515,
			19142,
			18646,
			2919,
			1608,
			1607,
			1242,
			3026,
			19314};
			ShowModelSelectionMenuEx(playerid, prendas, sizeof(prendas), "Prendas Coins", COMPRAPRENDAS, 16.0, 0.0, -55.0);
			PrendaMarcada[playerid] = 0;
			TipoPrenda[playerid] = 2;
	  		return 1;
		}
		if(EstaEn(playerid, 2.0, 685.2279,-1603.8337,14.5957)){
			if(PlayerInfo[playerid][jNivel] < 6) return Mensaje(playerid,-1,"Puedes crear bandas a partir de "CR"nivel 6"CB".");
			if(PlayerInfo[playerid][jMiembro] > 0) return Mensaje(playerid, -1, "No puedes crear bandas, tu ya eres integrante de una.");
			if(PlayerInfo[playerid][jDinero] < 550000) return Mensaje(playerid, -1, "No tienes suficiente dinero para crear una banda (550,000).");
			MostrarDialog(playerid, BANDATIPO, DIALOG_STYLE_LIST,"Selecciona un tipo de banda",""CB"Mafia\n"CB"Pandilla\n"CB"Organizaci�n","Aceptar","Salir");
		}
		
		if(EnVerMapa(playerid)) return MostrarDialog(playerid, GPS, DIALOG_STYLE_LIST, "Puntos de inter�s", "Concesionarias\nBancos\n24/7\nTrabajos\nEdificios del gobierno\nTiendas de ropa", "Siguiente", "Cancelar");
	    if(EnCajero(playerid)) return MostrarDialog(playerid, BANCO, DIALOG_STYLE_LIST, ""CB"Selecciona la operaci�n que desees realizar", "Retirar\nDepositar\nConsultar saldo \nTransferir dinero", "Seleccionar", "Cancelar");
		if(EstaEn(playerid, 2.5, -28.0060,-89.9514,1003.5469))
		{
			MostrarDialog(playerid, PRODUCTOS, DIALOG_STYLE_LIST, ""CR"Productos y servicios (24/7).", "Tel�fono m�vil ($1500)\nGu�a telef�nica ($35)\nTraba de seguridad para veh�culos\nAlarma para veh�culos.\nRadio comunicador ($2000)\nGPS ($800)\nBebida para guardar en heladera: Cerveza x6 unidades ($470)\nBebida para guardar en heladera: Vino x6 unidades ($590)\nBebida para guardar en heladera: Sprunk x4 unidades ($200)\nBebida: Sprunk ($65)", "Comprar", "Salir");
		}
		if(EstaEn(playerid, 2.5, -784.2098,500.1945,1371.7422) && TieneConsumible(playerid))
		{
			MostrarDialog(playerid, PRODUCTOS2, DIALOG_STYLE_TABLIST_HEADERS, ""CR"Lista de productos", "Producto\tPrecio\nCerveza\t"CR"$80"CB"\nVino\t"CR"$100"CB"\nVaso de sprunk\t"CR"$60"CB"\nAquarius\t"CR"$160"CB"\nPorci�n de pizza\t"CR"$70"CB"", "Comprar", "Salir");
		}
		if(EstaEn(playerid, 2.5, 373.7276,-118.8039,1001.4922) && TieneConsumible(playerid))
		{
			MostrarDialog(playerid, DIALOG_PIZZA, DIALOG_STYLE_TABLIST_HEADERS, ""CR"Lista de productos", "Producto\tPrecio\nPorci�n de pizza\t"CR"$40"CB"\nPizza completa {232621}- (Para llevar)\t"CR"$300"CB"\nSprunk\t"CR"$70"CB"\nAquarius\t"CR"$170"CB"", "Comprar", "Salir");
		}
		if(EstaEn(playerid, 2.5, -1262.6428,2119.9490,1246.5457) || EstaEn(playerid, 7.0, 618.8964,-556.0715,16.3050) || EstaEn(playerid, 2.5, -1396.3044,-320.4939,1052.0834) || EstaEn(playerid, 2.5, 969.3787,-45.0186,1001.1172) || EstaEn(playerid, 2.5,499.6766,-76.0245,998.7578) || EstaEn(playerid, 2.5,-225.1540,1404.1327,27.7734))
		{
			if(TieneConsumible(playerid)) MostrarDialog(playerid, DIALOG_SALON, DIALOG_STYLE_TABLIST_HEADERS, ""CR"Lista de productos", "Producto\tPrecio\nVino\t"CR"$110"CB"\nCerveza\t"CR"$80"CB"\nVaso de sprunk\t"CR"$70"CB"\nAquarius\t"CR"$170"CB"\nPorci�n de pizza\t"CR"$100"CB"", "Comprar", "Salir");
		}
		if(EstaEn(playerid, 2.5,1214.8663,-13.3527,1000.9219) && GetPlayerVirtualWorld(playerid) == 5 && TieneConsumible(playerid))
	 	{
	 		MostrarDialog(playerid, DIALOG_SALON, DIALOG_STYLE_TABLIST_HEADERS, ""CR"Lista de productos", "Producto\tPrecio\nVino\t"CR"$110"CB"\nCerveza\t"CR"$80"CB"\nVaso de sprunk\t"CR"$70"CB"\nAquarius\t"CR"$170"CB"\nPorci�n de pizza\t"CR"$100"CB"", "Comprar", "Salir");
 		}
		
		if(EstaEn(playerid, 3.6,1219.3627,-7.0459,1001.3281) && Bailarina[0] == 0 && GetPlayerVirtualWorld(playerid) == 5) return DarAfinidad(playerid, 0);
		if(EstaEn(playerid, 2.5,1214.0870,-4.2850,1001.3281) && Bailarina[1] == 0 && GetPlayerVirtualWorld(playerid) == 5) return DarAfinidad(playerid, 1);
		if(EstaEn(playerid, 2.0,1202.8500,9.1434,1000.9219)  && Bailarina[2] == 0 && GetPlayerVirtualWorld(playerid) == 5) return DarAfinidad(playerid, 2);
		if(EstaEn(playerid, 2.5,1220.9673,8.2033,1001.3356)  && Bailarina[3] == 0 && GetPlayerVirtualWorld(playerid) == 5) return DarAfinidad(playerid, 3);
		if(EstaEn(playerid, 2.5,1208.4001,-6.2825,1001.3281) && Bailarina[4] == 0 && GetPlayerVirtualWorld(playerid) == 5) return DarAfinidad(playerid, 4);
		if(EstaEn(playerid, 2.5,1202.9122,-8.3771,1002.0255) && Bailarina[5] == 0 && GetPlayerVirtualWorld(playerid) == 5) return DarAfinidad(playerid, 5);
		if(EstaEn(playerid, 5.0, 1177.6499,-1361.4723,14.2290)) return DarTrabajo(playerid, MEDICO);
		if(EstaEn(playerid, 5.0, 2789.3672,-2574.6675,3.1683)) return DarTrabajo(playerid, PESCADOR);
		if(EstaEn(playerid, 5.0, -382.5980,2199.3918,25.4105)) return DarTrabajo(playerid, MINERO);
		if(EstaEn(playerid, 2.0, 2122.9236,-2275.1238,20.6719)) return DarTrabajo(playerid, ARMERO);
		if(EstaEn(playerid, 5.0, -1715.4917,-65.0561,3.6473)) return DarTrabajo(playerid, CAMIONERO);
		if(EstaEn(playerid, 2.0, 2227.6040,-1714.0569,13.5551)) return DarTrabajo(playerid, GUARDAESPALDAS);
		if(EstaEn(playerid, 2.0, 2583.8274,1644.3837,1087.5602) && GetPlayerInterior(playerid) == 1) return DarTrabajo(playerid, TRANSPORTISTA);
		if(EstaEn(playerid, 2.0,-177.6093,-1549.4420,6.3284)) return DarTrabajo(playerid, BASURERO);
		if(EstaEn(playerid, 2.0,114.7220,-151.4292,1.5781)) return DarTrabajo(playerid, MECANICO);
		if(EstaEn(playerid, 2.0,-2024.7489,-113.9102,1038.8187)) return DarTrabajo(playerid, TAXISTA);
		if(EstaEn(playerid, 2.0,-2181.3860,714.7617,53.8915)) return DarTrabajo(playerid, CRIMINAL);
		if(EstaEn(playerid, 2.0,958.2476,-54.3639,1001.1172)) return DarTrabajo(playerid, PROSTITUTA);
	    if(EnBotiquin(playerid)) MostrarBotiquin(playerid);
        foreach(new f : Fabricas)
		{
		    if(EstaEn(playerid,0.6,-2022.8929, 253.0043, 1036.1030))
			{
			    if(PlayerInfo[playerid][jMiembro] == Fabricas[f][pBanda])
			    {
			        if(PlayerInfo[playerid][pRango] >= 7)
			        {
			            if(GetPlayerInterior(playerid) != Fabricas[f][pInt] && GetPlayerVirtualWorld(playerid) != Fabricas[f][pVW]) return 1;
			            if(PuertaAbiertaFabrica[f] == 0)
			    		{
			    	    	PuertaAbiertaFabrica[f] = 1;
			    	    	LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
	                    	MoveDynamicObjectEx(Fabricas[f][pPuerta],-2022.93274, 255.60370, 1036.06921, 0.8);
			    		}
			    		else
			    		{
			    	    	PuertaAbiertaFabrica[f] = 0;
			    	    	LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			            	MoveDynamicObjectEx(Fabricas[f][pPuerta],-2022.93274, 254.14169, 1036.06921, 0.7);
			    		}
			        }
					break;
			    }
			}
			if(EstaEn(playerid, 1.5, -2019.9447,243.5474,1035.8162))
			{
			    if(Fabricas[f][pBanda] == PlayerInfo[playerid][jMiembro])
			    {
					if(gettimeVariable > TiempoArmas[playerid])
					{
						new arma = GetPlayerWeapon(playerid);
				        if(arma == 32 || arma == 26 || arma == 34 || arma == 28)
						{
						    if(arma == 34 && Fabricas[f][pSniper] > 9) return Mensaje(playerid,-1,"El estante se encuentra lleno.");
						    if(arma == 26 && Fabricas[f][pRecortada] > 9) return Mensaje(playerid,-1,"El estante no puede contener m�s de este tipo de arma.");
						    if(arma == 28 && Fabricas[f][pUzi] > 9) return Mensaje(playerid,-1,"El estante no puede contener m�s de este tipo de arma.");
	                        if(arma == 32 && Fabricas[f][pTec9] > 9) return Mensaje(playerid,-1,"El estante se encuentra lleno.");
							Mensaje(playerid,-1,""CR"Guardaste un arma"CB" en el dep�sito de la f�brica.");
						    switch(arma)
						    {
						        case 26: { Fabricas[f][pRecortada] ++; ActualizarRecortadas(f,1); }
						        case 28: { Fabricas[f][pUzi] ++; ActualizarUzi(f,1); }
						        case 32: { Fabricas[f][pTec9] ++; ActualizarTec(f,1);}
						        case 34: { Fabricas[f][pSniper] ++; ActualizarSnipers(f,1); }
	                    	}
	                    	QuitarArma(playerid, arma);
	                    	ActualizarLabelArmas(f);
	                    	GuardarFabrica(f);
							TiempoArmas[playerid] = gettimeVariable + 5;
						}
					}
					break;
				}
			}
			if(EnOllaFabrica(playerid) > 0)
			{
			    if(PlayerInfo[playerid][jMiembro] == Fabricas[f][pBanda])
			    {
			        if(GetPlayerInterior(playerid) != Fabricas[f][pInt] && GetPlayerVirtualWorld(playerid) != Fabricas[f][pVW]) return 0;
			        if(gettimeVariable < HornoUsarP[playerid]) return 1;
					new asd = EnOllaFabrica(playerid)-1;
			        switch(HornoEncendido[asd][f])
					{
					    case 0:
						{
							if(asd == 0)
							{
						    	if(Fabricas[f][pTanque][0] == 0 && Fabricas[f][pTanque][1] == 0 && Fabricas[f][pTanque][2] == 0) return Mensaje(playerid,-1,"No hay qu�micos en los tanques para procesar.");
						    	Fabricas[f][humo][0] = CreateDynamicObject(18725, -1992.2786, 194.1294, 1035.4269-1.3, 0.00000, 0.00000, 16.73000, Fabricas[f][pVW],Fabricas[f][pInt]);
		    				}
							else if(asd == 1)
							{
						        if(Fabricas[f][pTanque][3] == 0 && Fabricas[f][pTanque][4] == 0 && Fabricas[f][pTanque][5] == 0) return Mensaje(playerid,-1,"No hay qu�micos en los tanques para procesar.");
						        Fabricas[f][humo][1] = CreateDynamicObject(18725, -1995.6786, 194.1294, 1035.4269-1.3, 0.00000, 0.00000, 16.73000, Fabricas[f][pVW],Fabricas[f][pInt]);
							}
							else if(asd == 2)
							{
						        if(Fabricas[f][pTanque][6] == 0 && Fabricas[f][pTanque][7] == 0 && Fabricas[f][pTanque][8] == 0) return Mensaje(playerid,-1,"No hay qu�micos en los tanques para procesar.");
						        Fabricas[f][humo][2] = CreateDynamicObject(18725, -1999.1986, 194.1294, 1035.4269-1.3,   0.00000, 0.00000, 16.73000, Fabricas[f][pVW],Fabricas[f][pInt]);
							}
							else return 1;
						    AccionesRol(playerid, "encendi� una cocina de metanfetamina.", 20);
						    ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);
					        HornoEncendido[asd][f] = 1;
						    new string[256];
					        format(string,sizeof(string),""CR"Cocina: #%d"CB"\nProducci�n: {3d83ce}%d%%"CB" completada.\nEstado: %s"CB"\n\n%s"CB"%s",asd+1,Fabricas[f][Porcentaje][asd],EstadoH(HornoEncendido[asd][f]),EstadoHo(HornoEncendido[asd][f]),EstadoCristal(Fabricas[f][Crisol][asd]));
					        UpdateDynamic3DTextLabelText(Fabricas[f][olla][asd], COLOR_BLANCO, string);
					        HornoUsarP[playerid] = gettimeVariable + 3;
							return 1;
					    }
					    case 1:
					    {
							if(Fabricas[f][humo][asd] != INVALID_STREAMER_ID) DestroyDynamicObjectEx(Fabricas[f][humo][asd]);
					        new string[256];
					        AccionesRol(playerid, "apag� una cocina de metanfetamina.", 20);
					        ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);
					        HornoEncendido[asd][f] = 0;
					        format(string,sizeof(string),""CR"Cocina: #%d"CB"\nProducci�n: {3d83ce}%d%%"CB" completada.\nEstado: %s"CB"\n\n%s"CB"%s",asd+1,Fabricas[f][Porcentaje][asd],EstadoH(HornoEncendido[asd][f]),EstadoHo(HornoEncendido[asd][f]),EstadoCristal(Fabricas[f][Crisol][asd]));
							UpdateDynamic3DTextLabelText(Fabricas[f][olla][asd], COLOR_BLANCO, string);
					        HornoUsarP[playerid] = gettimeVariable + 3;
							return 1;
						}
					}
					break;
			    }
			}
  		}
    }
	if(newkeys & KEY_HANDBRAKE)
	{
	    if(GetPlayerWeapon(playerid) == 4 && estado == PLAYER_STATE_ONFOOT) SetPlayerArmedWeapon(playerid, 0),ClearAnimations(playerid);
	}
	if(newkeys == KEY_LOOK_BEHIND)
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	    if(!IsPlayerNPC(playerid))
		{
		    if(IsPlayerInAnyVehicle(playerid))
		    {
			    if(estado == PLAYER_STATE_PASSENGER && TimerCambio[playerid] < gettimeVariable)
				{
					new wd[13][2], w = pweapon[playerid], s = GetWeaponSlot(w), acceptedSlots[] = {2,3,4,5,6}, first = acceptedSlots[0], last = acceptedSlots[sizeof(acceptedSlots)-1];
					if(isAcceptedDBWeapon(w))
					{
						for(new i = 0; i < 13; i++) GetPlayerWeaponData(playerid,i,wd[i][0],wd[i][1]);
      					new found = w;
           				for(new i = s + 1; i <= last && found == w; i++) if(isAcceptedDBWeapon(wd[i][0])) found = wd[i][0];
			            if(found == w) for(new i = first; i < s && found == w; i++) if(isAcceptedDBWeapon(wd[i][0])) found = wd[i][0];
			            if(found != w)
		        		{
            				SetPlayerArmedWeapon(playerid,found);
			            	pweapon[playerid] = found;
							TimerCambio[playerid] = gettimeVariable + 1;
						}
					}
				}
			    if(estado == PLAYER_STATE_DRIVER)
			    {
				    if(gettimeVariable > TiempoMotor[playerid])
					{
						if(VehiculosInfo[vehicleid][vcomprable] != 1)
						{
							if(!BICI(vehicleid))
							{
							    if(MotorAuto[vehicleid] == 0)
								{
									if(EnTuning[playerid]) return 1;
									Mensaje(playerid, COLOR_BLANCO, "Arrancando veh�culo...");
									SetTimerEx("EncenderMotor",1200, false, "d",playerid);
									TiempoMotor[playerid] = gettimeVariable + 1;
									return 1;
								}
								else return ApagarMotorKey(playerid);
							}
						}
					}
				}
			}
		}
	}
	if(newkeys & KEY_YES && GetPlayerVirtualWorld(playerid) == 4 && GetPlayerInterior(playerid) == 100)
	{
	    new Float:Pos[3];
	    GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
	    if((Pos[0] >= 2117.8962-3 && Pos[0] <= 2117.8962+3) && (Pos[1] >= 2415.0774-3 && Pos[1] <= 2415.0774+3))
	 	{
	        new string[250];
	        format(string,sizeof(string),"{8baab7}");
	        for(new p = 1; p < 11; p++)
	        {
	            if(ObtenerNivelEsta(Pos[2]) == p) format(string,sizeof(string),"%s"CB"Nivel %d\n",string,p);
	        	else format(string,sizeof(string),"%s{8baab7}Nivel %d\n",string,p);
	        }
	        MostrarDialog(playerid,ASCENSOR_E,DIALOG_STYLE_LIST,"Elevador",string,"Aceptar","Cancelar");
	    }
	}
	if(newkeys & KEY_NO)
	{
	    if(PlayerInfo[playerid][VIP] > 0 && PlayerInfo[playerid][pGPS] == 1 && ViendoGPS[playerid] == 0) return AbrirGPS(playerid);
		else if(PlayerInfo[playerid][VIP] > 0 && PlayerInfo[playerid][pGPS] == 1 && ViendoGPS[playerid] == 1) return CerrarGPS(playerid);
	}
	// Boton puertas 'y'
	if(newkeys & KEY_YES)
	{
		new accesoa=0;
	    if(Alquilado == true && strcmp(NombreJugador(playerid),Alquilador,true) != 0 && PermisoSalon[playerid] == false)
	    {
	        if(FaccLegal2(playerid) && !FaccLegal(playerid) && PermisoSalon[playerid] == false) return 1;
	    }
		if(EstaEn(playerid,1,386.7000, 174.4800, 1040.5500))
		{
 			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			if(Emisoras[playerid][TieneEmisora] == 1) accesoa=1;
			if(PlayerInfo[playerid][pAdmin] > ADMIN_LVL_JUEGO1) accesoa=1;
			if(FaccLegal(playerid)) accesoa=1;
			if(accesoa == 0) return 1;
			if(YaEstaAbierta[0] == 0)
			{
				YaEstaAbierta[0] = 1;
				return MoveDynamicObjectEx(PuertasDeBotones[2],390.000000, 174.539993, 1039.109985, 3.0);
			}
			else
			{
				YaEstaAbierta[0] = 0;
				return MoveDynamicObjectEx(PuertasDeBotones[2],388.7088, 174.3999, 1039.1100, 3.0);
			}
		}
	    if(EstaEn(playerid,1,209.0449, 177.1701, 1003.5126))
		{
 			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			if(FaccLegal(playerid))
			{
			    if(YaEstaAbierta[12] == 0)
				{
					YaEstaAbierta[12] = 1;
					return MoveDynamicObjectEx(PuertasLVPD[1],208.9700, 179.9100, 1003.2800,3);
				}
				else
				{
				    YaEstaAbierta[12] = 0;
					return MoveDynamicObjectEx(PuertasLVPD[1],208.9700, 178.2600, 1003.2800,3);
				}
			}
		}
	    if(EstaEn(playerid,1,209.1364, 160.2765, 1003.5126))
		{
 			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			if(FaccLegal(playerid))
			{
			    if(YaEstaAbierta[13] == 0)
				{
					YaEstaAbierta[13] = 1;
					return MoveDynamicObjectEx(PuertasLVPD[2],209.0100, 157.4540, 1003.2800,3);
				}
				else
				{
				    YaEstaAbierta[13] = 0;
					return MoveDynamicObjectEx(PuertasLVPD[2],209.0100, 159.1100, 1003.2800,3);
				}
			}
		}
	    if(EstaEn(playerid,1,223.1140, 1429.5740, 1091.4900))
		{
 			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			if(FaccLegal(playerid))
			{
			    if(YaEstaAbierta[7] == 0)
				{
					YaEstaAbierta[7] = 1;
					return MoveDynamicObjectEx(PuertasFC[1],220.6440, 1429.5300, 1091.4500,3);
				}
				else
				{
				    YaEstaAbierta[7] = 0;
					return MoveDynamicObjectEx(PuertasFC[1],222.24001, 1429.53003, 1091.44995,3);
				}
			}
		}
	    if(EstaEn(playerid,1,211.4600, 1442.8979, 1091.4900))
		{
 			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			if(FaccLegal(playerid))
			{
			    if(YaEstaAbierta[8] == 0)
				{
					YaEstaAbierta[8] = 1;
					return MoveDynamicObjectEx(PuertasFC[2],208.9680, 1442.9100, 1091.4399,3);
				}
				else
				{
				    YaEstaAbierta[8] = 0;
					return MoveDynamicObjectEx(PuertasFC[2],210.33000, 1442.91003, 1091.43994,3);
				}
			}
		}
	    if(EstaEn(playerid,1,206.8940, 1442.9100, 1085.2300))
		{
 			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			if(FaccLegal(playerid))
			{
			    if(YaEstaAbierta[9] == 0)
				{
					YaEstaAbierta[9] = 1;
					return MoveDynamicObjectEx(PuertasFC[3],206.6800, 1440.3900, 1085.0900,3);
				}
				else
				{
				    YaEstaAbierta[9] = 0;
					return MoveDynamicObjectEx(PuertasFC[3],206.67999, 1441.97998, 1085.08997,3);
				}
			}
		}
  		if(EstaEn(playerid,1,201.4500, 1447.4900, 1085.2100))
		{
 			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			if(FaccLegal(playerid))
			{
			    if(YaEstaAbierta[10] == 0)
				{
					YaEstaAbierta[10] = 1;
					return MoveDynamicObjectEx(PuertasFC[4],201.3900, 1448.9821, 1083.8400,3);
				}
				else
				{
				    YaEstaAbierta[10] = 0;
					return MoveDynamicObjectEx(PuertasFC[4],201.39000, 1447.70996, 1083.83997,3);
				}
			}
		}
  		if(EstaEn(playerid,1,170.3860, 1450.8101, 1085.2100))
		{
 			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			if(FaccLegal(playerid))
			{
			    if(YaEstaAbierta[11] == 0)
				{
					YaEstaAbierta[11] = 1;
					return MoveDynamicObjectEx(PuertasFC[5],170.3500, 1449.9479, 1085.0900,3);
				}
				else
				{
				    YaEstaAbierta[11] = 0;
					return MoveDynamicObjectEx(PuertasFC[5],170.35001, 1448.48999, 1085.08997,3);
				}
			}
		}
	    if(EstaEn(playerid,1,639.9840, -187.0800, 1277.1400))
		{
 			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			if(FaccLegal(playerid) && PlayerInfo[playerid][pRango] >= 4)
			{
			    if(YaEstaAbierta[14] == 0)
				{
					YaEstaAbierta[14] = 1;
					return MoveDynamicObjectEx(PuertasACA[1],636.8300, -187.1200, 1275.8000,3);
				}
				else
				{
				    YaEstaAbierta[14] = 0;
					return MoveDynamicObjectEx(PuertasACA[1],638.090027, -187.119995, 1275.800049,3);
				}
			}
		}
	    if(EstaEn(playerid,1,643.1800, -210.3840, 1277.1400))
		{
 			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			if(FaccLegal(playerid) && PlayerInfo[playerid][pRango] >= 4)
			{
			    if(YaEstaAbierta[15] == 0)
				{
					YaEstaAbierta[15] = 1;
					return MoveDynamicObjectEx(PuertasACA[2],646.3500, -210.2300, 1275.8000,3);
				}
				else
				{
				    YaEstaAbierta[15] = 0;
					return MoveDynamicObjectEx(PuertasACA[2],645.059998, -210.229996, 1275.800049,3);
				}
			}
		}
	    if(EstaEn(playerid,1,645.2700, -217.0220, 1277.1400))
		{
 			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			if(FaccLegal(playerid) && PlayerInfo[playerid][pRango] >= 4)
			{
			    if(YaEstaAbierta[16] == 0)
				{
					YaEstaAbierta[16] = 1;
					return MoveDynamicObjectEx(PuertasACA[3],646.3920, -217.0800, 1275.7600,3);
				}
				else
				{
				    YaEstaAbierta[16] = 0;
					return MoveDynamicObjectEx(PuertasACA[3],645.114014, -217.080002, 1275.760010,3);
				}
			}
		}
	    if(EstaEn(playerid,1,642.7260, -224.4200, 1277.1400))
		{
 			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			if(FaccLegal(playerid) && PlayerInfo[playerid][pRango] >= 4)
			{
			    if(YaEstaAbierta[17] == 0)
				{
					YaEstaAbierta[17] = 1;
					return MoveDynamicObjectEx(PuertasACA[4],642.7700, -227.3580, 1275.7600,3);
				}
				else
				{
				    YaEstaAbierta[17] = 0;
					return MoveDynamicObjectEx(PuertasACA[4],642.770020, -226.110001, 1275.760010,3);
				}
			}
		}
	    if(EstaEn(playerid,1,642.6900, -237.2600, 1277.1400))
		{
 			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			if(FaccLegal(playerid) && PlayerInfo[playerid][pRango] >= 4)
			{
			    if(YaEstaAbierta[18] == 0)
				{
					YaEstaAbierta[18] = 1;
					return MoveDynamicObjectEx(PuertasACA[5],642.7500, -236.2000, 1275.7600,3);
				}
				else
				{
				    YaEstaAbierta[18] = 0;
					return MoveDynamicObjectEx(PuertasACA[5],642.750000, -237.466003, 1275.760010,3);
				}
			}
		}
	    if(EstaEn(playerid,1,645.1000, -239.8460, 1277.1400))
		{
			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			if(FaccLegal(playerid) && PlayerInfo[playerid][pRango] >= 4)
			{
			    if(YaEstaAbierta[19] == 0)
				{
					YaEstaAbierta[19] = 1;
					return MoveDynamicObjectEx(PuertasACA[6],643.9860, -239.7800, 1275.7600,3);
				}
				else
				{
				    YaEstaAbierta[19] = 0;
					return MoveDynamicObjectEx(PuertasACA[6],645.270020, -239.779999, 1275.760010,3);
				}
			}
		}
	    if(EstaEn(playerid,1,1582.40552, -1637.85229, 13.70560))
		{
 			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			if(FaccLegal(playerid))
			{
			    if(YaEstaAbierta[20] == 0)
				{
					YaEstaAbierta[20] = 1;
					return MoveDynamicObjectEx(puerta_1,1581.2899, -1638.0200, 12.4100,3);
				}
				else
				{
				    YaEstaAbierta[20] = 0;
					return MoveDynamicObjectEx(puerta_1,1582.63, -1638.02, 12.41,3);
				}
			}
		}
	    if(EstaEn(playerid,1,1582.40283, -1638.34985, 13.70560))
		{
 			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			if(FaccLegal(playerid))
			{
			    if(YaEstaAbierta[21] == 0)
				{
					YaEstaAbierta[21] = 1;
					return MoveDynamicObjectEx(puerta_1,1581.2899, -1638.0200, 12.4100,3);
				}
				else
				{
				    YaEstaAbierta[21] = 0;
					return MoveDynamicObjectEx(puerta_1,1582.63, -1638.02, 12.41,3);
				}
			}
		}
	    if(EstaEn(playerid,1,216.32980, 116.65350, 999.39240))
		{
 			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			if(FaccLegal(playerid))
			{
			    if(YaEstaAbierta[22] == 0)
				{
					YaEstaAbierta[22] = 1;
					MoveDynamicObjectEx(puerta_2,215.5482, 116.5364, 998.0455,3);
					MoveDynamicObjectEx(puerta_3,220.1184, 116.5364, 998.0455,3);
					return 1;
				}
				else
				{
				    YaEstaAbierta[22] = 0;
					MoveDynamicObjectEx(puerta_2,216.32820, 116.53640, 998.04547,3);
					MoveDynamicObjectEx(puerta_3,219.33839, 116.53640, 998.04547,3);
					return 1;
				}
			}
		}
	    if(EstaEn(playerid,1,216.28259, 116.40660, 999.39240))
		{
 			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			if(FaccLegal(playerid))
			{
			    if(YaEstaAbierta[23] == 0)
				{
					YaEstaAbierta[23] = 1;
					MoveDynamicObjectEx(puerta_2,215.5482, 116.5364, 998.0455,3);
					MoveDynamicObjectEx(puerta_3,220.1184, 116.5364, 998.0455,3);
					return 1;
				}
				else
				{
				    YaEstaAbierta[23] = 0;
					MoveDynamicObjectEx(puerta_2,216.32820, 116.53640, 998.04547,3);
					MoveDynamicObjectEx(puerta_3,219.33839, 116.53640, 998.04547,3);
					return 1;
				}
			}
		}
	    if(EstaEn(playerid,1,-1436.9063, -558.2451, 1061.5329)) //Elevador SF
	    {
 			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			return MostrarDialog(playerid, ELEVADOR31, DIALOG_STYLE_LIST, "Elevador", "Estacionamiento", "Aceptar", "Cancelar"); //ELEVADOR SF
	    }
	    if(EstaEn(playerid,1,-1382.6533, 918.1104, 1044.2138)) //Elevador LS
	    {
 			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			return MostrarDialog(playerid, ELEVADOR32, DIALOG_STYLE_LIST, "Elevador", "Estacionamiento", "Aceptar", "Cancelar"); //ELEVADOR LS
	    }
	    if(EstaEn(playerid,1,-1619.0293, 688.2190, 7.6409)) //SFPD PUERTA
	    {
 			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			if(FaccLegal(playerid))
			{
			    if(YaEstaAbierta[6] == 0)
				{
					YaEstaAbierta[6] = 1;
			        MoveDynamicObjectEx(PuertasDePD[2],-1622.9659, 688.4193, 6.1787, 3.0);
	    		    MoveDynamicObjectEx(PuertasDePD[3],-1618.0237, 688.4495, 6.1787, 3.0);
	    		    return 1;
	    	    }
				else
				{
				    YaEstaAbierta[6] = 0;
					MoveDynamicObjectEx(PuertasDePD[2],-1622.00586, 688.41931, 6.17870,3);
					MoveDynamicObjectEx(PuertasDePD[3],-1619.00366, 688.44952, 6.17870,3);
					return 1;
	    	    }
			}
			else return 1;
	    }
	    if(EstaEn(playerid,1,2266.11255, 2449.63452, 4.06360)) //LVPD PUERTA
	    {
 			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			if(FaccLegal(playerid))
			{
			    if(YaEstaAbierta[5] == 0)
				{
					YaEstaAbierta[5] = 1;
					return MoveDynamicObjectEx(PuertasDePD[1],2293.9634, 2491.6058, 2.2621, 3.0);
				}
				else
				{
					YaEstaAbierta[5] = 0;
					return MoveDynamicObjectEx(PuertasDePD[1],2293.96338, 2492.90576, 2.26210,3);
				}
			}
			else return 1;
	    }
	    if(EstaEn(playerid,1,2266.11255, 2449.63452, 4.06360)) //LVPD GARAGE
	    {
 			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			if(FaccLegal(playerid)) return MostrarDialog(playerid, ELEVADOR6, DIALOG_STYLE_LIST, "Elevador", "Interior", "Aceptar", "Cancelar");
	    }
	    if(EstaEn(playerid,1,217.33310, 181.14799, 1003.53668)) //LVPD
	    {
 			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			if(FaccLegal(playerid)) return  MostrarDialog(playerid, ELEVADOR5, DIALOG_STYLE_LIST, "Elevador", "Estacionamiento", "Aceptar", "Cancelar");
	    }
	    if(EstaEn(playerid,1,264.63760, 115.69710, 1004.76312)) //LSPD
	    {
 			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
		    if(GetPlayerVirtualWorld(playerid) == 1)
			{
				if(FaccLegal(playerid)) return MostrarDialog(playerid, ELEVADOR1, DIALOG_STYLE_LIST, "Elevador", "Estacionamiento", "Aceptar", "Cancelar");
			}
		    else if(GetPlayerVirtualWorld(playerid) == 5)
			{
				if(FaccLegal(playerid)) return MostrarDialog(playerid, ELEVADOR2, DIALOG_STYLE_LIST, "Elevador", "Estacionamiento", "Aceptar", "Cancelar");
			}
			else return 1;
	    }
	    if(EstaEn(playerid,1,2294.2334, 2492.7332, 3.6138))
		{
			if(FaccLegal(playerid))
			{
			    if(YaEstaAbierta[5] == 0)
				{
		 			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
					YaEstaAbierta[5] = 1;
					return MoveDynamicObjectEx(PuertasDePD[1],2293.9634, 2491.6058, 2.2621, 3.0);
				}
				else
				{
		 			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
					YaEstaAbierta[5] = 0;
					return MoveDynamicObjectEx(PuertasDePD[1],2293.96338, 2492.90576, 2.26210,3);
				}
			}
			else return 1;
		}
	    if(EstaEn(playerid,1,-1604.79480, 671.68701, -4.53520)) //SFPD GARAGE
		{
  			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			if(FaccLegal(playerid)) return MostrarDialog(playerid, ELEVADOR4, DIALOG_STYLE_LIST, "Elevador", "Interior", "Aceptar", "Cancelar");
		}
	    if(EstaEn(playerid,1,1524.08984, -1679.35559, 6.42590)) //LSPD GARAGE
		{
  			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			if(FaccLegal(playerid)) return MostrarDialog(playerid, ELEVADOR3, DIALOG_STYLE_LIST, "Elevador", "Interior", "Aceptar", "Cancelar");
		}
	    if(EstaEn(playerid,1,-1262.0741, 2096.7573, 1246.8900)) //Salon
		{
  			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
	    	if(GetPlayerVirtualWorld(playerid) == 1 && GetPlayerInterior(playerid) == 13) return MostrarDialog(playerid, ELEVADOR9, DIALOG_STYLE_LIST, "Elevador", "Estacionamiento", "Aceptar", "Cancelar");
		}
	    if(EstaEn(playerid,1,349.0600, 178.2900, 1040.4500)) //Sala 1
	    {
			if(CabinasOcupadasEmisoras[1][0] == 1)
			{
				if(CabinasOcupadasEmisoras[1][1] == playerid) accesoa=1;
			}
			if(CabinasOcupadasEmisoras[1][0] == 0 && Emisoras[playerid][TieneEmisora] == 1) accesoa=1;
			if(PlayerInfo[playerid][pAdmin] > ADMIN_LVL_JUEGO1) accesoa=1;
			if(FaccLegal(playerid)) accesoa=1;
			if(accesoa == 0) return 1;
   			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			if(YaEstaAbierta[1] == 0)
			{
				YaEstaAbierta[1] = 1;
				return MoveDynamicObjectEx(PuertasDeBotones[4],349.2600, 177.4100, 1039.1100, 3.0);
			}
			else
			{
				YaEstaAbierta[1] = 0;
				return MoveDynamicObjectEx(PuertasDeBotones[4],349.260010, 178.690002, 1039.109985, 3.0);
			}
	    }
	    if(EstaEn(playerid,1,349.0272, 160.3499, 1040.4500)) //Sala 2
		{
			if(CabinasOcupadasEmisoras[2][0] == 1)
			{
				if(CabinasOcupadasEmisoras[2][1] == playerid) accesoa=1;
			}
			if(CabinasOcupadasEmisoras[2][0] == 0 && Emisoras[playerid][TieneEmisora] == 1) accesoa=1;
			if(PlayerInfo[playerid][pAdmin] > ADMIN_LVL_JUEGO1) accesoa=1;
			if(FaccLegal(playerid)) accesoa=1;
			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			if(accesoa == 0) return 1;
			if(YaEstaAbierta[2] == 0)
			{
				YaEstaAbierta[2] = 1;
				return MoveDynamicObjectEx(PuertasDeBotones[6],349.2600, 159.4300, 1039.1100, 3.0);
			}
			else
			{
				YaEstaAbierta[2] = 0;
				return MoveDynamicObjectEx(PuertasDeBotones[6],349.260010, 160.729996, 1039.109985, 3.0);
			}
		}
		if(EstaEn(playerid,1,349.0400, 148.8500, 1040.4500)) // Sala 3
		{
			if(CabinasOcupadasEmisoras[3][0] == 1)
			{
				if(CabinasOcupadasEmisoras[3][1] == playerid) accesoa=1;
			}
			if(CabinasOcupadasEmisoras[3][0] == 0 && Emisoras[playerid][TieneEmisora] == 1) accesoa=1;
			if(PlayerInfo[playerid][pAdmin] > ADMIN_LVL_JUEGO1) accesoa=1;
			if(FaccLegal(playerid)) accesoa=1;
			if(accesoa == 0) return 1;
			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			if(YaEstaAbierta[3] == 0)
			{
				YaEstaAbierta[3] = 1;
				return MoveDynamicObjectEx(PuertasDeBotones[8],349.1800, 147.9900, 1039.1100, 3.0);
			}
			else
			{
				YaEstaAbierta[3] = 0;
				return MoveDynamicObjectEx(PuertasDeBotones[8],349.1800, 149.2300, 1039.1100, 3.0);
			}
		}
		if(EstaEn(playerid,1,363.1623, 152.4068, 1040.4500)) // Sala 4
		{
			if(CabinasOcupadasEmisoras[4][0] == 1)
			{
				if(CabinasOcupadasEmisoras[4][1] == playerid) accesoa=1;
			}
			if(CabinasOcupadasEmisoras[4][0] == 0 && Emisoras[playerid][TieneEmisora] == 1) accesoa=1;
			if(PlayerInfo[playerid][pAdmin] > ADMIN_LVL_JUEGO1) accesoa=1;
            if(FaccLegal(playerid)) accesoa=1;
			if(accesoa == 0) return 1;
   			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			if(YaEstaAbierta[4] == 0)
			{
				YaEstaAbierta[4] = 1;
				return MoveDynamicObjectEx(PuertasDeBotones[10],359.9500, 152.3300, 1039.1100, 3.0);
			}
			else
			{
				YaEstaAbierta[4] = 0;
				return MoveDynamicObjectEx(PuertasDeBotones[10],361.2100, 152.3300, 1039.1100, 3.0);
			}
		}
	    if(EstaEn(playerid,1,-1257.0300, 2096.7400, 1246.8900))
		{
  			LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
	        if(YaEstaAbierta[24] == 0)
			{
				MoveDynamicObjectEx(Puerta[0],-1258.2170, 2096.6799, 1245.5300,2.5,0.0000, 0.0000, 0.0000);
				YaEstaAbierta[24] = 1;
			}
	        else
			{
		 		MoveDynamicObjectEx(Puerta[0],-1256.8500, 2096.6799, 1245.5300,2.5,0.0000, 0.0000, 0.0000);
		 		YaEstaAbierta[24] = 0;
			}
	    }
	    else if(EstaEn(playerid,1,-1244.8000, 2116.8301, 1246.8300))
	    {
	    	LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
	        if(YaEstaAbierta[25] == 0) MoveDynamicObjectEx(Puerta[1],-1244.6700, 2117.0041, 1245.5200,2.5,0.0000, 0.0000, 90.0000),YaEstaAbierta[25] = 1;
	        else MoveDynamicObjectEx(Puerta[1],-1244.6700, 2115.6001, 1245.5200,2.5,0.0000, 0.0000, 90.0000),YaEstaAbierta[25] = 0;
	    }
	    else if(EstaEn(playerid,1, -1244.7800, 2084.8201, 1246.8900))
	    {
	    	LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
	        if(YaEstaAbierta[26] == 0) MoveDynamicObjectEx(Puerta[2],-1244.7400, 2083.5960, 1245.5300,2.5,0.0000, 0.0000, 90.0000),YaEstaAbierta[26] = 1;
	        else MoveDynamicObjectEx(Puerta[2],-1244.7400, 2085.0000, 1245.5300,2.5,0.0000, 0.0000, 90.0000),YaEstaAbierta[26] = 0;
	    }
	    else if(EstaEn(playerid,1, -1242.7600, 2087.8401, 1246.8300))
	    {
	    	LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
	        if(YaEstaAbierta[27] == 0) MoveDynamicObjectEx(Puerta[3],-1245.3040, 2087.7700, 1245.5300,2.5,0.0000, 0.0000, 0.0000),YaEstaAbierta[27] = 1;
	        else MoveDynamicObjectEx(Puerta[3],-1244.4800, 2087.7700, 1245.5300,2.5,0.0000, 0.0000, 0.0000),YaEstaAbierta[27] = 0;
	    }
	    else if(EstaEn(playerid,1, -1232.6200, 2027.6801, 1246.8900))
	    {
     		LoopingAnim(playerid,"HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
	        if(YaEstaAbierta[28] == 0) MoveDynamicObjectEx(Puerta[4],-1232.5699, 2026.5060, 1245.5300,2.5,0.0000, 0.0000, 90.0000),YaEstaAbierta[28] = 1;
	        else MoveDynamicObjectEx(Puerta[4],-1232.5699, 2027.9100, 1245.5300,2.5,0.0000, 0.0000, 90.0000),YaEstaAbierta[28] = 0;
	    }
	}
	if(newkeys == KEY_LOOK_BEHIND)
	{
		if(IsPlayerNPC(playerid))
		{
			if(EstaEn(playerid, 20.0, 1571.4235,-1704.3674,5.9946) || EstaEn(playerid, 20.0, -1579.1854,711.2885,-5.1418) || EstaEn(playerid, 20.0, 2289.4053,2438.6414,3.2734))
			{
				foreach(new i : Player)
				{
					if(PlayerInfo[i][pTiempoCarcel] >= 600 && PlayerInfo[i][pTipoCarcel] < 4 && Jail[i] == 1)
					{
						if(EstaEn(playerid, 20.0, 1571.4235,-1704.3674,5.9946) && PlayerInfo[i][pTipoCarcel] == 1) EnviarBus(i, 1);
						else if(EstaEn(playerid, 20.0, -1579.1854,711.2885,-5.1418) && PlayerInfo[i][pTipoCarcel] == 2) EnviarBus(i, 2);
						else if(EstaEn(playerid, 20.0,  2289.4053,2438.6414,3.2734) && PlayerInfo[i][pTipoCarcel] == 3) EnviarBus(i, 3);
						else return 1;
					}
				}
			}
		}
	}
	// Q
	if(newkeys == KEY_LOOK_LEFT)
	{
		if(IsPlayerNPC(playerid))
		{
		    if(EstaEn(playerid, 20, 188.8882,1411.5997,10.6811))
			{
				foreach(new i : Player)
				{
					if(EstaEnBus[i] == 1 || EstaEnBus[i] == 2 || EstaEnBus[i] == 3)
					{
						new rand;
						StatusFC[i] = 0;
						EstaEnBus[i] = 0;
						PlayerInfo[i][pTipoCarcel] = 4;
						rand = random(sizeof(FortCarsonSpawn));
						SetPosEx(i, FortCarsonSpawn[rand][0], FortCarsonSpawn[rand][1], FortCarsonSpawn[rand][2], 0, 15, 15);
					}
				}
			}
		}
	}
	// ADM
	if(PlayerInfo[playerid][pAdmin] >= ADMIN_LVL_ADM)
	{
		if (IsPlayerInAnyVehicle(playerid) && estado == PLAYER_STATE_DRIVER)
		{
			
			if(newkeys == KEY_YES) // Y
			{
				new vid = GetPlayerVehicleID(playerid);
				new Float:x, Float:y, Float:z;
				GetVehicleVelocity(vid, x, y, z);
				SetVehicleVelocity(vid ,x ,y ,z+0.2);
			}
			if(newkeys == KEY_ANALOG_DOWN) // 4
			{
				new vid = GetPlayerVehicleID(playerid);
				new Float:angulo;
				GetVehicleZAngle(vid, angulo);
				SetVehicleZAngle(vid, angulo);
			}
		}
	}
	if(newkeys == KEY_CROUCH)
	{
		if(estado == PLAYER_STATE_DRIVER){
			
			if(IsPlayerInRangeOfPoint(playerid, 5.0, 1106.7002,1334.7562,10.5626) || IsPlayerInRangeOfPoint(playerid, 5.0, 1106.4918,1343.2115,10.5623) ||
			IsPlayerInRangeOfPoint(playerid, 5.0, 1105.9816,1351.5953,10.5622) || IsPlayerInRangeOfPoint(playerid, 5.0, 1163.6406,1289.4219,10.5474) ||
			IsPlayerInRangeOfPoint(playerid, 5.0, 1163.9597,1274.7152,10.5474))
			{
				cmd_tuning(playerid);
			}
			if(IsPlayerInRangeOfPoint(playerid, 5.0, 1104.9016,1261.6063,10.6213) || IsPlayerInRangeOfPoint(playerid, 5.0, 1107.4186,1248.6707,10.6214) || IsPlayerInRangeOfPoint(playerid, 5.0, 1119.3706,1247.7039,10.6213) || IsPlayerInRangeOfPoint(playerid, 5.0, 1132.5007,1252.9148,17.2071))
			{
				cmd_pintar(playerid, "vehiculo");
			}
			if(EstaEn(playerid,3.0,1105.0314,1311.0266,10.5623) || EstaEn(playerid,3.0,1106.4525,1302.7540,10.5623) || EstaEn(playerid,3.0,1105.1276,1293.6375,10.5623) || EstaEn(playerid,3.0,1108.9133,1277.0665,10.5623))
	    	{
				ComprarMotor(playerid);
			}
		}
		if(IsPlayerInAnyVehicle(playerid))
		{
			for(new i = 0; i < MAX_PORTONES; i++)
			{
				if(PortonInfo[i][PortonModelo] > 0)
				{
					if(EstaEn(playerid, 15, PortonInfo[i][pXc], PortonInfo[i][pYc], PortonInfo[i][pZc]) && PlayerInfo[playerid][jMiembro] == PortonInfo[i][PortonFacc])
					{
						AbrirPorton(i);
						break;
					}
				}
			}
			//AbrirPortonEDSA(playerid);
		}
		new patrulla = GetPlayerVehicleID(playerid);
		if(!IsPlayerInAnyVehicle(playerid)) return 1;
		if(EstaEn(playerid, 15.0, 1545.7398,-1627.7280,15.2062) && PlayerInfo[playerid][jMiembro] == 1 || IsPlayerNPC(playerid) && EstaEn(playerid, 15.0, 1545.7398,-1627.7280,15.2062))
		{
			MoveDynamicObjectEx(barrera, 1544.6943359375, -1630.73046875, 13.27956199646+0.0001, 0.00009, 0, 0, 90);
			SetTimer("Cerrar_Barrera", 3000, 0);
			return 1;
		}
		// Barreta SFPD 1
        if(EstaEn(playerid, 15.0, -1571.8217,662.5598,7.1875) && PlayerInfo[playerid][jMiembro] == 1  || IsPlayerNPC(playerid) && EstaEn(playerid, 15.0, -1571.8217,662.5598,7.1875))
		{
			MoveDynamicObjectEx(barsfpd1, -1572.19849, 658.77289, 6.91940+0.0001, 0.00009, 0.00000, 0.00000, -90.00000);
			SetTimer("Cerrar_BarreraSF1", 3000, 0);
			return 1;
		}
		// Barreta SFPD 2
		if(EstaEn(playerid, 15.0, -1701.8068,684.0037,24.8906) && PlayerInfo[playerid][jMiembro] == 1  || IsPlayerNPC(playerid) && EstaEn(playerid, 15.0, -1701.8068,684.0037,24.8906))
		{
			MoveDynamicObjectEx(barsfpd2, -1701.43286, 687.61920, 24.72650+0.0001, 0.00009, 0.00000, 0.00000, -90.00000);
			SetTimer("Cerrar_BarreraSF2", 3000, 0);
			return 1;
		}
		// Barreta LVPD
		if(EstaEn(playerid, 15.0, 2237.8262,2453.6138,10.8039) && PlayerInfo[playerid][jMiembro] == 1  || IsPlayerNPC(playerid) && EstaEn(playerid, 15.0, 2237.8262,2453.6138,10.8039))
		{
			MoveDynamicObjectEx(barlvpd, 2238.20020, 2450.38770, 10.65880+0.0001, 0.00009, 0.00000, 0.00000, -90.00000);
			SetTimer("Cerrar_BarreraLV", 3000, 0);
			return 1;
		}
		// Reja SFPD
        if(EstaEn(playerid, 15.0, -1631.5503,688.0169,7.1875) && FaccLegal(playerid)  || IsPlayerNPC(playerid) && EstaEn(playerid, 15.0, -1631.5503,688.0169,7.1875))
		{
			if((SAPD(patrulla) || MOTOSAPD(patrulla) || patrulla == NPC_Tren[4] || patrulla == NPC_Tren[6] || GetVehicleModel(patrulla) == 525) || (PlayerInfo[playerid][pAdmin] > ADMIN_LVL_JUEGO1) || EDSA(GetPlayerVehicleID(playerid)))
			{
				MoveDynamicObjectEx(portonsf1, -1647.0775, 688.2181, 0.1775, 2.5);
				SetTimer("Cerrar_PortonSF", 5500, 0);
				return 1;
			}
			return 1;
		}
		// Reja LVPD 1
		if(EstaEn(playerid, 15.0, 2293.3953,2499.0745,3.4087) && FaccLegal(playerid)  || IsPlayerNPC(playerid) && EstaEn(playerid, 15.0, 2293.3953,2499.0745,3.4087))
		{
			if((SAPD(patrulla) || MOTOSAPD(patrulla) || patrulla == NPC_Tren[4] || patrulla == NPC_Tren[6] || GetVehicleModel(patrulla) == 525) || (PlayerInfo[playerid][pAdmin] > ADMIN_LVL_JUEGO1) || EDSA(GetPlayerVehicleID(playerid)))
			{
				MoveDynamicObjectEx(portonlv1, 2293.9426, 2499.3127, -2.1861, 2.5);
				SetTimer("Cerrar_PortonLV1", 5500, 0);
				return 1;
			}
			return 1;
		}
		// Reja LVPD 2
		if(EstaEn(playerid, 15.0, 2335.6372,2443.5549,5.8703) && FaccLegal(playerid)  || IsPlayerNPC(playerid) && EstaEn(playerid, 15.0, 2335.6372,2443.5549,5.8703))
		{
			if((SAPD(patrulla) || MOTOSAPD(patrulla) || patrulla == NPC_Tren[4] || patrulla == NPC_Tren[5] || patrulla == NPC_Tren[6] || GetVehicleModel(patrulla) == 525) || (PlayerInfo[playerid][pAdmin] > ADMIN_LVL_JUEGO1) || EDSA(GetPlayerVehicleID(playerid)))
			{
				MoveDynamicObjectEx(portonlv2, 2334.8730, 2443.3247, 0.3313, 2.5);
				SetTimer("Cerrar_PortonLV2", 5500, 0);
				return 1;
			}
			return 1;
		}
		// Porton LSPD
		if(EstaEn(playerid, 15.0, 1589.0533,-1638.1231,14.1229) && FaccLegal(playerid) || IsPlayerNPC(playerid) && EstaEn(playerid, 15.0, 1589.0533,-1638.1231,14.1229))
		{
			if((SAPD(patrulla) || MOTOSAPD(patrulla) || patrulla == NPC_Tren[4] || patrulla == NPC_Tren[5] || patrulla == NPC_Tren[6] || GetVehicleModel(patrulla) == 525) || (PlayerInfo[playerid][pAdmin] > ADMIN_LVL_JUEGO1) || EDSA(GetPlayerVehicleID(playerid)))
			{
				MoveDynamicObjectEx(porton,  1589.274658,-1638.286499,10.616429, 2);
				SetTimer("Cerrar_Porton", 5000, 0);
				return 1;
			}
			return 1;
		}
		// FC
		if(EstaEn(playerid, 15.0, 294.3390,1412.8501,9.9911) && FaccLegal(playerid) || IsPlayerNPC(playerid) && EstaEn(playerid, 15.0, 294.3390,1412.8501,9.9911))
		{
			if((SAPD(patrulla) || MOTOSAPD(patrulla) || patrulla == NPC_Tren[4] || patrulla == NPC_Tren[5] || patrulla == NPC_Tren[6] || GetVehicleModel(patrulla) == 525) || (PlayerInfo[playerid][pAdmin] > ADMIN_LVL_JUEGO1) || EDSA(GetPlayerVehicleID(playerid)))
			{
				MoveDynamicObjectEx(reja1,  288.9500, 1420.6600, 12.9000, 2);
				MoveDynamicObjectEx(reja2,  288.9500, 1402.3979, 12.9000, 2);
				SetTimer("Cerrar_Rejas1", 3000, 0);
				return 1;
			}
			return 1;
		}
		// FC
		if(EstaEn(playerid, 15.0, 264.4435,1411.4097,10.4904) && FaccLegal(playerid) || IsPlayerNPC(playerid) && EstaEn(playerid, 15.0, 264.4435,1411.4097,10.4904))
		{
			if((SAPD(patrulla) || MOTOSAPD(patrulla) || patrulla == NPC_Tren[4] || patrulla == NPC_Tren[5] || patrulla == NPC_Tren[6] || GetVehicleModel(patrulla) == 525) || (PlayerInfo[playerid][pAdmin] > ADMIN_LVL_JUEGO1) || EDSA(GetPlayerVehicleID(playerid)))
			{
				MoveDynamicObjectEx(reja3,  263.1500, 1420.6600, 13.0500, 2);
				MoveDynamicObjectEx(reja4,  263.1500, 1402.2100, 13.0500, 2);
				SetTimer("Cerrar_Rejas2", 3000, 0);
				return 1;
			}
			return 1;
		}
		// FC
		if(EstaEn(playerid, 15.0, 227.9451,1421.2976,10.5859) && FaccLegal(playerid))
		{
			if((SAPD(patrulla) || MOTOSAPD(patrulla) || patrulla == NPC_Tren[4] || patrulla == NPC_Tren[5] || patrulla == NPC_Tren[6] || GetVehicleModel(patrulla) == 525) || (PlayerInfo[playerid][pAdmin] > ADMIN_LVL_JUEGO1) || EDSA(GetPlayerVehicleID(playerid)))
			{
				MoveDynamicObjectEx(reja5,  237.3140, 1420.7500, 13.1700, 2);
				MoveDynamicObjectEx(reja6,  218.6780, 1420.7500, 13.1700, 2);
				SetTimer("Cerrar_Rejas3", 3000, 0);
				return 1;
			}
			return 1;
		}
		// Isla
		if(EstaEn(playerid, 5.0, 830.1780,-2962.6921,11.9932))
		{
			MoveDynamicObjectEx(controls[8], 833.4200, -2963.8000, 11.7460+SPEED_CONTROLS, SPEED_CONTROLS, 0.0000, -10.0000, 0.0000);
			SetTimer("CerrarIsla1", 8000, 0);
			return 1;
		}
		// Isla
		if(EstaEn(playerid, 5.0, 836.8367,-2955.8198,12.2332))
		{
			MoveDynamicObjectEx(controls[9], 833.4100, -2954.5200, 12.1000+SPEED_CONTROLS, SPEED_CONTROLS, 0.0000, 10.0000, 0.0000);
			SetTimer("CerrarIsla2", 8000, 0);
			return 1;
		}
		
		if(estado == PLAYER_STATE_DRIVER) return VehicleKey(playerid);
	}
	if(newkeys & KEY_CTRL_BACK)
 	{
		if(!IsPlayerInAnyVehicle(playerid))
		{
			for(new i = 0; i < MAX_PORTONES; i++)
			{
				if(PortonInfo[i][PortonModelo] > 0)
				{
					if(EstaEn(playerid, 15, PortonInfo[i][pXc], PortonInfo[i][pYc], PortonInfo[i][pZc]) && PlayerInfo[playerid][jMiembro] == PortonInfo[i][PortonFacc])
					{
						AbrirPorton(i);
						break;
					}
				}
			}
			//AbrirPortonEDSA(playerid);
		}
 	    if(Muriendo[playerid] != 0) MostrarBoxMedico(playerid);
 	    foreach(new f : Fabricas)
		{
			if(!IsPlayerInAnyVehicle(playerid))
			{
				if(Fabricas[f][pBanda] == PlayerInfo[playerid][jMiembro])
				{
					if(Fabricas[f][pInt] == GetPlayerInterior(playerid))
					{
						if(f > 0)
						{
							if(EnCajasFabrica(playerid) > 0)
							{
								new pos;
								pos = PosCajas(EnCajasFabrica(playerid)-1);
								switch(TieneCajaMeta[playerid])
								{
									case 0:
									{
										if(Fabricas[f][Almacen][EnCajasFabrica(playerid)-1] == 0) return 1;
										if(Fabricas[f][Almacen][EnCajasFabrica(playerid)-1] == 1) DestroyDynamicObjectEx(Fabricas[f][Meta][pos]);
										else DestroyDynamicObjectEx(Fabricas[f][Meta][pos+1]);
										Fabricas[f][Almacen][EnCajasFabrica(playerid)-1] --;
										GuardarCajaFabrica(playerid,f,1);
										LCaja(playerid);
										SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
									}
									case 1:
									{
										if(Fabricas[f][Almacen][EnCajasFabrica(playerid)-1] > 2) return 1;
										if(Fabricas[f][Almacen][EnCajasFabrica(playerid)-1] == 2) return Mensaje(playerid,-1,"No entran m�s cajas en este lugar.");
										if(Fabricas[f][Almacen][EnCajasFabrica(playerid)-1] == 0) { Fabricas[f][Meta][pos] = CreateDynamicObject(1271, CajasMetaEstante[pos][0], CajasMetaEstante[pos][1], CajasMetaEstante[pos][2],   0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]); }
										else Fabricas[f][Meta][pos+1] = CreateDynamicObject(1271, CajasMetaEstante[pos+1][0], CajasMetaEstante[pos+1][1], CajasMetaEstante[pos+1][2],   0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]);
										Fabricas[f][Almacen][EnCajasFabrica(playerid)-1] ++;
										DCaja(playerid);
										GuardarCajaFabrica(playerid,f,0);
										SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
									}
								}
							}
							if(EnCocineroFabrica(playerid) > 0)
							{
								new asd = EnCocineroFabrica(playerid)-1;
								if(Fabricas[f][TieneActor][asd+1] != 0)
								{
									if(TieneCajaMeta[playerid] == 0)
									{
										if(Fabricas[f][Termino][asd] == 1)
										{
											Fabricas[f][Termino][asd] = 0;
											Fabricas[f][StatoCuoco][asd] = 2;
											ActualizarLabelMoledores(f,asd);
											TieneCajaMeta[playerid] = 1;
											DestroyDynamicObjectEx(Fabricas[f][Bloque][asd]);
											LCaja(playerid);
											SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
											SetPlayerAttachedObject(playerid, 4, 1271, 1, 0.216000, 0.365000, -0.032000, 0.000000, 0.000000, 0.000000, 0.667000, 0.651999, 0.568000);
											return 1;
										}
									}
									if(Fabricas[f][StatoCuoco][asd] == 2)
									{
										if(PlayerTemp[playerid][TieneCrisol] == 1)
										{
											DCaja(playerid);
											SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
											RemovePlayerAttachedObject(playerid, 4);
											Fabricas[f][StatoCuoco][asd] = 1;
											PlayerTemp[playerid][TieneCrisol] = 0;
											ApplyDynamicActorAnimation(Fabricas[f][ActorFabrica][asd+1], "PED","IDLE_chat",1.0,7,5,1,1,1);
											ActualizarLabelMoledores(f,asd);
											return 1;
										}
									}
									else Mensaje(playerid,-1,"Este moledor ya tiene trabajo pendiente.");
								}
							}
							if(EnOllaFabrica(playerid) > 0)
							{
								if(PlayerTemp[playerid][TieneCrisol] == 0)
								{
									new asd = EnOllaFabrica(playerid)-1;
									if(Fabricas[f][Crisol][asd] == 1)
									{
										new stringas[256];
										Fabricas[f][Crisol][asd] = 0;
										format(stringas,sizeof(stringas),""CR"Cocina: #%d"CB"\nProducci�n: {3d83ce}%d%%"CB" completada.\nEstado: %s"CB"\n\n%s"CB"%s",asd+1,Fabricas[f][Porcentaje][asd],EstadoH(HornoEncendido[asd][f]),EstadoHo(HornoEncendido[asd][f]),EstadoCristal(Fabricas[f][Crisol][asd]));
										UpdateDynamic3DTextLabelText(Fabricas[f][olla][asd], COLOR_BLANCO, stringas);
										PlayerTemp[playerid][TieneCrisol] = 1;
										ApplyAnimation(playerid,"BAR","Barserve_give",4.1,0,0,0,0,0);
										SetPlayerSpecialAction(playerid,SPECIAL_ACTION_CARRY);
										SetPlayerAttachedObject(playerid, 4, 19585, 3, 0.250999, -0.444999, -0.215999, -125.200004, -101.400001, -12.700006, 0.637000, 0.648000, 0.829000);
										GuardarFabrica(f);
										AccionesRol(playerid,"retir� el cristal de una cocina.",20);
										Mensaje(playerid,-1,"Pulsa "CR"'H' "CB"para dejar el cristal sobre alguna "CR"mesa de producci�n"CB".");
									}
								}
							}
							if(EnTanquesFabrica(playerid) > 0)
							{
								if(TieneBarril[playerid] == 1)
								{
									new asd = EnTanquesFabrica(playerid)-1,stringass[360];
									if(Fabricas[f][pTanque][asd] > 99) return Mensaje(playerid,-1,"Esta tanque se encuentra lleno.");
									if(Fabricas[f][pTanque][asd] >= 90) Fabricas[f][pTanque][asd] = 100;
									else Fabricas[f][pTanque][asd] += 10;
									GuardarFBarril(playerid,f);
									RemovePlayerAttachedObject(playerid, 4);
									DCaja(playerid);
									SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
									AccionesRol(playerid,"carg� qu�micos en uno de los tanques de almacenaje.",20);
									format(stringass,sizeof(stringass),"{3399FF}Tanque de almacenaje de qu�micos"CB"\nCapacidad ocupada: "CR"%d%%"CB"\nCocina:"CR" #%d",Fabricas[f][pTanque][asd],ObtenerCocina(asd));
									UpdateDynamic3DTextLabelText(Fabricas[f][LTanque][asd], COLOR_BLANCO, stringass);
								}
							}
						}
					}
					Bidones(playerid);
					if(PlayerInfo[playerid][jMiembro] == Fabricas[f][pBanda])
					{
						new Float:a1x,Float:a1y,Float:a1z;
						GetVehiclePos(Fabricas[f][Auto1F], a1x, a1y, a1z);
						if(EstaEn(playerid,3.5, a1x, a1y, a1z))
						{
							if(estado == PLAYER_STATE_ONFOOT)
							{
								if(TieneBarril[playerid] == 0)
								{
									if(VehiculoConCajas[Fabricas[f][Auto1F]] == 0)
									{
										if(VehiculoConBarril[Fabricas[f][Auto1F]] > 0)
										{
											if(!EstaEn(playerid,50.0,-1998.4272,210.5190,1035.8162)) return 1;
											if(VehiculoConBarril[Fabricas[f][Auto1F]] == 1) { DestroyDynamicObjectEx(BarrilMeta[f][0]); BarrilMeta[f][0] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000); }
											else if(VehiculoConBarril[Fabricas[f][Auto1F]] == 2) { DestroyDynamicObjectEx(BarrilMeta[f][1]); BarrilMeta[f][1] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000); }
											else if(VehiculoConBarril[Fabricas[f][Auto1F]] == 3) { DestroyDynamicObjectEx(BarrilMeta[f][2]); BarrilMeta[f][2] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000); }
											else if(VehiculoConBarril[Fabricas[f][Auto1F]] == 4) { DestroyDynamicObjectEx(BarrilMeta[f][3]); BarrilMeta[f][3] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000); }
											else if(VehiculoConBarril[Fabricas[f][Auto1F]] == 5) { DestroyDynamicObjectEx(BarrilMeta[f][4]); BarrilMeta[f][4] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000); }
											VehiculoConBarril[Fabricas[f][Auto1F]] --;
											TieneBarril[playerid] = 1;
											LCaja(playerid);
											SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
											SetPlayerAttachedObject(playerid, 4, 3632, 1, 0.216000, 0.365000, -0.032000, 0.000000, 0.000000, 0.000000, 0.667000, 0.651999, 0.568000);
											AccionesRol(playerid, "sac� un tanque de qu�micos de la camioneta.", 20);
											Mensaje(playerid,-1,"Lleva el "CR"tanque de qu�micos"CB" al contenedor que m�s lo necesite.");
										}
									}
								}
								else if(TieneBarril[playerid] == 1)
								{
									if(VehiculoConCajas[Fabricas[f][Auto1F]] == 0)
									{
										if(VehiculoConBarril[Fabricas[f][Auto1F]] < 5)
										{
											if(VehiculoConBarril[Fabricas[f][Auto1F]] == 0) AttachDynamicObjectToVehicle(BarrilMeta[f][0], Fabricas[f][Auto1F], 0.394999, -1.084999, 0.230000, 0.000000, 0.000000, 0.000000);
											else if(VehiculoConBarril[Fabricas[f][Auto1F]] == 1) AttachDynamicObjectToVehicle(BarrilMeta[f][1], Fabricas[f][Auto1F], -0.519999, -1.084999, 0.199500, 0.000000, 0.000000, 0.000000);
											else if(VehiculoConBarril[Fabricas[f][Auto1F]] == 2) AttachDynamicObjectToVehicle(BarrilMeta[f][2], Fabricas[f][Auto1F], -0.049999, -1.729998, 0.230000, 0.000000, 0.000000, 0.000000);
											else if(VehiculoConBarril[Fabricas[f][Auto1F]] == 3) AttachDynamicObjectToVehicle(BarrilMeta[f][3], Fabricas[f][Auto1F], 0.429999, -2.320005, 0.165000, 0.000000, 0.000000, 0.000000);
											else if(VehiculoConBarril[Fabricas[f][Auto1F]] == 4) AttachDynamicObjectToVehicle(BarrilMeta[f][4], Fabricas[f][Auto1F], -0.554999, -2.285004, 0.220000, 0.000000, 0.000000, 0.000000);
											VehiculoConBarril[Fabricas[f][Auto1F]] ++;
											TieneBarril[playerid] = 0;
											DCaja(playerid);
											SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
											RemovePlayerAttachedObject(playerid, 4);
											AccionesRol(playerid, "dej� un tanque de qu�micos en la camioneta.", 20);
										}
									}
								}
								if(TieneCajaMeta[playerid] == 0)
								{
									if(VehiculoConBarril[Fabricas[f][Auto1F]] == 0)
									{
										if(VehiculoConCajas[Fabricas[f][Auto1F]] > 0)
										{
											if(VehiculoConCajas[Fabricas[f][Auto1F]] == 1) { DestroyDynamicObjectEx(CajaMeta[f][0]); CajaMeta[f][0] = CreateDynamicObject(1271,0,0,-1000,0,0,0, Fabricas[f][pVW],Fabricas[f][pInt]); }
											else if(VehiculoConCajas[Fabricas[f][Auto1F]] == 2) { DestroyDynamicObjectEx(CajaMeta[f][1]); CajaMeta[f][1] = CreateDynamicObject(1271,0,0,-1000,0,0,0, Fabricas[f][pVW],Fabricas[f][pInt]); }
											else if(VehiculoConCajas[Fabricas[f][Auto1F]] == 3) { DestroyDynamicObjectEx(CajaMeta[f][2]); CajaMeta[f][2] = CreateDynamicObject(1271,0,0,-1000,0,0,0, Fabricas[f][pVW],Fabricas[f][pInt]); }
											else if(VehiculoConCajas[Fabricas[f][Auto1F]] == 4) { DestroyDynamicObjectEx(CajaMeta[f][3]); CajaMeta[f][3] = CreateDynamicObject(1271,0,0,-1000,0,0,0, Fabricas[f][pVW],Fabricas[f][pInt]); }
											else if(VehiculoConCajas[Fabricas[f][Auto1F]] == 5) { DestroyDynamicObjectEx(CajaMeta[f][4]); CajaMeta[f][4] = CreateDynamicObject(1271,0,0,-1000,0,0,0, Fabricas[f][pVW],Fabricas[f][pInt]); }
											VehiculoConCajas[Fabricas[f][Auto1F]] --;
											TieneCajaMeta[playerid] = 1;
											LCaja(playerid);
											SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
											SetPlayerAttachedObject(playerid, 4, 1271, 1, 0.216000, 0.365000, -0.032000, 0.000000, 0.000000, 0.000000, 0.667000, 0.651999, 0.568000);
											AccionesRol(playerid, "agarr� una caja de metanfetaminas de la camioneta.", 20);
											ActualizarBarriles(GetPlayerVehicleID(playerid),f);
										}
									}
								}
								else if(TieneCajaMeta[playerid] == 1)
								{
									if(VehiculoConBarril[Fabricas[f][Auto1F]] == 0)
									{
										if(VehiculoConCajas[Fabricas[f][Auto1F]] < 5)
										{
											if(VehiculoConCajas[Fabricas[f][Auto1F]] == 0) AttachDynamicObjectToVehicle(CajaMeta[f][0], Fabricas[f][Auto1F], -0.011962,-1.074538,0.107927,-0.199999,0.000000,0.000000);
											else if(VehiculoConCajas[Fabricas[f][Auto1F]] == 1) AttachDynamicObjectToVehicle(CajaMeta[f][1], Fabricas[f][Auto1F], 0.000000,-1.999999,0.100000,0.349999,-1.149999,0.000000);
											else if(VehiculoConCajas[Fabricas[f][Auto1F]] == 2) AttachDynamicObjectToVehicle(CajaMeta[f][2], Fabricas[f][Auto1F], -0.007348,-1.509131,0.746309,0.000000,0.000000,0.000000);
											else if(VehiculoConCajas[Fabricas[f][Auto1F]] == 3) AttachDynamicObjectToVehicle(CajaMeta[f][3], Fabricas[f][Auto1F], 0.658764,-2.240282,0.650753,0.000000,34.049999,0.000000);
											else if(VehiculoConCajas[Fabricas[f][Auto1F]] == 4) AttachDynamicObjectToVehicle(CajaMeta[f][4], Fabricas[f][Auto1F], -0.714648,-2.216089,0.620124,0.000000,-29.000000,0.000000);
											VehiculoConCajas[Fabricas[f][Auto1F]] ++;
											TieneCajaMeta[playerid] = 0;
											DCaja(playerid);
											SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
											RemovePlayerAttachedObject(playerid, 4);
											AccionesRol(playerid, "dej� una caja con metanfetaminas en la camioneta.", 20);
											ActualizarBarriles(GetPlayerVehicleID(playerid),f);
										}
									}
								}
							}
						}
					}
					if(EstaEn(playerid,2.0, 235.7830,109.9401,1010.2188))
					{
						if(PlayerInfo[playerid][jMiembro] == Fabricas[f][pBanda])
						{
							if(PlayerTemp[playerid][TraeDinero] == 1)
							{
								if(Fabricas[f][bolsospagados] < 6)
								{
									new string[128];
									RemovePlayerAttachedObject(playerid, 4);
									PlayerTemp[playerid][TraeDinero] = 0;
									Fabricas[f][bolsospagados] += 1;
									new soborno = 5-Fabricas[f][bolsospagados];
									if(Fabricas[f][bolsospagados] < 5) format(string,sizeof(string),"Tu banda pag� "CR"$1000000"CB" de soborno y a�n falta pagar "CR"$%d000000"CB".",soborno);
									else
									{
										Fabricas[f][TiempoSoborno] = gettimeVariable + 604800;
										Fabricas[f][bolsospagados] = 0;
										GuardarFabrica(f);
										FabricaPickup(f);
										format(string,sizeof(string),"Tu banda "CR"pago el soborno"CB" semanal a la {3399FF}policia"CB".");
									}
									MandarMensajeFabrica(f,string);
								}
								else Mensaje(playerid,-1,"El dinero del soborno ya se pag�.");
							}
						}
					}
					if(EstaEn(playerid,1.8, -2025.2623,253.8624,1035.8389))
					{
						if(PlayerInfo[playerid][jMiembro] == Fabricas[f][pBanda])
						{
							if(PuertaAbiertaFabrica[f] == 1)
							{
								if(gettimeVariable < PlayerTemp[playerid][TiempoBolso]) return 1;
								switch(PlayerTemp[playerid][TraeDinero])
								{
									case 0:
									{
										if(Fabricas[f][pCantidadDinero] < 1000000) return Mensaje(playerid,-1,"No hay suficiente dinero para sacar.");
										ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);
										PlayerTemp[playerid][TraeDinero] = 1;
										AccionesRol(playerid,"agarr� un bolso con dinero.", 20);
										Fabricas[f][pCantidadDinero] -= 1000000;
										ActualizarBolsos(f, 2);
										SetPlayerAttachedObject(playerid, 4, 1550, 1, 0.116999, -0.283999, -0.046999, -178.400024, 81.999984, -5.399999, 1.000000, 1.000000, 1.000000);
									}
									case 1:
									{
										ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);
										PlayerTemp[playerid][TraeDinero] = 0;
										AccionesRol(playerid,"dej� un bolso de dinero en el suelo.", 20);
										Fabricas[f][pCantidadDinero] += 1000000;
										ActualizarBolsos(f, 1);
										RemovePlayerAttachedObject(playerid, 4);
									}
								}
								ActualizarDineroPared(f);
								GuardarFabrica(f);
								PlayerTemp[playerid][TiempoBolso] = gettimeVariable + 3;
							}
						}
					}
					if(EstaEn(playerid,1.5,-2019.9447,243.5474,1035.8162)) // Sacar Armas
					{
						if(PlayerInfo[playerid][jMiembro] == Fabricas[f][pBanda] && GetPlayerVirtualWorld(playerid) == Fabricas[f][pVW])
						{
							new string[300];
							format(string,sizeof(string),"Arma\tCantidad Disponible\n"CB"Sniper rifle\t"CR"%d"CB"\nEscopeta recortada\t"CR"%d"CB"\nMicro UZI\t"CR"%d"CB"\nTec-9\t"CR"%d"CB"",Fabricas[f][pSniper],Fabricas[f][pRecortada],Fabricas[f][pUzi],Fabricas[f][pTec9]);
							MostrarDialog(playerid, F_SACARMA, DIALOG_STYLE_TABLIST_HEADERS, "Tomar arma", string, "Aceptar","Cancelar");
						}
					}
					if(EstaEn(playerid,1.7,-2020.3898,252.1498,1035.8389))
					{
						if(PlayerInfo[playerid][jMiembro] == Fabricas[f][pBanda] && GetPlayerVirtualWorld(playerid) == Fabricas[f][pVW])
						{
							if(PlayerInfo[playerid][pRango] > 6)
							{
								new string[300];
								format(string,sizeof(string),"Contratar empleados\nComprar armas\nComprar chalecos antibalas\nRegresar vehiculo de la f�brica\nRegresar vehiculo de distracci�n");
								MostrarDialog(playerid, ADMINISTRACION, DIALOG_STYLE_LIST, "Administraci�n de f�brica", string, "Siguiente","Salir");
							}
							else Mensaje(playerid,-1,"Solamente el "CR"l�der de la banda"CB" puede administrar la f�brica.");
						}
					}
					else if(EstaEn(playerid,1.5, -2020.0726,238.9793,1035.8162))
					{
						if(PlayerInfo[playerid][jMiembro] == Fabricas[f][pBanda] && GetPlayerVirtualWorld(playerid) == Fabricas[f][pVW])
						{
							new Float:armadura;
							GetPlayerArmour(playerid, armadura);
							if(Fabricas[f][pChalecos] < 1) return Mensaje(playerid,-1,"No hay chalecos aqui.");
							if(armadura >= 91) return 1;
							EstablecerChaleco(playerid,100);
							ActualizarCantidadChalecos(f);
							ActualizarCantidadFChale(f,0,1);
							GuardarFabrica(f);
						}
					}
					else if(EstaEn(playerid,2,-2018.3846,248.9650,1035.8389))
					{
						if(PlayerInfo[playerid][jMiembro] == Fabricas[f][pBanda] && GetPlayerVirtualWorld(playerid) == Fabricas[f][pVW])
						{
							new string[128];
							format(string,sizeof(string),"Adquirir qu�micos\nVender metanfetamina\nPagar soborno a la polic�a");
							MostrarDialog(playerid, ACTIVIDAD, DIALOG_STYLE_LIST, "Actividades", string, "Realizar","Cancelar");
						}
					}
				}
			}
		}
    }
	return 1;
}

public OnPlayerEnterCheckpoint(playerid)
{
    #if DEBUG_GM == 1
    printf("(OnPlayerEnterCheckpoint) PlayerID: %d", playerid);
    #endif
	new vehicleid = GetPlayerVehicleID(playerid);
	// Localizar
	if(Localizando[playerid])
	{
		Mensaje(playerid, -1,"Si no encuentras tu veh�culo, quiere decir que te lo han robado.");
		Mensaje(playerid, -1,"Por favor, llama a la polic�a para que lo recuperen.");
		BorrarCheckpoint(playerid);
		Localizando[playerid] = false;
		return 1;
	}
	// Pruebas Academia LV
	else if(EnPrueba[playerid])
 	{
		if(EstaEn(playerid, 3.0,635.3787,-222.2007,1276.7941))
	    {
	        TiempoAcademia[playerid] = gettimeVariable;
	        CrearCheckpoint(playerid, 608.2529,-221.9856,1276.7941, 3.0);
    	}
	    if(EstaEn(playerid, 3.0,608.2529,-221.9856,1276.7941)) CrearCheckpoint(playerid, 593.6731,-221.9529,1276.7941, 3.0);
	    if(EstaEn(playerid, 3.0,593.6731,-221.9529,1276.7941)) CrearCheckpoint(playerid, 593.2269,-261.0184,1276.7941, 3.0);
	    if(EstaEn(playerid, 3.0,593.2269,-261.0184,1276.7941)) CrearCheckpoint(playerid, 587.6206,-248.2012,1276.7941, 3.0);
	    if(EstaEn(playerid, 3.0,587.6206,-248.2012,1276.7941)) CrearCheckpoint(playerid, 583.4668,-237.1445,1276.7941, 3.0);
	    if(EstaEn(playerid, 3.0,583.4668,-237.1445,1276.7941)) CrearCheckpoint(playerid, 552.4970,-235.8692,1280.2028, 3.0);
	    if(EstaEn(playerid, 3.0,552.4970,-235.8692,1280.2028)) CrearCheckpoint(playerid, 552.4763,-266.4409,1276.7941, 3.0);
    	if(EstaEn(playerid, 3.0,552.4763,-266.4409,1276.7941)) CrearCheckpoint(playerid, 598.8328,-266.1846,1276.7941, 3.0);
		if(EstaEn(playerid, 3.0,598.8328,-266.1846,1276.7941)) CrearCheckpoint(playerid, 636.0906,-230.4454,1276.7941, 3.0);
	    if(EstaEn(playerid, 3.0,636.0906,-230.4454,1276.7941))
    	{
   			new tempo[160], tiemporeco;
        	tiemporeco = gettimeVariable - TiempoAcademia[playerid];
			if(tiemporeco < 60) format(tempo, 160, ""CR"%s"CB" termin� la prueba fisica en "CR"%d segundos"CB".", NombreJugador(playerid), tiemporeco);
			else if(tiemporeco >= 60) format(tempo, 160, ""CR"%s"CB" termin� la prueba fisica en "CR"%d minutos con %d segundos"CB".", NombreJugador(playerid), tiemporeco/60, tiemporeco%(60));
			foreach(new i : Player) { if(EnAcademia(i)) { Mensaje(i, -1, tempo); } }
        	TiempoAcademia[playerid] = 0;
			EnPrueba[playerid] = false;
	    }
    	BorrarCheckpoint(playerid);
    	return 1;
    }
	// Armero Piezas
	else if(EstaEn(playerid, 5.0, 2160.7837,-2280.9233,13.3838))
	{
		new string[256];
		format(string, 256, "Armaste "CR"%d piezas"CB", las cuales est�n listas para crear armas.", PlayerInfo[playerid][piezas]/10);
		Mensaje(playerid, -1,string);
		PlayerInfo[playerid][pMateriales] += PlayerInfo[playerid][piezas]/10;
		PlayerInfo[playerid][piezas] = 0;
		Mats1[playerid] = 0;
		Mats2[playerid] = 0;
		Mats3[playerid] = 0;
		BorrarCheckpoint(playerid);
		return 1;
	}
	// Medico
	else if(EstaEn(playerid, 5.0, 1191.43,-1326.39,13.40) || EstaEn(playerid, 5.0, 2030.36,-1419.79,16.99)|| EstaEn(playerid, 5.0, 1605.58,1830.17,10.82)|| EstaEn(playerid, 5.0, -2662.87,631.44,14.45))
	{
		foreach(new i : Player)
		{
			if(!AMBU(vehicleid)) return 1;
			if(IsPlayerInVehicle(i,vehicleid) && LlamadaMedicos[i] == 1)
			{
				SetPlayerColor(i, COLORCARGO0);
				QuitarDinero(i, 2500);
				DarDinero(playerid, 7000);
				Mensaje(playerid,-1,"Ganaste "CR"$7000"CB" por salvar una vida.");
				Mensaje(i,-1,"Has podido sobrevivir gracias al m�dico, gastas "CR"$2500"CB" por los costes de servicio.");
				TextDrawHideForPlayer(i,Sangre);
				new msjadm[250];
				format(msjadm, sizeof(msjadm), "Notificaci�n: "CB"%s (ID:%d) recibe $7000 por salvarle la vida a %s (ID: %d - Nivel: %d - %dhs).", NombreJugador(playerid), playerid, NombreJugador(i), i, PlayerInfo[i][jNivel], PlayerInfo[i][horasjugadas]);
				MensajeAdmin(COLOR_CHEAT, msjadm, 3);
				ExpMedico(playerid);
				RemovePlayerFromVehicle(i);
				PacienteAmbu[i] = 0;
				MarcadoMedicos[i] = 0;
				LlamadaMedicos[i] = 0;
				DescongelarEx(i);
				PlayerInfo[i][Agonizando] = 0;
				Muriendo[i] = 0;
				BorrarCheckpoint(playerid);
				RevisarLogro(playerid,12);
				return 1;
			}
		}
	}
	else if(EstaEn(playerid, 7.0, 586.4625,856.0408,-42.9917) || EstaEn(playerid, 7.0, 1333.2310,288.1360,19.5547) || EstaEn(playerid, 7.0, -1994.5979,-2425.1882,30.6250) || EstaEn(playerid, 7.0, 684.6442,892.3171,-39.6411) || EstaEn(playerid, 7.0, 1024.1267,2113.9292,10.8203) || EstaEn(playerid, 7.0, -1741.2456,1427.5416,7.1875) || EstaEn(playerid, 7.0, 341.7177,869.3250,20.4063) || EstaEn(playerid, 7.0, -2460.8755,2286.8108,4.9844) || EstaEn(playerid, 7.0, -2471.3093,2303.9348,4.9844) || EstaEn(playerid, 7.0, -2471.3215,2298.7263,4.9844) || EstaEn(playerid, 7.0, 2905.2002,1734.8521,10.7633) || EstaEn(playerid, 7.0, 210.1600,-29.2991,1.5781))
	{
		if(!IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid, -1, "Necesitas necesitas estar en un cami�n.");
		if(tviaje[playerid] == 2) return 1;
		if(DFT(vehicleid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			SetTimerEx("RutaTransportista",10000,false,"d",playerid);
			GameTextForPlayer(playerid, "~<~ ~w~Cargando camion ~>~", 10000, 5);
			Mensaje(playerid, -1, "Se est� cargando tu cami�n, por favor espera.");
			CongelarEx(playerid);
			BorrarCheckpoint(playerid);
			return 1;
		}
	}
	else if(EstaEn(playerid, 20.0, -1711.7150,62.1237,3.5495))
	{
		if(!IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid, -1, "Necesitas necesitas estar en un cami�n.");
		if(CAMION(vehicleid) || CAMIONVIP(vehicleid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			new string[350];
			CargandoC[playerid] = 1;
			CongelarEx(playerid);
			BorrarCheckpoint(playerid);
			Mensaje(playerid, -1, "Selecciona lo que deseas transportar.");
			switch(PlayerInfo[playerid][pNivelCamionero])
			{
				case 1: format(string, 350, ""CR"Productos de 24/7 "CB"(Ganancias "CR"$3.250"CB")\n"CR"Ropa "CB"(Ganancias "CR"$3.250"CB")\n"CR"Drogas "CB"(Ganancias "CR"$3.250"CB" + "CR"30"CB" medicamentos + "CR"40g"CB" de Crack)\n"CR"Armas "CB"(Ganancias "CR"$3.250"CB" + "CR"60 piezas de armas"CB")");
				case 2: format(string, 350, ""CR"Productos de 24/7 "CB"(Ganancias "CR"$5.500"CB")\n"CR"Ropa "CB"(Ganancias "CR"$5.500"CB")\n"CR"Drogas "CB"(Ganancias "CR"$5.500"CB" + "CR"35"CB" medicamentos + "CR"45g"CB" de Crack)\n"CR"Armas "CB"(Ganancias "CR"$5.500"CB" + "CR"65 piezas de armas"CB")");
				case 3: format(string, 350, ""CR"Productos de 24/7 "CB"(Ganancias "CR"$8.750"CB")\n"CR"Ropa "CB"(Ganancias "CR"$8.750"CB")\n"CR"Drogas "CB"(Ganancias "CR"$8.750"CB" + "CR"40"CB" medicamentos + "CR"50g"CB" de Crack)\n"CR"Armas "CB"(Ganancias "CR"$8.750"CB" + "CR"70 piezas de armas"CB")");
				case 4: format(string, 350, ""CR"Productos de 24/7 "CB"(Ganancias "CR"$10.000"CB")\n"CR"Ropa "CB"(Ganancias "CR"$10.000"CB")\n"CR"Drogas "CB"(Ganancias "CR"$10.000"CB" + "CR"45"CB" medicamentos + "CR"55g"CB" de Crack)\n"CR"Armas "CB"(Ganancias "CR"$10.000"CB" + "CR"75 piezas de armas"CB")");
				case 5: format(string, 350, ""CR"Productos de 24/7 "CB"(Ganancias "CR"$12.250"CB")\n"CR"Ropa "CB"(Ganancias "CR"$12.250"CB")\n"CR"Drogas "CB"(Ganancias "CR"$12.250"CB" + "CR"50"CB" medicamentos + "CR"60g"CB" de Crack)\n"CR"Armas "CB"(Ganancias "CR"$12.250"CB" + "CR"80 piezas de armas"CB")");
				case 6: format(string, 350, ""CR"Productos de 24/7 "CB"(Ganancias "CR"$14.500"CB")\n"CR"Ropa "CB"(Ganancias "CR"$14.500"CB")\n"CR"Drogas "CB"(Ganancias "CR"$14.500"CB" + "CR"55"CB" medicamentos + "CR"65g"CB" de Crack)\n"CR"Armas "CB"(Ganancias "CR"$14.500"CB" + "CR"85 piezas de armas"CB")");
				default: format(string, 350, ""CR"Productos de 24/7 "CB"(Ganancias "CR"$14.500"CB")\n"CR"Ropa "CB"(Ganancias "CR"$14.500"CB")\n"CR"Drogas "CB"(Ganancias "CR"$14.500"CB" + "CR"55"CB" medicamentos + "CR"65g"CB" de Crack)\n"CR"Armas "CB"(Ganancias "CR"$14.500"CB" + "CR"85 piezas de armas"CB")");
			}
			MostrarDialog(playerid, CAMIOND,DIALOG_STYLE_LIST, "�Qu� deseas transportar?", string, "Cargar","Salir");
			return 1;
		}
		else return Mensaje(playerid, -1, "Necesitas necesitas estar en un cami�n.");
	}
	// Descargando camion (Camionero)
	if(EnPuntoCamionero(playerid))
	{
		if(!IsPlayerInAnyVehicle(playerid)) return 1;
		if(CAMION(vehicleid) || CAMIONVIP(vehicleid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			BorrarCheckpoint(playerid);
			AbrirPuertasCamionero(playerid);
			CongelarEx(playerid);
			GameTextForPlayer(playerid, "~r~~<~ DESCARGANDO CAMION ~>~", 10000, 3);
			SetTimerEx("DescargandoCamion",10000,false,"d",playerid);
			return 1;
		}
	}
	// Pago Camionero
	else if(EstaEn(playerid, 7.0, -1699.9927,10.2943,3.5547))
	{
		if(!IsPlayerInAnyVehicle(playerid)) return 1;
		if(CAMION(vehicleid) || CAMIONVIP(vehicleid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			Respawnear(vehicleid);
			BorrarCheckpoint(playerid);
			Chofer[vehicleid] = INVALID_PLAYER_ID;
			CamionCargado[vehicleid] = 0;
			PlayerTemp[playerid][pt_Camionero] = false;
			if(gettimeVariable > TimerCamionero[playerid])
		    {
				if(PlayerTemp[playerid][RoboConJob] == 1) Mensaje(playerid, -1, "Nos lleg� un informe de que "CR"asaltaste una tienda"CB" durante tu trabajo, "CR"ahora no se te pagar�"CB"."),PlayerTemp[playerid][RoboConJob] = 0;
				else PagoCamionero(playerid, PlayerInfo[playerid][pNivelCamionero], Carga[playerid]);
    		}
    		else
    		{
    		    new string[150];
    		    new numero = 300-(TimerCamionero[playerid] - gettimeVariable);
				format(string, sizeof(string), "El jugador {FF3300}%s(ID: %d)"CB" fue expulsado por el anticheat. Raz�n: {FF3300}Speed Hack (%d:1:%d)"CB".",NombreJugador(playerid),playerid,Carga[playerid],numero);
				MensajedeCheater(string);
				ExpulsarJugador(playerid,"SH:Camionero");
    		}
    		TimerCamionero[playerid] = 0;
    		Carga[playerid] = 0;
			return 1;
		}
	}
	// Pago Pescador
	else if(EstaEn(playerid, 7.0, 2786.7866,-2594.8406,-1.0248))
	{
		if(BOTE(vehicleid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && RecorridoPescador[playerid] == 1)
		{
			new atext[20], string[150], paga, peso;
			switch(pesca[playerid])
			{
				case 1: atext = "la tortuga";
				case 2: atext = "el delfin";
				case 3: atext = "el tiburon";
			}
			DestroyDynamicObjectEx(pescador[playerid]);
			Respawnear(vehicleid);
			SetPosEx(playerid,2773.6609,-2597.2288,2.3560,357.6909,0,0);
			BorrarCheckpoint(playerid);
			permisopesca[playerid] = 0;
			RemovePlayerMapIcon(playerid, 99);
			GangZoneHideForPlayer(playerid, mares);
			RecorridoPescador[playerid] = 0;
			switch(PlayerInfo[playerid][pNivelPescador])
			{
				case 1:
				{
					new intento = random(10);
					switch(intento)
					{
						case 0: { peso=245; paga=9000; }
                        case 1: { peso=263; paga=10800; }
                        case 2: { peso=257; paga=12300; }
                        case 3: { peso=310; paga=14000; }
                        case 4: { peso=263; paga=14800; }
                        case 5: { peso=257; paga=15400; }
                        case 6: { peso=310; paga=16800; }
                        case 7: { peso=263; paga=18000; }
                        case 8: { peso=257; paga=20000; }
						default: { peso=257; paga=20000; }
					}
				}
				case 2:
				{
					new intento = random(3);
					switch(intento)
					{
						case 0: { peso=270; paga=23000; }
						case 1: { peso=294; paga=22000; }
						case 2: { peso=282; paga=21000; }
					}
				}
				default:
				{
					new intento = random(3);
					switch(intento)
					{
						case 0: { peso=302; paga=24000; }
						case 1: { peso=327; paga=23500; }
						case 2: { peso=315; paga=23200; }
					}
				}
			}
			format(string, 150, "�Excelente pesca! Te pagamos "CR"$%s"CB" por %s de "CR"%dkg"CB" que acabas de entregar.", ConvertirNumero(paga), atext, peso);
			Mensaje(playerid, -1, string);
			if(random(5) == 3) 
			{
				va_SendClientMessage(playerid, -1, "Has recibido "CR"%d"CB" "Moneda3".", PlayerInfo[playerid][pNivelPescador]);
				PlayerInfo[playerid][Credits] += PlayerInfo[playerid][pNivelPescador];
			}
			Mensaje(playerid,-1,"Si quieres volver a pescar, tienes que solicitar un nuevo "CR"/permiso pesca"CB".");
			DarDinero(playerid,paga);
			new exp = random(3);
			switch(exp)
			{
				case 0,1: Mensaje(playerid,-1,"Esta vez no ganaste habilidad.");
				case 2:
				{
					if(PlayerInfo[playerid][pExpPescador] < 49)
					{
						Mensaje(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad.");
						PlayerInfo[playerid][pExpPescador]++;
					}
					else if(PlayerInfo[playerid][pExpPescador] >= 49)
					{
						ShowTDN(playerid, "~p~Felicidades~w~, has aumentado tu nivel de pescador.");
						PlayerInfo[playerid][pExpPescador] = 0;
						PlayerInfo[playerid][pNivelPescador]++;
					}
				}
			}
			if(peso == 310 && pesca[playerid] == 1) RevisarLogro(playerid, 4);
		}
	}
	// Pago Transportista
	else if(EstaEn(playerid, 7.0, 1249.2573,-1259.2993,13.1868) || EstaEn(playerid, 7.0, 1051.3204,2114.5112,10.8203) || EstaEn(playerid, 7.0, -266.4255,-2158.6018,29.4682) || EstaEn(playerid, 7.0, -2112.7671,208.0987,35.8354) || EstaEn(playerid, 7.0, -1733.8561,183.5594,4.1820) || EstaEn(playerid, 7.0, 2811.3745,1647.1511,11.448) || EstaEn(playerid, 7.0, 2407.3540,1905.3885,6.6388) || EstaEn(playerid, 7.0, 784.2197,2015.2906,6.6440) || EstaEn(playerid, 7.0, 2317.9001,1733.5999,11.3988) || EstaEn(playerid, 7.0, 1903.3030,961.9927,11.4467) || EstaEn(playerid, 7.0, 2606.3787,-2199.3674,14.1711) || EstaEn(playerid, 7.0, 1612.9545,1721.2943,11.4427))
	{
		if(IsPlayerInAnyVehicle(playerid))
		if(DFT(vehicleid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			if(PlayerTemp[playerid][RoboConJob] == 1) Mensaje(playerid, -1, "Nos lleg� un informe de que "CR"asaltaste una tienda"CB" durante tu trabajo, "CR"ahora no se te pagar�"CB"."),PlayerTemp[playerid][RoboConJob] = 0;
			else
			{
				new string[128], Paga;
				switch(PlayerInfo[playerid][pNivelTransportista])
				{
					case 1: Paga = 8000;
                    case 2: Paga = 10000;
                    case 3: Paga = 11500;
                    case 4: Paga = 13000;
                    case 5: Paga = 13900;
                    case 6: Paga = 15000;
				}
				format(string,sizeof(string),"Has terminado tu recorrido, ganas "CR"$%s"CB".",ConvertirNumero(Paga));
				Mensaje(playerid, -1, string);
				DarDinero(playerid, Paga);
				ExpTrans(playerid);
				if(random(3) == 1)
				{
					va_SendClientMessage(playerid, -1, "Has recibido "CR"%d"CB" "Moneda3".", PlayerInfo[playerid][pNivelTransportista]);
					PlayerInfo[playerid][Credits] += PlayerInfo[playerid][pNivelTransportista];
				}
				new pagoextra = random(6);
				switch(pagoextra)
				{
				    case 3:
				    {
				        PlayerInfo[playerid][pPatines] = 1;
						Mensaje(playerid,-1,"�Enhorabuena! Encontraste unos "CR"Patines"CB" mientras trabajaste como transportista.");
		    		}
				}
			}

		    for(new bl = 0; bl < 5; bl++) DestroyDynamicObjectEx(objetost[bl][playerid]);
			Viaje[playerid] = 0;
			tviaje[playerid] = 0;
			BorrarCheckpoint(playerid);
			return 1;
		}
	}
	// Basurero CP Inicio
	else if(EstaEn(playerid, 5.0,-178.6163,-1618.1124,3.4908) && BASU(vehicleid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	 	foreach(new i : Player)
	 	{
	 	    if(TieneTrabajo(i, BASURERO) && IsPlayerInAnyVehicle(i) && GetPlayerVehicleSeat(i) == 1)
	 	    {
	 	        if(RopaBasu[playerid] == 1 || PlayerInfo[playerid][VIP] > 0)
	 	        {
					new vida = GetPlayerVehicleID(i);
	 	            if(BASU(vida) && vida == vehicleid && i != playerid)
	 	            {
						Companero[i] = playerid;
						Companero[playerid] = i;
						PlayerTemp[i][pt_RolBasurero] = 1;
						PlayerTemp[playerid][pt_RolBasurero] = 2;
						Mensaje(playerid,-1,"Muy bien, continua el recorrido.");
						TimerBasurero[playerid] = gettimeVariable + 270;
						TimerBasurero[i] = gettimeVariable + 270;
						PBasura[playerid] = 1;
						PBasura[i] = 1;
						SetTimerEx("PrimerP",500,false,"d",playerid);
						BorrarCheckpoint(playerid);
						return 1;
					}
				}
				else
				{
					Mensaje(playerid,-1,"{999966}Las cuentas comunes necesitan la vestimenta de basurero para trabajar.");
					Mensaje(playerid,-1,"{999966}Si quieres trabajar con cualquier ropa, necesitas una cuenta VIP.");
					return 1;
				}
	 	    }
	 	}
	 	return Mensaje(playerid,-1,"Necesitas un compa�ero basurero para trabajar.");
	}
	// Basurero CP Fin
	else if(EstaEn(playerid, 5.0,-135.9441,-1564.9911,6.7356))
	{
	    new Float:z_rot;
		GetVehicleZAngle(vehicleid, z_rot);
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(vehicleid) && RecorridoBasu[playerid] != 0 && z_rot < 200)
	    {
 			Respawnear(vehicleid);
			BorrarCheckpoint(Companero[playerid]);
			BorrarCheckpoint(playerid);
			PBasura[Companero[playerid]] = 0;
			PBasura[playerid] = 0;
		    if(gettimeVariable > TimerBasurero[playerid])
		    {
				PagoBasurero(playerid, PlayerInfo[playerid][pNivelBasurero]);
	   	        DarHabilidadBasurero(playerid, PlayerInfo[playerid][pNivelBasurero]);
    		}
   		 	else
    		{
    		    new string[250];
    		    new numero = 270-(TimerBasurero[playerid] - gettimeVariable);
				format(string, sizeof(string), "[!]"CB" El anticheat ha detectado que el usuario "CR"%s(ID:%d)"CB" es posible Speed Hack (Basurero (C) - Tiempo: %ds - Ruta: %d).", NombreJugador(playerid), playerid, numero, RecorridoBasu[playerid]);
				MensajeAdmin(COLOR_CHEAT, string, 3);
    		}
    		if(gettimeVariable > TimerBasurero[Companero[playerid]])
		    {
				PagoBasurero(Companero[playerid], PlayerInfo[Companero[playerid]][pNivelBasurero]);
	 	        DarHabilidadBasurero(Companero[playerid], PlayerInfo[Companero[playerid]][pNivelBasurero]);
    		}
    		else
    		{
    		    new string[250];
    		    new numero = 270-(TimerBasurero[Companero[playerid]] - gettimeVariable);
				format(string, sizeof(string), "[!]"CB" El anticheat ha detectado que el usuario "CR"%s(ID:%d)"CB" es posible Speed Hack (Basurero (R) - Tiempo: %ds - Ruta: %d).", NombreJugador(Companero[playerid]), Companero[playerid], numero, RecorridoBasu[Companero[playerid]]);
				MensajeAdmin(COLOR_CHEAT, string, 3);
    		}
			RecorridoBasu[Companero[playerid]] = 0;
			RecorridoBasu[playerid] = 0;
			TimerBasurero[Companero[playerid]] = 0;
			TimerBasurero[playerid] = 0;
			Companero[Companero[playerid]] = -1;
			Companero[playerid] = -1;
		}
		else return Mensaje(playerid,-1,"Acomoda el camion por la parte posterior al momento de entregarlo.");
    }
	else if(procesarCheckpointsBasurero(playerid)) return 1;
	if(EstaEn(playerid, 5.0,1526.0902,-1017.4032,23.5809)) return CriminalCheck(playerid,1,1);
	if(EstaEn(playerid, 5.0,1466.6655,-1031.2390,23.2810)) return CriminalCheck(playerid,1,2);
	if(EstaEn(playerid, 5.0,1607.3558,-1703.0073,13.2540)) return CriminalCheck(playerid,2,1);
	if(EstaEn(playerid, 5.0,1530.5500,-1673.8456,13.0874)) return CriminalCheck(playerid,2,2);
	if(EstaEn(playerid, 5.0,1374.1508,2695.1580,10.5291))  return CriminalCheck(playerid,3,1);
	if(EstaEn(playerid, 5.0,1433.7010,2671.2415,10.6719))  return CriminalCheck(playerid,3,2);
	if(EstaEn(playerid, 5.0,1218.0623,-874.5742,42.6080))  return CriminalCheck(playerid,4,1);
	if(EstaEn(playerid, 5.0,1175.5085,-905.2410,43.0075))  return CriminalCheck(playerid,4,2);
	if(EstaEn(playerid, 5.0,2337.8752,-1366.0424,24.0111)) return CriminalCheck(playerid,5,1);
	if(EstaEn(playerid, 5.0,2368.6667,-1361.7528,23.8382)) return CriminalCheck(playerid,5,2);
	if(EstaEn(playerid, 5.0,-2157.8093,654.7702,51.9927))
	{
		if(PlayerTemp[playerid][TieneEncargo] > 0 && Encargo[PlayerTemp[playerid][TieneEncargo]][IdColega] == playerid) BorrarCheckpoint(playerid),FinMisionCriminal(PlayerTemp[playerid][TieneEncargo]);
		return 1;
	}
  	if(EstaEn(playerid, 7.0,2431.9109,-1672.5043,13.6113) || EstaEn(playerid, 7.0,1091.5337,-1245.3550,15.8272) || EstaEn(playerid, 7.0,1520.5901,-1473.3662,9.5000) || EstaEn(playerid, 7.0,2206.5029,-2296.2642,14.7647))
   	{
   	    foreach(new f : Fabricas)
		{
			if(Fabricas[f][pBanda] == PlayerInfo[playerid][jMiembro])
			{
				if(vehicleid == Fabricas[f][Auto1F])
				{
					if(VendiendoMeta[f] == 1)
					{
						if(VehiculoConCajas[Fabricas[f][Auto1F]] != 5) return Mensaje(playerid,-1,"Necesitas tener todas las cajas de metanfetamina en la camioneta para poder venderlas.");
						BorrarCheckpoint(playerid);
						new caca;
						if(MetanfetaminaEnSlot[f] == 1) caca = 6362;
						if(MetanfetaminaEnSlot[f] == 2) caca = 8296;
						if(MetanfetaminaEnSlot[f] == 3) caca = 9121;
						if(MetanfetaminaEnSlot[f] == 4) caca = 10665;
						new coco = caca + random(169), Float:Pos[3],stringas[128];
						GetVehiclePos(Fabricas[f][Auto1F], Pos[0],Pos[1],Pos[2]);
						VendiendoMeta[f] = 0;
						DarDineroFabrica(f,1000000);
						for(new bl = 0; bl < 5; bl++)
						{
							DestroyDynamicObjectEx(CajaMeta[f][bl]);
							CajaMeta[f][bl] = CreateDynamicObject(1271,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000,50,50);
						}
						VehiculoConCajas[Fabricas[f][Auto1F]] = 0;
						GuardarFabrica(f);
						ActualizarCajasMeta(f);
						foreach(new i : StreamedPlayer[playerid])
						{
							if(EstaEn(i,8.0, Pos[0],Pos[1],Pos[2]))
							{
								if(PlayerInfo[i][jMiembro] == Fabricas[f][pBanda])
								{
									DarDinero(i,coco);
									format(stringas,sizeof(stringas),"Metanfetamina transportada con �xito, recibes "CR"$%d"CB" por haber participado.",coco);
									Mensaje(i,-1,stringas);
								}
							}
						}
						format(stringas,sizeof(stringas),"Tu f�brica recibi� "CR"$1.000.000"CB" por la venta de la metanfetamina.");
						MandarMensajeFabrica(f,stringas);
					}
				}
			}
		}
   	}
   	if(EstaEn(playerid, 5.0,-27.3778,2337.5212,24.1406) || EstaEn(playerid, 5.0,-1853.9966,123.2759,15.1172) || EstaEn(playerid, 5.0,-1043.5349,1546.3799,33.0007) || EstaEn(playerid, 5.0,-2177.7957,1224.2549,33.9297) || EstaEn(playerid, 5.0, -89.8125,1159.8608,19.7422) || EstaEn(playerid, 5.0, 1208.2671,-980.7623,43.4766)|| EstaEn(playerid, 5.0, 2367.0481,-651.8002,127.2791) || EstaEn(playerid, 5.0, -1519.1171,2572.1028,55.9212))
	{
	    Mensaje(playerid,-1,"Carga los "CR"tanques"CB" en la camioneta y regr�salos a la {ff3e3e}f�brica"CB".");
		foreach(new j : Fabricas)
		{
		    if(PlayerInfo[playerid][jMiembro] == Fabricas[j][pBanda])
		    {
		        ActualizarBarriles(vehicleid,j);
				BorrarCheckpoint(playerid);
		    }
	    }
	}
	else return BorrarCheckpoint(playerid);
   	return 1;
}

Funcion:PrimerP(playerid)
{
   	new recorridobasurero = random(4);
	switch(recorridobasurero)
	{
		case 0,3:
		{
            RecorridoBasu[playerid] = 4;
			RecorridoBasu[Companero[playerid]] = 4;
			PuntoBaX[playerid] = 259.6662; PuntoBaY[playerid] = -1435.2172; PuntoBaZ[playerid] = 13.5396; PuntoBaA[playerid] = 5.0;
		}
		case 1:
		{
            RecorridoBasu[playerid] = 2;
			RecorridoBasu[Companero[playerid]] = 2;
			PuntoBaX[playerid] = -110.2728; PuntoBaY[playerid] = -1169.3069; PuntoBaZ[playerid] = 2.4092; PuntoBaA[playerid] = 5.0;
		}
		case 2:
		{
            RecorridoBasu[playerid] = 3;
			RecorridoBasu[Companero[playerid]] = 3;
			PuntoBaX[playerid] = 183.3738; PuntoBaY[playerid] = -1393.7588; PuntoBaZ[playerid] = 47.3034; PuntoBaA[playerid] = 5.0;
		}
	}
	CrearCheckpoint(playerid,PuntoBaX[playerid],PuntoBaY[playerid],PuntoBaZ[playerid], PuntoBaA[playerid]);
	return 1;
}

Funcion:PuntoB(playerid)
{
    Mensaje(playerid,-1,"Baja a recolectar la basura.");
	switch(RecorridoBasu[playerid])
	{
		case 1:
		{
			switch(PBasura[playerid])
			{
				case 1: { PuntoBaX[playerid] = 990.8474;  PuntoBaY[playerid] = -1811.6334; PuntoBaZ[playerid] = 14.2317; PuntoBaA[playerid] = 2.0; }
				case 2: { PuntoBaX[playerid] = 1548.8268; PuntoBaY[playerid] = -1879.8169; PuntoBaZ[playerid] = 13.5469; PuntoBaA[playerid] = 2.0; }
				case 3: { PuntoBaX[playerid] = 2089.1584; PuntoBaY[playerid] = -1908.3224; PuntoBaZ[playerid] = 13.5469; PuntoBaA[playerid] = 2.0; }
				case 4: { PuntoBaX[playerid] = 2222.9968; PuntoBaY[playerid] = -1793.5454; PuntoBaZ[playerid] = 13.5625; PuntoBaA[playerid] = 2.0; }
				case 5: { PuntoBaX[playerid] = 2114.7368; PuntoBaY[playerid] = -1607.7476; PuntoBaZ[playerid] = 13.5625; PuntoBaA[playerid] = 2.0; }
				case 6: { PuntoBaX[playerid] = 1994.0798; PuntoBaY[playerid] = -1681.3557; PuntoBaZ[playerid] = 13.5469; PuntoBaA[playerid] = 2.0; }
				case 7: { PuntoBaX[playerid] = 1764.0529; PuntoBaY[playerid] = -1724.7991; PuntoBaZ[playerid] = 13.5469; PuntoBaA[playerid] = 2.0; }
				case 8: { PuntoBaX[playerid] = 1735.8999; PuntoBaY[playerid] = -1589.8905; PuntoBaZ[playerid] = 13.5455; PuntoBaA[playerid] = 2.0; }
				case 9: { PuntoBaX[playerid] = 1390.0305; PuntoBaY[playerid] = -1581.1624; PuntoBaZ[playerid] = 13.5469; PuntoBaA[playerid] = 2.0; }
				case 10: { PuntoBaX[playerid] = 1365.0758; PuntoBaY[playerid] = -1155.3657; PuntoBaZ[playerid] = 23.8660; PuntoBaA[playerid] = 2.0; }
				case 11: { PuntoBaX[playerid] = 1097.2964; PuntoBaY[playerid] = -1133.7189; PuntoBaZ[playerid] = 23.8281; PuntoBaA[playerid] = 2.0; }
				case 12: { PuntoBaX[playerid] = 1046.2882; PuntoBaY[playerid] = -1304.1703; PuntoBaZ[playerid] = 13.5469; PuntoBaA[playerid] = 2.0; }
				case 13: { PuntoBaX[playerid] = 679.1686; PuntoBaY[playerid] = -1311.9562; PuntoBaZ[playerid] = 13.6760; PuntoBaA[playerid] = 2.0; }
				case 14: { PuntoBaX[playerid] = 483.6781; PuntoBaY[playerid] = -1277.2889; PuntoBaZ[playerid] = 15.6511; PuntoBaA[playerid] = 2.0; }
				case 15: { PuntoBaX[playerid] = 345.4417; PuntoBaY[playerid] = -1368.1273; PuntoBaZ[playerid] = 14.3875; PuntoBaA[playerid] = 2.0; }
				case 16: { PuntoBaX[playerid] = 197.3550; PuntoBaY[playerid] = -1743.2972; PuntoBaZ[playerid] = 4.5101; PuntoBaA[playerid] = 2.0; }
				case 17: { PuntoBaX[playerid] = 390.4010; PuntoBaY[playerid] = -1779.2229; PuntoBaZ[playerid] = 5.5900; PuntoBaA[playerid] = 2.0; }
			}
	    }
		case 2:
		{
			switch(PBasura[playerid])
			{
				case 1: { PuntoBaX[playerid] = -103.7799; PuntoBaY[playerid] = -1172.5127; PuntoBaZ[playerid] = 3.5240; PuntoBaA[playerid] = 2.0; }
				case 2: { PuntoBaX[playerid] = -345.9767; PuntoBaY[playerid] = -756.6649; PuntoBaZ[playerid] = 30.8484; PuntoBaA[playerid] = 2.0; }
				case 3: { PuntoBaX[playerid] = -426.7870; PuntoBaY[playerid] = -433.8864; PuntoBaZ[playerid] = 17.8884; PuntoBaA[playerid] = 2.0; }
				case 4: { PuntoBaX[playerid] = -916.0715; PuntoBaY[playerid] = -446.1450; PuntoBaZ[playerid] = 29.7584; PuntoBaA[playerid] = 2.0; }
				case 5: { PuntoBaX[playerid] = -1904.3972; PuntoBaY[playerid] = -567.3438; PuntoBaZ[playerid] = 25.5184; PuntoBaA[playerid] = 2.0; }
				case 6: { PuntoBaX[playerid] = -2244.9705; PuntoBaY[playerid] = -123.7534; PuntoBaZ[playerid] = 36.0884; PuntoBaA[playerid] = 2.0; }
				case 7: { PuntoBaX[playerid] = -2245.8291; PuntoBaY[playerid] = 84.2427; PuntoBaZ[playerid] = 35.9984; PuntoBaA[playerid] = 2.0; }
				case 8: { PuntoBaX[playerid] = -2166.9063; PuntoBaY[playerid] = 201.9160; PuntoBaZ[playerid] = 35.9784; PuntoBaA[playerid] = 2.0; }
				case 9: { PuntoBaX[playerid] = -2033.2213; PuntoBaY[playerid] = 313.7436; PuntoBaZ[playerid] = 35.9284; PuntoBaA[playerid] = 2.0; }
				case 10: { PuntoBaX[playerid] = -2013.7318; PuntoBaY[playerid] = 137.0096; PuntoBaZ[playerid] = 28.3484; PuntoBaA[playerid] = 2.0; }
				case 11: { PuntoBaX[playerid] = -1813.1581; PuntoBaY[playerid] = -122.9985; PuntoBaZ[playerid] = 6.3384; PuntoBaA[playerid] = 2.0; }
				case 12: { PuntoBaX[playerid] = -1824.8383; PuntoBaY[playerid] = -559.8033; PuntoBaZ[playerid] = 17.1384; PuntoBaA[playerid] = 2.0; }
				case 13: { PuntoBaX[playerid] = -815.8467; PuntoBaY[playerid] = -1021.9445; PuntoBaZ[playerid] = 83.8480; PuntoBaA[playerid] = 2.0; }
				case 14: { PuntoBaX[playerid] = -44.1083; PuntoBaY[playerid] = -1525.1487; PuntoBaZ[playerid] = 2.2014; PuntoBaA[playerid] = 2.0; }
			}
	    }
	    case 3:
		{
			switch(PBasura[playerid])
			{
				case 1: { PuntoBaX[playerid] = 188.6838; PuntoBaY[playerid] = -1395.9762; PuntoBaZ[playerid] = 47.2736; PuntoBaA[playerid] = 2.0; }
				case 2: { PuntoBaX[playerid] = 353.9030; PuntoBaY[playerid] = -1277.7860; PuntoBaZ[playerid] = 53.8950; PuntoBaA[playerid] = 2.0; }
				case 3: { PuntoBaX[playerid] = 686.0798; PuntoBaY[playerid] = -1062.7533; PuntoBaZ[playerid] = 49.6633; PuntoBaA[playerid] = 2.0; }
				case 4: { PuntoBaX[playerid] = 871.3945; PuntoBaY[playerid] = -868.6337; PuntoBaZ[playerid] = 77.5458; PuntoBaA[playerid] = 2.0; }
				case 5: { PuntoBaX[playerid] = 1081.2075; PuntoBaY[playerid] = -778.0049; PuntoBaZ[playerid] = 107.7854; PuntoBaA[playerid] = 2.0; }
				case 6: { PuntoBaX[playerid] = 912.7013; PuntoBaY[playerid] = -677.6242; PuntoBaZ[playerid] = 116.8398; PuntoBaA[playerid] = 2.0; }
				case 7: { PuntoBaX[playerid] = 808.1866; PuntoBaY[playerid] = -788.2479; PuntoBaZ[playerid] = 68.7993; PuntoBaA[playerid] = 2.0; }
				case 8: { PuntoBaX[playerid] = 266.5842; PuntoBaY[playerid] = -1101.4108; PuntoBaZ[playerid] = 81.7877; PuntoBaA[playerid] = 2.0; }
				case 9: { PuntoBaX[playerid] = 343.5382; PuntoBaY[playerid] = -1193.1310; PuntoBaZ[playerid] = 76.5068; PuntoBaA[playerid] = 2.0; }
				case 10: { PuntoBaX[playerid] = 554.6530; PuntoBaY[playerid] = -1161.1757; PuntoBaZ[playerid] = 54.4223; PuntoBaA[playerid] = 2.0; }
				case 11: { PuntoBaX[playerid] = 322.6987; PuntoBaY[playerid] = -1189.3054; PuntoBaZ[playerid] = 76.3568; PuntoBaA[playerid] = 2.0; }
				case 12: { PuntoBaX[playerid] = 175.0909; PuntoBaY[playerid] = -1387.1046; PuntoBaZ[playerid] = 48.6300; PuntoBaA[playerid] = 2.0; }
				case 13: { PuntoBaX[playerid] = -78.5097; PuntoBaY[playerid] = -1592.9054; PuntoBaZ[playerid] = 2.6172; PuntoBaA[playerid] = 2.0; }
    		}
	    }
	    case 4:
		{
			switch(PBasura[playerid])
			{
				case 1: {  PuntoBaX[playerid] = 263.6307;  PuntoBaY[playerid] = -1438.7028;  PuntoBaZ[playerid] = 13.7373;  PuntoBaA[playerid] = 2.0; }
				case 2: {  PuntoBaX[playerid] = 721.1824;  PuntoBaY[playerid] = -1121.8177;  PuntoBaZ[playerid] = 18.2286;  PuntoBaA[playerid] = 2.0; }
				case 3: {  PuntoBaX[playerid] = 1106.3229; PuntoBaY[playerid] = -964.0125;   PuntoBaZ[playerid] = 42.6446;  PuntoBaA[playerid] = 2.0; }
				case 4: {  PuntoBaX[playerid] = 1254.5852; PuntoBaY[playerid] = -1106.2231;  PuntoBaZ[playerid] = 25.2560;  PuntoBaA[playerid] = 2.0; }
				case 5: {  PuntoBaX[playerid] = 1188.3806; PuntoBaY[playerid] = -1499.1213;  PuntoBaZ[playerid] = 13.5469;  PuntoBaA[playerid] = 2.0; }
				case 6: {  PuntoBaX[playerid] = 1289.6144; PuntoBaY[playerid] = -1837.6057;  PuntoBaZ[playerid] = 13.5469;  PuntoBaA[playerid] = 2.0; }
				case 7: {  PuntoBaX[playerid] = 1045.2313; PuntoBaY[playerid] = -1669.8091;  PuntoBaZ[playerid] = 13.5469;  PuntoBaA[playerid] = 2.0; }
				case 8: {  PuntoBaX[playerid] = 932.4356;  PuntoBaY[playerid] = -1480.9509;  PuntoBaZ[playerid] = 13.5361;  PuntoBaA[playerid] = 2.0; }
				case 9: {  PuntoBaX[playerid] = 857.4956;  PuntoBaY[playerid] = -1382.1349;  PuntoBaZ[playerid] = 13.7507;  PuntoBaA[playerid] = 2.0; }
				case 10: { PuntoBaX[playerid] = 478.3005;  PuntoBaY[playerid] = -1497.9749;  PuntoBaZ[playerid] = 20.4542;  PuntoBaA[playerid] = 2.0; }
				case 11: { PuntoBaX[playerid] = 655.2776;  PuntoBaY[playerid] = -1680.0502;  PuntoBaZ[playerid] = 14.4416;  PuntoBaA[playerid] = 2.0; }
				case 12: { PuntoBaX[playerid] = 802.7533;  PuntoBaY[playerid] = -1756.1191;  PuntoBaZ[playerid] = 13.5469;  PuntoBaA[playerid] = 2.0; }
				case 13: { PuntoBaX[playerid] = 108.2038;  PuntoBaY[playerid] = -1525.6523;  PuntoBaZ[playerid] = 7.0480;   PuntoBaA[playerid] = 2.0; }
    		}
	    }
	}
	CrearCheckpoint(playerid,PuntoBaX[playerid],PuntoBaY[playerid],PuntoBaZ[playerid], PuntoBaA[playerid]);
}

Funcion:Recolectar(playerid)
{
	if(!IsPlayerConnected(Companero[playerid])) return 1;
	new item = random(21);
	switch(item)
	{
	    case 0:
	    {
	        Mensaje(playerid,-1,"Has encontrado "CR"50gr de crack"CB" y le diste la mitad a tu compa�ero.");
	        Mensaje(Companero[playerid],-1,"Tu compa�ero encontr� {F00000}50gr de crack"CB" y te dio la mitad.");
	        PlayerInfo[playerid][pCrack] += 25;
	        PlayerInfo[Companero[playerid]][pCrack] += 25;
	    }
	    case 3:
	    {
	        Mensaje(playerid,-1,"Has encontrado un "CR"par de manoplas"CB" y le entregas una a tu compa�ero.");
	        Mensaje(Companero[playerid],-1,"Tu compa�ero ha encontrado un "CR"par de manoplas"CB" y te entreg� una.");
			DarArma(playerid,1);
			DarArma(Companero[playerid],1);
	    }
	    case 6:
	    {
	        Mensaje(playerid,-1,"Has encontrado una billetera con "CR"$20.000"CB" y le diste la mitad a tu compa�ero.");
	        Mensaje(Companero[playerid],-1,"Tu compa�ero encontr� una billetera con "CR"$20.000"CB", y te dio la mitad.");
			DarDinero(playerid,10000);
			DarDinero(Companero[playerid],10000);
	    }
	    case 9:
	    {
	        Mensaje(playerid,-1,"Has encontrado "CR"50 medicamentos"CB" y le diste la mitad a tu compa�ero.");
	        Mensaje(Companero[playerid],-1,"Tu compa�ero encontr� "CR"50 medicamentos"CB" y te dio la mitad.");
	        PlayerInfo[playerid][pCrack] += 25;
	        PlayerInfo[Companero[playerid]][pCrack] += 25;
	    }
	    case 12:
	    {
	        Mensaje(playerid,-1,"Has encontrado "CR"12 "Moneda1""CB" y le diste la mitad a tu compa�ero.");
	        Mensaje(Companero[playerid],-1,"Tu compa�ero encontr� "CR"12 "Moneda1""CB" y te dio la mitad.");
	        PlayerInfo[playerid][Moneda] += 6;
	        PlayerInfo[Companero[playerid]][Moneda] += 6;
	    }
	    case 15:
	    {
	        Mensaje(playerid,-1,"Has encontrado "CR"50gr de marihuana"CB" y le diste la mitad a tu compa�ero.");
	        Mensaje(Companero[playerid],-1,"Tu compa�ero encontr� {F00000}50gr de marihuana"CB" y te dio la mitad.");
	        PlayerInfo[playerid][pMarihuana] += 25;
	        PlayerInfo[Companero[playerid]][pMarihuana] += 25;
	    }
		case 18:
		{
			if(random(8) == 3)
			{
				va_SendClientMessage(playerid, -1, "Has encontrado "CR"%d"CB" "Moneda3" y le diste "CR"%d"CB" a tu compa�ero.", PlayerInfo[playerid][pNivelBasurero] + PlayerInfo[Companero[playerid]][pNivelBasurero],PlayerInfo[Companero[playerid]][pNivelBasurero]);
				PlayerInfo[playerid][Credits] += PlayerInfo[playerid][pNivelBasurero];
				PlayerInfo[Companero[playerid]][Credits] += PlayerInfo[Companero[playerid]][pNivelBasurero];
			}
		}
	}
	Mensaje(playerid, -1, "Sube al cami�n de basura para continuar.");
	recogiendo[playerid] = 0;
	PBasura[playerid]++;
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	if(RecorridoBasu[playerid] == 1)
	{
		switch(PBasura[playerid])
		{
			case 2: { PuntoBaX[Companero[playerid]] = 1548.8938; PuntoBaY[Companero[playerid]] = -1874.5441; PuntoBaZ[Companero[playerid]] = 13.3828; PuntoBaA[Companero[playerid]] = 5.0; }
			case 3: { PuntoBaX[Companero[playerid]] = 2084.0916; PuntoBaY[Companero[playerid]] = -1908.8611; PuntoBaZ[Companero[playerid]] = 13.3828; PuntoBaA[Companero[playerid]] = 5.0; }
			case 4: { PuntoBaX[Companero[playerid]] = 2218.6541; PuntoBaY[Companero[playerid]] = -1793.9825; PuntoBaZ[Companero[playerid]] = 13.1953; PuntoBaA[Companero[playerid]] = 5.0; }
			case 5: { PuntoBaX[Companero[playerid]] = 2115.4761; PuntoBaY[Companero[playerid]] = -1613.1133; PuntoBaZ[Companero[playerid]] = 13.3904; PuntoBaA[Companero[playerid]] = 5.0; }
			case 6: { PuntoBaX[Companero[playerid]] = 1999.2738; PuntoBaY[Companero[playerid]] = -1679.7145; PuntoBaZ[Companero[playerid]] = 13.3828; PuntoBaA[Companero[playerid]] = 5.0; }
			case 7: { PuntoBaX[Companero[playerid]] = 1765.4800; PuntoBaY[Companero[playerid]] = -1729.7675; PuntoBaZ[Companero[playerid]] = 13.3828; PuntoBaA[Companero[playerid]] = 5.0; }
			case 8: { PuntoBaX[Companero[playerid]] = 1738.8538; PuntoBaY[Companero[playerid]] = -1595.5604; PuntoBaZ[Companero[playerid]] = 13.3814; PuntoBaA[Companero[playerid]] = 5.0; }
			case 9: { PuntoBaX[Companero[playerid]] = 1393.0277; PuntoBaY[Companero[playerid]] = -1587.4966; PuntoBaZ[Companero[playerid]] = 13.3564; PuntoBaA[Companero[playerid]] = 5.0; }
			case 10: { PuntoBaX[Companero[playerid]] = 1360.2289; PuntoBaY[Companero[playerid]] = -1162.8208; PuntoBaZ[Companero[playerid]] = 23.7095; PuntoBaA[Companero[playerid]] = 5.0; }
			case 11: { PuntoBaX[Companero[playerid]] = 1098.3059; PuntoBaY[Companero[playerid]] = -1139.8910; PuntoBaZ[Companero[playerid]] = 23.6563; PuntoBaA[Companero[playerid]] = 5.0; }
			case 12: { PuntoBaX[Companero[playerid]] = 1051.4209; PuntoBaY[Companero[playerid]] = -1304.8677; PuntoBaZ[Companero[playerid]] = 13.3828; PuntoBaA[Companero[playerid]] = 5.0; }
			case 13: { PuntoBaX[Companero[playerid]] = 679.4622; PuntoBaY[Companero[playerid]] = -1317.1431; PuntoBaZ[Companero[playerid]] = 13.5095; PuntoBaA[Companero[playerid]] = 5.0; }
			case 14: { PuntoBaX[Companero[playerid]] = 487.7305; PuntoBaY[Companero[playerid]] = -1280.6522; PuntoBaZ[Companero[playerid]] = 15.5305; PuntoBaA[Companero[playerid]] = 5.0; }
			case 15: { PuntoBaX[Companero[playerid]] = 344.1947; PuntoBaY[Companero[playerid]] = -1374.5900; PuntoBaZ[Companero[playerid]] = 14.2268; PuntoBaA[Companero[playerid]] = 5.0; }
			case 16: { PuntoBaX[Companero[playerid]] = 195.3670; PuntoBaY[Companero[playerid]] = -1736.5179; PuntoBaZ[Companero[playerid]] = 4.3181; PuntoBaA[Companero[playerid]] = 5.0; }
			case 17: { PuntoBaX[Companero[playerid]] = 388.9255; PuntoBaY[Companero[playerid]] = -1775.0706; PuntoBaZ[Companero[playerid]] = 5.3994; PuntoBaA[Companero[playerid]] = 5.0; }
			case 18: { PuntoBaX[Companero[playerid]] = -135.9441; PuntoBaY[Companero[playerid]] = -1564.9911; PuntoBaZ[Companero[playerid]] = 6.7356; PuntoBaA[Companero[playerid]] = 5.0; }
		}
		CrearCheckpoint(Companero[playerid],PuntoBaX[Companero[playerid]],PuntoBaY[Companero[playerid]],PuntoBaZ[Companero[playerid]], PuntoBaA[Companero[playerid]]);
	}
	else if(RecorridoBasu[playerid] == 2)
	{
		switch(PBasura[playerid])
		{
			case 2: { PuntoBaX[Companero[playerid]] = -349.6644; PuntoBaY[Companero[playerid]] = -757.6539; PuntoBaZ[Companero[playerid]] = 29.0136; PuntoBaA[Companero[playerid]] = 5.0; }
			case 3: { PuntoBaX[Companero[playerid]] = -428.8095; PuntoBaY[Companero[playerid]] = -436.5871; PuntoBaZ[Companero[playerid]] = 16.6492; PuntoBaA[Companero[playerid]] = 5.0; }
			case 4: { PuntoBaX[Companero[playerid]] = -917.4271; PuntoBaY[Companero[playerid]] = -450.9999; PuntoBaZ[Companero[playerid]] = 27.6603; PuntoBaA[Companero[playerid]] = 5.0; }
			case 5: { PuntoBaX[Companero[playerid]] = -1904.0535; PuntoBaY[Companero[playerid]] = -572.3555; PuntoBaZ[Companero[playerid]] = 24.1474; PuntoBaA[Companero[playerid]] = 5.0; }
			case 6: { PuntoBaX[Companero[playerid]] = -2248.4912; PuntoBaY[Companero[playerid]] = -124.0376; PuntoBaZ[Companero[playerid]] = 34.8783; PuntoBaA[Companero[playerid]] = 5.0; }
			case 7: { PuntoBaX[Companero[playerid]] = -2248.7205; PuntoBaY[Companero[playerid]] = 83.8178; PuntoBaZ[Companero[playerid]] = 34.8784; PuntoBaA[Companero[playerid]] = 5.0; }
			case 8: { PuntoBaX[Companero[playerid]] = -2167.4629; PuntoBaY[Companero[playerid]] = 204.8546; PuntoBaZ[Companero[playerid]] = 34.8776; PuntoBaA[Companero[playerid]] = 5.0; }
			case 9: { PuntoBaX[Companero[playerid]] = -2033.6031; PuntoBaY[Companero[playerid]] = 316.9929; PuntoBaZ[Companero[playerid]] = 34.7233; PuntoBaA[Companero[playerid]] = 5.0; }
			case 10: { PuntoBaX[Companero[playerid]] = -2010.0227; PuntoBaY[Companero[playerid]] = 137.4623; PuntoBaZ[Companero[playerid]] = 27.2469; PuntoBaA[Companero[playerid]] = 5.0; }
			case 11: { PuntoBaX[Companero[playerid]] = -1813.6909; PuntoBaY[Companero[playerid]] = -119.8742; PuntoBaZ[Companero[playerid]] = 5.2043; PuntoBaA[Companero[playerid]] = 5.0; }
			case 12: { PuntoBaX[Companero[playerid]] = -1822.1787; PuntoBaY[Companero[playerid]] = -559.9365; PuntoBaZ[Companero[playerid]] = 15.9207; PuntoBaA[Companero[playerid]] = 5.0; }
			case 13: { PuntoBaX[Companero[playerid]] = -817.4674; PuntoBaY[Companero[playerid]] = -1018.3693; PuntoBaZ[Companero[playerid]] = 83.3079; PuntoBaA[Companero[playerid]] = 5.0; }
			case 14: { PuntoBaX[Companero[playerid]] = -43.7590; PuntoBaY[Companero[playerid]] = -1519.9025; PuntoBaZ[Companero[playerid]] = 1.5263; PuntoBaA[Companero[playerid]] = 5.0; }
			case 15: { PuntoBaX[Companero[playerid]] = -135.9441; PuntoBaY[Companero[playerid]] = -1564.9911; PuntoBaZ[Companero[playerid]] = 6.7356; PuntoBaA[Companero[playerid]] = 5.0; }
		}
		CrearCheckpoint(Companero[playerid],PuntoBaX[Companero[playerid]],PuntoBaY[Companero[playerid]],PuntoBaZ[Companero[playerid]], PuntoBaA[Companero[playerid]]);
	}
	else if(RecorridoBasu[playerid] == 3)
	{
		switch(PBasura[playerid])
		{
			case 2: { PuntoBaX[Companero[playerid]] = 350.3483; PuntoBaY[Companero[playerid]] = -1273.5121; PuntoBaZ[Companero[playerid]] = 53.7532; PuntoBaA[Companero[playerid]] = 5.0; }
			case 3: { PuntoBaX[Companero[playerid]] = 680.5216; PuntoBaY[Companero[playerid]] = -1060.3474; PuntoBaZ[Companero[playerid]] = 49.4870; PuntoBaA[Companero[playerid]] = 5.0; }
			case 4: { PuntoBaX[Companero[playerid]] = 873.2125; PuntoBaY[Companero[playerid]] = -863.1124; PuntoBaZ[Companero[playerid]] = 77.5146; PuntoBaA[Companero[playerid]] = 5.0; }
			case 5: { PuntoBaX[Companero[playerid]] = 1079.9196; PuntoBaY[Companero[playerid]] = -774.5426; PuntoBaZ[Companero[playerid]] = 107.9675; PuntoBaA[Companero[playerid]] = 5.0; }
			case 6: { PuntoBaX[Companero[playerid]] = 918.6940; PuntoBaY[Companero[playerid]] = -680.4443; PuntoBaZ[Companero[playerid]] = 117.0033; PuntoBaA[Companero[playerid]] = 5.0; }
			case 7: { PuntoBaX[Companero[playerid]] = 810.9399; PuntoBaY[Companero[playerid]] = -792.6181; PuntoBaZ[Companero[playerid]] = 68.5974; PuntoBaA[Companero[playerid]] = 5.0; }
			case 8: { PuntoBaX[Companero[playerid]] = 272.8895; PuntoBaY[Companero[playerid]] = -1100.2932; PuntoBaZ[Companero[playerid]] = 81.7537; PuntoBaA[Companero[playerid]] = 5.0; }
			case 9: { PuntoBaX[Companero[playerid]] = 339.2604; PuntoBaY[Companero[playerid]] = -1189.8682; PuntoBaZ[Companero[playerid]] = 76.4328; PuntoBaA[Companero[playerid]] = 5.0; }
			case 10: { PuntoBaX[Companero[playerid]] = 549.9263; PuntoBaY[Companero[playerid]] = -1156.9595; PuntoBaZ[Companero[playerid]] = 54.1546; PuntoBaA[Companero[playerid]] = 5.0; }
			case 11: { PuntoBaX[Companero[playerid]] = 326.4816; PuntoBaY[Companero[playerid]] = -1192.4799; PuntoBaZ[Companero[playerid]] = 76.1984; PuntoBaA[Companero[playerid]] = 5.0; }
			case 12: { PuntoBaX[Companero[playerid]] = 179.2384; PuntoBaY[Companero[playerid]] = -1389.3564; PuntoBaZ[Companero[playerid]] = 47.9640; PuntoBaA[Companero[playerid]] = 5.0; }
			case 13: { PuntoBaX[Companero[playerid]] = -55.1223; PuntoBaY[Companero[playerid]] = -1594.4856; PuntoBaZ[Companero[playerid]] = 2.7740; PuntoBaA[Companero[playerid]] = 5.0; }
			case 14: { PuntoBaX[Companero[playerid]] = -135.9441; PuntoBaY[Companero[playerid]] = -1564.9911; PuntoBaZ[Companero[playerid]] = 6.7356; PuntoBaA[Companero[playerid]] = 5.0; }
		}
		CrearCheckpoint(Companero[playerid],PuntoBaX[Companero[playerid]],PuntoBaY[Companero[playerid]],PuntoBaZ[Companero[playerid]], PuntoBaA[Companero[playerid]]);
	}
	else if(RecorridoBasu[playerid] == 4)
	{
		switch(PBasura[playerid])
		{
			case 2: { PuntoBaX[Companero[playerid]] = 715.6998;   PuntoBaY[Companero[playerid]] = -1119.7213; PuntoBaZ[Companero[playerid]] = 17.9918; PuntoBaA[Companero[playerid]] = 5.0; }
			case 3: { PuntoBaX[Companero[playerid]] = 1105.8407;  PuntoBaY[Companero[playerid]] = -958.8027;  PuntoBaZ[Companero[playerid]] = 42.3986; PuntoBaA[Companero[playerid]] = 5.0; }
			case 4: { PuntoBaX[Companero[playerid]] = 1260.1581;  PuntoBaY[Companero[playerid]] = -1106.3085; PuntoBaZ[Companero[playerid]] = 25.0804; PuntoBaA[Companero[playerid]] = 5.0; }
			case 5: { PuntoBaX[Companero[playerid]] = 1193.4933;  PuntoBaY[Companero[playerid]] = -1498.0582; PuntoBaZ[Companero[playerid]] = 13.3828; PuntoBaA[Companero[playerid]] = 5.0; }
			case 6: { PuntoBaX[Companero[playerid]] = 1295.2137;  PuntoBaY[Companero[playerid]] = -1839.4456; PuntoBaZ[Companero[playerid]] = 13.3828; PuntoBaA[Companero[playerid]] = 5.0; }
			case 7: { PuntoBaX[Companero[playerid]] = 1039.8508;  PuntoBaY[Companero[playerid]] = -1670.3042; PuntoBaZ[Companero[playerid]] = 13.3828; PuntoBaA[Companero[playerid]] = 5.0; }
			case 8: { PuntoBaX[Companero[playerid]] = 932.7011;   PuntoBaY[Companero[playerid]] = -1486.6115; PuntoBaZ[Companero[playerid]] = 13.3750; PuntoBaA[Companero[playerid]] = 5.0; }
			case 9: { PuntoBaX[Companero[playerid]] = 855.2783;   PuntoBaY[Companero[playerid]] = -1392.5234; PuntoBaZ[Companero[playerid]] = 13.3664; PuntoBaA[Companero[playerid]] = 5.0; }
			case 10: { PuntoBaX[Companero[playerid]] = 483.1931;  PuntoBaY[Companero[playerid]] = -1499.0760; PuntoBaZ[Companero[playerid]] = 20.3036; PuntoBaA[Companero[playerid]] = 5.0; }
			case 11: { PuntoBaX[Companero[playerid]] = 656.1319;  PuntoBaY[Companero[playerid]] = -1675.2115; PuntoBaZ[Companero[playerid]] = 14.2370; PuntoBaA[Companero[playerid]] = 5.0; }
			case 12: { PuntoBaX[Companero[playerid]] = 807.8727;  PuntoBaY[Companero[playerid]] = -1757.3798; PuntoBaZ[Companero[playerid]] = 13.3872; PuntoBaA[Companero[playerid]] = 5.0; }
			case 13: { PuntoBaX[Companero[playerid]] = 107.0301;  PuntoBaY[Companero[playerid]] = -1530.0708; PuntoBaZ[Companero[playerid]] = 6.4494;  PuntoBaA[Companero[playerid]] = 5.0;  }
			case 14: { PuntoBaX[Companero[playerid]] = -135.9441; PuntoBaY[Companero[playerid]] = -1564.9911; PuntoBaZ[Companero[playerid]] = 6.7356;  PuntoBaA[Companero[playerid]] = 5.0; }
		}
		CrearCheckpoint(Companero[playerid],PuntoBaX[Companero[playerid]],PuntoBaY[Companero[playerid]],PuntoBaZ[Companero[playerid]], PuntoBaA[Companero[playerid]]);
	}
	return 1;
}

Funcion:EncenderMotor(playerid)
{
	new string[144], autoid, Float:health;
	autoid = GetPlayerVehicleID(playerid);
    GetVehicleHealth(autoid, health);
	if(IsPlayerInAnyVehicle(playerid))
	{
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
	    if(VehicleFuel[autoid] < 1) return SinGasolina(playerid);
		if(health <= 375.0)
		{
		    new rand = random(2);
			switch (rand)
			{
				case 0:
				{
					Mensaje(playerid, -1, "Veh�culo en marcha.");
					format(string, 256, "%s encendi� el motor de su veh�culo.", NombreJugador(playerid));
					ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
					GetVehicleParamsEx(autoid, engine, lights, alarm, doors, bonnet, boot, objective);
					SetVehicleParamsEx(autoid, 1, lights, alarm, doors, bonnet, boot, objective);
					YaEncendiendo[playerid] = 0;
					MotorAuto[autoid] = 1;
					SetTimerEx("ComprobarDanoMotor", 1000, 0, "dd", playerid, autoid);
					return 1;
				}
				case 1:
				{
					format(string, sizeof(string), "%s intenta encender el motor de su veh�culo pero no puede.", NombreJugador(playerid));
					ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
					Mensaje(playerid, -1, "El motor no arranca, reintenta o llama al "CR"/servicio mecanico.");
					return 1;
				}
			}
	    }
	    else
	    {
			Mensaje(playerid, -1, "Veh�culo en marcha.");
			format(string, 256, "%s encendi� el motor de su veh�culo.", NombreJugador(playerid));
			ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
			GetVehicleParamsEx(autoid, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(autoid, 1, lights, alarm, doors, bonnet, boot, objective);
			YaEncendiendo[playerid] = 0;
			MotorAuto[autoid] = 1;
			SetTimerEx("ComprobarDanoMotor", 1000, 0, "dd", playerid, autoid);
			return 1;
		}
	}
	return 1;
}

Funcion:ComprobarDanoMotor(playerid, autoid)
{
    new Float:health;
	GetVehicleHealth(autoid, health);
	if(health <= 375.0)
	{
		TimerRC[playerid] = gettimeVariable + 15;
		SetVehicleHealthAC(autoid, 375.0);
		GetVehicleParamsEx(autoid, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(autoid, 0, lights, alarm, doors, bonnet, boot, objective);
		averiado[autoid] = 1;
		MotorAuto[autoid] = 0;
		GameTextForPlayer(playerid, "~r~MOTOR AVERIADO", 2500, 3);
		Mensaje(playerid,-1,"El motor dej� de funcionar, llama a un mec�nico. "CR"/servicio mecanico"CB".");
		return 1;
	}
    return 1;
}

Funcion:ColorJugadorDefault(playerid)
{
	if(IsPlayerConnected(playerid)) SetPlayerColor(playerid,COLORCARGO0);
}

Funcion:ApareceHospital2(playerid)
{
	if(PlayerInfo[playerid][pSocioHP] > 0){
		Mensaje(playerid, COLOR_GREY, "{FFBC00}El costo de los servicios fue de "CR"$400");
		if(PlayerInfo[playerid][jDinero] >= 400) QuitarDinero(playerid,400);
		else PlayerInfo[playerid][pBanco] -= 400;
	}
	else {
		Mensaje(playerid, COLOR_GREY, "{FFBC00}El costo de los servicios fue de "CR"$450");
		if(PlayerInfo[playerid][jDinero] >= 450) QuitarDinero(playerid,450);
		else PlayerInfo[playerid][pBanco] -= 450;
	}
	SetCameraBehindPlayer(playerid);
	SetPlayerVirtualWorld(playerid, 0);
    DescongelarEx(playerid);
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
    #if DEBUG_GM == 1
    printf("(OnPlayerExitVehicle) PlayerID: %d | VehicleID: %d", playerid, vehicleid);
    #endif
	if(vehicleid >= 2000)
	{
		new string[144];
		format(string, sizeof(string), "[!]"CB" El anticheat ha detectado que el usuario "CR"%s(ID:%d)"CB" es posible cheat de veh�culos (ID Veh�culo: %d).", NombreJugador(playerid), playerid, vehicleid);
		MensajeAdmin(COLOR_CHEAT, string, 3);
		ExpulsarJugador(playerid, "Cheat de veh�culos (2)");
	}
	if(VehiculosInfo[vehicleid][vcomprable] == 1) SetTimerEx("Respawnear",2000,false,"d",vehicleid);
    if(COSECHA(vehicleid)) Respawnear(vehicleid);
    if(EmisoraEscuchando[vehicleid] != -1) StopAudioStreamForPlayer(playerid);
	if(BajandoV[playerid] == 0) BajandoV[playerid] = 1;
	if(PlayerTemp[playerid][AnimSexo] > 0) PlayerTemp[playerid][AnimSexo] = 6;
    if(TAXI(vehicleid))
    {
		if(Taxista[playerid] != INVALID_PLAYER_ID)
		{
			TextDrawHideForPlayer(playerid,TAXIMET);
			TextDrawHideForPlayer(playerid,TAXIMET2[Taxista[playerid]]);
			va_SendClientMessage(playerid,-1,"Has pagado al conductor un total de "CR"$%s"CB".",ConvertirNumero(Monto[Taxista[playerid]]));
			va_SendClientMessage(Taxista[playerid],-1,"%s Te ha pagado "CR"$%s"CB" por el recorrido.",NombreJugador(playerid),ConvertirNumero(Monto[Taxista[playerid]]));
			Monto[Taxista[playerid]] = 0;
			Pasajero[Taxista[playerid]] = INVALID_PLAYER_ID;
			Taxista[playerid] = INVALID_PLAYER_ID;
		}
	}

	EnAuto[playerid] = INVALID_VEHICLE_ID;
	return 1;
}

Funcion:DudaAdmin(playerid, params[])
{
	if(isnull(params)) return Mensaje(playerid, COLOR_GRAD2, "Usa "CR"/duda [Pregunta]"CB" para preguntar/responder a otros jugadores");
	{
		new string[144];
		
		format(string, sizeof(string), "{A946F6}("CB"Canal Dudas{A946F6}) [%s] %s (%d): %s", RangoAdmin[PlayerInfo[playerid][pAdmin]], NombreJugador(playerid),playerid,params[0]);
 		foreach(new i : Player) { if(CanalDudas[i] == 1) Mensaje(i,-1,string); }
	}
	return 1;
}

Funcion:DudaUser(playerid, params[])
{
	if(sscanf(params, "s[144]", params[0])) return Mensaje(playerid, COLORCARGO0, "Usa "CR"/n [Pregunta]"CB" para preguntar/responder a otros jugadores");
	{
		new string[144];
		new s = GetSpam(playerid, params);
		if(s == 2 || s == 3)
		{
            format(string,sizeof(string),"Notificaci�n: Palabra bloqueada del /n %s (%d)[N: %d]: %s", NombreJugador(playerid), playerid, PlayerInfo[playerid][jNivel], params);
            MensajeAdmin(COLOR_CHEAT, string, 3);
			TiempoDuda[playerid] = gettimeVariable+60;
			Mensaje(playerid,-1,"Se detecto un posible spam en tu pregunta vuelve a intentarlo.");
			return 0;
		}
		if(PlayerInfo[playerid][pTiempoJail] > 0) return Mensaje(playerid, -1, "No puedes utilizar el canal de dudas en una sanci�n");
		if(TiempoDuda[playerid] > gettimeVariable)
		{
			format(string,sizeof(string),"Debes esperar %d segundos para volver a utilizar el canal de dudas.",TiempoDuda[playerid]-gettimeVariable);
			Mensaje(playerid, COLORCARGO0,string);
			return 1;
		}
		format(string, sizeof(string), "{A946F6}("CB"Canal Dudas{A946F6}) [Nivel %d] %s (%d): %s", PlayerInfo[playerid][jNivel], NombreJugador(playerid), playerid, params);

		foreach(new i : Player) { if(CanalDudas[i] == 1) Mensaje(i,-1,string); }
		TiempoDuda[playerid] = gettimeVariable+60;
	}
	return 1;
}

Funcion:EnviarTweeter(playerid, params[], tipotw)
{
	new string[144];
 	if(isnull(params)) return Mensaje(playerid, COLOR_GRAD2, "Usa "CR"/twitter"CB" para enviar tu tweet");
	{
		new s = GetSpam(playerid, params);
		if(s == 2 || s == 3)
		{
			format(string, sizeof(string), "Notificaci�n: (Bloqueado /tw) [Nivel: %d] %s(%d): %s",PlayerInfo[playerid][jNivel],NombreJugador(playerid),playerid,params);
			MensajeAdmin(COLOR_CHEAT, string, 3);
			PlayerTemp[playerid][TiempoTwitter] = gettimeVariable + 30;
			Mensaje(playerid,-1,"Se detecto un posible spam en tu tweet vuelve a intentarlo.");
			return 0;
		}
	 	new Nombre[MAX_PLAYER_NAME+1];
	  	GetPlayerName(playerid,Nombre,sizeof(Nombre));
		new slen = strlen(params);
	   	if(slen > 80) return Mensaje(playerid,-1,"El tweet debe contener como m�ximo 80 car�cteres.");
	   	if(PlayerInfo[playerid][jDinero] < slen*80) return Mensaje(playerid,-1,"No tienes suficiente dinero para enviar un anuncio.");
		switch (tipotw)
		{
			case 1: format(string,128,"[Twitter] - ["CB"Contacto: %d{2FC0FF}]"CB": %s",PlayerInfo[playerid][pNumero], params);
			case 2: format(string,sizeof(string),"[Twitter] - ["CB"@An�nimo{2FC0FF}]"CB": %s", params);
			default: format(string,128,"[Twitter] - ["CB"@%s{2FC0FF}]"CB": %s",Nombre, params);
		}
		AccionesRol(playerid, "saca su tel�fono m�vil y abre la red social twitter.", 20);
		foreach(new i : Player) { if(MostrarTwitter[i] == 1) Mensaje(i,0x2FBFFFFF,string); }
		new str_anuncio[60+MAX_PLAYER_NAME];
		format(str_anuncio, sizeof(str_anuncio), "Notificaci�n: Tweet enviado por: %s (ID: %d | Nivel: %d)", Nombre,playerid,PlayerInfo[playerid][jNivel]);
		MensajeAdmin(COLOR_CHEAT,str_anuncio,2);
		va_SendClientMessage(playerid, -1, "Enviaste un tweet por "CR"%d$.", slen*80);
		QuitarDinero(playerid, slen*80);
		PlayerTemp[playerid][TiempoTwitter] = gettimeVariable + 30;
	}
	return 1;
}

public OnQueryError(errorid, const error[], const callback[], const query[], MySQL:handle)
{
	printf("[ERROR] ID: %d - Error: %s - Callback - %s - Query: %s", errorid, error, callback, query);
	return 1;
}

Pescadores(playerid)
{
	if(TieneTrabajo(playerid, PESCADOR)) return 1;
	return 0;
}

Funcion:VersiEntro(playerid)
{
	EntrandoAV[playerid] = -1;
	return true;
}

Funcion:AntiCJ(playerid)
{
    PlayerTemp[playerid][CJ] = 0;
    if(VariableCaido[playerid] != 1) DescongelarEx(playerid);
	if(PlayerInfo[playerid][pMundoVirtual] == VWTemporal[playerid]) SetPlayerVirtualWorld(playerid, VWTemporal[playerid]);
	VWTemporal[playerid] = 0;
	return 1;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
    #if DEBUG_GM == 1
    printf("(OnPlayerEnterVehicle) PlayerID: %d | VehicleID: %d | IsPassenger: %d", playerid, vehicleid, ispassenger);
    #endif
	if(GetPlayerScore(playerid) == 0) return ExpulsarJugador(playerid, "Sube a vehiculo sin nivel");
	if(LogeoCorrecto[playerid] == 0) return ExpulsarJugador(playerid, "Logeo incorrecto (3)");
	new playerState = GetPlayerState(playerid);
	if(gettimeVariable > EntrandoVehicle[playerid]) EntrandoVehicle[playerid] = gettimeVariable + 8;
	if(recogiendo[playerid] > 0) RemovePlayerFromVehicle(playerid);
	if(!ispassenger) CarTroll[playerid][playerActualCar] = vehicleid;
	CarTroll[playerid][playerFalseDetection] = true;
	if(!ispassenger)
	{
		if((GetTickCount()-TiempoCarSpam[playerid]) < 1000)
	 	{
    		if(IDcarSpam[playerid] > 0 && IDcarSpam[playerid] != vehicleid)
    		{
		  		CountCarSpam[playerid] ++;
		    	if(CountCarSpam[playerid] >= 5)
		     	{
		     	    Cheater[playerid] = 1;
					new string[250];
					format(string,sizeof(string),"[!]"CB" El anticheat ha detectado que el usuario "CR"%s(ID:%d)"CB" uso super gun (4). (N:%d- %dhs) - P:%d/PL:%.2f",NombreJugador(playerid),playerid,PlayerInfo[playerid][jNivel],PlayerInfo[playerid][horasjugadas],GetPlayerPing(playerid), NetStats_PacketLossPercent(playerid));
                    MensajeAdmin(COLOR_CHEAT, string, 3);
				}
			}
		}
	 	TiempoCarSpam[playerid] = GetTickCount();
	 	IDcarSpam[playerid] = vehicleid;
 	}
	if(!ispassenger)
	{
	    if((GetTickCount()-PlayerTemp[playerid][pt_CarTime]) < 1000)
	 	{
    		if(PlayerTemp[playerid][pt_CarID] > 0 && PlayerTemp[playerid][pt_CarID] != vehicleid)
    		{
		  		PlayerTemp[playerid][pt_CarSpam]++;
		    	if(PlayerTemp[playerid][pt_CarSpam] >= 3)
		     	{
				    new string2[250];
					format(string2,sizeof(string2),"[!]"CB" El anticheat ha detectado que el usuario "CR"%s(ID:%d)"CB" uso CarSPAM (N:%d- %dhs)",NombreJugador(playerid),playerid,PlayerInfo[playerid][jNivel],PlayerInfo[playerid][horasjugadas]);
					MensajeAdmin(COLOR_CHEAT, string2, 3);
					ExpulsarJugador(playerid, "Posible cheater de CarSPAM");
				}
			}
		}
		PlayerTemp[playerid][pt_CarTime] = GetTickCount();
	 	PlayerTemp[playerid][pt_CarID] = vehicleid;
		EntrandoAV[playerid] = vehicleid;
		TimerSiEntro[playerid] = SetTimerEx("VersiEntro",3500,0,"d",playerid);
		new congelar;
 		foreach(new i : Player)
		{
			if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == PLAYER_STATE_DRIVER || EntrandoAV[i] == vehicleid && i != playerid)
			{
				if(!ispassenger)
				{
					congelar = 1;
					break;
				}
			}
		}
		if(congelar == 1 && PlayerTemp[playerid][CJ] == 0)
		{
		    PlayerTemp[playerid][CJ] = 1;
			new Float:sx, Float:sy, Float:sz;
			GetPlayerPos(playerid, sx, sy, sz);
			SetPlayerPosAC(playerid, sx, sy, sz);
			RemovePlayerFromVehicle(playerid);
			if(VariableCaido[playerid] != 1) CongelarEx(playerid);
			VWTemporal[playerid] = GetPlayerVirtualWorld(playerid);
			SetPlayerVirtualWorld(playerid, 99);
			SetTimerEx("AntiCJ",2000,false,"d",playerid);
			EnAuto[playerid] = 0;
			Contador[playerid]++;
			new string[150];
			format(string,sizeof(string),"No intentes robar veh�culos sin rol, quedas congelado por 2 segundos. ({FF0000}Advertencia: %d/8"CB")",Contador[playerid]);
			Mensaje(playerid,-1,string);
			if(Contador[playerid] >= 8) ExpulsarJugador(playerid, "Anti CJ");
			return true;
		}
	}
	if(ispassenger == 0 && AVION(vehicleid) && PlayerInfo[playerid][pLicencia] == 0)
	{
	    Mensaje(playerid,-1,"Necesitas una licencia de piloto para poder manejar este tipo de veh�culo.");
		RemovePlayerFromVehicle(playerid);
		ClearAnimations(playerid);
	}
	if(PlayerInfo[playerid][Agonizando] == 1) RemovePlayerFromVehicle(playerid);
	if(playerState == PLAYER_STATE_DRIVER) SetPlayerArmedWeapon(playerid, 0);
	if(bloqueado[vehicleid] == 0)
	{
		EnAuto[playerid] = vehicleid;
		BajandoV[playerid] = 0;
	}
	else return Mensaje(playerid,-1,"El veh�culo est� cerrado, para destrabarlo el due�o tiene que "CR"/abrir"),ClearAnimations(playerid);
	if(ispassenger == 1 && TAXI(vehicleid))
	{
		foreach(new i : Player)
		{
			if(IsPlayerInVehicle(i,vehicleid) && GetPlayerState(i) == PLAYER_STATE_DRIVER)
			{
				if(Ficha[i] > 0)
				{
					Mensaje(playerid,-1,"Has subido al taxi.");
					Taxista[playerid] = i;
					Pasajero[i] = playerid;
					LlamadaTaxi[playerid] = 0;
					SetPlayerColor(playerid, COLORCARGO0);
					TextDrawShowForPlayer(playerid,TAXIMET);
					TextDrawShowForPlayer(playerid,TAXIMET2[i]);
				}
			}
		}
	}
	if(ispassenger && TREN(vehicleid))
	{
		if(Boletos[playerid] == 0)
		{
			new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPosAC(playerid, slx+3, sly+3, slz+2);
			SetCameraBehindPlayer(playerid);
			RemovePlayerFromVehicle(playerid);
			Mensaje(playerid, -1, "Te expulsaron del tren porque no has comprado un boleto.");
		}
		else Boletos[playerid] = 0,Mensaje(playerid, -1, "Gracias por viajar con nosotros, disfrute de su viaje.");
	}
	if(ispassenger == 0)
	{
		if(BICI(vehicleid) && VehiculosInfo[vehicleid][vcomprable] == 0)
		{
			if(PlayerInfo[playerid][pCargos] > 0) Mensaje(playerid,-1,"No puedes utilizar este veh�culo si te persigue la polic�a."),SacarVehiculo(playerid);
			GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(vehicleid, 1, lights, alarm, doors, bonnet, boot, objective);
		}
		if(VehiculosInfo[vehicleid][vtrabajo] == 99 && PlayerInfo[playerid][pCargos] > 0) Mensaje(playerid,-1,"No puedes utilizar este veh�culo si te persigue la polic�a."),SacarVehiculo(playerid);
		if(VehiculosInfo[vehicleid][vtrabajo] == 10 && !Pescadores(playerid)) Mensaje(playerid,-1,"Necesitas ser pescador para utilizar este veh�culo."),SacarVehiculo(playerid);
		if(BASU(vehicleid))
		{
			if(!TieneTrabajo(playerid, BASURERO))
			{
				Mensaje(playerid, -1, "Necesitas obtener el trabajo de basurero antes de usar este veh�culo.");
				SacarVehiculo(playerid);
				return 1;
			}
			if(RecorridoBasu[playerid] == 0)
			{
			    if(RopaBasu[playerid] == 1 || PlayerInfo[playerid][VIP] > 0)
			    {
					PBasura[playerid] = 1;
					Mensaje(playerid,-1,"{999966}Consigue a un compa�ero basurero y comienza a trabajar.");
					CrearCheckpoint(playerid,-178.6163, -1618.1124, 3.4908,5.0);
					PuntoBaX[playerid] = -178.6163; PuntoBaY[playerid] = -1618.1124; PuntoBaZ[playerid] = 3.4908; PuntoBaA[playerid] = 5.0;
					return 1;
				}
				else
				{
					Mensaje(playerid,-1,"{999966}Las cuentas comunes necesitan la vestimenta de basurero para trabajar.");
					Mensaje(playerid,-1,"{999966}Si quieres trabajar con cualquier ropa, necesitas una cuenta VIP.");
				}
			}
			else return Mensaje(playerid,-1,"{999966}Consigue un compa�ero basurero y termina el trabajo.");
		}
		if(VehiculosInfo[vehicleid][vfaccion] > 0 && PlayerInfo[playerid][jMiembro] != VehiculosInfo[vehicleid][vfaccion]) Mensaje(playerid,-1,"Este veh�culo es de una facci�n a la cual no perteneces."),SacarVehiculo(playerid);
		if(VehiculosInfo[vehicleid][vfaccion] == 1 && PlayerInfo[playerid][jMiembro] == 1 && PlayerInfo[playerid][pDuty] != 1) Mensaje(playerid, -1, "Necesitas ser polic�a y estar en servicio para utilizar este veh�culo."),SacarVehiculo(playerid);
		if(VehiculosInfo[vehicleid][vfaccion] == 2 && PlayerInfo[playerid][jMiembro] == 2 && PlayerInfo[playerid][pDutyM] != 1) Mensaje(playerid, -1, "Necesitas ser militar y estar en servicio para utilizar este veh�culo."),SacarVehiculo(playerid);
		
		//if(SAPD(vehicleid) && PlayerInfo[playerid][pDuty] != 1) Mensaje(playerid, -1, "Necesitas ser polic�a y estar en servicio para utilizar este veh�culo."),SacarVehiculo(playerid);
		//if(PlayerInfo[playerid][jMiembro] != 2 && PlayerInfo[playerid][pDutyM] != 1) Mensaje(playerid, -1, "Necesitas ser militar y estar en servicio para utilizar este veh�culo."),SacarVehiculo(playerid);
		
		/*if(HELISAPD(vehicleid))
		{
			if(PlayerInfo[playerid][pDuty] != 1) Mensaje(playerid, -1, "Necesitas ser polic�a y estar en servicio para utilizar este veh�culo."),SacarVehiculo(playerid);
			if(PlayerInfo[playerid][pRango] < 2) return Mensaje(playerid, -1, "Necesitas tener el rango de Oficial para utilizar este veh�culo."),SacarVehiculo(playerid);
		}*/
		if(AMBU(vehicleid) && !TieneTrabajo(playerid, MEDICO)) Mensaje(playerid, -1, "Necesitas ser m�dico para utilizar este veh�culo."),SacarVehiculo(playerid);
		if(TAXI(vehicleid) && !TieneTrabajo(playerid, TAXISTA)) Mensaje(playerid, -1, "Necesitas ser taxista para utilizar este veh�culo."),SacarVehiculo(playerid);
		if(COSECHA(vehicleid))
		{
			if(Cosechando[playerid] == 0) Mensaje(playerid, -1, "Necesitas obtener el trabajo de cosechador antes de usar este veh�culo."),SacarVehiculo(playerid);
			else if(COSECHA(vehicleid))
			{
				if(Cosechando[playerid] == 1 && PCosechar[playerid] == 1)
				{
					switch(TipoCosecha[playerid])
					{
					    case 1: SetPlayerRaceCheckpoint(playerid,0,-366.9679,-1357.5226,22.4490,-346.8214,-1271.8757,27.0408,7),BarraProgreso[playerid][1] = 18.0;
					    case 2: SetPlayerRaceCheckpoint(playerid,0,-336.1936,-1557.5121,18.2365,-246.4955,-1555.6654,4.4067,7),BarraProgreso[playerid][1] = 22.0;
					    case 3: SetPlayerRaceCheckpoint(playerid,0,20.8438,66.5846,4.0944,65.5033,-28.9166,1.8391,7),BarraProgreso[playerid][1] = 16.0;
					    case 4: SetPlayerRaceCheckpoint(playerid,0,-123.1025,59.1028,4.1000,-217.6646,94.3875,3.4652,7),BarraProgreso[playerid][1] = 16.0;
					}
					Cosechando[playerid] = 1;
					Mensaje(playerid,-1,"Sigue tu recorrido con tu cosechadora.");
					PCosechar[playerid] = 2;
					BarraJob(playerid,1);
					return 1;
				}
			}
		}
		if(CAMION(vehicleid))
		{
			new accesoa=0;
			if(TieneTrabajo(playerid, CAMIONERO)) accesoa=1;
			if(FaccLegal(playerid)) accesoa=1;
			if(accesoa == 0) return Mensaje(playerid, -1, "No puedes utilizar este veh�culo."),SacarVehiculo(playerid);
			switch(CamionCargado[vehicleid])
			{
				case 0:
				{
					va_SendClientMessage(playerid, -1,"Cami�n de Carga N�mero: "CR"%d"CB" | Contenido: "CR"Ninguna "CB"| Chofer: "CR"Ninguno",vehicleid-28);
					Mensaje(playerid, -1, "Usa "CR"/cargar camion"CB" para cargar el camion y "CR"/arrancar"CB" para arrancar el motor.");
				}
				case 1: va_SendClientMessage(playerid, -1,"Cami�n de Carga N�mero: "CR"%d"CB" | Contenido: "CR"Productos 24/7"CB" "CB"| Chofer: "CR"%s", vehicleid-28,NombreJugador(Chofer[vehicleid]));
				case 2: va_SendClientMessage(playerid, -1,"Cami�n de Carga N�mero: "CR"%d"CB" | Contenido: "CR"Ropa"CB" | Chofer: "CR"%s", vehicleid-28,NombreJugador(Chofer[vehicleid]));
				case 3: va_SendClientMessage(playerid, -1,"Cami�n de Carga N�mero: "CR"%d"CB" | Contenido: "CR"Drogas"CB" | Chofer: "CR"%s", vehicleid-28,NombreJugador(Chofer[vehicleid]));
				case 4: va_SendClientMessage(playerid, -1,"Cami�n de Carga N�mero: "CR"%d"CB" | Contenido: "CR"Armas"CB" | Chofer: "CR"%s", vehicleid-28,NombreJugador(Chofer[vehicleid]));
			}
		}
		if(CAMIONVIP(vehicleid))
		{
			new accesoa=0;
			if(TieneTrabajo(playerid, CAMIONERO) && PlayerInfo[playerid][VIP] > 0) accesoa=1;
			if(FaccLegal(playerid)) accesoa=1;
			if(accesoa == 0) { Mensaje(playerid, -1, "No puedes utilizar este veh�culo."); SacarVehiculo(playerid); return 1; }
			switch(CamionCargado[vehicleid])
			{
				case 0:
				{
					va_SendClientMessage(playerid, -1, "Cami�n de Carga N�mero: "CR"%d"CB" | Contenido: "CR"Ninguna "CB"| Chofer: "CR"Ninguno", vehicleid-28);
					Mensaje(playerid, -1, "Usa "CR"/cargar camion"CB" para cargar el camion y "CR"/arrancar"CB" para arrancar el motor.");
				}
				case 1: va_SendClientMessage(playerid, -1, "Cami�n de Carga N�mero: "CR"%d"CB" | Contenido: "CR"Productos 24/7"CB" "CB"| Chofer: "CR"%s", vehicleid-28,NombreJugador(Chofer[vehicleid]));
				case 2: va_SendClientMessage(playerid, -1, "Cami�n de Carga N�mero: "CR"%d"CB" | Contenido: "CR"Ropa"CB" | Chofer: "CR"%s", vehicleid-28,NombreJugador(Chofer[vehicleid]));
				case 3: va_SendClientMessage(playerid, -1, "Cami�n de Carga N�mero: "CR"%d"CB" | Contenido: "CR"Drogas"CB" | Chofer: "CR"%s", vehicleid-28,NombreJugador(Chofer[vehicleid]));
				case 4: va_SendClientMessage(playerid, -1, "Cami�n de Carga N�mero: "CR"%d"CB" | Contenido: "CR"Armas"CB" | Chofer: "CR"%s", vehicleid-28,NombreJugador(Chofer[vehicleid]));
			}
		}
	}
	return 1;
}

Funcion:antifakekill2(playerid)
{
	if(!IsPlayerConnected(playerid)) return 1;
    antifakekill[playerid]--;
    if(antifakekill[playerid] > 3)
	{
		//new string[250];
		//format(string,sizeof(string),"[!]"CB" El anticheat ha detectado que el usuario "Rojo"%s (ID:%d)/(N:%d)"CB" uso Anti-Fakekill",NombreJugador(playerid),playerid,PlayerInfo[playerid][jNivel]);
		//MensajeAdmin(COLOR_CHEAT, string, 3);
		ExpulsarJugador(playerid, "Anti fake kill");
	}
    return 1;
}


static ClearVehicleVariables(vehicleid)
{
	new temp_VehicleInfo[VI];
	VehiculosInfo[vehicleid] = temp_VehicleInfo;
	return 1;
}


public OnVehicleDeath(vehicleid,killerid)
{
	#if DEBUG_GM == 1
    printf("(OnVehicleDeath) vehicleid: %d | KillerID: %d", vehicleid, killerid);
    #endif
	if(VehiculosInfo[vehicleid][SpawnManual] == 1)
	{
		ClearVehicleVariables(vehicleid);
		DestroyVehicle(vehicleid);
		return 1;
	}
	if(CAMION(vehicleid))
	{
		if(CamionCargado[vehicleid] != 0)
		{
			foreach(new i : Player)
			{
				if(Chofer[vehicleid] == i)
				{
					CamioneroFallado(i,vehicleid);
					break;
				}
			}
		}
	}
	return true;
}

public OnPlayerDeath(playerid, killerid, reason)
{
    #if DEBUG_GM == 1
    printf("(OnPlayerDeath) PlayerID: %d | KillerID: %d", playerid, killerid);
    #endif
	SetPlayerDrunkLevel(playerid, 0);
	GetPlayerPos(playerid, DeathXC[playerid], DeathYC[playerid], DeathZC[playerid]);
	//MostrarDialog(playerid,-1,0,"","","","");
	antifakekill[playerid]++;
    PlayerAnticheat[playerid][paSpawneado] = false;
    SetTimerEx("antifakekill2", 1000,false,"i",playerid);
	PlayerInfo[playerid][pInterior] = GetPlayerInterior(playerid);
	PlayerInfo[playerid][pMundoVirtual] = GetPlayerVirtualWorld(playerid);
	Objeto[playerid] = 0;
	if(Manejando[playerid] == 1) Manejando[playerid] = 0;
	if(PlayerInfo[playerid][pTiempoCarcel] > 0 || PlayerInfo[playerid][pTiempoJail] > 0) return 1;
	if(IsPlayerConnected(killerid) && ZonaSegura[playerid] == 1 && !FaccLegal(killerid))
	{
	    new string[120];
		format(string,sizeof(string),"Notificaci�n: %s (ID:%d) asesin� en zona a segura al jugador %s (ID:%d).",NombreJugador(killerid),killerid,NombreJugador(playerid),playerid);
		MensajeAdmin(COLOR_CHEAT, string, 3);
	}
	else
	{
		foreach(new i : Admin)
		{
			if(PlayerInfo[i][pAdmin] > 2)
			{
				SendDeathMessageToPlayer(i, killerid, playerid, reason);
			}
		}
	}
	if(killerid != INVALID_PLAYER_ID)
	{
		if(PlayerDuelo[playerid][Estaenduelo]==1 && PlayerDuelo[killerid][Estaenduelo]==1)
		{
		    if(PlayerDuelo[playerid][Contrincante] == killerid && PlayerDuelo[killerid][Contrincante]==playerid)
		    {
     			Revivir(playerid);
				DueloInfo[PlayerDuelo[killerid][ArenaID]][DesocupadaLK] =1;
				DueloInfo[PlayerDuelo[killerid][ArenaID]][DesafiadorLK]=-1;
				DueloInfo[PlayerDuelo[killerid][ArenaID]][DesafiadoLK] =-1;
				DueloInfo[PlayerDuelo[killerid][ArenaID]][IniciarLK]  =  0;
				PlayerDuelo[playerid][Estaenduelo]=0;
				PlayerDuelo[playerid][Contrincante]=-1;
				PlayerDuelo[killerid][Estaenduelo]=0;
				PlayerDuelo[killerid][Contrincante]=-1;
				PlayerDuelo[playerid][ArenaID]=-1;
				PlayerDuelo[killerid][ArenaID]=-1;
			 	SetPosEx(killerid, PlayerDuelo[killerid][Posa][0],PlayerDuelo[killerid][Posa][1],PlayerDuelo[killerid][Posa][2],0.0,0,0);
        		SetPosEx(playerid, PlayerDuelo[playerid][Posa][0],PlayerDuelo[playerid][Posa][1],PlayerDuelo[playerid][Posa][2],0.0,0,0);
				QuitarArmas(killerid, 0);
				QuitarArmas(playerid, 0);
		    }
		}
	}
	if(killerid != INVALID_PLAYER_ID) PlayerInfo[killerid][pAsesinatos]++;
	/*if(IsPlayerConnected(killerid))
	{
		if(killerid != INVALID_PLAYER_ID) PlayerInfo[killerid][pAsesinatos]++;
		new mensajemuerto[150];
		format(mensajemuerto, 150, "Notificaci�n: %s (ID: %d) mato a %s (ID: %d) con %s", NombreJugador(killerid), killerid, NombreJugador(playerid), playerid, GetWeaponNameEx(reason));
		MensajeAdmin(COLOR_CHEAT, mensajemuerto, 3);
		format(QFA[playerid],80,"%s[%d] (%s)", NombreJugador(killerid),killerid, GetWeaponNameEx(reason));
		format(QFA[killerid],80,"%s[%d] (%s)", NombreJugador(playerid),playerid, GetWeaponNameEx(reason));
	}*/
	
	new LugarCargo[100];
	LugarCargo = "Feli";
	if(EstaEn(Agresor[playerid],180.0,1759.6833,-1892.0160,13.5556) && GetPlayerInterior(Agresor[playerid]) == 0) LugarCargo = "en Unity Station";
	else if(EstaEn(Agresor[playerid],130.0,1173.2209,-1332.7537,13.9884) && GetPlayerInterior(Agresor[playerid]) == 0) LugarCargo = "en Hospital Central";
	else if(EstaEn(Agresor[playerid],70.0,2030.1166,-1413.7969,16.9989) && GetPlayerInterior(Agresor[playerid]) == 0) LugarCargo = "en el Hospital Country General";
	else if((EstaEn(Agresor[playerid],70.0,-1745.5931,-131.6944,3.7314) || EstaEn(Agresor[playerid],450.0,-1652.7432,23.0748,4.4347)) && GetPlayerInterior(Agresor[playerid]) == 0) LugarCargo ="en los Muelles de San Fierro";
	else if(EstaEn(Agresor[playerid],100.0,-384.4948,-1474.2228,25.7266) && GetPlayerInterior(Agresor[playerid]) == 0) LugarCargo ="en las Granjas de Flint Range";
	else if(EstaEn(Agresor[playerid],100.0,-148.6831,-1577.2129,9.3045) && GetPlayerInterior(Agresor[playerid]) == 0) LugarCargo = "en el basural";
	else if(EstaEn(Agresor[playerid],200.0,-2647.9409,605.9929,15.2346) && GetPlayerInterior(Agresor[playerid]) == 0) LugarCargo = "en el Hospital de San Fierro";
	else if(EstaEn(Agresor[playerid],200.0,1611.4006,1781.1265,37.8510) && GetPlayerInterior(Agresor[playerid]) == 0) LugarCargo = "en el Hospital de Las Venturas";
	else if(EstaEn(Agresor[playerid],200.0,869.8167,873.0883,12.9141) && GetPlayerInterior(Agresor[playerid]) == 0) LugarCargo = "en la Cantera de Hunter Quarry";
    else if(EstaEn(Agresor[playerid],200,1551.7198,-1675.6492,15.9741) && GetPlayerInterior(Agresor[playerid]) == 0) LugarCargo = "enfrente de la Comisar�a";
	else if(EstaEn(Agresor[playerid],50,830.2910,3.9240,1004.1797) && GetPlayerInterior(Agresor[playerid]) == 3) LugarCargo = "en el Banco Plaza";
	else if(EstaEn(Agresor[playerid],80,1092.2074,-141.3113,1001.1160) && GetPlayerInterior(Agresor[playerid]) == 3) LugarCargo = "en Banco Central de Los Santos";
	else if(EstaEn(Agresor[playerid],25,2311.8379,-8.2884,26.7422) && GetPlayerInterior(Agresor[playerid]) == 0 && GetPlayerVirtualWorld(Agresor[playerid]) != 0) LugarCargo = "en Banco de San Fierro";
	else if(EstaEn(Agresor[playerid],200,-1622.6633,702.1961,11.2764) && GetPlayerInterior(Agresor[playerid]) == 0) LugarCargo = "enfrete de la Comisar�a de San Fierro";
	else if(EstaEn(Agresor[playerid],200,2282.8855,2454.9976,9.8203) && GetPlayerInterior(Agresor[playerid]) == 0) LugarCargo = "enfrete de la Comisar�a de Las Venturas";
	else if(EstaEn(Agresor[playerid],30,374.6797,-124.4743,1001.4995) && GetPlayerInterior(Agresor[playerid]) == 5) LugarCargo = "en The Well Stacked Pizza";
	else if(EstaEn(Agresor[playerid],30,-29.1592,-83.4654,1003.5542) && GetPlayerInterior(Agresor[playerid]) == 18) LugarCargo = "en 24/7";
 	else if(EstaEn(Agresor[playerid],30,767.7672,4.7224,1000.7183) && GetPlayerInterior(Agresor[playerid]) == 5) LugarCargo = "en GYM";
 	else if(EstaEn(Agresor[playerid],50,-1412.7083,-310.4966,1058.1694) && GetPlayerInterior(Agresor[playerid]) == 7 && GetPlayerVirtualWorld(Agresor[playerid]) == 7) LugarCargo = "en el Estadio de Las Venturas";
	else if(EstaEn(Agresor[playerid],100,1094.0922,1597.0083,12.5469) && GetPlayerInterior(Agresor[playerid]) == 0) LugarCargo = "en el Estadio de Las Venturas";
	else if(EstaEn(Agresor[playerid],100,278.6463,1411.3732,10.4271) && GetPlayerInterior(Agresor[playerid]) == 0 && Jail[Agresor[playerid]] == 0) LugarCargo = "en el penal de Fort Carson";
	
	if(FaccLegal(playerid) && Agresor[playerid] != INVALID_PLAYER_ID && PlayerInfo[Agresor[playerid]][jMiembro] > 2  && suicidio[playerid] == 0)
	{
		if(PlayerInfo[Agresor[playerid]][pCargos] < 5)
		{
			new string[144];
			DarEstrella(Agresor[playerid],5);
			format(PlayerInfo[Agresor[playerid]][QuienC], MAX_PLAYER_NAME+1,"%s", NombreJugador(playerid));
			format(string, sizeof string, "{3399FF}[Central de polic�a]"CB" reportando: "CR"%s"CB" [%d] asesin� a un oficial, detener vivo o muerto.",NombreJugador(Agresor[playerid]),Agresor[playerid]);
			SendRadioMessage(1, -1, string,INVALID_PLAYER_ID, 1);
			SendRadioMessage(2, -1, string,INVALID_PLAYER_ID, 1);
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] >= 5)
		{
			new string[144];
			DarEstrella(Agresor[playerid],6);
			format(string, sizeof string, "{3399FF}[Central de polic�a]"CB" reportando: "CR"%s"CB" [%d] es un asesino serial, lo queremos vivo o muerto.",NombreJugador(Agresor[playerid]),Agresor[playerid]);
			SendRadioMessage(1, -1, string,INVALID_PLAYER_ID, 1);
			SendRadioMessage(2, -1, string,INVALID_PLAYER_ID, 1);
		}
		ReportCrimen(Agresor[playerid],3);
	}
	else if(strcmp(LugarCargo,"Feli"))
	{
		if(!FaccLegal2(Agresor[playerid]) && !IsPlayerInAnyVehicle(Agresor[playerid]) && GetPlayerState(Agresor[playerid]) != PLAYER_STATE_DRIVER && suicidio[playerid] == 0)
		{
			new string[144];
			format(string, 144,"{3399FF}[Central de polic�a]"CB" reportando: "CR"%s"CB" [%d] cometi� un asesinato %s.",NombreJugador(Agresor[playerid]),Agresor[playerid],LugarCargo);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID, 1);
			SendRadioMessage(2, -1, string,INVALID_PLAYER_ID, 1);
			Mensaje(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			Mensaje(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la polic�a fue alertada.");
	        format(PlayerInfo[Agresor[playerid]][QuienC], MAX_PLAYER_NAME+1,"Zona Segura (%d)", Agresor[playerid]);
	        ReportCrimen(Agresor[playerid],1);
			if(PlayerInfo[Agresor[playerid]][pCargos] < 3) DarEstrella(Agresor[playerid],3);
			else if(PlayerInfo[Agresor[playerid]][pCargos] >= 3 && PlayerInfo[Agresor[playerid]][pCargos] < 6) DarEstrella(Agresor[playerid],6);
			DarEstrella(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
		}
	}
	if(PlayerInfo[playerid][pCargos] > 0)
	{
		if(PlayerInfo[playerid][pCargos] == 1)
		{
			GetPlayerPos(playerid, DeathXC[playerid], DeathYC[playerid], DeathZC[playerid]);
			SetSpawnInfo(playerid,NO_TEAM,PlayerInfo[playerid][jRopa],DeathXC[playerid],DeathYC[playerid],DeathZC[playerid],0,0,0,0,0,0,0);
			DarEstrella(playerid, 0);
			CagoSeguro[playerid] = 0;
		}
		else
		{
			if(GetPlayerInterior(playerid) > 0) return SetTimerEx("Encerrando2",2000,false,"d",playerid);
			GetPlayerPos(playerid, DeathXC[playerid], DeathYC[playerid], DeathZC[playerid]);
			SetSpawnInfo(playerid,NO_TEAM,PlayerInfo[playerid][jRopa],DeathXC[playerid],DeathYC[playerid],DeathZC[playerid],0,0,0,0,0,0,0);
			VariableCaido[playerid] = 1;
			return 1;
		}
	}
	if(PlayerInfo[playerid][Agonizando] == 0)
	{
		GetPlayerPos(playerid, DeathX[playerid], DeathY[playerid], DeathZ[playerid]);
		SetSpawnInfo(playerid,NO_TEAM,PlayerInfo[playerid][jRopa],DeathX[playerid], DeathY[playerid], DeathZ[playerid],0,0,0,0,0,0,0);
		PlayerInfo[playerid][Agonizando] = 1;
		return 1;
	}
	else if(PlayerInfo[playerid][Agonizando] == 1) PlayerInfo[playerid][Agonizando] = 2;
	return 1;
}

Funcion:MostrarMapas(playerid)
{
    GangZoneShowForPlayer(playerid, MapaIsla[0], 0xF6C91DA3);
	GangZoneShowForPlayer(playerid, MapaIsla[1], 0xF6C91DA3);
	GangZoneShowForPlayer(playerid, MapaIsla[2], 0xF6C91DA3);
	GangZoneShowForPlayer(playerid, MapaIsla[3], 0xa7a7a7ff);
	GangZoneShowForPlayer(playerid, MapaIsla[4], 0xa7a7a7ff);
	GangZoneShowForPlayer(playerid, MapaIsla[5], 0xa7a7a7ff);
	GangZoneShowForPlayer(playerid, MapaIsla[6], 0xa7a7a7ff);
	GangZoneShowForPlayer(playerid, MapaIsla[7], 0xa7a7a7ff);
	GangZoneShowForPlayer(playerid, MapaIsla[8], 0xa7a7a7ff);
	GangZoneShowForPlayer(playerid, MapaIsla[9], 0xa7a7a7ff);
	GangZoneShowForPlayer(playerid, MapaIsla[10], 0xa7a7a7ff);
	GangZoneShowForPlayer(playerid, MapaIsla[11], 0xa7a7a7ff);
	GangZoneShowForPlayer(playerid, MapaIsla[12], 0xa7a7a7ff);
	GangZoneShowForPlayer(playerid, MapaIsla[13], 0xa7a7a7ff);
	GangZoneShowForPlayer(playerid, MapaIsla[14], 0x2b6939ff);
	GangZoneShowForPlayer(playerid, MapaIsla[15], 0x2b6939ff);
	GangZoneShowForPlayer(playerid, MapaIsla[16], 0x2b6939ff);
	GangZoneShowForPlayer(playerid, MapaIsla[17], 0xa7a7a7ff);
	GangZoneShowForPlayer(playerid, MapaIsla[18], 0xa7a7a7ff);
	GangZoneShowForPlayer(playerid, MapaIsla[19], 0xa7a7a7ff);
	GangZoneShowForPlayer(playerid, MapaIsla[20], 0xa7a7a7ff);
	GangZoneShowForPlayer(playerid, MapaIsla[21], 0x000000ff);
	GangZoneShowForPlayer(playerid, MapaIsla[22], 0x000000ff);
	GangZoneShowForPlayer(playerid, MapaIsla[23], 0x000000ff);
	GangZoneShowForPlayer(playerid, MapaIsla[24], 0x000000ff);
	GangZoneShowForPlayer(playerid, MapaIsla[25], 0x000000ff);
	GangZoneShowForPlayer(playerid, MapaIsla[26], 0x000000ff);
	GangZoneShowForPlayer(playerid, MapaIsla[27], 0x000000ff);
	GangZoneShowForPlayer(playerid, MapaIsla[28], 0xfbfbfbff);
	GangZoneShowForPlayer(playerid, MapaIsla[29], 0x9d9a9fff);
	GangZoneShowForPlayer(playerid, MapaIsla[30], 0x9d9a9fff);
	GangZoneShowForPlayer(playerid, MapaIsla[31], 0x9d9a9fff);
	//GangZoneShowForPlayer(playerid, TerritorioTriads, 0x00ff00d0);
	//GangZoneShowForPlayer(playerid, TerritorioGrove, 0xff80ffc7);
	ShowTerritorios(playerid);
	return 1;
}

static ShowTerritorios(playerid)
{
	if(/*PlayerInfo[playerid][jMiembro] > 2 && */ShowTerritorio[playerid] == 1)
	{
	    foreach(new i : Territorios)
		{
			if(Tdata[i][tValid] == 1) GangZoneShowForPlayer(playerid, Tdata[i][tCreate], ((BandasInfo[Tdata[i][tBanda]][BColor2] & ~0xFF) | 0x50));
			if(Tdata[i][tactiva] != 0) GangZoneFlashForPlayer(playerid,Tdata[i][tCreate], ((BandasInfo[Tdata[i][tactiva]][BColor2] & ~0xFF) | 0x50));
		}
	}
}

static HideTerritorios(playerid)
{
	if(/*PlayerInfo[playerid][jMiembro] > 2 && */ShowTerritorio[playerid] == 0)
	{
	    foreach(new i : Territorios)
		{
			if(Tdata[i][tValid] == 1) GangZoneHideForPlayer(playerid, Tdata[i][tCreate]);
		}
	}
}

ptask DarNecesidad[1800000](playerid)
{
	DarNecesidades(playerid);
	return 1;
}

static DarNecesidades(i)
{
	if(PlayerInfo[i][pHambre] > 49 && PlayerInfo[i][pHambre] < 60)
	{
		ShowTDN(i,"Tu hambre llego al 50 porciento, tienes que comer algo.");
		ShowTDN(i,"Tu personaje necesita alimentarse, la barra superior naranja indica el nivel de hambre.");
		ShowTDN(i,"Puedes comprar comidas en las ~r~franquicias de pizza.~w~ Para mas informacion usa ~y~/ayuda hambre~w~.");
	}
	if(PlayerInfo[i][pSed] > 49 && PlayerInfo[i][pSed] < 60)
	{
		ShowTDN(i,"Tu nivel de sed llego al 50 porciento y necesitas beber algo.");
	}
	if(PlayerInfo[i][pHambre] > 79 && PlayerInfo[i][pHambre] < 80)
	{
		ShowTDN(i,"Tu hambre llego al 80 porciento, tienes que comer algo.");
		ShowTDN(i,"Tu personaje necesita alimentarse, la barra superior naranja indica el nivel de hambre.");
		ShowTDN(i,"Puedes comprar comidas en las ~r~franquicias de pizza.~w~ Para mas informacion usa ~y~/ayuda hambre~w~.");
	}
	if(PlayerInfo[i][pSed] > 79 && PlayerInfo[i][pSed] < 80)
	{
		ShowTDN(i,"Tu nivel de sed llego al 80 porciento y necesitas beber algo.");
	}
	new restased = 100-PlayerInfo[i][pSed];
	if(restased >= 4) PlayerInfo[i][pSed] += 4;
	else if(restased < 4) PlayerInfo[i][pSed] += restased;
	new restahambre = 100-PlayerInfo[i][pHambre];
	if(restahambre >= 2) PlayerInfo[i][pHambre] += 2;
	else if(restahambre < 2) PlayerInfo[i][pHambre] += restahambre;
	if(SedOculta[i] == 1 && ViendoGPS[i] == 0)
	{
		BarraHambre(i, 1);
		BarraSed(i, 1);
	}
	
}

PreloadAnimLib(playerid, const animlib[]) ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);

LoadAnimLibs(playerid)
{
	PreloadAnimLib(playerid,"ATTRACTORS");
 	PreloadAnimLib(playerid,"BAR");
  	PreloadAnimLib(playerid,"BASEBALL");
   	PreloadAnimLib(playerid,"BENCHPRESS");
    PreloadAnimLib(playerid,"BOMBER");
	PreloadAnimLib(playerid,"BLOWJOBZ");
 	PreloadAnimLib(playerid,"BSKTBALL");
  	PreloadAnimLib(playerid,"CAR");
   	PreloadAnimLib(playerid,"CARRY");
   	PreloadAnimLib(playerid,"COP_AMBIENT");
    PreloadAnimLib(playerid,"CRACK");
    PreloadAnimLib(playerid,"DAM_JUMP");
    PreloadAnimLib(playerid,"DANCING");
    PreloadAnimLib(playerid,"DEALER");
   	PreloadAnimLib(playerid,"FIGHT_C");
    PreloadAnimLib(playerid,"GRAFFITI");
    PreloadAnimLib(playerid,"FOOD");
    PreloadAnimLib(playerid,"FREEWEIGHTS");
    PreloadAnimLib(playerid,"GANGS");
    PreloadAnimLib(playerid,"GHANDS");
    PreloadAnimLib(playerid,"GRAVEYARD");
    PreloadAnimLib(playerid,"INT_HOUSE");
    PreloadAnimLib(playerid,"HEIST9");
    PreloadAnimLib(playerid,"GYMNASIUM");
   	PreloadAnimLib(playerid,"POLICE");
    PreloadAnimLib(playerid,"RAPPING");
    PreloadAnimLib(playerid,"KISSING");
    PreloadAnimLib(playerid,"KNIFE");
    PreloadAnimLib(playerid,"MD_CHASE");
    PreloadAnimLib(playerid,"MEDIC");
    PreloadAnimLib(playerid,"ON_LOOKERS");
    PreloadAnimLib(playerid,"PARACHUTE");
    PreloadAnimLib(playerid,"PARK");
    PreloadAnimLib(playerid,"PAULNMAC");
    PreloadAnimLib(playerid,"PED");
    PreloadAnimLib(playerid,"SHOP");
    PreloadAnimLib(playerid,"INT_OFFICE");
    PreloadAnimLib(playerid,"SKATE");
    PreloadAnimLib(playerid,"SMOKING");
    PreloadAnimLib(playerid,"SPRAYCAN");
    PreloadAnimLib(playerid,"STRIP");
    PreloadAnimLib(playerid,"SUNBATHE");
    PreloadAnimLib(playerid,"WUZI");
    PreloadAnimLib(playerid,"SWEET");
    PreloadAnimLib(playerid,"CHAINSAW");
    PreloadAnimLib(playerid,"CASINO");
	PreloadAnimLib(playerid,"BD_FIRE");
	PreloadAnimLib(playerid,"BMX");
	PreloadAnimLib(playerid,"RIOT");
	PreloadAnimLib(playerid,"MISC");
}

Funcion:LanzarArpon(playerid,var)
{
	DescongelarEx(playerid);
	ClearAnimations(playerid);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	RemovePlayerAttachedObject(playerid, 4);
	CrearCheckpoint(playerid,2786.7866,-2594.8406,-1.0248, 7.0);
	RecorridoPescador[playerid] = 1;
	new vehch = GetPlayerNearestVehicle(playerid);
	if(var == 1)
	{
		pescador[playerid] = CreateDynamicObject(1609,0,0,0,0,0,0);
		AttachDynamicObjectToVehicle(pescador[playerid], vehch, -0.075000,-6.524995,2.175000,80.999992,0.000000,0.000000);
		Mensaje(playerid, -1, "Atrapaste una tortuga, ll�vala al muelle de Ocean Docks para recibir el dinero.");
	}
	else if(var == 2)
	{
		pescador[playerid] = CreateDynamicObject(1607,0,0,0,0,0,0);
		AttachDynamicObjectToVehicle(pescador[playerid], vehch, 0.000000,-6.899994,-0.675000,86.399986,0.000000,0.000000);
		Mensaje(playerid, -1, "Atrapaste un delfin, ll�vala al muelle de Ocean Docks para recibir el dinero.");
	}
	else if(var == 3)
	{
		pescador[playerid] = CreateDynamicObject(1608,0,0,0,0,0,0);
		AttachDynamicObjectToVehicle(pescador[playerid], vehch, 0.000000,-6.674995,-2.550000,91.799980,0.000000,0.000000);
		Mensaje(playerid, -1, "Atrapaste un tibur�n, ll�vala al muelle de Ocean Docks para recibir el dinero.");
	}
	pesca[playerid] = var;
}

Funcion:modificarpuntotren(playerid)
{
	foreach(new i : Player)
	{
		if(IsPlayerNPC(i))
	   	{
			if(i == TrenUno || i == TrenDos || i == TrenTres || i == TrenCuatro)
			{
				if(ViendoPantalla[playerid] == 1)
				{
		  			PlayerTextDrawDestroy(playerid, tren[playerid][i]);
					new Float:DyGPSPos[2];
					new Float:posicionPlayerGPS[3];
					GetPlayerPos(i, posicionPlayerGPS[0], posicionPlayerGPS[1], posicionPlayerGPS[2]);
					floatMapa3Da2D(posicionPlayerGPS[0], posicionPlayerGPS[1], 360.000000, 26.000000,256.000000,256.000000, DyGPSPos[0], DyGPSPos[1]);
					tren[playerid][i] = CreatePlayerTextDraw(playerid, DyGPSPos[0], DyGPSPos[1], "hud:radar_light");
					PlayerTextDrawLetterSize(playerid, tren[playerid][i], 1.000000, 2.000000);
					PlayerTextDrawTextSize(playerid, tren[playerid][i], 8.000000, 8.000000);
					PlayerTextDrawAlignment(playerid, tren[playerid][i], 0);
					PlayerTextDrawUseBox(playerid, tren[playerid][i], 1);
					PlayerTextDrawColor(playerid, tren[playerid][i], -1);
					PlayerTextDrawSetShadow(playerid, tren[playerid][i], 1);
					PlayerTextDrawSetOutline(playerid, tren[playerid][i], 0);
					PlayerTextDrawBackgroundColor(playerid, tren[playerid][i], 0x000000FF);
					PlayerTextDrawSetProportional(playerid, tren[playerid][i], 1);
					PlayerTextDrawFont(playerid, tren[playerid][i], 4);
					PlayerTextDrawShow(playerid, tren[playerid][i]);
	   			}
	   			else PlayerTextDrawDestroy(playerid, tren[playerid][i]);
			}
		}
	}
 	return 1;
}

Funcion:CancelarMeca(playerid)
{
	if(LlamadaMeca[playerid] == 1)
	{
		Mensaje(playerid,-1,"El llamado al servicio mec�nico fue cancelado autom�ticamente.");
		Mensaje(playerid,-1,"Si a�n necesitas un mec�nico, escribe "CR"/servicio mecanico"CB" nuevamente.");
		SetPlayerColor(playerid, COLORCARGO0);
		LlamadaMeca[playerid] = 0;
	}
}

Funcion:CancelarMedi(playerid)
{
	if(MarcadoMedicos[playerid] == 1)
	{
		Mensaje(playerid,-1,"El llamado al servicio m�dico fue cancelado autom�ticamente.");
		Mensaje(playerid,-1,"Si a�n necesitas un m�dico, escribe "CR"/servicio medico"CB" nuevamente.");
		SetPlayerColor(playerid, COLORCARGO0);
		MarcadoMedicos[playerid] = 0;
	}
}

Funcion:CancelarTaxi(playerid)
{
	if(LlamadaTaxi[playerid] == 1)
	{
		Mensaje(playerid,-1,"El llamado al servicio taxi fue cancelado autom�ticamente.");
		Mensaje(playerid,-1,"Si a�n necesitas un taxista, escribe "CR"/servicio taxi"CB" nuevamente.");
		SetPlayerColor(playerid, COLORCARGO0);
		LlamadaTaxi[playerid] = 0;
	}
}

Funcion:TimeMiner(playerid)
{
	PlayerTemp[playerid][TimerPicando] = 0;
	DescongelarEx(playerid);
	BarraJob(playerid,2);
	ApplyAnimation(playerid,"CARRY","crry_prtial",10,7,5,1,1,1);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
	RemovePlayerAttachedObject(playerid,4);
	SetPlayerAttachedObject(playerid,4, 905, 6, 0.121996, -0.002002, -0.212000, -125.299995, 159.900146, -172.099975, 0.207000, 0.293000, 0.202000);
	rocajugador[playerid] = 897;
	new string[128];
	format(string, sizeof(string), "%s agarra una roca con sus manos.", NombreJugador(playerid));
	ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
	Mensaje(playerid, -1, "Deja la roca en la procesadora que se encuentra fuera de la mina.");
	return 1;
}

static MicroBeat(i)
{
	if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
	{
		new Float:health, carid, arrDamage[4];
		iVehicle[i] = carid = GetPlayerVehicleID(i);
		if(BICI(carid)) return 1;
		for(new s=0;s<20;s++)
		{
			if(SpikeStrips[s][sX] != 0)
			{
				if(VehicleToPoint(3.0, carid, SpikeStrips[s][sX], SpikeStrips[s][sY], SpikeStrips[s][sZ]))
				{
					GetVehicleDamageStatus(carid, arrDamage[0], arrDamage[1], arrDamage[2], arrDamage[3]);
					arrDamage[3] = encode_tires(1, 1, 1, 1);
					UpdateVehicleDamageStatus(carid, arrDamage[0], arrDamage[1], arrDamage[2], arrDamage[3]);
				}
			}
		}
		GetVehicleHealth(carid, health);
		if(health < 375.0)
		{
			GameTextForPlayer(i,"~r~MOTOR AVERIADO", 2500, 3);
			TimerRC[i] = gettimeVariable + 15;
			SetVehicleHealthAC(carid, 375.0);
			GetVehicleParamsEx(carid, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(carid, 0, lights, alarm, doors, bonnet, boot, objective);
			averiado[carid] = 1;
			MotorAuto[carid] = 0;
			if(EnCarreras[i] > 0 && VehiculoCarrera[EnCarreras[i]-1] == carid)
			{
				SacarCarrera(i, 2);
				if(ParticipantesCarrera <= 0)
				{
					SetTimer("VerEnCarreras",(1*60*1000),0);
					ResetearCarrera();
					HabilitarCarreras = 0;
					UpdateDynamic3DTextLabelText(TextoCarrera,COLOR_BLANCO,"{FF3300}Boleteria cerrada\n"CR"Horarios de los eventos: "CB"Carreras a cada hora!");
				}
				Mensaje(i,-1,"Has sido descalificado por destruir el veh�culo.");
			}
		}
		if(VehicleFuel[carid] == 0)
		{
			GameTextForPlayer(i, "~r~Sin combustible", 2500, 3);
			GetVehicleParamsEx(carid, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(carid, 0, lights, alarm, doors, bonnet, boot, objective);
			MotorAuto[carid] = 0;
		}
		else if(health > 375.0 && averiado[carid] == 1) averiado[carid] = 0;
		
	}
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
    #if DEBUG_GM == 1
    printf("(OnPlayerStateChange) PlayerID: %d | NewState: %d | OldState: %d", playerid, newstate, oldstate);
    #endif
    if(IsPlayerNPC(playerid)) return 1;
	new autoid = GetPlayerVehicleID(playerid),pvehicle = 0;
	
   	if(newstate == PLAYER_STATE_DRIVER)
    {
		CarTrollData(playerid,autoid,1);
	    new Float:Vida;
	    GetVehicleHealth(autoid,Vida);
	    VidaVehiculo[autoid] = Vida;
        if(autoid != CarWarpID[playerid])
        {
            if(CarWarpTime[playerid] > gettimeVariable)
            {
				RespawnNearbyVehicles(playerid, 5);
				ExpulsarJugador(playerid,"cheat de veh�culos (1)");
    			return 1;
            }
            CarWarpTime[playerid] = gettimeVariable + 1;
 			CarWarpID[playerid] = autoid;
        }
    }
	if((oldstate == PLAYER_STATE_ONFOOT && newstate == PLAYER_STATE_DRIVER) && PlayerInfo[playerid][jNivel] <= 3)
    {
        AreaCheat[playerid] = CreateDynamicCircle(0.0, 0.0, 30.0);
        AttachDynamicAreaToPlayer(AreaCheat[playerid], playerid);
        Streamer_SetIntData(STREAMER_TYPE_AREA, AreaCheat[playerid], E_STREAMER_EXTRA_ID, AREA_CHEAT);
        DisableRemoteVehicleCollisions(playerid, true);
    }
    if(oldstate == PLAYER_STATE_DRIVER && newstate == PLAYER_STATE_ONFOOT)
    {
		CarTrollData(playerid,autoid,0);
        if(IsValidDynamicArea(AreaCheat[playerid])) DestroyDynamicArea(AreaCheat[playerid]);
        AreaCheat[playerid] = INVALID_STREAMER_ID;
        DisableRemoteVehicleCollisions(playerid, false);
    }
	if(newstate == PLAYER_STATE_DRIVER) KillTimer(TimerSiEntro[playerid]);
    if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
	{
		foreach(new i : Admin)
 		{
 			if(SpecJugador[i] == playerid) PlayerSpectateVehicle(i, autoid);
		}
	}
	if(newstate == PLAYER_STATE_ONFOOT)
	{
		foreach(new i : Admin)
   		{
    		if(SpecJugador[i] == playerid) PlayerSpectatePlayer(i, playerid);
		}
		EntrandoAV[playerid] = -1;
	}
    if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
	{
		if(EmisoraEscuchando[autoid] != -1)
		{
			new emisoraid;
			emisoraid = EmisoraEscuchando[autoid];
			foreach(new id : Player)
			{
				if(Emisoras[id][CabinaOcupada] == emisoraid)
				{
					if(Emisoras[id][TransEmisora] == 1)
					{
						MP3Escuchando[playerid] = -1;
						ParlanteEscuchando[playerid] = -1;
						
						va_SendClientMessage(playerid,-1,""CB"Escuchando radio "CR"%s"CB", para cambiar de emisora usa "CR"/emisoras", Emisoras[id][NombreEmisora]);
						if(ShowSound[playerid] == 1)
						{
							new stringa[128];
							format(stringa, sizeof(stringa),"http://radio."WebName":8000/listen.pls?sid=%d", Emisoras[id][EmisoraID]);
					 		PlayAudioStreamForPlayer(playerid, stringa);
			 			}
					}
				}
			}
		}
	}
	if(newstate == PLAYER_STATE_ONFOOT && oldstate == PLAYER_STATE_DRIVER)
	{
		if(EnCarreras[playerid] > 0 && EmpezoCarrera == 1)
 		{
			DisablePlayerRaceCheckpoint(playerid);
			SetPlayerPosAC(playerid,-1405.2959,-309.6738,1052.0900);
			SetPlayerFacingAngle(playerid,190.0000);
			TextDrawHideForPlayer(playerid, CarreraT[0]);
			TextDrawHideForPlayer(playerid, CarreraT[1]);
			TextDrawHideForPlayer(playerid, CarreraT[2]);
			TextDrawHideForPlayer(playerid, CarreraT2[playerid][3]);
			TextDrawHideForPlayer(playerid, CarreraT[4]);
			TextDrawHideForPlayer(playerid, CarreraT2[playerid][5]);
			TextDrawHideForPlayer(playerid, CarreraT[6]);
			TextDrawHideForPlayer(playerid, CarreraT2[playerid][7]);
			SacarCarrera(playerid, 2);
			if(ParticipantesCarrera <= 0)
			{
			    SetTimer("VerEnCarreras",(1*60*1000),0);
   				ResetearCarrera();
			    HabilitarCarreras = 0;
				UpdateDynamic3DTextLabelText(TextoCarrera,COLOR_BLANCO,"{FF3300}Boleteria cerrada\n"CR"Horarios de los eventos: "CB"Carreras a cada hora!");
			}
			Mensaje(playerid,-1,"Perdiste la carrera por salir de tu veh�culo.");
    	}
	}
	if(newstate == PLAYER_STATE_PASSENGER)
	{
		if(PlayerInfo[playerid][Agonizando] == 1 && PacienteAmbu[playerid] == 0) return RemovePlayerFromVehicle(playerid);
		if(Objeto[playerid] > 1100) return Mensaje(playerid,-1,"No puedes subir a un veh�culo con un objeto, usa "CR"/tirar objeto."),RemovePlayerFromVehicle(playerid);
		pweapon[playerid] = GetPlayerWeapon(playerid);
		ResetPlayerWeapons(playerid);
		if(PlayerInfo[playerid][pWP4] == 29 || PlayerInfo[playerid][pWP5] == 30 || PlayerInfo[playerid][pWP5] == 31) VehicleWeapons(playerid);
	}
	if(newstate == PLAYER_STATE_PASSENGER || newstate == PLAYER_STATE_DRIVER){EnCarro[playerid] = true; KillTimer(BajandoCarro[playerid]);}
	if(oldstate == PLAYER_STATE_PASSENGER)
	{
		pweapon[playerid] = GetPlayerWeapon(playerid);
		DarArmas(playerid);
		if(pweapon[playerid] == 0 || pweapon[playerid] == 29 || pweapon[playerid] == 30 || pweapon[playerid] == 31) SetPlayerArmedWeapon(playerid, pweapon[playerid]);
	}

	if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_ENTER_VEHICLE_DRIVER)
	{
		EnAuto[playerid] = autoid;
		if(PlayerInfo[playerid][Agonizando] == 1 && PacienteAmbu[playerid] == 0) RemovePlayerFromVehicle(playerid);
		SetPlayerArmedWeapon(playerid, 0);
		if(Objeto[playerid] > 1100) Mensaje(playerid,-1,"No puedes subir a un veh�culo con un objeto, usa "CR"/tirar objeto."),RemovePlayerFromVehicle(playerid);
		for(new a = 0; a < MAX_PAUTOS; a++) 
		{
			if(autos[a][playerid] == autoid)
			{
				Mensaje(playerid, -1, "Este veh�culo te pertenece."),pvehicle++;
				if(VehicleInfo[playerid][a][Aceleracion] == 1 && VehicleInfo[playerid][a][AceleracionActiva] == 0)
				{
					Mensaje(playerid, -1, "Este veh�culo tiene la mejora de motor desactivada, para activarla pulsa "CR"[Y]"CB".");
					
				}
				else if(VehicleInfo[playerid][a][Aceleracion] == 1 && VehicleInfo[playerid][a][AceleracionActiva] == 1)
				{
					Mensaje(playerid, -1, "Este veh�culo tiene la mejora de motor activada, para desactivarla pulsa "CR"[Y]"CB".");
					TimerMejora[playerid] = SetTimerEx("MejoraMotor",500,1,"d",playerid);
				
				}
			} 
		}
		if(pvehicle == 0)
		{
		    if(alarma[autoid] == 1 && alarmaon[autoid] == 0)
			{
				GetVehicleParamsEx(autoid,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(autoid,engine,lights,true,doors,bonnet,boot,objective);
				SetTimerEx("DesactivarAlarma", minutos(1), false, "d", autoid);
				TimerLuces[autoid] = SetTimerEx("TimerLucesIntermitentes", 500, false, "d", autoid);
				alarmaon[autoid] = 1;
			}
		}
		if(!BICI(autoid) && !CAMION(autoid) && !CAMIONVIP(autoid) && MotorAuto[autoid] == 0) Mensaje(playerid,-1,"Para encender el motor del veh�culo, escribe "CR"/arrancar"CB" o pulsa "CR"'2'"CB".");
		if(EmisoraEscuchando[autoid] == -1 && !BICI(autoid)) Mensaje(playerid, COLOR_BLANCO, "Para escuchar alguna emisora de radio de San Andreas, usa "CR"/emisoras");
		if(VehiculosInfo[autoid][vcomprable] == 1)
		{
		    new string[256],vehicleid = GetPlayerVehicleID(playerid),baul[2],gaso[4],vehiclefuel = CombustibleCoche(autoid),velocidadmaxv = GetVehicleTopSpeed(autoid)-11;
		    format(gaso,sizeof(gaso),"%d", vehiclefuel);
		    if(BAUL8(vehicleid)) format(baul,sizeof(baul),"8");
		    else if(BAUL6(vehicleid)) format(baul,sizeof(baul),"6");
		    else if(BAUL2(vehicleid)) format(baul,sizeof(baul),"2");
	    	else format(baul,sizeof(baul),"4");
			switch(VehiculosInfo[autoid][vmoneda])
			{
				case 0: format(string,sizeof(string),""CB"Nombre: "CR"%s\n"CB"Espacios del ba�l: "CR"%s\n"CB"Velocidad m�xima: {ff0000}%d km/h\n"CB"Cantidad de combustible: "CR"%s Litros\n"CB"Costo del seguro: {ff0000}$%d\n"CB"Precio: "CR"$%d",NombreAuto[GetVehicleModel(vehicleid)-400],baul,velocidadmaxv,gaso,VehiculosInfo[autoid][vprecio]/100,VehiculosInfo[autoid][vprecio]);
				case 1: format(string,sizeof(string),""CB"Nombre: "CR"%s\n"CB"Espacios del ba�l: "CR"%s\n"CB"Velocidad m�xima: {ff0000}%d km/h\n"CB"Cantidad de combustible: "CR"%s Litros\n"CB"Costo del seguro: {ff0000}$%d\n"CB"Precio: {DEA221}%d "Moneda1"",NombreAuto[GetVehicleModel(vehicleid)-400],baul,velocidadmaxv,gaso,VehiculosInfo[autoid][vprecio]/100,VehiculosInfo[autoid][vprecio]);
			}
			MostrarDialog(playerid, CVEHICULO, DIALOG_STYLE_MSGBOX, "Detalles del veh�culo", string, "Comprar", "Salir");
		}
		new veh = GetPlayerVehicleID(playerid);
		if(JugadorLogeado[playerid] == 1)
		{
			if(BajandoV[playerid] == 1)
			{
				if(EnCarreras[playerid] > 0) return 1;
				if(MOTO(veh) && GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return 1;
			}
		}
		iVehicle[playerid] = veh;
        if(TAXI(autoid)) EnTaxi[playerid] = 1;
		if(BICI(autoid))
		{
			Manejando[playerid] = 1;
			KillTimer(Bajando[playerid]);
			return 1;
		}
		MostrarVelocimetro(playerid);
	}
	if(oldstate == PLAYER_STATE_DRIVER)
	{
	    EnAuto[playerid] = INVALID_VEHICLE_ID;
		if(EnTaxi[playerid] == 1)
		{
			EnTaxi[playerid] = 0;
			Ficha[playerid] = 0;
			TextDrawHideForPlayer(playerid,TAXIMET);
			TextDrawHideForPlayer(playerid,TAXIMET2[playerid]);
		}
		if(EnVehTemporal[playerid] != INVALID_VEHICLE_ID)
		{
			new vehicleid = EnVehTemporal[playerid];
			EnVehTemporal[playerid] = INVALID_VEHICLE_ID;
			MotorAuto[vehicleid] = 0;
			DestroyVehicle(vehicleid);
		}
        QuitarVelocimetro(playerid);
		Bajando[playerid] = SetTimerEx("Maneja",5000,false,"d",playerid);
	}
	if(oldstate == PLAYER_STATE_DRIVER && newstate == PLAYER_STATE_ONFOOT || oldstate == PLAYER_STATE_PASSENGER && newstate == PLAYER_STATE_ONFOOT)
	{
		BajandoCarro[playerid] = SetTimerEx("SalioCarro",5000,false,"d",playerid);
	}
	return 1;
}

Funcion:SalioCarro(playerid) {EnCarro[playerid] = false;}


public OnPlayerEnterRaceCheckpoint(playerid)
{
    #if DEBUG_GM == 1
    printf("(OnPlayerEnterRaceCheckpoint) PlayerID: %d", playerid);
    #endif
	new autoid = GetPlayerVehicleID(playerid), estado = GetPlayerState(playerid);
	if(Cosechando[playerid] == 1)
	{
		if(!IsPlayerInAnyVehicle(playerid) || !COSECHA(autoid)) return 1;
		if(TipoCosecha[playerid] == 1) 	// COSECHADOR LS 1
		{
			if(PCosechar[playerid] == 2 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-346.8214,-1271.8757,27.0408,-434.7395,-1284.5143,35.9777,7);
			else if(PCosechar[playerid] == 3 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-434.7395,-1284.5143,35.9777,-494.5822,-1356.8668,26.2945,7);
			else if(PCosechar[playerid] == 4 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-494.5822,-1356.8668,26.2945,-530.9093,-1420.5769,13.4317,7);
			else if(PCosechar[playerid] == 5 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-530.9093,-1420.5769,13.4317,-556.0339,-1340.6022,22.2881,7);
			else if(PCosechar[playerid] == 6 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-556.0339,-1340.6022,22.2881,-479.3065,-1335.5022,29.5903,7);
			else if(PCosechar[playerid] == 7 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-479.3065,-1335.5022,29.5903,-372.5690,-1340.6088,24.2354,7);
			else if(PCosechar[playerid] == 8 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-372.5690,-1340.6088,24.2354,-385.7704,-1379.5214,24.1560,7);
			else if(PCosechar[playerid] == 9 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-385.7704,-1379.5214,24.1560,-522.7097,-1390.2070,15.0239,7);
			else if(PCosechar[playerid] == 10 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-522.7097,-1390.2070,15.0239,-576.8401,-1323.0076,23.5040,7);
			else if(PCosechar[playerid] == 11 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-576.8401,-1323.0076,23.5040,-577.3044,-1412.2190,14.1550,7);
			else if(PCosechar[playerid] == 12 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-577.3044,-1412.2190,14.1550,-402.9438,-1356.3990,25.2257,7);
			else if(PCosechar[playerid] == 13 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-402.9438,-1356.3990,25.2257,-414.9883,-1295.3917,32.3511,7);
			else if(PCosechar[playerid] == 14 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-414.9883,-1295.3917,32.3511,-537.2191,-1326.9779,19.7971,7);
			else if(PCosechar[playerid] == 15 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-537.2191,-1326.9779,19.7971,-520.2421,-1413.8086,14.1538,7);
			else if(PCosechar[playerid] == 16 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-520.2421,-1413.8086,14.1538,-375.0857,-1422.6272,25.7266,7);
			else if(PCosechar[playerid] == 17 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER)
			{
				Mensaje(playerid,-1,"Entrega la cosechadora para recibir el pago.");
				SetPlayerRaceCheckpoint(playerid,1,-375.0857,-1422.6272,25.7266,0,0,0,7);
			}
			else if(PCosechar[playerid] == 18 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) return TerminarCosecha(playerid,autoid);
		}
		if(TipoCosecha[playerid] == 2) //COSECHADOR LS 2
		{
			if(PCosechar[playerid] == 2 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-246.4955,-1555.6654,4.4067,-216.8872,-1482.9047,8.9270,7);
			else if(PCosechar[playerid] == 3 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-216.8872,-1482.9047,8.9270,-322.7465,-1470.4224,14.1184,7);
			else if(PCosechar[playerid] == 4 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-322.7465,-1470.4224,14.1184,-332.4555,-1516.5870,15.8935,7);
			else if(PCosechar[playerid] == 5 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-332.4555,-1516.5870,15.8935,-228.9948,-1517.3531,8.0288,7);
			else if(PCosechar[playerid] == 6 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-228.9948,-1517.3531,8.0288,-213.0441,-1426.9248,4.5675,7);
			else if(PCosechar[playerid] == 7 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-213.0441,-1426.9248,4.5675,-173.8069,-1412.6927,4.0267,7);
			else if(PCosechar[playerid] == 8 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-173.8069,-1412.6927,4.0267,-185.0100,-1353.8081,5.3210,7);
			else if(PCosechar[playerid] == 9 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-185.0100,-1353.8081,5.3210,-243.2940,-1314.1938,11.6769,7);
			else if(PCosechar[playerid] == 10 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-243.2940,-1314.1938,11.6769,-256.7542,-1392.8950,11.1551,7);
			else if(PCosechar[playerid] == 11 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-256.7542,-1392.8950,11.1551,-300.2008,-1425.9092,15.0212,7);
			else if(PCosechar[playerid] == 12 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-300.2008,-1425.9092,15.0212,-322.0058,-1327.1244,10.3339,7);
			else if(PCosechar[playerid] == 13 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-322.0058,-1327.1244,10.3339,-224.1808,-1368.8995,8.5891 ,7);
			else if(PCosechar[playerid] == 14 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-224.1808,-1368.8995,8.5891,-303.4125,-1509.8318,11.4368,7);
			else if(PCosechar[playerid] == 15 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-303.4125,-1509.8318,11.4368,-333.3754,-1555.7393,17.6968,7);
			else if(PCosechar[playerid] == 16 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-333.3754,-1555.7393,17.6968,-248.7883,-1554.5447,4.4460,7);
			else if(PCosechar[playerid] == 17 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-248.7883,-1554.5447,4.4460,-218.1793,-1484.7902,8.7748,7);
			else if(PCosechar[playerid] == 18 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-218.1793,-1484.7902,8.7748,-320.4603,-1469.9585,13.6351,7);
			else if(PCosechar[playerid] == 19 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-320.4603,-1469.9585,13.6351,-334.1295,-1513.1343,16.0584,7);
			else if(PCosechar[playerid] == 20 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-334.1295,-1513.1343,16.0584,-369.9481,-1468.6471,26.7036,7);
			else if(PCosechar[playerid] == 21 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER)
			{
				Mensaje(playerid,-1,"Entrega la cosechadora para recibir el pago.");
				SetPlayerRaceCheckpoint(playerid,1,-369.9481,-1468.6471,26.7036,0,0,0,7);
			}
			else if(PCosechar[playerid] == 22 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) return TerminarCosecha(playerid,autoid);
		}
		if(TipoCosecha[playerid] == 3) // COSECHADOR BB 1
		{
			if(PCosechar[playerid] == 2 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,65.5033,-28.9166,1.8391,51.3469,-90.0856,1.5836,7);
			else if(PCosechar[playerid] == 3 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,51.3469,-90.0856,1.5836,-37.4664,-105.6079,4.0944,7);
			else if(PCosechar[playerid] == 4 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-37.4664,-105.6079,4.0944,-10.8682,-10.9632,4.0946,7);
			else if(PCosechar[playerid] == 5 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-10.8682,-10.9632,4.0946,43.7039,36.4581,3.3677,7);
			else if(PCosechar[playerid] == 6 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,43.7039,36.4581,3.3677,68.2778,5.3614,1.7663,7);
			else if(PCosechar[playerid] == 7 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,68.2778,5.3614,1.7663,21.6165,-76.3114,2.8206,7);
			else if(PCosechar[playerid] == 8 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,21.6165,-76.3114,2.8206,21.9304,60.4014,4.0933,7);
			else if(PCosechar[playerid] == 9 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,21.9304,60.4014,4.0933,63.9625,-25.3857,2.0482,7);
			else if(PCosechar[playerid] == 10 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,63.9625,-25.3857,2.0482,50.5326,-90.0527,1.6007,7);
			else if(PCosechar[playerid] == 11 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,50.5326,-90.0527,1.6007,-36.1450,-105.7868,4.0974,7);
			else if(PCosechar[playerid] == 12 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-36.1450,-105.7868,4.0974,-10.4871,-10.9361,4.0955,7);
			else if(PCosechar[playerid] == 13 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-10.4871,-10.9361,4.0955,46.9876,35.7539,2.9916,7);
			else if(PCosechar[playerid] == 14 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,46.9876,35.7539,2.9916,-44.3219,91.2737,4.0936,7);
			else if(PCosechar[playerid] == 15 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER)
			{
				Mensaje(playerid,-1,"Entrega la cosechadora para recibir el pago.");
				SetPlayerRaceCheckpoint(playerid,1,-44.3219,91.2737,4.0936,0,0,0,7);
			}
			else if(PCosechar[playerid] == 16 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) return TerminarCosecha(playerid,autoid);
		}
		if(TipoCosecha[playerid] == 4)  //COSECHADOR BB 2
		{
			if(PCosechar[playerid] == 2 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-217.6646,94.3875,3.4652,-271.5909,-40.1261,3.5487,7);
			else if(PCosechar[playerid] == 3 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-271.5909,-40.1261,3.5487,-192.6351,-81.0166,4.0963,7);
			else if(PCosechar[playerid] == 4 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-192.6351,-81.0166,4.0963,-153.7674,-14.4662,4.0965,7);
			else if(PCosechar[playerid] == 5 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-153.7674,-14.4662,4.0965,-246.5216,24.1091,3.4020,7);
			else if(PCosechar[playerid] == 6 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-246.5216,24.1091,3.4020,-180.5509,80.8146,4.0943,7);
			else if(PCosechar[playerid] == 7 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-180.5509,80.8146,4.0943,-189.0931,5.1473,4.0856,7);
			else if(PCosechar[playerid] == 8 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-189.0931,5.1473,4.0856,-216.8380,-74.8122,4.0924,7);
			else if(PCosechar[playerid] == 9 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-216.8380,-74.8122,4.0924,-243.0730,-38.6523,4.0944,7);
			else if(PCosechar[playerid] == 10 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-243.0730,-38.6523,4.0944,-125.0863,98.8051,4.0933,7);
			else if(PCosechar[playerid] == 11 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-125.0863,98.8051,4.0933,-107.6278,141.3542,4.0923,7);
			else if(PCosechar[playerid] == 12 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-107.6278,141.3542,4.0923,-171.4407,167.2149,8.5181,7);
			else if(PCosechar[playerid] == 13 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-171.4407,167.2149,8.5181,-273.8834,-48.3502,3.8793,7);
			else if(PCosechar[playerid] == 14 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) SetPlayerRaceCheckpoint(playerid,0,-273.8834,-48.3502,3.8793,-41.1225,85.6013,4.0960,7);
			else if(PCosechar[playerid] == 15 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER)
			{
				Mensaje(playerid,-1,"Entrega la cosechadora para recibir el pago.");
				SetPlayerRaceCheckpoint(playerid,1,-41.1225,85.6013,4.0960,0,0,0,7);
			}
			else if(PCosechar[playerid] == 16 && COSECHA(autoid) && estado == PLAYER_STATE_DRIVER) return TerminarCosecha(playerid,autoid);
		}
		PCosechar[playerid]++;
		UpdateBarraJob(playerid,PCosechar[playerid]);
		return 1;
	}
	// Carreras
	if(EnCarreras[playerid] > 0)
	{
	    if(EstaEn(playerid,14,-1418.1959,-276.4316,1051.0911))
	    {
	        VueltasCarrera[playerid] ++;
	        new string2[15];
	        format(string2,sizeof(string2),"Vuelta: %d/5",VueltasCarrera[playerid]);
	        TextDrawSetString(CarreraT2[playerid][3],string2);
	        if(VueltasCarrera[playerid] >= 5)
	        {
	            DisablePlayerRaceCheckpoint(playerid);
				SetPlayerPosAC(playerid,-1405.2959,-309.6738,1052.0900);
				SetPlayerFacingAngle(playerid,190.0000);
				TextDrawHideForPlayer(playerid, CarreraT[0]);
				TextDrawHideForPlayer(playerid, CarreraT[1]);
				TextDrawHideForPlayer(playerid, CarreraT[2]);
				TextDrawHideForPlayer(playerid, CarreraT2[playerid][3]);
				TextDrawHideForPlayer(playerid, CarreraT[4]);
				TextDrawHideForPlayer(playerid, CarreraT2[playerid][5]);
				TextDrawHideForPlayer(playerid, CarreraT[6]);
				TextDrawHideForPlayer(playerid, CarreraT2[playerid][7]);
				SlotGanador ++;
				CargandoEx(playerid);
				new string[250],minuto = TiempoCarrera[playerid], segundo = TiempoCarrera2[playerid];
				if(SlotGanador == 1)
				{
				    Mensaje(playerid,-1,"�Felicidades! Ganaste la carrera, tu premio es de "CR"$20.000"CB" y "CR"3 "Moneda3""CB".");
				    DarDinero(playerid,20000);
				    Mensaje(playerid,-1,"Conseguiste 3 puntos en el torneo del mes.");
					format(string,sizeof(string),"El corredor "CR"%s"CB" consigui� el primer puesto tardando "CR"%d:%d.",NombreJugador(playerid),minuto,segundo);
                    PlayerInfo[playerid][pPuntosCarrera] += 3;
                    PlayerInfo[playerid][Credits] += 3;
					RevisarLogro(playerid,6);
				}
				else if(SlotGanador == 2)
				{
					Mensaje(playerid,-1,"Lograste terminar la carrera en el segundo puesto, tu premio es de "CR"$15.000"CB" y "CR"2 "Moneda3""CB".");
				    DarDinero(playerid,15000);
				    Mensaje(playerid,-1,"Conseguiste 2 puntos en el torneo del mes.");
					format(string,sizeof(string),"El corredor "CR"%s"CB" consigui� el segundo puesto tardando "CR"%d:%d.",NombreJugador(playerid),minuto,segundo);
                    PlayerInfo[playerid][pPuntosCarrera] += 2;
                    PlayerInfo[playerid][Credits] += 2;
				}
				else if(SlotGanador == 3)
				{
				    Mensaje(playerid,-1,"Lograste terminar la cerrera en el tercer puesto, tu premio es de "CR"$2.000"CB" y "CR"1 "Moneda3""CB".");
				    DarDinero(playerid,2000);
				    Mensaje(playerid,-1,"Conseguiste 1 punto en el torneo del mes.");
					format(string,sizeof(string),"El corredor "CR"%s"CB" consigui� el tercer puesto tardando "CR"%d:%d.",NombreJugador(playerid),minuto,segundo);
                    PlayerInfo[playerid][pPuntosCarrera] += 1;
                    PlayerInfo[playerid][Credits] += 1;
				}
				else if(SlotGanador > 3) format(string,sizeof(string),"El corredor "CR"%s"CB" consigui� terminar en el puesto %d tardando "CR"%d:%d.",NombreJugador(playerid),SlotGanador,minuto,segundo);
				foreach(new i : Player)
				{
					if(EstaEn(i,250,-1408.8688,-304.5082,1056.4351) && GetPlayerInterior(i) == 7) Mensaje(i,-1,string);
				}
				SacarCarrera(playerid, 2);
				if(ParticipantesCarrera <= 0)
				{
				    SetTimer("VerEnCarreras",(1*60*1000),0);
				    ResetearCarrera();
				    HabilitarCarreras = 0;
					UpdateDynamic3DTextLabelText(TextoCarrera,COLOR_BLANCO,"{FF3300}Boleteria cerrada\n"CR"Horarios de los eventos: "CB"Carreras a cada hora!");
				}
	        }
			else
			{
				SetPlayerRaceCheckpoint(playerid,0,-1357.2258,-130.9288,1051.0356,-1365.4042,-280.5632,1045.2321,14);
				InfoCP[0][VueltasCarrera[playerid]] ++;
				new string[10];
				format(string,sizeof(string),"%d/%d",InfoCP[0][VueltasCarrera[playerid]],ParticipantesCarrera2);
				TextDrawSetString(CarreraT2[playerid][5],string);
			}
	    }
	    if(EstaEn(playerid,14,-1357.2258,-130.9288,1051.0356))
	    {
	        InfoCP[1][VueltasCarrera[playerid]] ++;
			SetPlayerRaceCheckpoint(playerid,0,-1365.4042,-280.5632,1045.2321,-1504.3351,-154.6163,1049.3365,14);
			new string[10];
			format(string,sizeof(string),"%d/%d",InfoCP[1][VueltasCarrera[playerid]],ParticipantesCarrera2);
			TextDrawSetString(CarreraT2[playerid][5],string);
	    }
	    if(EstaEn(playerid,14,-1365.4042,-280.5632,1045.2321))
	    {
			SetPlayerRaceCheckpoint(playerid,0,-1504.3351,-154.6163,1049.3365,-1418.1959,-276.4316,1051.0911,14);
			InfoCP[2][VueltasCarrera[playerid]] ++;
			new string[10];
			format(string,sizeof(string),"%d/%d",InfoCP[2][VueltasCarrera[playerid]],ParticipantesCarrera2);
			TextDrawSetString(CarreraT2[playerid][5],string);
	    }
	    if(EstaEn(playerid,14,-1504.3351,-154.6163,1049.3365))
	    {
			if(VueltasCarrera[playerid] == 4) SetPlayerRaceCheckpoint(playerid,1,-1418.1959,-276.4316,1051.0911,-1357.2258,-130.9288,1051.0356,14);
			else SetPlayerRaceCheckpoint(playerid,0,-1418.1959,-276.4316,1051.0911,-1357.2258,-130.9288,1051.0356,14);
			InfoCP[3][VueltasCarrera[playerid]] ++;
			new string[10];
			format(string,sizeof(string),"%d/%d",InfoCP[3][VueltasCarrera[playerid]],ParticipantesCarrera2);
			TextDrawSetString(CarreraT2[playerid][5],string);
	    }
	}
	return 1;
}

Funcion:VerEnCarreras()
{
	if(EmpezoCarrera == 1) return 1;
	foreach(new i : Player)
	{
		if(IsPlayerInArea(i,-1583.6758,-349.9940,-1235.8519,-81.7825) && GetPlayerInterior(i) == 7 && EmpezoCarrera == 0)
		{
		    SetPosEx(i,1094.0945,1597.0083,12.5469,0,0,0);
			Mensaje(i,-1,"Fuiste expulsado del estadio por no pagar entrada o la carrera ya termino.");
			EntradaCarrera[i] = false;
		}
	}
	return true;
}

Funcion:EmpezarCarrera()
{
    new string[300];
	if(TipoConteo == 0)
	{
		if(ConteoCarrera >= 3)
		{
		    ConteoCarrera --;
		    format(string,sizeof(string),"En "CR"%d minutos"CB" comienza la carrera, ya se inscribieron "CR"%d"CB" corredores.",ConteoCarrera,ParticipantesCarrera);
			foreach(new i : Player)
			{
				if(EstaEn(i,250,-1408.8688,-304.5082,1056.4351) && GetPlayerInterior(i) == 7) Mensaje(i,-1,string);
			}
            SetTimer("EmpezarCarrera",60*1000,0);
		}
		else if(ConteoCarrera <= 2)
		{
            TipoConteo = 1;
            ConteoCarrera = 60;
		    format(string,sizeof(string),"En "CR"60 segundos"CB" comienza la carrera, ya se inscribieron "CR"%d"CB" corredores.",ParticipantesCarrera);
			foreach(new i : Player)
			{
				if(EstaEn(i,250,-1408.8688,-304.5082,1056.4351) && GetPlayerInterior(i) == 7) Mensaje(i,-1,string);
			}
            SetTimer("EmpezarCarrera",10*1000,0);
		}
	}
	else if(TipoConteo == 1)
	{
	    if(ConteoCarrera > 10)
	    {
            SetTimer("EmpezarCarrera",10*1000,0);
            ConteoCarrera -= 10;
		}
		else if(ConteoCarrera <= 10)
		{
		    ConteoCarrera = 10;
            SetTimer("EmpezarCarrera",1000,0);
            TipoConteo = 2;
		}
	}
	else if(TipoConteo == 2)
	{
	    if(ConteoCarrera > 1)
	    {
	    	ConteoCarrera --;
            SetTimer("EmpezarCarrera",1000,0);
	    }
	    else if(ConteoCarrera <= 1)
	    {
	        TipoConteo = 0;
	        ConteoCarrera = 10;
	        if(ParticipantesCarrera <= 1)
	        {
	            SetTimer("VerEnCarreras",(1*60*1000),0);
				ResetearCarrera();
				foreach(new i : Player)
				{
					if(EstaEn(i,250,-1408.8688,-304.5082,1056.4351) && GetPlayerInterior(i) == 7)
					{
						Mensaje(i,-1,"La carrera se cancelo automaticamente por la falta de corredores.");
						UpdateDynamic3DTextLabelText(TextoCarrera,COLOR_BLANCO,"{FF3300}Boleteria cerrada\n"CR"Horarios de los eventos: "CB"Carreras a cada hora!");
					}
					if(EnCarreras[i] > 0) SacarCarrera(i, 1);
				}
	        	return true;
	        }
			foreach(new i : Player)
	        {
	            if(EnCarreras[i] > 0)
	            {
	                SetPlayerVirtualWorld(i,7);
	                SetPlayerInterior(i,7);
	                new azarauto = random(3), idve = 494;
	                new v = EnCarreras[i]-1;
					switch(azarauto)
					{
						case 0: idve = 494;
						case 1: idve = 502;
						case 2: idve = 503;
					}
					if(EnCarreras[i] == 1)			VehiculoCarrera[v] = CreateVehicle(idve,-1429.7744,-277.8124,1051.0447,286.1007,-1,-1,-1);
	          		else if(EnCarreras[i] == 2)		VehiculoCarrera[v] = CreateVehicle(idve,-1428.6266,-284.8796,1051.1610,286.0206,-1,-1,-1);
					else if(EnCarreras[i] == 3)		VehiculoCarrera[v] = CreateVehicle(idve,-1436.8180,-279.4531,1051.0262,278.0089,-1,-1,-1);
					else if(EnCarreras[i] == 4)		VehiculoCarrera[v] = CreateVehicle(idve,-1435.7325,-286.6672,1051.0447,278.0428,-1,-1,-1);
					else if(EnCarreras[i] == 5)		VehiculoCarrera[v] = CreateVehicle(idve,-1443.9871,-279.9528,1051.1610,268.7120,-1,-1,-1);
					else if(EnCarreras[i] == 6)		VehiculoCarrera[v] = CreateVehicle(idve,-1443.2439,-287.2351,1051.0262,269.6268,-1,-1,-1);
					else if(EnCarreras[i] == 7)		VehiculoCarrera[v] = CreateVehicle(idve,-1450.7983,-279.3050,1051.0447,261.7959,-1,-1,-1);
					else if(EnCarreras[i] == 8)		VehiculoCarrera[v] = CreateVehicle(idve,-1451.0276,-286.7166,1051.1610,264.2670,-1,-1,-1);
					else if(EnCarreras[i] == 9)		VehiculoCarrera[v] = CreateVehicle(idve,-1457.6642,-278.1770,1051.0447,259.2639,-1,-1,-1);
					else if(EnCarreras[i] == 10)	VehiculoCarrera[v] = CreateVehicle(idve,-1458.2916,-285.2527,1051.1610,257.9200,-1,-1,-1);
					else if(EnCarreras[i] == 11)	VehiculoCarrera[v] = CreateVehicle(idve,-1464.6902,-276.4745,1051.0447,257.6168,-1,-1,-1);
					else if(EnCarreras[i] == 12)	VehiculoCarrera[v] = CreateVehicle(idve,-1465.5854,-283.5643,1051.1610,256.4550,-1,-1,-1);
					else if(EnCarreras[i] == 13)	VehiculoCarrera[v] = CreateVehicle(idve,-1470.6466,-278.7024,1051.1610,250.0000,-1,-1,-1);
					else print("ERROR CARRERA 1");
					if(VehiculoCarrera[v] > 0)
					{
					    new veh = VehiculoCarrera[v];
	    				LinkVehicleToInteriorAC(veh,7);
				    	SetVehicleVirtualWorld(veh,7);
				    	ClearAnimations(i);
				    	EnAuto[i] = veh;
				    	PutPlayerInVehicleAC(i,veh,0);
				    	VehicleFuel[veh] = 90;
		    			GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, boot, objective);
						SetVehicleParamsEx(veh, 1, lights, alarm, doors, bonnet, boot, objective);
						MotorAuto[veh] = 1;
						MostrarVelocimetro(i);
						if(DisableStatus == 1) DisableRemoteVehicleCollisions(i, true);
					}
			        CongelarEx(i);
	    	    	GameTextForPlayer(i,"~r~10",800,6);
	    	    	PlayerPlaySound(i, 1085, 0.0, 0.0, 0.0);
				}
	        }
			MensajeAdmin(COLOR_CHEAT, "Notificaci�n: [INFO ESTADIO] El conteo ha iniciado (10).", 3);
	        SetTimer("ConteoCarrera2",1000,0);
			EmpezoCarrera = 1;
	    }
	}
	return true;
}

Funcion:ConteoCarrera2()
{
	if(ConteoCarrera > 0)
	{
		foreach(new i : Player)
	 	{
	  		if(EnCarreras[i] > 0)
	    	{
	    	    new string[40];
				format(string,sizeof(string),"~r~%d",ConteoCarrera);
	    	    GameTextForPlayer(i,string,800,6);
	    	    PlayerPlaySound(i, 1085, 0.0, 0.0, 0.0);
	    	}
		}
		ConteoCarrera --;
		SetTimer("ConteoCarrera2",1000,0);
	}
	else if(ConteoCarrera <= 0)
	{
		foreach(new i : Player)
	 	{
	  		if(EnCarreras[i] > 0)
	    	{
	    	    DescongelarEx(i);
	 		    new string[50];
	 		    format(string,sizeof(string),"0/%d",ParticipantesCarrera);
	 		    TextDrawSetString(CarreraT2[i][5],string);
				TextDrawShowForPlayer(i, CarreraT[0]);
				TextDrawShowForPlayer(i, CarreraT[1]);
				TextDrawShowForPlayer(i, CarreraT[2]);
				TextDrawShowForPlayer(i, CarreraT2[i][3]);
				TextDrawShowForPlayer(i, CarreraT[4]);
				TextDrawShowForPlayer(i, CarreraT2[i][5]);
				TextDrawShowForPlayer(i, CarreraT[6]);
				TextDrawShowForPlayer(i, CarreraT2[i][7]);
	    	    GameTextForPlayer(i,"~g~YA",800,6);
	    	    PlayerPlaySound(i, 1083, 0.0, 0.0, 0.0);
				SetPlayerRaceCheckpoint(i,0,-1357.2258,-130.9288,1051.0356,-1365.4042,-280.5632,1045.2321,14);
	    	}
		}
		MensajeAdmin(COLOR_CHEAT, "Notificaci�n: [INFO ESTADIO] La carrera ha iniciado.", 3);
		SetTimer("ConteoCarrera3",1000,0);
	}
}

Funcion:ConteoCarrera3()
{
	if(EmpezoCarrera == 1)
	{
		foreach(new i : Player)
		{
			if(EnCarreras[i] > 0)
	 		{
	 		    TiempoCarrera2[i] ++;
	 		    if(TiempoCarrera2[i] >= 60)
	 		    {
	 		        TiempoCarrera2[i] = 0;
	 		        TiempoCarrera[i] ++;
	 		    }
	 		    new string[50];
	 		    format(string,sizeof(string),"%d:%d",TiempoCarrera[i],TiempoCarrera2[i]);
	 		    TextDrawSetString(CarreraT2[i][7],string);
	 		}
	 	}
	 	SetTimer("ConteoCarrera3",1000,0);
 	}
}

SacarCarrera(playerid, codigo)
{
	if(EnCarreras[playerid] == 0) return 1;
	new a = EnCarreras[playerid]+1;
	EnCarreras[playerid] = 0;
	ParticipantesCarrera --;
	VueltasCarrera[playerid] = 0;
	TiempoCarrera[playerid] = 0;
	TiempoCarrera2[playerid] = 0;
	DisablePlayerRaceCheckpoint(playerid);
	if(codigo == 2) SetPosEx(playerid,-1405.2959,-309.6738,1052.0900,190.0000,7,7);
	if(DisableStatus == 1) DisableRemoteVehicleCollisions(playerid, false);
	TextDrawHideForPlayer(playerid, CarreraT[0]);
	TextDrawHideForPlayer(playerid, CarreraT[1]);
	TextDrawHideForPlayer(playerid, CarreraT[2]);
	TextDrawHideForPlayer(playerid, CarreraT2[playerid][3]);
	TextDrawHideForPlayer(playerid, CarreraT[4]);
	TextDrawHideForPlayer(playerid, CarreraT2[playerid][5]);
	TextDrawHideForPlayer(playerid, CarreraT[6]);
	TextDrawHideForPlayer(playerid, CarreraT2[playerid][7]);
	if(EmpezoCarrera == 1) return DestroyVehicle(VehiculoCarrera[a-2]),VehiculoCarrera[a-2] = 0;
	foreach(new i : Player)
	{
	    if(a >= ParticipantesCarrera) break;
	    if(JugadorLogeado[i])
	    {
	        if(EnCarreras[i] == a)
	        {
	            EnCarreras[i] = a;
	            a ++;
	        }
	    }
	}
	return true;
}

ResetearCarrera()
{
	foreach(new i : Player)
	{
	    if(EnCarreras[i] > 0) SacarCarrera(i, 1);
	}
    ConteoCarrera = 0;
    ParticipantesCarrera = 0;
    ParticipantesCarrera2 = 0;
    lugarcarrera = 0;
	EmpezoCarrera = 0;
	HabilitarCarreras = 0;
	TipoConteo = 0;
	SlotGanador = 0;
	for(new a; a < 4; a++)
	{
	    for(new b; b < 6; b++) InfoCP[a][b] = 0;
	}
}

GetParticipantesC()
{
	new count;
	foreach(new i : Player)
	{
	    if(EnCarreras[i] > 0) count ++;
	}
	return count;
}

Funcion:CargarUsers()
{
	new Query[30];
	mysql_format(Conecction, Query, sizeof(Query), "SELECT * FROM `registros`");
	mysql_tquery(Conecction, Query, "CargarRegistros");
	return 1;
}

Funcion:CargarRegistros()
{
    new row_count;
	cache_get_row_count(row_count);
	for(new i = 0; i < row_count; i++)
	{
		cache_get_value_name_int(0, "Cantidad", Usuarios[Cantidad]);
		cache_get_value_name_int(0, "Stats", StatsStatus);
		cache_get_value_name_int(0, "Arbol", ArbolStatus);
		//cache_get_value_name_int(0, "Blindado",	StatusBlindado);
		cache_get_value_name_int(0, "Armas", ArmasEstado);
		cache_get_value_name_int(0, "Disable", DisableStatus);
	}
	return 1;
}

Funcion:CargarCasas()
{
    mysql_tquery(Conecction, "SELECT * FROM propiedades", "CargarPropiedades");
}


Funcion:CargarFabricas()
{
    mysql_tquery(Conecction, "SELECT * FROM fabricas", "CargarFabricasMeta");
}

CargarFabricass(id)
{
	new string[350];
	if(Fabricas[id][pBanda] > 0)
	{
		if(Fabricas[id][TiempoSoborno] == 0) Fabricas[id][TiempoSoborno] = gettimeVariable + 604800;
		if(Fabricas[id][pCantidadDinero] > MAX_FDINERO) Fabricas[id][pCantidadDinero] = MAX_FDINERO;
		Fabricas[id][pChalecos] = 0;
	    CalcularBolsos(id);
		
		format(string, sizeof(string), "{ff3e3e}F�brica de metanfetamina\n"CB"Propiedad de "CR"%s", BandasInfo[Fabricas[id][pBanda]][BNombre]);
		Fabricas[id][pLabel] = CreateDynamic3DTextLabel(string, COLOR_BLANCO, Fabricas[id][pEntradaX],Fabricas[id][pEntradaY],Fabricas[id][pEntradaZ]+1.0, 20);
		Fabricas[id][pLabel2] = CreateDynamic3DTextLabel(""CB"Usa "CR"/salir"CB" para salir de la propiedad.",COLOR_BLANCO,Fabricas[id][pSalidaX],Fabricas[id][pSalidaY],Fabricas[id][pSalidaZ],5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,Fabricas[id][pVW],Fabricas[id][pInt],-1,100.0);
		FabricaPickup(id);
		Fabricas[id][pMapIcon] = CreateDynamicMapIcon(Fabricas[id][pEntradaX],Fabricas[id][pEntradaY],Fabricas[id][pEntradaZ], 23, -1, -1, -1, -1, 600.0);
		Fabricas[id][pPuerta] = CreateDynamicObject(19303, -2022.93274, 254.14169, 1036.06921,   0.00000, 0.00000, 90.00000, Fabricas[id][pVW],Fabricas[id][pInt]);
		Fabricas[id][tMoney] = CreateDynamicObject(19353, -2026.86145, 253.81740, 1036.84436,   0.00000, 0.00000, 0.00000, Fabricas[id][pVW],Fabricas[id][pInt],-1);
		Fabricas[id][Auto1F] = CreateVehicle(554,-2007.1453000,213.5989000,1035.9004000,271.7110000,1,53,-1); //Yosemite
  		LinkVehicleToInteriorAC(Fabricas[id][Auto1F], Fabricas[id][pInt]);
    	SetVehicleVirtualWorld(Fabricas[id][Auto1F], Fabricas[id][pVW]);
		SetVehicleHealthAC(Fabricas[id][Auto1F], 5000.0);
		VehicleFuel[Fabricas[id][Auto1F]] = 120;
		Fabricas[id][Auto2F] = CreateVehicle(554,-1998.8115,208.2825,1035.9037,285.0887,1,53,-1); //Yosemite
		LinkVehicleToInteriorAC(Fabricas[id][Auto2F], Fabricas[id][pInt]);
  		SetVehicleVirtualWorld(Fabricas[id][Auto2F], Fabricas[id][pVW]);
		SetVehicleHealthAC(Fabricas[id][Auto2F], 5000.0);
		VehicleFuel[Fabricas[id][Auto2F]] = 120;
		bloqueado[Fabricas[id][Auto1F]] = 0;
		bloqueado[Fabricas[id][Auto2F]] = 0;
  		AutoDeFabrica[Fabricas[id][Auto1F]] = 1;
   		AutoDeFabrica[Fabricas[id][Auto2F]] = 2;
		for(new n = 0; n < 5; n++)
		{
			BarrilMeta[id][n] = CreateDynamicObject(3632,0,0,-1000,0,0,0, Fabricas[id][pVW],Fabricas[id][pInt]);
			CajaMeta[id][n] = CreateDynamicObject(1271,0,0,-1000,0,0,0, Fabricas[id][pVW],Fabricas[id][pInt]);
			if(Fabricas[id][Termino][n] == 1)
			{
				Fabricas[id][StatoCuoco][n] = 4;
				Fabricas[id][Bloque][n] = CreateDynamicObject(1271, PosicionesCoc[n][0],PosicionesCoc[n][1],PosicionesCoc[n][2], 0.00000, 0.00000, 0.00000, Fabricas[id][pVW],Fabricas[id][pInt]);
			}
			if(Fabricas[id][StatoCuoco][n] == 1 && Fabricas[id][TieneActor][n+1] != 0 || Fabricas[id][PorcentajeCocinero][n] > 0 && Fabricas[id][TieneActor][n+1] != 0) Fabricas[id][StatoCuoco][n] = 1;
			if(Fabricas[id][TieneActor][n+1] != 0 && Fabricas[id][StatoCuoco][n] == 0 && Fabricas[id][PorcentajeCocinero][n] == 0) Fabricas[id][StatoCuoco][n] = 2;
		}
		ObjetoDistraccion(Fabricas[id][Auto2F], id);
		ActualizarDineroPared(id);
		CargarCajasFabrica(id);
		for(new a = 0; a < 11; a++)
		{
			if(Fabricas[id][TieneActor][a] == 0) continue;
			else
			{
				if(Fabricas[id][EstadoActor][a] > 0) Fabricas[id][EstadoActor][a] = 0;
				if(a == 0) Fabricas[id][ActorFabrica][a] = CreateDynamicActor(ObtenerMedico(Fabricas[id][TieneActor][a]), -2022.5638,215.6430,1035.8162,302.6615, 0, 100.0,Fabricas[id][pVW],Fabricas[id][pInt]);
				else if(a < 6)
				{
					Fabricas[id][ActorFabrica][a] = CreateDynamicActor(ObtenerCocinero(a), PosicionesCoc2[a-1][0],PosicionesCoc2[a-1][1],PosicionesCoc2[a-1][2],PosicionesCoc2[a-1][3], 0, 100.0, Fabricas[id][pVW],Fabricas[id][pInt]);
					ApplyDynamicActorAnimation(Fabricas[id][ActorFabrica][a], "COP_AMBIENT","Coplook_loop", 4.1,1,0,0,1,0);
				}
				else Fabricas[id][ActorFabrica][a] = CreateDynamicActor(ObtenerGuardia(a-6), PosicionesGuardias[a-6][0],PosicionesGuardias[a-6][1],PosicionesGuardias[a-6][2],PosicionesGuardias[a-6][3], 0, 200.0, Fabricas[id][pVW], Fabricas[id][pInt]);
			}
		}
  		for(new cb = 0; cb < Fabricas[id][pCantidadBolsas]; cb++) { Fabricas[id][Bolso][cb] = CreateDynamicObject(1550, BolsoSpawn[cb][0], BolsoSpawn[cb][1], BolsoSpawn[cb][2], BolsoSpawn[cb][3], BolsoSpawn[cb][4], BolsoSpawn[cb][5], Fabricas[id][pVW],Fabricas[id][pInt]); }
        for(new esco = 0; esco < Fabricas[id][pRecortada]; esco++) { Fabricas[id][EscoObjetos][esco] = CreateDynamicObject(350, EscopetasRecortadas[esco][0], EscopetasRecortadas[esco][1], EscopetasRecortadas[esco][2],   EscopetasRecortadas[esco][3], EscopetasRecortadas[esco][4], EscopetasRecortadas[esco][5], Fabricas[id][pVW],Fabricas[id][pInt]); }
		for(new ch = 0; ch < Fabricas[id][pChalecos]; ch++) { Fabricas[id][Chalecos][ch] = CreateDynamicObject(373, ChalecoSpawn[ch][0], ChalecoSpawn[ch][1], ChalecoSpawn[ch][2],   ChalecoSpawn[ch][3], ChalecoSpawn[ch][4], ChalecoSpawn[ch][5], Fabricas[id][pVW],Fabricas[id][pInt]); }
		for(new snip = 0; snip < Fabricas[id][pSniper]; snip++) { Fabricas[id][SniperObjetos][snip] = CreateDynamicObject(358, PSnipers[snip][0], PSnipers[snip][1], PSnipers[snip][2],   PSnipers[snip][3], PSnipers[snip][4], PSnipers[snip][5], Fabricas[id][pVW],Fabricas[id][pInt]); }
		for(new tects = 0; tects < Fabricas[id][pTec9]; tects++) { Fabricas[id][Tec9Objetos][tects] = CreateDynamicObject(372, PTec[tects][0], PTec[tects][1], PTec[tects][2],   PTec[tects][3], PTec[tects][4], PTec[tects][5], Fabricas[id][pVW],Fabricas[id][pInt]); }
		for(new uzis = 0; uzis < Fabricas[id][pUzi]; uzis++) { Fabricas[id][UziObjetos][uzis] = CreateDynamicObject(352, PUzis[uzis][0], PUzis[uzis][1], PUzis[uzis][2],   PUzis[uzis][3], PUzis[uzis][4], PUzis[uzis][5], Fabricas[id][pVW],Fabricas[id][pInt]); }
		format(string,sizeof(string),"{000cff}Mesa de producci�n\n"CB"Cristal molido: "CR"%d%%"CB"\nEstado:%s",Fabricas[id][PorcentajeCocinero][0], EstadoCuoco(Fabricas[id][StatoCuoco][0]));
		Fabricas[id][Cocinero][0] = CreateDynamic3DTextLabel(string, COLOR_BLANCO, -2016.39978, 226.99930, 1035.33789+0.2, 4.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,Fabricas[id][pVW], Fabricas[id][pInt],-1,100.0);
		format(string,sizeof(string),"{000cff}Mesa de producci�n\n"CB"Cristal molido: "CR"%d%%"CB"\nEstado:%s",Fabricas[id][PorcentajeCocinero][1], EstadoCuoco(Fabricas[id][StatoCuoco][1]));
		Fabricas[id][Cocinero][1] = CreateDynamic3DTextLabel(string, COLOR_BLANCO, -2012.56006, 226.99930, 1035.33789+0.2, 4.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,Fabricas[id][pVW], Fabricas[id][pInt],-1,100.0);
		format(string,sizeof(string),"{000cff}Mesa de producci�n\n"CB"Cristal molido: "CR"%d%%"CB"\nEstado:%s",Fabricas[id][PorcentajeCocinero][2], EstadoCuoco(Fabricas[id][StatoCuoco][2]));
		Fabricas[id][Cocinero][2] = CreateDynamic3DTextLabel(string, COLOR_BLANCO, -2008.72021, 226.99930, 1035.33789+0.2, 4.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,Fabricas[id][pVW], Fabricas[id][pInt],-1,100.0);
		format(string,sizeof(string),"{000cff}Mesa de producci�n\n"CB"Cristal molido: "CR"%d%%"CB"\nEstado:%s",Fabricas[id][PorcentajeCocinero][3], EstadoCuoco(Fabricas[id][StatoCuoco][3]));
		Fabricas[id][Cocinero][3] = CreateDynamic3DTextLabel(string, COLOR_BLANCO, -2004.88074, 226.99930, 1035.33789+0.2, 4.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,Fabricas[id][pVW], Fabricas[id][pInt],-1,100.0);
		format(string,sizeof(string),"{000cff}Mesa de producci�n\n"CB"Cristal molido: "CR"%d%%"CB"\nEstado:%s",Fabricas[id][PorcentajeCocinero][4], EstadoCuoco(Fabricas[id][StatoCuoco][4]));
		Fabricas[id][Cocinero][4] = CreateDynamic3DTextLabel(string, COLOR_BLANCO, -2001.06067, 226.99930, 1035.33789+0.2, 4.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,Fabricas[id][pVW], Fabricas[id][pInt],-1,100.0);
		format(string,sizeof(string),""CR"Armas"CB"\nCantidad disponible:"CR" %d"CB"\n\nPulsa "CR"'H'"CB" para equipar una.\nPulsa "CR"'Y'"CB" para guardar el arma que llevas en tus manos.",Fabricas[id][pRecortada]+Fabricas[id][pUzi]+Fabricas[id][pTec9]+Fabricas[id][pSniper]);
		Fabricas[id][pLabel4] = CreateDynamic3DTextLabel(string, COLOR_BLANCO, -2019.9447,243.5474,1035.8162+0.3 ,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,Fabricas[id][pVW],Fabricas[id][pInt]);
		format(string,sizeof(string),"{3399FF}Chalecos antibalas"CB"\nCantidad disponible: "CR"%s"CB"\n\nPulsa "CR"'H'"CB" para equipar uno.",Numeros(Fabricas[id][pChalecos]));
		Fabricas[id][pLabel5] = CreateDynamic3DTextLabel(string, COLOR_BLANCO, -2020.0555,239.3711,1035.8162+0.3, 3.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,Fabricas[id][pVW], Fabricas[id][pInt],-1,100.0);
		format(string,sizeof(string),""CR"Cocina: #1"CB"\nProducci�n: {3d83ce}%d%%"CB" completada.\nEstado: %s"CB"\n\n%s"CB"%s",Fabricas[id][Porcentaje][0],EstadoH(HornoEncendido[0][id]),EstadoHo(HornoEncendido[0][id]),EstadoCristal(Fabricas[id][Crisol][0]));
		Fabricas[id][olla][0] = CreateDynamic3DTextLabel(string, COLOR_BLANCO, -1992.2786, 194.1294, 1035.4269, 4.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,Fabricas[id][pVW], Fabricas[id][pInt],-1,100.0);
		format(string,sizeof(string),""CR"Cocina: #2"CB"\nProducci�n: {3d83ce}%d%%"CB" completada.\nEstado: %s"CB"\n\n%s"CB"%s",Fabricas[id][Porcentaje][1],EstadoH(HornoEncendido[1][id]),EstadoHo(HornoEncendido[1][id]),EstadoCristal(Fabricas[id][Crisol][1]));
		Fabricas[id][olla][1] = CreateDynamic3DTextLabel(string, COLOR_BLANCO, -1995.6786, 194.1294, 1035.4269, 4.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,Fabricas[id][pVW], Fabricas[id][pInt],-1,100.0);
		format(string,sizeof(string),""CR"Cocina: #3"CB"\nProducci�n: {3d83ce}%d%%"CB" completada.\nEstado: %s"CB"\n\n%s"CB"%s",Fabricas[id][Porcentaje][2],EstadoH(HornoEncendido[2][id]),EstadoHo(HornoEncendido[2][id]),EstadoCristal(Fabricas[id][Crisol][2]));
		Fabricas[id][olla][2] = CreateDynamic3DTextLabel(string, COLOR_BLANCO, -1999.1986, 194.1294, 1035.4269, 4.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,Fabricas[id][pVW], Fabricas[id][pInt],-1,100.0);
		for(new i = 0; i < sizeof(PosTanque);i++)
		{
			format(string,sizeof(string),"{3399FF}Tanque de almacenaje de qu�micos"CB"\nCapacidad ocupada: "CR"%d%%"CB"\nCocina:"CR" #%d",Fabricas[id][pTanque][i],ObtenerCocina(i));
			Fabricas[id][LTanque][i] = CreateDynamic3DTextLabel(string, COLOR_BLANCO, PosTanque[i][0], PosTanque[i][1], 1041.0414-0.5, 5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,Fabricas[id][pVW], Fabricas[id][pInt],-1,100.0);
		}
		if(Fabricas[id][pEntradaGX] != 0)
		{
			Fabricas[id][pLabel3] = CreateDynamic3DTextLabel(""CB"Pulsa "CR"'H'"CB" para ingresar al garaje.", COLOR_BLANCO, Fabricas[id][pEntradaGX],Fabricas[id][pEntradaGY],Fabricas[id][pEntradaGZ]+1.0, 20);
		}
	}
	else if(Fabricas[id][pBanda] == 0)
	{
		Fabricas[id][pEnUso] = 0;
		if(Fabricas[id][pEnVentaPor] == 0) format(string, sizeof(string), "{ff3e3e}F�brica de metanfetamina\n"CB"En venta\nPrecio: "CR"$%s\n"CB"Usa "CR"/comprar propiedad"CB" para comprarla.",Numeros(Fabricas[id][pValor]));
		else if(Fabricas[id][pEnVentaPor] == 1) format(string, sizeof(string), "{ff3e3e}F�brica de metanfetamina\n"CB"En venta\nPrecio: "CR"%d "Moneda1"\n"CB"Usa "CR"/comprar propiedad"CB" para comprarla.",Fabricas[id][pValor]);
		else if(Fabricas[id][pEnVentaPor] == 2) format(string, sizeof(string), "{ff3e3e}F�brica de metanfetamina\n"CB"En venta\nPrecio: {D1A231}%d "Moneda3"\n"CB"Usa "CR"/comprar propiedad"CB" para comprarla.",Fabricas[id][pValor]);
		Fabricas[id][pLabel] = CreateDynamic3DTextLabel(string, COLOR_BLANCO, Fabricas[id][pEntradaX],Fabricas[id][pEntradaY],Fabricas[id][pEntradaZ]+1.0, 20);
		Fabricas[id][pLabel2] = CreateDynamic3DTextLabel(""CB"Usa "CR"/salir"CB" para salir de la propiedad.",COLOR_BLANCO,Fabricas[id][pSalidaX],Fabricas[id][pSalidaY],Fabricas[id][pSalidaZ],5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,Fabricas[id][pVW],Fabricas[id][pInt],-1,100.0);
  		FabricaPickup(id);
        Fabricas[id][pMapIcon] = CreateDynamicMapIcon(Fabricas[id][pEntradaX],Fabricas[id][pEntradaY],Fabricas[id][pEntradaZ], 23, -1, -1, -1, -1, 600.0);
		if(Fabricas[id][pEntradaGX] != 0)
		{
			Fabricas[id][pLabel3] = CreateDynamic3DTextLabel(""CB"Pulsa "CR"'H'"CB" para ingresar al garaje.", COLOR_BLANCO, Fabricas[id][pEntradaGX],Fabricas[id][pEntradaGY],Fabricas[id][pEntradaGZ]+1.0, 20);
		}
	}
	return true;
}

Funcion:CargarFabricasMeta()
{
	new row_count;
	cache_get_row_count(row_count);
	for(new i = 0; i < row_count; i++)
	{
		new p;
		cache_get_value_name_int(i, "ID", p); Fabricas[p][pID] = p;
		if(p != 0)
		{
			cache_get_value_name_int(i, "BandaID", Fabricas[p][pBanda]);
			cache_get_value_name(i, "NombreBanda", Fabricas[p][pPropietario]);
			cache_get_value_name_int(i, "VW", Fabricas[p][pVW]);
			cache_get_value_name_int(i, "Interior", Fabricas[p][pInt]);
			cache_get_value_name_float(i,"EntradaX",Fabricas[p][pEntradaX]);
			cache_get_value_name_float(i,"EntradaY",Fabricas[p][pEntradaY]);
			cache_get_value_name_float(i,"EntradaZ",Fabricas[p][pEntradaZ]);
			cache_get_value_name_float(i,"EntradaA",Fabricas[p][pEntradaA]);
			cache_get_value_name_float(i,"SalidaX",Fabricas[p][pSalidaX]);
			cache_get_value_name_float(i,"SalidaY",Fabricas[p][pSalidaY]);
			cache_get_value_name_float(i,"SalidaZ",Fabricas[p][pSalidaZ]);
			cache_get_value_name_float(i,"GarajeE_X",Fabricas[p][pEntradaGX]);
			cache_get_value_name_float(i,"GarajeE_Y",Fabricas[p][pEntradaGY]);
			cache_get_value_name_float(i,"GarajeE_Z",Fabricas[p][pEntradaGZ]);
			cache_get_value_name_float(i,"GarajeE_A",Fabricas[p][pEntradaGA]);
			cache_get_value_name_float(i,"GarajeS_X",Fabricas[p][pSalidaGX]);
			cache_get_value_name_float(i,"GarajeS_Y",Fabricas[p][pSalidaGY]);
			cache_get_value_name_float(i,"GarajeS_Z",Fabricas[p][pSalidaGZ]);
			cache_get_value_name_int(i,"Almacen1",Fabricas[p][Almacen][0]);
			cache_get_value_name_int(i,"Almacen2",Fabricas[p][Almacen][1]);
			cache_get_value_name_int(i,"Almacen3",Fabricas[p][Almacen][2]);
			cache_get_value_name_int(i,"Almacen4",Fabricas[p][Almacen][3]);
			cache_get_value_name_int(i,"Almacen5",Fabricas[p][Almacen][4]);
			cache_get_value_name_int(i,"Almacen6",Fabricas[p][Almacen][5]);
			cache_get_value_name_int(i,"Almacen7",Fabricas[p][Almacen][6]);
			cache_get_value_name_int(i,"Almacen8",Fabricas[p][Almacen][7]);
			cache_get_value_name_int(i,"Almacen9",Fabricas[p][Almacen][8]);
			cache_get_value_name_int(i,"Almacen10",Fabricas[p][Almacen][9]);
			cache_get_value_name_int(i,"Tanque1Contenido",Fabricas[p][pTanque][0]);
			cache_get_value_name_int(i,"Tanque2Contenido",Fabricas[p][pTanque][1]);
			cache_get_value_name_int(i,"Tanque3Contenido",Fabricas[p][pTanque][2]);
			cache_get_value_name_int(i,"Tanque4Contenido",Fabricas[p][pTanque][3]);
			cache_get_value_name_int(i,"Tanque5Contenido",Fabricas[p][pTanque][4]);
			cache_get_value_name_int(i,"Tanque6Contenido",Fabricas[p][pTanque][5]);
			cache_get_value_name_int(i,"Recortada",Fabricas[p][pRecortada]);
			cache_get_value_name_int(i,"Sniper",Fabricas[p][pSniper]);
			cache_get_value_name_int(i,"Uzi",Fabricas[p][pUzi]);
			cache_get_value_name_int(i,"Tec9",Fabricas[p][pTec9]);
			cache_get_value_name_int(i,"TiempoSoborno",Fabricas[p][TiempoSoborno]);
			cache_get_value_name_int(i,"Chalecos",Fabricas[p][pChalecos]);
			cache_get_value_name_int(i,"DineroAlmacenado",Fabricas[p][pCantidadDinero]);
			cache_get_value_name_int(i,"Coins",Fabricas[p][pEnVentaPor]);
			cache_get_value_name_int(i,"Precio",Fabricas[p][pValor]);
			cache_get_value_name_int(i,"EnUso",Fabricas[p][pEnUso]);
			cache_get_value_name_int(i,"Crisol1",Fabricas[p][Crisol][0]);
			cache_get_value_name_int(i,"Crisol2",Fabricas[p][Crisol][1]);
			cache_get_value_name_int(i,"Crisol1",Fabricas[p][Crisol][2]);
			cache_get_value_name_int(i,"EstadoC1",Fabricas[p][StatoCuoco][0]);
			cache_get_value_name_int(i,"EstadoC2",Fabricas[p][StatoCuoco][1]);
			cache_get_value_name_int(i,"EstadoC3",Fabricas[p][StatoCuoco][2]);
			cache_get_value_name_int(i,"EstadoC4",Fabricas[p][StatoCuoco][3]);
			cache_get_value_name_int(i,"EstadoC5",Fabricas[p][StatoCuoco][4]);
			cache_get_value_name_int(i,"ProgresoC1",Fabricas[p][PorcentajeCocinero][0]);
			cache_get_value_name_int(i,"ProgresoC2",Fabricas[p][PorcentajeCocinero][1]);
			cache_get_value_name_int(i,"ProgresoC3",Fabricas[p][PorcentajeCocinero][2]);
			cache_get_value_name_int(i,"ProgresoC4",Fabricas[p][PorcentajeCocinero][3]);
			cache_get_value_name_int(i,"ProgresoC5",Fabricas[p][PorcentajeCocinero][4]);
			cache_get_value_name_int(i,"PorcentajeLleno1",Fabricas[p][Porcentaje][0]);
			cache_get_value_name_int(i,"PorcentajeLleno2",Fabricas[p][Porcentaje][1]);
			cache_get_value_name_int(i,"PorcentajeLleno3",Fabricas[p][Porcentaje][2]);
			cache_get_value_name_int(i,"Termino1",Fabricas[p][Termino][0]);
			cache_get_value_name_int(i,"Termino2",Fabricas[p][Termino][1]);
			cache_get_value_name_int(i,"Termino3",Fabricas[p][Termino][2]);
			cache_get_value_name_int(i,"Termino4",Fabricas[p][Termino][3]);
			cache_get_value_name_int(i,"Termino5",Fabricas[p][Termino][4]);
			cache_get_value_name_int(i,"MContra",Fabricas[p][TieneActor][0]);
			cache_get_value_name_int(i,"TieneMoledor1",Fabricas[p][TieneActor][1]);
			cache_get_value_name_int(i,"TieneMoledor2",Fabricas[p][TieneActor][2]);
			cache_get_value_name_int(i,"TieneMoledor3",Fabricas[p][TieneActor][3]);
			cache_get_value_name_int(i,"TieneMoledor4",Fabricas[p][TieneActor][4]);
			cache_get_value_name_int(i,"TieneMoledor5",Fabricas[p][TieneActor][5]);
			cache_get_value_name_int(i,"TieneGuardia1",Fabricas[p][TieneActor][6]);
			cache_get_value_name_int(i,"TieneGuardia2",Fabricas[p][TieneActor][7]);
			cache_get_value_name_int(i,"TieneGuardia3",Fabricas[p][TieneActor][8]);
			cache_get_value_name_int(i,"TieneGuardia4",Fabricas[p][TieneActor][9]);
			cache_get_value_name_int(i,"TieneGuardia5",Fabricas[p][TieneActor][10]);
			cache_get_value_name_int(i,"EstadoMedico",Fabricas[p][EstadoActor][0]);
			cache_get_value_name_int(i,"EstadoCoc1",Fabricas[p][EstadoActor][1]);
			cache_get_value_name_int(i,"EstadoCoc2",Fabricas[p][EstadoActor][2]);
			cache_get_value_name_int(i,"EstadoCoc3",Fabricas[p][EstadoActor][3]);
			cache_get_value_name_int(i,"EstadoCoc4",Fabricas[p][EstadoActor][4]);
			cache_get_value_name_int(i,"EstadoCoc5",Fabricas[p][EstadoActor][5]);
			cache_get_value_name_int(i,"EstadoG1",Fabricas[p][EstadoActor][6]);
			cache_get_value_name_int(i,"EstadoG2",Fabricas[p][EstadoActor][7]);
			cache_get_value_name_int(i,"EstadoG3",Fabricas[p][EstadoActor][8]);
			cache_get_value_name_int(i,"EstadoG4",Fabricas[p][EstadoActor][9]);
			cache_get_value_name_int(i,"EstadoG5",Fabricas[p][EstadoActor][10]);
			Iter_Add(Fabricas, p);
	    	CargarFabricass(p);
		}
	}
	return true;
}

Funcion:CargarPropiedades()
{
	new count;
	new row_count;
	cache_get_row_count(row_count);
	for(new i = 0; i < row_count; i++)
	{
		new p;
		cache_get_value_name_int(i, "ID", p); PropInfo[p][propiedad_ID] = p;
		if(p != 0)
		{
			cache_get_value_name_int(i, "EnUso", PropInfo[p][pEnUso]);
			cache_get_value_name_int(i, "EnVentaPor", PropInfo[p][pEnVentaPor]);
			cache_get_value_name_int(i, "IDPropietario", PropInfo[p][pIDPropietario]);
			cache_get_value_name(i, "Propietario", PropInfo[p][pPropietario]);
			cache_get_value_name(i, "Localizacion", PropInfo[p][pLocalizacion]);
			cache_get_value_name_int(i, "VW", PropInfo[p][pVW]);
			cache_get_value_name_int(i, "EnVenta", PropInfo[p][pEnVenta]);
			cache_get_value_name_int(i, "Precio", PropInfo[p][pPrecio]);
			cache_get_value_name_int(i, "Nivel", PropInfo[p][pNivel]);
			cache_get_value_name_float(i, "PosX", PropInfo[p][pPosX]);
			cache_get_value_name_float(i, "PosY", PropInfo[p][pPosY]);
			cache_get_value_name_float(i, "PosZ", PropInfo[p][pPosZ]);
			cache_get_value_name_float(i, "PosXS", PropInfo[p][pPosXS]);
			cache_get_value_name_float(i, "PosYS", PropInfo[p][pPosYS]);
			cache_get_value_name_float(i, "PosZS", PropInfo[p][pPosZS]);
			cache_get_value_name_float(i, "PosAS", PropInfo[p][pPosAS]);
			cache_get_value_name_float(i, "GX", PropInfo[p][pGX]);
			cache_get_value_name_float(i, "GY", PropInfo[p][pGY]);
			cache_get_value_name_float(i, "GZ", PropInfo[p][pGZ]);
			cache_get_value_name_float(i, "GA", PropInfo[p][pGA]);
			cache_get_value_name_int(i, "Ganancias", PropInfo[p][pGanancias]);
			cache_get_value_name_int(i, "Tipo", PropInfo[p][pTipo]);
			cache_get_value_name_int(i, "Interior", PropInfo[p][pInterior]);
        	cache_get_value_name_int(i, "InteriorID", PropInfo[p][pInteriorID]);
        	cache_get_value_name_int(i, "Abierta", PropInfo[p][pAbierta]);
        	cache_get_value_name_int(i, "Sprunk", PropInfo[p][pSprunk]);
        	cache_get_value_name_int(i, "Cerveza", PropInfo[p][pCerveza]);
        	cache_get_value_name_int(i, "Aquarius", PropInfo[p][pAquarius]);
        	cache_get_value_name_int(i, "Pizzas", PropInfo[p][pPizzas]);
        	cache_get_value_name_int(i, "Vino", PropInfo[p][pVino]);
	    	cache_get_value_name_int(i, "Camara", PropInfo[p][pCamara]);
	    	cache_get_value_name_int(i, "Uzi", PropInfo[p][pUzi]);
	    	cache_get_value_name_int(i, "Tec9", PropInfo[p][pTec9]);
	    	cache_get_value_name_int(i, "Motosierra", PropInfo[p][pMotosierra]);
	    	cache_get_value_name_int(i, "Sniper", PropInfo[p][pSniper]);
	    	cache_get_value_name_int(i, "Lanzacohetes", PropInfo[p][pLanzacohetes]);
	    	cache_get_value_name_int(i, "Bazooka", PropInfo[p][pBazooka]);
	    	cache_get_value_name_int(i, "Lanzallamas", PropInfo[p][pLanzallamas]);
	    	cache_get_value_name_int(i, "Minigun", PropInfo[p][pMinigun]);
	    	cache_get_value_name_int(i, "Paracaidas", PropInfo[p][pParacaidas]);
	    	cache_get_value_name_int(i, "Pala", PropInfo[p][pPala]);
	    	cache_get_value_name_int(i, "BateDeBeisbol", PropInfo[p][pBateDeBeisbol]);
	    	cache_get_value_name_int(i, "PaloDeGolf", PropInfo[p][pPaloDeGolf]);
        	cache_get_value_name_int(i, "Manopla", PropInfo[p][pManopla]);
	    	cache_get_value_name_int(i, "PaloDeBillar", PropInfo[p][pPaloDeBillar]);
	    	cache_get_value_name_int(i, "ConsoladorRosa", PropInfo[p][pConsoladorRosa]);
	    	cache_get_value_name_int(i, "VibradorBlanco", PropInfo[p][pVibradorBlanco]);
	    	cache_get_value_name_int(i, "GranVibradorBlanco", PropInfo[p][pGranVibradorBlanco]);
	    	cache_get_value_name_int(i, "VibradorPlateado", PropInfo[p][pVibradorPlateado]);
	    	cache_get_value_name_int(i, "Baston", PropInfo[p][pBaston]);
        	cache_get_value_name_int(i, "AK47", PropInfo[p][pAK47]);
        	cache_get_value_name_int(i, "M4", PropInfo[p][pM4]);
        	cache_get_value_name_int(i, "EscopetaNormal", PropInfo[p][pEscopetaNormal]);
        	cache_get_value_name_int(i, "EscopetaDeCombate", PropInfo[p][pEscopetaDeCombate]);
        	cache_get_value_name_int(i, "MP5", PropInfo[p][pMP5]);
        	cache_get_value_name_int(i, "9mm", PropInfo[p][p9mm]);
        	cache_get_value_name_int(i, "9mmSilenciada", PropInfo[p][p9mmSilenciada]);
        	cache_get_value_name_int(i, "DesertEagle", PropInfo[p][pDesertEagle]);
        	cache_get_value_name_int(i, "Rifle", PropInfo[p][pRifle]);
        	cache_get_value_name_int(i, "Sniper", PropInfo[p][Sniper]);
        	cache_get_value_name_int(i, "Granada", PropInfo[p][pGranada]);
        	cache_get_value_name_int(i, "Cuchillo", PropInfo[p][pCuchillo]);
        	cache_get_value_name_int(i, "Katana", PropInfo[p][pKatana]);
        	cache_get_value_name_int(i, "Crack", PropInfo[p][pCrack]);
        	cache_get_value_name_int(i, "Medicamentos", PropInfo[p][pMedicamentos]);
        	cache_get_value_name_int(i, "Hongos", PropInfo[p][pHongos]);
        	cache_get_value_name_int(i, "Cocaina", PropInfo[p][pCocaina]);
        	PropInfo[p][pEmisora] = 0;
	    	count ++;
			Iter_Add(Propiedades, p);
	    	CargarPropiedad(p,0);
		}
	}
	return true;
}


/*
public CustomProc(cmd[])
{
    printf("CustomProc: %s", cmd);
    new cmdText[32], cmdParams[128];
	sscanf(cmd, "s[32]s[128]", cmdText, cmdParams);
	if(!strcmp(cmdText, "colorbanda", true))
	{
		new gID, gRankID[32], gNombre[32], gRankName[8], color;
		sscanf(cmdParams, "ds[32]s[32]s[8]", gID, gRankID, gNombre, gRankName);
		gID--;
		format(BandasInfo[gID][BColor], 8, "%s", gRankName);
		sscanf(BandasInfo[gID][BColor],"x",color);
		BandasInfo[gID][BColor2] = ((color << 8) | 0xFF);
		gID++;
	    new msgGuild[128];
		format(msgGuild, 128, "Banda: "CR"%s"CB" cambi� el color de la banda.", gNombre);
		SendRadioMessage(gID, COLOR_BLANCO, msgGuild, INVALID_PLAYER_ID, 1);
		return 1;
	}
	if(!strcmp(cmdText, "gRankName", true))
	{
		new gID, gRankID[32], gNombre[32], gRankName[32];
		sscanf(cmdParams, "ds[32]s[32]s[32]", gID, gRankID, gNombre, gRankName);
		gID--;
		new rang2[32];
		if(strcmp(gRankID,"1") == 0)
		{
		    format(rang2,32,"%s",BandasInfo[gID][BRango1]);
			format(BandasInfo[gID][BRango1], 32, "%s", gRankName);
		}
		if(strcmp(gRankID,"2") == 0)
		{
		    format(rang2,32,"%s",BandasInfo[gID][BRango2]);
			format(BandasInfo[gID][BRango2], 32, "%s", gRankName);
		}
		if(strcmp(gRankID,"3") == 0)
		{
		    format(rang2,32,"%s",BandasInfo[gID][BRango3]);
			format(BandasInfo[gID][BRango3], 32, "%s", gRankName);
		}
		if(strcmp(gRankID,"4") == 0)
		{
		    format(rang2,32,"%s",BandasInfo[gID][BRango4]);
			format(BandasInfo[gID][BRango4], 32, "%s", gRankName);
		}
		if(strcmp(gRankID,"5") == 0)
		{
		    format(rang2,32,"%s",BandasInfo[gID][BRango5]);
			format(BandasInfo[gID][BRango5], 32, "%s", gRankName);
		}
		if(strcmp(gRankID,"6") == 0)
		{
		    format(rang2,32,"%s",BandasInfo[gID][BRango6]);
			format(BandasInfo[gID][BRango6], 32, "%s", gRankName);
		}
		if(strcmp(gRankID,"7") == 0)
		{
		    format(rang2,32,"%s",BandasInfo[gID][BRango7]);
			format(BandasInfo[gID][BRango7], 32, "%s", gRankName);
		}
		if(strcmp(gRankID,"8") == 0)
		{
		    format(rang2,32,"%s",BandasInfo[gID][BRango8]);
			format(BandasInfo[gID][BRango8], 32, "%s", gRankName);
		}
		gID++;
	    new msgGuild[128];
		format(msgGuild, 128, "Banda: "CR"%s"CB" cambi� el nombre del rango "CR"%s"CB" a "CR"%s"CB".", gNombre, rang2, gRankName);
		SendRadioMessage(gID, COLOR_BLANCO, msgGuild, INVALID_PLAYER_ID, 1);
		return 1;
	}
	// Cambiar rango
	if(!strcmp(cmdText, "gMemberRank", true))
	{
	    new gID, gNewRank, gMemberName[32], gString[180], gChangerName[32], usedrank[32], gPlayerID, changerID;
		sscanf(cmdParams, "dds[32]s[32]", gID, gNewRank, gChangerName, gMemberName);
		sscanf(gChangerName, "r", changerID);
		sscanf(gMemberName, "r", gPlayerID);
		gID--;
 		format(usedrank, 32, "%s", BRango[gNewRank][gID]);
		if(gNewRank != 8)
		{
			format(gString, 180, "Banda: "CR"%s"CB" cambio el rango de "CR"%s"CB" a "CR"%s"CB".", gChangerName, gMemberName, usedrank);
			gID++;
			foreach(new i : Player)
			{
			    if(IsPlayerConnected(i) && PlayerInfo[i][jMiembro] == gID) Mensaje(i, COLOR_BLANCO, gString);
			}
			if(IsPlayerConnected(gPlayerID) && JugadorLogeado[gPlayerID] == 1) PlayerInfo[gPlayerID][pRango] = gNewRank;
			gID--;
		}
		else
		{
  			format(gString, 180, "Banda: "CR"%s"CB" hizo a "CR"%s"CB" L�der de la banda.", gChangerName, gMemberName);
			gID++;
			foreach(new i : Player)
			{
			    if(IsPlayerConnected(i) && PlayerInfo[i][jMiembro] == gID) Mensaje(i, COLOR_BLANCO, gString);
			}
			if(IsPlayerConnected(gPlayerID) && JugadorLogeado[gPlayerID] == 1) PlayerInfo[gPlayerID][pRango] = gNewRank;
			if(IsPlayerConnected(changerID) && JugadorLogeado[changerID] == 1) PlayerInfo[changerID][pRango] = 7;
			gID--;
		}
	}
	// Aceptar invitacion
	if(!strcmp(cmdText, "jugadorinvitacion", true))
	{
	    new gID, gPlayerName[24], gPlayerID;
		sscanf(cmdParams, "ds[24]", gID, gPlayerName);
		sscanf(gPlayerName, "r", gPlayerID);
		gID--;
		if(IsPlayerConnected(gPlayerID) && JugadorLogeado[gPlayerID] == 1)
		{
			new msgPlayer[128];
			PlayerInfo[gPlayerID][jMiembro] = gID + 1;
			PlayerInfo[gPlayerID][pRango] = 1;
			format(msgPlayer, 128, "�Felicitaciones! Te uniste a la banda "CR"%s"CB".", BandasInfo[gID][BNombre]);
			Mensaje(gPlayerID, COLOR_BLANCO, msgPlayer);
			format(msgPlayer, 128, "El jugador "CR"%s"CB" se uni� a la banda.", gPlayerName);
			gID++;
			SendRadioMessage(gID, COLOR_BLANCO, msgPlayer, gPlayerID, 1);
			gID--;
			return 1;
		}
		else
		{
			new msgGuild[128];
			format(msgGuild, 128, "El jugador "CR"%s"CB" se uni� a la banda.", gPlayerName);
			gID++;
			SendRadioMessage(gID, COLOR_BLANCO, msgGuild, INVALID_PLAYER_ID, 1);
			return 1;
		}
	}
	// Abandonar banda
	if(!strcmp(cmdText, "abandonarbanda", true))
	{
	    new gID, gPlayerName[24], gPlayerID;
	    sscanf(cmdParams, "ds[24]", gID, gPlayerName);
		sscanf(gPlayerName, "r", gPlayerID);
		gID--;
  		if(IsPlayerConnected(gPlayerID) && JugadorLogeado[gPlayerID] == 1)
		{
			new msgPlayer[128];
			PlayerInfo[gPlayerID][jMiembro] = 0;
			PlayerInfo[gPlayerID][pRango] = 0;
			format(msgPlayer, 128, "Has abandonado la banda "CR"%s", BandasInfo[gID][BNombre]);
			Mensaje(gPlayerID, COLOR_BLANCO, msgPlayer);
			format(msgPlayer, 128, "El jugador "CR"%s"CB" abandon� la banda.", gPlayerName);
			gID++;
			SendRadioMessage(gID, COLOR_BLANCO, msgPlayer, gPlayerID, 1);
			gID--;
			return 1;
		}
		else
		{
			new msgGuild[128];
			format(msgGuild, 128, "El jugador "CR"%s"CB" abandon� la banda.", gPlayerName);
			gID++;
			SendRadioMessage(gID, COLOR_BLANCO, msgGuild, INVALID_PLAYER_ID, 1);
			return 1;
		}
	}
	// Expulsar miembro
	if(!strcmp(cmdText, "expulsarmiembro", true))
	{
	    new gID, gExpulsadorNombre[24], gExpulsadorID, gExpulsadoNombre[24], gExpulsadoID;
	    sscanf(cmdParams, "ds[22]s[22]", gID, gExpulsadorNombre, gExpulsadoNombre);
		sscanf(gExpulsadorNombre, "r", gExpulsadorID);
		sscanf(gExpulsadoNombre, "r", gExpulsadoID);
		gID--;
  		if(IsPlayerConnected(gExpulsadoID) && JugadorLogeado[gExpulsadoID] == 1)
		{
			new msgPlayer[128];
			if(PlayerInfo[gExpulsadoID][jMiembro] == 1)
			{
				SetPlayerSkin(gExpulsadoID, PlayerInfo[gExpulsadoID][jRopa]);
				ClearAnimations(gExpulsadoID);
			}
			PlayerInfo[gExpulsadoID][jMiembro] = 0;
			PlayerInfo[gExpulsadoID][pRango] = 0;
			PlayerInfo[gExpulsadoID][pDuty] = 0;
			format(msgPlayer, 128, "Fuiste expulsado de la banda "CR"%s.", BandasInfo[gID][BNombre]);
			Mensaje(gExpulsadoID, COLOR_BLANCO, msgPlayer);
			format(msgPlayer, 128, "Banda: "CR"%s"CB" expuls� a "CR"%s"CB" de la banda.", gExpulsadorNombre, gExpulsadoNombre);
			gID++;
			SendRadioMessage(gID, COLOR_BLANCO, msgPlayer, gExpulsadoID, 1);
			gID--;
			return 1;
		}
		else
		{
			new msgGuild[128];
			format(msgGuild, 128, "Banda: "CR"%s"CB" expuls� a "CR"%s"CB" de la banda.", gExpulsadorNombre, gExpulsadoNombre);
			gID++;
			SendRadioMessage(gID, COLOR_BLANCO, msgGuild, INVALID_PLAYER_ID, 1);
			return 1;
		}
	}
	if(!strcmp(cmdText, "recargarbandas", true)) return CargarFacciones();
	return 1;
}*/


Funcion:OnQueryFinish()
{
	
	if(cache_num_rows() > 0)
	{
		new Tipo, ID, Parametros, UserSession, UserIDDB, UserID = INVALID_PLAYER_ID, UserSessionName[MAX_PLAYER_NAME+1];
		for(new e = 0; e < cache_num_rows() ; e++)
		{
			cache_get_value_name_int(e, "Tipo", Tipo);
			cache_get_value_name_int(e, "ID", ID);
			cache_get_value_name_int(e, "UserSession", UserSession);
			cache_get_value_name_int(e, "Parametros", Parametros);
			cache_get_value_name_int(e, "UserID", UserIDDB);
			cache_get_value_name(e, "UserSessionName", UserSessionName);
			foreach(new i : Player)
			{
				if(PlayerInfo[i][p_DBID] == UserIDDB)
				{
					UserID = i;
					break;
				}
			}
			if(UserID != INVALID_PLAYER_ID)
			{
				switch(Tipo)
				{
					case 1:
					{
						new bandaid = PlayerInfo[UserID][jMiembro];
						if(bandaid > 0)
						{
							ActualizarIntegrantes(PlayerInfo[UserID][jMiembro], 0);
							PlayerInfo[UserID][jMiembro] = 0;
							PlayerInfo[UserID][pRango] = 0;
							PlayerInfo[UserID][pDuty] = 0;
							PlayerInfo[UserID][pDutyM] = 0;
							va_SendClientMessage(UserID,-1,"Fuiste expulsado de la banda "CR"%s"CB".", BandasInfo[bandaid][BNombre]);
							new string[130];
							format(string, sizeof string, "Banda: "CR"%s"CB" expuls� a "CR"%s"CB" de la banda.", UserSessionName, NombreJugador(UserID));
							foreach(new i : Player)
							{
								if(PlayerInfo[i][jMiembro] == bandaid) Mensaje(i, COLOR_BLANCO, string);
							}
							if(bandaid == 1 || bandaid == 2) SetPlayerSkin(UserID, PlayerInfo[UserID][jRopa]),ClearAnimations(UserID);
						}
					}
					case 2:
					{
						new bandaid = PlayerInfo[UserID][jMiembro];
						if(bandaid > 0)
						{
							PlayerInfo[UserID][pRango] = Parametros;
							new string[130];
							format(string,sizeof string,"Banda: "CR"%s"CB" cambio el rango de "CR"%s"CB" a "CR"%s"CB".",UserSessionName, NombreJugador(UserID),RangoBanda(bandaid, Parametros));
							foreach(new i : Player)
							{
								if(PlayerInfo[i][jMiembro] == bandaid) Mensaje(i, COLOR_BLANCO, string);
							}
						}
					}
					case 3:
					{
						PlayerInfo[UserID][CorreoVerificado] = Parametros;
						if(Parametros)
						{
							Mensaje(UserID, -1, "Verificaste tu correo electr�nico correctamente.");
						}
						else
						{
							Mensaje(UserID, -1, "Desvinculaste tu correo electr�nico correctamente.");
						}
						
					}
				}
			}
			
			
			new queryDelete[100];
			mysql_format(Conecction, queryDelete, sizeof(queryDelete), "DELETE FROM `acciones_web` WHERE `ID` = '%d' LIMIT 1", ID);
			mysql_tquery(Conecction, queryDelete);
			printf("Delete: %s", queryDelete);
			
		}
	}
	SetTimer("FuncionActionQueue", 3000, false);
	return 1;
}

Funcion:SalonTimer()
{
	new id = -1;
	//new idx;
	foreach(new i : Player)
	{
		if(strcmp(Alquilador,NombreJugador(i),true) == 0)
		{
			id = i;
		}

		if(Boleto[i] == true) Boleto[i] = false;
		if(EnSalonEvento(i) || EnSalonEvento2(i))
		{
		    if(Alquilado == true)
		    {
				Mensaje(i,-1,"El evento acaba de terminar, por favor abandona el sal�n principal.");
				if(Humo1Ojb == 1)
				{
				   	DestroyDynamicObjectEx(ObjHumo1[0]);
				   	DestroyDynamicObjectEx(ObjHumo1[1]);
					Humo1Ojb = 0;
				}
				if(Humo2Ojb == 1)
				{
				   	DestroyDynamicObjectEx(ObjHumo2[0]);
				   	DestroyDynamicObjectEx(ObjHumo2[1]);
					Humo2Ojb = 0;
    			}
			}
		}
		if(TipoEvento == 2)
		{
			if(BoxObj == 1)
			{
				for(new a = 0; a<33; a++)
				{
					DestroyDynamicObjectEx(ObjBox[a]);
				}
				BoxObj = 0;
			}
		}
		if(TipoEvento == 3)
		{
			if(ExpObj == 1)
			{
				for(new b = 0; b<19; b++)
				{
					DestroyDynamicObjectEx(ObjExp[b]);
				}
				ExpObj = 0;
			}
			Mensaje(i,-1,"Si llevaste un veh�culo a la exposici�n, este fue remolcado al estacionamiento que se encuentra al costado del sal�n de eventos.");
			
			for(new a; a < MAX_PAUTOS; a++)
			{
				if(IsValidVehicle(autos[a][i]) && GetVehicleInterior(autos[a][i]) == 13 && GetVehicleVirtualWorld(autos[a][i]) == 1) 
				{
					Auto(i,a,6);
				}
			}
			foreach(new k : Vehicle)
			{
				if(GetVehicleInterior(k) == 13 && GetVehicleVirtualWorld(k) == 1)
				{
					//idx = k;
					//Iter_SafeRemove(Vehicle, idx, k);
					Respawnear(k);
				}
			}

		}
		if(TipoEvento == 4)
		{
			if(ConObj == 1)
			{
				for(new c = 0; c<4; c++)
				{
					DestroyDynamicObjectEx(ObjCon[c]);
				}
				ConObj = 0;
			}
		}
	}
	if(id != -1)
	{
		va_SendClientMessage(id,-1,"Ganaste "CR"$%s"CB" por las entradas vendidas. El dinero ya se encuentra en tu cuenta bancaria.",ConvertirNumero(Personas*PrecioSalon));
		PlayerInfo[id][pBanco] += Personas*PrecioSalon;
	}
	format(Alquilador,sizeof(Alquilador),"Nadie");
	Alquilado = false;
	HorasSalon = 0;
	Personas = 0;
	PrecioSalon = 0;
	NivelSalon = 0;
	format(NombreEvento,sizeof(NombreEvento),"Sin Nombre");
	format(DescriEvento,sizeof(DescriEvento),"Sin Descripci�n");
	TipoEvento = 0;
	UpdateDynamic3DTextLabelText(TextoSalon,COLOR_BLANCO,""CB"Puedes "CR"/alquilar salon"CB" de eventos.\nCosto por hora: {00D61C}$20.000");
	UpdateDynamic3DTextLabelText(TextoSalon2,COLOR_BLANCO,"");
}

CerrarEmisora(cabinaid)
{
	CabinasOcupadasEmisoras[cabinaid][0] = 0;
	CabinasOcupadasEmisoras[cabinaid][1] = -1;
	new string[150];
	format(string,sizeof(string),""CB"Radio disponible {C0C0C0}[N%d]",cabinaid);
	UpdateDynamic3DTextLabelText(CabinasTextos[cabinaid], COLOR_BLANCO, string);
 	foreach(new id : Player)
	{
		if(Emisoras[id][CabinaOcupada] == cabinaid && Emisoras[id][TransEmisora] == 1)
		{
			Emisoras[id][TransEmisora] = 0;
			Emisoras[id][CabinaOcupada] = 0;
		}
		if(TieneMicrofono[id] == cabinaid) RemovePlayerAttachedObject(id,4),TieneMicrofono[id] = 0;
		if(IsPlayerInDynamicArea(id, AreaCabinas[cabinaid])) Mensaje(id, COLOR_BLANCO, "La emisora que estabas escuchando dejo de transmitir."),StopAudioStreamForPlayer(id);
		if(ParlanteEscuchando[id] == cabinaid || IsPlayerInAnyVehicle(id) && EmisoraEscuchando[GetPlayerVehicleID(id)] == cabinaid || MP3Escuchando[id] == cabinaid)
		{
			MP3Escuchando[id] = -1;
			ParlanteEscuchando[id] = -1;
			Mensaje(id, COLOR_BLANCO, "La emisora que estabas escuchando dejo de transmitir.");
			StopAudioStreamForPlayer(id);
		}
	}
	return 1;
}



Funcion:TimerLoro(playerid)
{
    new string[100];
    format(string, 100, "Loro de %s dice: %s", NombreJugador(playerid), TextoLoro[playerid]);
	ProxDetector(15.0, playerid, string, COLOR_VERDE,COLOR_VERDE,COLOR_VERDE,COLOR_VERDE,COLOR_VERDE);
}

Funcion:SacarBaneadoss(playerid)
{
	Baneados[playerid] --;
	if(Baneados[playerid] > 0) SetTimerEx("SacarBaneadoss",1*1000,0,"d",playerid);
	return true;
}

Funcion:SacarKickeadoss(playerid)
{
	Kickeados[playerid] --;
	if(Kickeados[playerid] > 0) SetTimerEx("SacarKickeadoss",1*1000,0,"d",playerid);
	return true;
}

public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
    #if DEBUG_GM == 1
    printf("(OnPlayerClickMap) PlayerID: %d", playerid);
    #endif
	//StartTracing(playerid, fX, fY, fZ);
	if(PlayerInfo[playerid][pAdmin] > ADMIN_LVL_JUEGO2)
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), fX, fY, fZ, 0 ,0 ,0);
	else SetPosEx(playerid, fX, fY, fZ, 0 ,0 ,0);
	return 1;
}

public OnPlayerClickTextDraw(playerid,Text:clickedid)
{
    #if DEBUG_GM == 1
    printf("(OnPlayerClickTextDraw) PlayerID: %d", playerid);
    #endif
    if(clickedid == INVALID_TEXT_DRAW) OcultarTodo(playerid);
   	
	/*for(new i=1; i<10;i++)
	{
		if(clickedid == Text:IngresarPinTD[i])
		{
			new numero=-1;
			switch(i)
			{
				case 1: {numero=0;}
				case 2: {numero=1;}
				case 3: {numero=2;}
				case 4: {numero=3;}
				case 5: {numero=4;}
				case 6: {numero=5;}
				case 7: {numero=6;}
				case 8: {numero=9;}
				case 9: {numero=8;}
				case 10: {numero=7;}
				default: {numero=0;}
			}
			new bool:regs=false;
			for(new e=0; e<sizeof NumerosTD;e++)
			{
				if(NumerosTD[e] == -1)
				{
					if (e < 4) regs = true;
					NumerosTD[e]=numero;
					PlayerPlaySound(playerid,1138,0.0,0.0,0.0);
					return 1;
				}
			}
			if(!regs)
			{
				new texto[10];
				for(new a=0; a<sizeof NumerosTD;a++)
				{
					format(texto,sizeof texto, "%s%d", texto,NumerosTD[a]);
				}
				Mensaje(playerid,-1,texto);
			}
			return 1;
		}
	}*/

	/*if(clickedid == Text:TDLogin[5])
	{
		CancelSelectTextDraw(playerid);
		if(IsPlayerConnected(playerid))
		{
			
		}
	}*/
 	return 1;
}

public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
    #if DEBUG_GM == 1
    printf("(OnPlayerClickPlayerTextDraw) PlayerID: %d", playerid);
    #endif
	if(playertextid == INVALID_PLAYER_TEXT_DRAW)
	{
		OcultarTodo(playerid);
		CancelSelectTextDraw(playerid);
	}
	if(playertextid == CerrarPrenda[playerid]) return CancelarSelect(playerid);
	for(new a = 0; a < 4; a++)
	{
		if(playertextid == SelectionTD[playerid][a]) //Select Box 1
		{
			switch(MarcadoMenu[playerid])
			{
				case 1: if(CasaRobo[playerid][a] == 1506) ForzarCerradura(playerid);
				case 2..4,8,9,10:
				{
					if(PlayerInfo[playerid][pObj][a] == 11392) return CancelarSelect(playerid);
					if(MarcadoMenu[playerid] != 2 && MarcadoMenu[playerid] != 9)
					{
						if(UsandoObj[a][playerid] == 0)
						{
							return CancelarSelect(playerid);
						}
						
					} 
					switch(MarcadoMenu[playerid])
					{
						case 2: PonerPrenda(playerid,a);
						case 3: return AcomodarPrenda(playerid,a);
						case 4: QuitarPrenda(playerid,a);
						case 8: PrendaColor(playerid,a);
						case 9: EliminarPrenda(playerid, a);
						case 10: EditarCuerpo(playerid, a);
					}
				}
				case 5:
				{
					switch(PescaM[playerid][a])
					{
						case 1601: Mensaje(playerid,-1,"Fallaste al lanzar el arpon, intenta nuevamente.");
						case 1607: PescaSelection(playerid,1);
						case 1608: PescaSelection(playerid,2);
						case 1609: PescaSelection(playerid,3);
					}
				}
				case 6: if(RocasM[playerid][a] == 897) RocaSelect(playerid);
				case 7: UniformeSelect(playerid,UniformeM[playerid][a]);
			}
			CancelarSelect(playerid);
		}
	}
	
	
	return 1;
}

public OnPlayerEditDynamicObject(playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
	
	if(objectid == PortonInfo[EditandoPorton[playerid]][PortonObjetoID])
	{
		switch(response)
		{
			case EDIT_RESPONSE_CANCEL:
			{
				DestroyDynamicObjectEx(PortonInfo[EditandoPorton[playerid]][PortonObjetoID]);
				PortonInfo[EditandoPorton[playerid]][PortonObjetoID] = INVALID_STREAMER_ID;
				PortonInfo[EditandoPorton[playerid]][PortonModelo] = 0;
				PartePorton[playerid] = 0;
			}
			case EDIT_RESPONSE_FINAL:
			{
				new i = EditandoPorton[playerid];
				SetDynamicObjectPos(PortonInfo[i][PortonObjetoID], x,y,z);
				SetDynamicObjectPos(PortonInfo[i][PortonObjetoID], rx,ry,rz);
				if(PartePorton[playerid] == 1)
				{
					Mensaje(playerid, -1, "Selecciona la posici�n del port�n abierto.");
					PortonInfo[i][pXc] = x;
					PortonInfo[i][pYc] = y;
					PortonInfo[i][pZc] = z;
					PortonInfo[i][pRXc] = rx;
					PortonInfo[i][pRYc] = ry;
					PortonInfo[i][pRZc] = rz;
					PartePorton[playerid] = 2;
					DestroyDynamicObjectEx(PortonInfo[i][PortonObjetoID]);
					PortonInfo[i][PortonObjetoID] = CreateDynamicObject(PortonInfo[i][PortonModelo], x,y,z,rx,ry,rz);
					EditDynamicObject(playerid, PortonInfo[i][PortonObjetoID]);
				}
				else if(PartePorton[playerid] == 2)
				{
					Mensaje(playerid,-1, "Porton creado.");
					PortonInfo[i][pXa] = x;
					PortonInfo[i][pYa] = y;
					PortonInfo[i][pZa] = z;
					PortonInfo[i][pRXa] = rx;
					PortonInfo[i][pRYa] = ry;
					PortonInfo[i][pRZa] = rz;
					new Queri[500];
					mysql_format(Conecction, Queri, sizeof Queri, "INSERT INTO `portones` (`Xc`, `Yc`, `Zc`, `RXc`, `RYc`, `RZc`, `Xa`, `Ya`, `Za`, `RXa`, `RYa`, `RZa`, `modelo`, `faccion`) VALUES ('%f', '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%d', '%d')", PortonInfo[i][pXc],PortonInfo[i][pYc],PortonInfo[i][pZc],PortonInfo[i][pRXc],PortonInfo[i][pRYc],PortonInfo[i][pRZc], x,y,z,rx,ry,rz, PortonInfo[i][PortonModelo], PortonInfo[i][PortonFacc]);
					mysql_tquery(Conecction, Queri, "RecargarPortones");
					PartePorton[playerid] = 0;
				}
				


			}
			case EDIT_RESPONSE_UPDATE:
			{
				SetDynamicObjectPos(PortonInfo[EditandoPorton[playerid]][PortonObjetoID], x,y,z);
				SetDynamicObjectRot(PortonInfo[EditandoPorton[playerid]][PortonObjetoID], rx,ry,rz);
			}
		}
	}

	else if(objectid == TuningPivotObjeto[playerid])
	{
		switch(response)
		{
			case EDIT_RESPONSE_CANCEL:
			{
				/*if(TuningPivotObjeto[playerid] != INVALID_STREAMER_ID)
				{
					DestroyDynamicObjectEx(TuningPivotObjeto[playerid]);
					TuningPivotObjeto[playerid] = INVALID_STREAMER_ID;
				}*/
				DestroyDynamicObjectEx(TuningPivotObjeto[playerid]);
				TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_OFFSET][0] = TuningObjetoPos[playerid][0];
				TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_OFFSET][1] = TuningObjetoPos[playerid][1];
				TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_OFFSET][2] = TuningObjetoPos[playerid][2];
				TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_ROT][0] = TuningObjetoPos[playerid][3];
				TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_ROT][1] = TuningObjetoPos[playerid][4];
				TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_ROT][2] = TuningObjetoPos[playerid][5];
				ActualizarTuningObjeto(playerid,TuningVslot[playerid],TuningSlot[playerid]);
				Streamer_Update(playerid);
				Mensaje(playerid, -1, "Has cancelado la edici�n.");
				TuningDialogo(playerid, TUNING_MENU);
			}
			case EDIT_RESPONSE_FINAL:
			{
				DestroyDynamicObjectEx(TuningPivotObjeto[playerid]);
				new Float:v_size[3],v = GetPlayerVehicle(playerid, TuningVehiculo[playerid]);
				GetVehicleModelInfo(VehicleInfo[playerid][v][vModelo], VEHICLE_MODEL_INFO_SIZE, v_size[0], v_size[1], v_size[2]);
				if((TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_OFFSET][0] >= v_size[0]+5 || -v_size[0] >= TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_OFFSET][0])
				|| (TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_OFFSET][1] >= v_size[1]+5 || -v_size[1] >= TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_OFFSET][1])
				|| (TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_OFFSET][2] >= v_size[2]+5 || -v_size[2] >= TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_OFFSET][2]))
				{
					Mensaje(playerid, -1,"La posici�n del objeto est� demasiado lejos del veh�culo.");
					TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_OFFSET][0] = TuningObjetoPos[playerid][0];
					TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_OFFSET][1] = TuningObjetoPos[playerid][1];
					TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_OFFSET][2] = TuningObjetoPos[playerid][2];
					TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_ROT][0] = TuningObjetoPos[playerid][3];
					TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_ROT][1] = TuningObjetoPos[playerid][4];
					TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_ROT][2] = TuningObjetoPos[playerid][5];
					ActualizarTuningObjeto(playerid,TuningVslot[playerid],TuningSlot[playerid]);
				}
				TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_ATTACHED] = true;
				Mensaje(playerid, -1, "Objeto actualizado.");
				TuningDialogo(playerid, TUNING_MENUOBJ2);
				Streamer_Update(playerid);
			}
			case EDIT_RESPONSE_UPDATE:
			{
				new Float:posveh[3];
				GetVehiclePos(TuningVehiculo[playerid], posveh[0], posveh[1], posveh[2]);
				TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_OFFSET][0] = x - posveh[0];
				TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_OFFSET][1] = y - posveh[1];
				TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_OFFSET][2] = z - posveh[2];
				TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_ROT][0] = rx;
				TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_ROT][1] = ry;
				TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_ROT][2] = rz;
				ActualizarTuningObjeto(playerid,TuningVslot[playerid],TuningSlot[playerid]);
				Streamer_Update(playerid);
			}
		}
	}
	return 1;
}

EditVehicleObject(playerid, vehicleid, slot)
{
	Mensaje(playerid, -1, "Ajusta el objeto y haz clic en el icono de guardar, si pulsas "CR"'ESC'"CB" no se guardar� la configuraci�n.");
	Mensaje(playerid, -1, "Mant�n presionado "CR"'W'"CB" para mover la c�mara.");
	//DestroyDynamicObjectEx(TuningPivotObjeto[playerid]);
	new Float:pos[3],Float:pos2[3];
	TuningSlot[playerid] = slot;
	GetVehiclePos(vehicleid, pos2[0], pos2[1], pos2[2]);
	pos[0] = pos2[0] + TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_OFFSET][0];
	pos[1] = pos2[1] + TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_OFFSET][1];
	pos[2] = pos2[2] + TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_OFFSET][2];
	TuningObjetoPos[playerid][0] = TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_OFFSET][0];
	TuningObjetoPos[playerid][1] = TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_OFFSET][1];
	TuningObjetoPos[playerid][2] = TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_OFFSET][2];
	TuningObjetoPos[playerid][3] = TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_ROT][0];
	TuningObjetoPos[playerid][4] = TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_ROT][1];
	TuningObjetoPos[playerid][5] = TuningObjetos[playerid][TuningVslot[playerid]][TuningSlot[playerid]][vobject_ROT][2];
	TuningPivotObjeto[playerid] = CreateDynamicObject(18631, pos[0], pos[1], pos[2], TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_ROT][0], TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_ROT][1], TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_ROT][2], -1, -1, playerid);
	Streamer_Update(playerid);
	EditDynamicObject(playerid, TuningPivotObjeto[playerid]);
	return 1;
}

Funcion:LoadVehicleObjects(playerid, slot)
{
	new count, vobjects;
	cache_get_row_count(count);
	for(new i; i < count; i++)
	{
		TuningObjetos[playerid][slot][vobjects][vobject_VALID] = true;
		cache_get_value_name_int(i,"ID",TuningObjetos[playerid][slot][vobjects][vobject_ID]);
		cache_get_value_name_int(i,"tipo",TuningObjetos[playerid][slot][vobjects][vobject_TYPE]);
		cache_get_value_name_int(i, "modelid",TuningObjetos[playerid][slot][vobjects][vobject_MODELID]);
		cache_get_value_name_float(i, "off_x",TuningObjetos[playerid][slot][vobjects][vobject_OFFSET][0]);
		cache_get_value_name_float(i, "off_y",TuningObjetos[playerid][slot][vobjects][vobject_OFFSET][1]);
		cache_get_value_name_float(i, "off_z",TuningObjetos[playerid][slot][vobjects][vobject_OFFSET][2]);
		cache_get_value_name_float(i, "rot_x",TuningObjetos[playerid][slot][vobjects][vobject_ROT][0]);
		cache_get_value_name_float(i, "rot_y",TuningObjetos[playerid][slot][vobjects][vobject_ROT][1]);
		cache_get_value_name_float(i, "rot_z",TuningObjetos[playerid][slot][vobjects][vobject_ROT][2]);
		cache_get_value_name_int(i, "attached",TuningObjetos[playerid][slot][vobjects][vobject_ATTACHED]);
		cache_get_value_name_int(i, "color0",TuningObjetos[playerid][slot][vobjects][vobject_COLORS][0]);
		cache_get_value_name_int(i, "color1",TuningObjetos[playerid][slot][vobjects][vobject_COLORS][1]);
		cache_get_value_name_int(i, "color2",TuningObjetos[playerid][slot][vobjects][vobject_COLORS][2]);
		cache_get_value_name_int(i, "color3",TuningObjetos[playerid][slot][vobjects][vobject_COLORS][3]);
		cache_get_value_name_int(i, "color4",TuningObjetos[playerid][slot][vobjects][vobject_COLORS][4]);

		cache_get_value_name(i, "texto", TuningObjetos[playerid][slot][vobjects][vobject_text_TEXT], 32);
		cache_get_value_name(i, "letra", TuningObjetos[playerid][slot][vobjects][vobject_text_FONT], 24);
		cache_get_value_name_int(i, "tamano", TuningObjetos[playerid][slot][vobjects][vobject_text_FONT_SIZE]);
		cache_get_value_name_int(i, "negrita", TuningObjetos[playerid][slot][vobjects][vobject_text_BOLD]);
		cache_get_value_name_int(i, "color_letra", TuningObjetos[playerid][slot][vobjects][vobject_text_FONT_COLOR]);
		ActualizarTuningObjeto(playerid,slot,vobjects, true);
		vobjects ++;
	}
	return 1;
}

Funcion:TuningEliminar(playerid,id)
{
	new DB_Query[80];
	mysql_format(Conecction, DB_Query, sizeof(DB_Query), "DELETE FROM `v_tuning` WHERE `ID` = '%d' LIMIT 1", id);
	mysql_tquery(Conecction, DB_Query);
	return 1;
}

Funcion:TuningEliminarTodo(playerid,v)
{
	new DB_Query[128];
	mysql_format(Conecction, DB_Query, sizeof(DB_Query), "DELETE FROM `v_tuning` WHERE `VehicleID` = '%d'",VehicleInfo[playerid][v][v_DBID]);
	mysql_tquery(Conecction, DB_Query);
	return 1;
}

forward ActualizarObjetoVehiculo(playerid, slot);
public ActualizarObjetoVehiculo(playerid, slot)
{
	new query[800];
	mysql_format(Conecction, query, sizeof(query),"UPDATE `v_tuning` SET `tipo` = '%d', `modelid` = '%d', `off_x` = '%f', `off_y` = '%f', `off_z` = '%f', `rot_x` = '%f', `rot_y` = '%f', `rot_z` = '%f', `attached` = '%d', `color0` = '%d', `color1` = '%d', `color2` = '%d', `color3` = '%d', `color4` = '%d',`texto` = '%e', `letra` = '%e', `tamano` = '%d', `negrita` = '%d',`color_letra` = '%d' WHERE `ID` = '%d';",
	TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_TYPE],
	TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_MODELID],
	TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_OFFSET][0],
	TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_OFFSET][1],
	TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_OFFSET][2],
	TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_ROT][0],
	TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_ROT][1],
	TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_ROT][2],
	TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_ATTACHED],
	TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_COLORS][0],
	TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_COLORS][1],
	TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_COLORS][2],
	TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_COLORS][3],
	TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_COLORS][4],
	
	TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_text_TEXT],
	TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_text_FONT],
	TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_text_FONT_SIZE],
	TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_text_BOLD],
	TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_text_FONT_COLOR],
	TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_ID]);
	mysql_tquery(Conecction, query);
	return 1;
}

Funcion:ObjetoRegistrado(playerid, slot)
{
	TuningObjetos[playerid][TuningVslot[playerid]][slot][vobject_ID] = cache_insert_id();
	return 1;
}

TextureCountryFlag(objectid, index, country)
{
	new text_flag[128];
	switch(country)
	{
		case 0: text_flag = "{231f20}ggg\n{e01f26}ggg\n{e3bc22}ggg";
		case 1: text_flag = "{1FBEF2}ggg\n"CB"ggg\n{1FBEF2}ggg";
		case 2: text_flag = "{d81e05}ggg\n"CB"ggg\n{d81e05}ggg";
		case 3: text_flag = "{000000}g{ffd600}g{e80000}g\n{000000}g{ffd600}g{e80000}g\n{000000}g{ffd600}g{e80000}g";
		case 4: text_flag = "{d52b1e}ggg\n{f9e300}ggg\n{007934}ggg";
		case 5: text_flag = ""CB"ggg\n{00966e}ggg\n{d62612}ggg";
		case 6: text_flag = "{04019a}g"CB"gg\n{fe0002}ggg";
		case 7: text_flag = "{fcd116}ggg\n{003893}ggg\n{ce1126}ggg";
		case 8: text_flag = "{0f47af}ggg\n"CB"ggg\n{0f47af}ggg";
		case 9: text_flag = "{c60b1e}ggg\n{ffc400}ggg\n{c60b1e}ggg";
		case 10: text_flag = "{3a75c4}ggg\n{000000}ggg\n"CB"ggg";
		case 11: text_flag = "{00209f}g"CB"g{f42a41}g\n{00209f}g"CB"g{f42a41}g\n{00209f}g"CB"g{f42a41}g";
		case 12: text_flag = "{4997d0}g"CB"g{4997d0}g\n{4997d0}g"CB"g{4997d0}g\n{4997d0}g"CB"g{4997d0}g";
		case 13: text_flag = "{ad1b28}ggg\n{fefefe}ggg\n{204589}ggg";
		case 14: text_flag = "{d2232c}ggg\n"CB"ggg\n{008d46}ggg";
		case 15: text_flag = "{ff9933}ggg\n"CB"ggg\n{138808}ggg";
		case 16: text_flag = "{ce1126}ggg\n"CB"ggg";
		case 17: text_flag = "{009e60}g"CB"g{f77f00}g\n{009e60}g"CB"g{f77f00}g\n{009e60}g"CB"g{f77f00}g";
		case 18: text_flag = "{009246}g"CB"g{ce2b37}g\n{009246}g"CB"g{ce2b37}g\n{009246}g"CB"g{ce2b37}g";
		case 19: text_flag = "{fdb913}ggg\n{006a44}ggg\n{c1272d}ggg";
		case 20: text_flag = "{ef2b2d}ggg\n"CB"ggg\n{00a3dd}ggg";
		case 21: text_flag = ""CB"g{d11f33}gg\n"CB"g{00a651}gg";
		case 22: text_flag = ""CB"g{d11f33}g\n"CB"g{d11f33}g\n"CB"g{d11f33}g";
		case 23: text_flag = "{14b53a}g{fcd116}g{ce1126}g\n{14b53a}g{fcd116}g{ce1126}g\n{14b53a}g{fcd116}g{ce1126}g";
		case 24: text_flag = "{006847}g"CB"g{ce1126}g\n{006847}g"CB"g{ce1126}g\n{006847}g"CB"g{ce1126}g";
		case 25: text_flag = "{008751}g"CB"g{008751}g\n{008751}g"CB"g{008751}g\n{008751}g"CB"g{008751}g";
		case 26: text_flag = ""CB"g{d21034}g\n{0067c6}g"CB"g";
		case 27: text_flag = "{d52b1e}ggg\n"CB"ggg\n{0038a8}ggg";
		case 28: text_flag = "{e30000}g"CB"g{e30000}g\n{e30000}g"CB"g{e30000}g\n{e30000}g"CB"g{e30000}g";
		case 29: text_flag = ""CB"ggg\n{dc143c}ggg";
		case 30: text_flag = "{002b7f}g{fcd116}g{ce1126}g\n{002b7f}g{fcd116}g{ce1126}g\n{002b7f}g{fcd116}g{ce1126}g";
		case 31: text_flag = ""CB"ggg\n{054da2}ggg\n{e01f26}ggg";
		case 32: text_flag = "{3a75c4}ggg\n{f9dd16}ggg";
		case 33: text_flag = "{f7d117}ggg\n{0033ab}ggg\n{cf142b}ggg";
	}
	SetDynamicObjectMaterialText(objectid,index,text_flag,60,"Webdings", 55, 0, 0xFFFFFFFF, 0, 1);
	return 1;
}

static ActualizarTuningObjeto(playerid,vslot, slot, material = false)
{
	if(TuningObjetos[playerid][vslot][slot][vobject_ATTACHED])
	{
		//if(TuningObjetos[playerid][vslot][slot][vobject_OBJECT_ID] == INVALID_STREAMER_ID)
		if(!IsValidDynamicObject(TuningObjetos[playerid][vslot][slot][vobject_OBJECT_ID])) 
		{
			TuningObjetos[playerid][vslot][slot][vobject_OBJECT_ID] = CreateDynamicObject(TuningObjetos[playerid][vslot][slot][vobject_MODELID], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		}
		if(material)
		{
			switch(TuningObjetos[playerid][vslot][slot][vobject_TYPE])
			{
				case TuningObjeto_Objeto: for(new i = 0; i != MAX_VEHICLE_OBJECTS_INDEXS; i ++) SetDynamicObjectMaterial(TuningObjetos[playerid][vslot][slot][vobject_OBJECT_ID], i, -1, "none", "none", TuningObjetos[playerid][vslot][slot][vobject_COLORS][i]);
				case TuningObjeto_Bandera: TextureCountryFlag(TuningObjetos[playerid][vslot][slot][vobject_OBJECT_ID], 1, TuningObjetos[playerid][vslot][slot][vobject_COLORS][0]);
				//case TuningObjeto_Panel,TuningObjeto_Texto: 
				case TuningObjeto_Texto:SetDynamicObjectMaterialText(TuningObjetos[playerid][vslot][slot][vobject_OBJECT_ID],0,TuningObjetos[playerid][vslot][slot][vobject_text_TEXT],130,TuningObjetos[playerid][vslot][slot][vobject_text_FONT],TuningObjetos[playerid][vslot][slot][vobject_text_FONT_SIZE],TuningObjetos[playerid][vslot][slot][vobject_text_BOLD],TuningObjetos[playerid][vslot][slot][vobject_text_FONT_COLOR],0,OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
			}
		}
		AttachDynamicObjectToVehicle(TuningObjetos[playerid][vslot][slot][vobject_OBJECT_ID],autos[vslot][playerid],TuningObjetos[playerid][vslot][slot][vobject_OFFSET][0],TuningObjetos[playerid][vslot][slot][vobject_OFFSET][1],TuningObjetos[playerid][vslot][slot][vobject_OFFSET][2],TuningObjetos[playerid][vslot][slot][vobject_ROT][0],TuningObjetos[playerid][vslot][slot][vobject_ROT][1],TuningObjetos[playerid][vslot][slot][vobject_ROT][2]);
	}
	else
	{
		//if(TuningObjetos[playerid][vslot][slot][vobject_OBJECT_ID] != INVALID_STREAMER_ID) DestroyDynamicObjectEx(TuningObjetos[playerid][vslot][slot][vobject_OBJECT_ID]),TuningObjetos[playerid][vslot][slot][vobject_OBJECT_ID] = INVALID_STREAMER_ID;
		DestroyDynamicObjectEx(TuningObjetos[playerid][vslot][slot][vobject_OBJECT_ID]);
	}
	return 1;
}

Funcion:CargarEstacionamientos()
{
    mysql_tquery(Conecction, "SELECT * FROM `estacionamientos`", "CargarEstacionamiento");
}

Funcion:CargarPuertas()
{
    mysql_tquery(Conecction, "SELECT * FROM `puertas`", "CargarPuerta");
}

Funcion:LoadTerritorios()
{
	new rows = cache_num_rows();
	for(new i=0; i < rows; i++)
	{
	    cache_get_value_name_int(i,"ID", Tdata[i][tID]);
	    cache_get_value_name_int(i,"BID", Tdata[i][tBanda]);
	    cache_get_value_name_float(i,"minx", Tdata[i][minX]);
	    cache_get_value_name_float(i,"miny", Tdata[i][minY]);
	    cache_get_value_name_float(i,"maxx", Tdata[i][maxX]);
	    cache_get_value_name_float(i,"maxy", Tdata[i][maxY]);
		Tdata[i][tzone] = CreateDynamicRectangle(Tdata[i][minX], Tdata[i][minY], Tdata[i][maxX], Tdata[i][maxY]);
		Tdata[i][tCreate] = GangZoneCreate(Tdata[i][minX], Tdata[i][minY], Tdata[i][maxX], Tdata[i][maxY]);
	    Tdata[i][tValid] = 1;
		Iter_Add(Territorios, i);
	}
}

RecargarTerritorios()
{
	Iter_Clear(Territorios);
	foreach(new i : Territorios)
	{
		if(Tdata[i][tValid] == 1)
		{
			DestroyDynamicArea(Tdata[i][tzone]);
            GangZoneDestroy(Tdata[i][tCreate]);
            Tdata[i][tValid] = 0;
		}
	}
	mysql_tquery(Conecction, "SELECT * FROM `territorios`", "LoadTerritorios");
	return 1;
}

Funcion:OnActorLoad()
{
	new rows = cache_num_rows(), SLib[30], SAnimName[30];
	for(new i=0; i < rows; i++)
	{
	    ActorData[i][ValidActor] = 1;
		ActorData[i][RoboEstado] = 0;
	    cache_get_value_name_int(i,"ID", ActorData[i][aID]);
	    cache_get_value_name_int(i,"Skin", ActorData[i][ActorSkin]);
		cache_get_value_name_int(i,"Mundo", ActorData[i][VW]);
		cache_get_value_name_int(i,"Repite", ActorData[i][Repite]);
	    cache_get_value_name_float(i,"X", ActorData[i][aX]);
	    cache_get_value_name_float(i,"Y", ActorData[i][aY]);
	    cache_get_value_name_float(i,"Z", ActorData[i][aZ]);
	    cache_get_value_name_float(i,"A", ActorData[i][aA]);
		cache_get_value_name(i, "anim_lib", SLib); strmid(ActorData[i][Actor_AnimLib], SLib, 0, strlen(SLib), 30);
		cache_get_value_name(i, "anim_name", SAnimName); strmid(ActorData[i][Actor_AnimName],SAnimName, 0, strlen(SAnimName), 30);
	    cache_get_value_name_int(i,"robable", ActorData[i][Robable]);
		if(ActorData[i][ActorSkin] == 666) ActorData[i][ActorSkin] = randomEx(1,255);
		if(ActorData[i][ActorSkin] == 777) ActorData[i][ActorSkin] = randomEx(243,246);
		ActorData[i][ActorPlayer] = CreateDynamicActor(ActorData[i][ActorSkin],ActorData[i][aX],ActorData[i][aY],ActorData[i][aZ],ActorData[i][aA]);
		SetDynamicActorVirtualWorld(ActorData[i][ActorPlayer], ActorData[i][VW]);
		if(ActorData[i][Repite] == 1) ApplyDynamicActorAnimation(ActorData[i][ActorPlayer], ActorData[i][Actor_AnimLib], ActorData[i][Actor_AnimName], 4.1, 1, 0, 0, 1, 0);
		else ApplyDynamicActorAnimation(ActorData[i][ActorPlayer], ActorData[i][Actor_AnimLib], ActorData[i][Actor_AnimName], 4.1, 0, 0, 0, 1, 0);
		Iter_Add(Actores, i);
	}
	return 1;
}

Funcion:CargarPuerta()
{
	new row_count;
	cache_get_row_count(row_count);
	for(new i = 0; i < row_count; i++)
	{
		cache_get_value_name_int(i, "ID", DoorData[i][dID]);
		cache_get_value_name_int(i, "Type", DoorData[i][dType]);
		cache_get_value_name_int(i, "Pickup", DoorData[i][dPickup]);
		cache_get_value_name(i, "Nombre", DoorData[i][dNombre]);
		cache_get_value_name_float(i, "X", DoorData[i][dX]);
		cache_get_value_name_float(i, "Y", DoorData[i][dY]);
		cache_get_value_name_float(i, "Z", DoorData[i][dZ]);
		cache_get_value_name_int(i, "interior", DoorData[i][dint]);
		cache_get_value_name_int(i, "vw", DoorData[i][dvw]);
		cache_get_value_name_float(i, "X2", DoorData[i][dsX]);
		cache_get_value_name_float(i, "Y2", DoorData[i][dsY]);
		cache_get_value_name_float(i, "Z2", DoorData[i][dsZ]);
		cache_get_value_name_int(i, "tienda", DoorData[i][dtienda]);
		cache_get_value_name_int(i, "robo", DoorData[i][drobo]);
		cache_get_value_name_int(i, "arma", DoorData[i][darma]);
		cache_get_value_name_int(i, "cargos", DoorData[i][dcargos]);
		cache_get_value_name(i, "Propietario", DoorData[i][dPropietario]);
		Iter_Add(Puertas, i);
		CrearPuerta(i);
		
	}
	return true;
}

Funcion:CargarEstacionamiento()
{
	new row_count;
	cache_get_row_count(row_count);
	for(new i = 0; i < row_count; i++)
	{
		new p;
		cache_get_value_name_int(i, "ID", p); InfoEst[p][estID] = p;
		if(p != 0)
		{
		    cache_get_value_name_int(i, "EstEnUso", InfoEst[p][estEnUso]);
			cache_get_value_name_int(i, "DuenoID", InfoEst[p][estDuenoID]);
			cache_get_value_name(i, "DuenoN", InfoEst[p][estDuenoN]);
			cache_get_value_name_int(i, "Valor", InfoEst[p][estValor]);
			cache_get_value_name_int(i, "Nivel", InfoEst[p][estNivel]);
			cache_get_value_name_int(i, "VW", InfoEst[p][estVirW]);
			cache_get_value_name_int(i, "Inte", InfoEst[p][estInt]);
			cache_get_value_name_int(i, "VIP", InfoEst[p][estVIP]);
			cache_get_value_name_float(i, "X", InfoEst[p][estX]);
			cache_get_value_name_float(i, "Y", InfoEst[p][estY]);
			cache_get_value_name_float(i, "Z", InfoEst[p][estZ]);
			cache_get_value_name_float(i, "A", InfoEst[p][estA]);
            CargarEstaciona(p);
		}
	}
	return true;
}
/*
Funcion:MariaCargar(i)
{
	new str[300];
	if(MariInfo[i][Estado] == 1)
	{
		MariInfo[i][ObjetoID] = CreateDynamicObject(2053, MariInfo[i][pX], MariInfo[i][pY], MariInfo[i][pZ]-1.00, 0.000000, 0.000000, -0.000000);
		format(str, sizeof(str), ""CR"Semillas de Marihuana"CB"\nSembradas por {009BE4}%s"CB"\nSe secan en %dm %ds\n"CR"/regar"CB"", MariInfo[i][Plantador], MariInfo[i][Min], MariInfo[i][Seg]);
		UpdateDynamic3DTextLabelText(MariInfo[i][Label], COLOR_BLANCO, str);
	}
	else if(MariInfo[i][Estado] == 2)
	{
		if(MariInfo[i][Hor] <= 1) MariInfo[i][ObjetoID] = CreateDynamicObject(19473, MariInfo[i][pX], MariInfo[i][pY], MariInfo[i][pZ]-2.04, 0.000000, 0.000000, -0.000000);
		else if(MariInfo[i][Hor] == 2) MariInfo[i][ObjetoID] = CreateDynamicObject(19473, MariInfo[i][pX], MariInfo[i][pY], MariInfo[i][pZ]-1.78, 0.000000, 0.000000, -0.000000);
		else if(MariInfo[i][Hor] == 3) MariInfo[i][ObjetoID] = CreateDynamicObject(19473, MariInfo[i][pX], MariInfo[i][pY], MariInfo[i][pZ]-1.52, 0.000000, 0.000000, -0.000000);
		else if(MariInfo[i][Hor] == 4) MariInfo[i][ObjetoID] = CreateDynamicObject(19473, MariInfo[i][pX], MariInfo[i][pY], MariInfo[i][pZ]-1.26, 0.000000, 0.000000, -0.000000);
		else if(MariInfo[i][Hor] == 5) MariInfo[i][ObjetoID] = CreateDynamicObject(19473, MariInfo[i][pX], MariInfo[i][pY], MariInfo[i][pZ]-1.00, 0.000000, 0.000000, -0.000000);
		format(str, sizeof(str), ""CR"Planta de Marihuana"CB"\nSembrada por {009BE4}%s"CB"\nMadura en %dh %dm %ds", MariInfo[i][Plantador], MariInfo[i][Hor], MariInfo[i][Min], MariInfo[i][Seg]);
		UpdateDynamic3DTextLabelText(MariInfo[i][Label], COLOR_BLANCO, str);
		//MariInfo[i][Label] = CreateDynamic3DTextLabel(str, COLOR_BLANCO, MariInfo[i][pX], MariInfo[i][pY], MariInfo[i][pZ]+0.9, 8.0);
	}
	else if(MariInfo[i][Estado] == 3)
	{
		MariInfo[i][ObjetoID] = CreateDynamicObject(19473, MariInfo[i][pX], MariInfo[i][pY], MariInfo[i][pZ]-1.00, 0.000000, 0.000000, -0.000000);
		format(str, sizeof(str), ""CR"Planta de Marihuana"CB"\nSembrada por {009BE4}%s"CB"\nSe seca en %dh %dm %ds\n"CR"/cosechar planta"CB"", MariInfo[i][Plantador], MariInfo[i][Hor], MariInfo[i][Min], MariInfo[i][Seg]);
		UpdateDynamic3DTextLabelText(MariInfo[i][Label], COLOR_BLANCO, str);
	}
	return 1;
}

Funcion:LlenarBalde(playerid)
{
	AguaBalde[playerid] = 1;
	Objeto[playerid] = 9003;
	DescongelarEx(playerid);
	StopAudioStreamForPlayer(playerid);
	Mensaje(playerid, -1, "Has llenado tu balde de agua, usa "CR"/regar"CB" en una planta correspondiente.");
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
	SetPlayerAttachedObject(playerid, 4, 19468, 5, 0.126999,-0.089000,0.127998,101.199981,-164.499847,82.999900,1.032001,0.972000,1.002997);
	return 1;
}

Funcion:CreandoMaria(playerid, id)
{
	new Float:X, Float:Y, Float:Z, string[254];
	DescongelarEx(playerid);
	ClearAnimations(playerid);
	LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	if(PlantaOcupada(id) == 1) return 1;
	GetPlayerPos(playerid, X, Y, Z);
	CreandoMarihuana(playerid, X, Y, Z, id);
	format(string, sizeof(string), "%s remueve la tierra con un cuchillo y arroja algunas semillas.", NombreJugador(playerid));
	ProxDetector(10.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
	Mensaje(playerid,-1,"Luego de sembrar necesitas "CR"/regar"CB" la tierra para que la planta crezca.");
	return 1;
}

CreandoMarihuana(playerid, Float:X, Float:Y, Float:Z, id);
CreandoMarihuana(playerid, Float:X, Float:Y, Float:Z, id)
{
	MariInfo[id][Estado] = 1;
	MariInfo[id][Creado] = 1;
	MariInfo[id][IDMaria] = id;
	MariInfo[id][pX] = X;
	MariInfo[id][pY] = Y;
	MariInfo[id][pZ] = Z;
	MariInfo[id][Hor] = 0;
	MariInfo[id][Min] = 15;
	MariInfo[id][Seg] = 0;
	format(MariInfo[id][Plantador], 24, NombreJugador(playerid));
	Iter_Add(Plantas, id);
	MariaCargar(id);
	return 1;
}

Funcion:Regando(playerid, id)
{
	if(EstaEn(playerid,1.0,MariInfo[id][pX], MariInfo[id][pY], MariInfo[id][pZ]))
	{
		if(MariInfo[id][Estado] == 1)
		{
			MariInfo[id][Estado] = 2;
			MariInfo[id][Hor] = 1;
   			MariInfo[id][Min] = 59;
   			MariInfo[id][Seg] = 59;
			DestroyDynamicObjectEx(MariInfo[id][ObjetoID]);
		    //DestroyDynamic3DTextLabelEx(MariInfo[id][Label]);
			MariaCargar(id);
			AguaBalde[playerid] = 0;
			Objeto[playerid] = 0;
			LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(playerid,4);
			return 1;
		}
	}
	return 1;
}

Funcion:CosechandoPlanta(playerid, id)
{
	if(EstaEn(playerid,2.0,MariInfo[id][pX], MariInfo[id][pY], MariInfo[id][pZ]))
	{
		if(MariInfo[id][Estado] == 3)
		{
            DestroyDynamicObjectEx(MariInfo[id][ObjetoID]);
            DestroyDynamic3DTextLabelEx(MariInfo[id][Label]);
			PlayerInfo[playerid][pMarihuana] += 15;
			va_SendClientMessage(playerid,-1,"Consigues "CR"15 gramos de marihuana"CB", ahora puedes "CR"/armar porro"CB".");
			if(random(4) == 2)
			{
				va_SendClientMessage(playerid, -1, "Encontraste en la tierra "CR"1"CB" Coin.");
				PlayerInfo[playerid][Credits] += 1;
			}
 	        LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
			MariInfo[id][Creado] = 0;
			MariInfo[id][Estado] = 0;
			MariInfo[id][pX] = 0;
			MariInfo[id][pY] = 0;
			MariInfo[id][pZ] = 0;
			format(MariInfo[id][Plantador], 24, "Nadie");
			Iter_Remove(Plantas, id);
			RevisarLogro(playerid, 7);
			return 1;
		}
	}
	return 1;
}*/

Funcion:CargarCamion(playerid,tipo)
{
	if(CamionID[playerid] != INVALID_PLAYER_ID)
	{
		new reco;
		switch(tipo)
		{
		    case 1: reco = randomEx(0, 1);
			case 2: reco = randomEx(2, 4);
			case 3: reco = randomEx(5, 6);
			case 4: reco = randomEx(6, 7);
		}
		PlayerTemp[playerid][PuntoCX] = CamioneroPos[reco][0];
		PlayerTemp[playerid][PuntoCY] = CamioneroPos[reco][1];
		PlayerTemp[playerid][PuntoCZ] = CamioneroPos[reco][2];
		CamionCargado[CamionID[playerid]] = tipo;
		Carga[playerid] = tipo;
	    CerrarPuertasCamionero(playerid);
		Chofer[CamionID[playerid]] = playerid;
		Mensaje(playerid,-1,"El cami�n fue "CR"cargado con exito"CB", se marc� en el mapa la ubicaci�n de entrega.");
		TimerCamionero[playerid] = gettimeVariable + 300;
		CargandoC[playerid] = 0;
		DescongelarEx(playerid);
		PlayerTemp[playerid][pt_Camionero] = true;
		BarraJob(playerid,2);
		CrearCheckpoint(playerid,PlayerTemp[playerid][PuntoCX],PlayerTemp[playerid][PuntoCY],PlayerTemp[playerid][PuntoCZ],7.0);
	}
	return 1;
}

Funcion:DescargandoCamion(playerid)
{
	new autoid = GetPlayerVehicleID(playerid);
	if(!IsPlayerInAnyVehicle(playerid)) return 1;
	if(CAMION(autoid) || CAMIONVIP(autoid))
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    CerrarPuertasCamionero(playerid);
		DescongelarEx(playerid);
		Mensaje(playerid, -1, ""CR"Bien hecho"CB", ahora regresa el cami�n al dep�sito para recibir el pago.");
		CrearCheckpoint(playerid,-1699.9927,10.2943,3.5547, 7.0);
		PlayerTemp[playerid][PuntoCX] = -1699.9927,PlayerTemp[playerid][PuntoCY] = 10.2943,PlayerTemp[playerid][PuntoCZ] = 3.5547;
	}
	return 1;
}

Funcion:DarGasolina(autoid, petroleo)
{
	if(VehicleFuel[autoid] < petroleo) VehicleFuel[autoid]++;
	else if(VehicleFuel[autoid] >= petroleo) VehicleFuel[autoid] = petroleo,KillTimer(llenado[autoid]);
}

Funcion:DarGasolinaBarra(playerid, petroleo)
{
	new autoid = GetPlayerVehicleID(playerid);
	if(IsPlayerInAnyVehicle(playerid))
	{
		if(VehicleFuel[autoid] < petroleo)
		{
			ActualizarVelo(playerid);
		}
		else if(VehicleFuel[autoid] >= petroleo)
		{
			DescongelarEx(playerid);
			KillTimer(llenadobarra[playerid]);
  		}
	}
}

static HabilitarAnim(playerid)
{
	if(PlayerTemp[playerid][pt_Congelado]) return 0;
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT || IsPlayerInAnyVehicle(playerid) || PlayerInfo[playerid][pEnfermedad] != 0 || Muriendo[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || EnClub[playerid] == 1) return 0;
	if(rocajugador[playerid] == 897) return 0;
	new animname[24], animlib[24];
	GetAnimationName(GetPlayerAnimationIndex(playerid), animlib, sizeof(animlib), animname, sizeof(animname));
	if((strcmp(animlib,"FOOD",true) == 0 && strcmp(animname,"EAT_BURGER",true) == 0)
	|| (strcmp(animlib,"PED",true) == 0 && strcmp(animname,"FALL_FALL",true) == 0)
	|| (strcmp(animlib,"BOMBER",true) == 0 && strcmp(animname,"BOM_PLANT",true) == 0)
	|| (strcmp(animlib,"INT_HOUSE",true) == 0 && strcmp(animname,"BED_In_R",true) == 0) && PlayerTemp[playerid][CurandoFab] != 0 && PlayerTemp[playerid][CurandoHosp] != 0
	|| (strcmp(animlib,"MEDIC",true) == 0 && strcmp(animname,"CPR",true) == 0)
	|| (strcmp(animlib,"GANGS",true) == 0 && strcmp(animname,"smkcig_prtl",true) == 0)
	|| (strcmp(animlib,"BASEBALL",true) == 0 && strcmp(animname,"BAT_PART",true) == 0)) return 0;
	return 1;
}


task TimerDeSegundo[1000]()
{
	gettimeVariable = gettime();
	BaileProstitutas();
	for(new ec=1;ec<MAX_ENCARGOS;ec++) { if(Encargo[ec][SegundosMision] > 0) Encargo[ec][SegundosMision]--; }
	TimerDuelos();
	/*for(new v, f = GetVehiclePoolSize(); v <= f; v++)
	{
	    if(GetVehicleModel(v) > 0)
	    {
	        new Float:Vida;
	        GetVehicleHealth(v,Vida);
	        if(Vida != VehicleVida[v])
	        {
    			VehicleVida[v] = Vida;
       		}
    	}
	}*/
	
}

ptask TimerSegundo[1000](playerid)
{

	BajarTiemposCarcel(playerid);
	AntiCheatDeSegundo(playerid);
	TiempoEncargos(playerid);
	TimerBajarTiempos(playerid);
}

Funcion:SelectJugadorABanearOff(dias,JugadorBaneado[], RazonBan[],playerid)
{
	if(cache_num_rows() > 0)
	{
		new DBID, DB_Query[256], faccion, rango;
		cache_get_value_name_int(0, "ID", DBID);
		cache_get_value_name_int(0, "Faccion", faccion);
		cache_get_value_name_int(0, "Rango", rango);
		new string[145];
		if(faccion > 0 && rango == 8)
		{
			mysql_format(Conecction, DB_Query, sizeof(DB_Query), "UPDATE `facciones` SET `Nombre`='Slot Disponible',`EnUso`='0' WHERE `id`='%d' LIMIT 1",faccion);
			mysql_tquery(Conecction, DB_Query);
		}
		format(string, sizeof(string), "El jugador {FF3300}%s"CB" fue baneado por un admin. Raz�n: {FF3300}%s"CB".", JugadorBaneado, RazonBan);
		MensajeAll(-1, string);
		format(string, 128, "Administrador: %s",NombreJugador(playerid));
		MensajeAdmin(COLOR_GREY, string, 3);
		new cuantosd = gettimeVariable + (dias * 86400);
		mysql_format(Conecction, DB_Query, sizeof(DB_Query), "UPDATE `usuarios` SET `Baneado`='%d',`razon`='%e',`QuienBan`='%e', `Fecha_Ban`='%d' WHERE `ID`='%d'", cuantosd,RazonBan, NombreJugador(playerid), gettimeVariable,DBID);
		mysql_tquery(Conecction, DB_Query);
		mysql_format(Conecction, DB_Query, sizeof DB_Query, "INSERT INTO `registros_admin` (Responsable, Jugador, Razon, Accion) VALUES ('%d','%d','%e','3')",PlayerInfo[playerid][p_DBID],DBID,RazonBan);
		mysql_tquery(Conecction, DB_Query);
	}
	else va_SendClientMessage(playerid, -1, "No se encontr� al jugador que deseas banear %s.", JugadorBaneado);
	return 1;
}
Funcion:SelectJugadorABanear(playerid, JugadorBaneado[], RazonBan[])
{
	if(cache_num_rows() > 0)
	{
		new DBID, DB_Query[256], faccion, rango;
		cache_get_value_name_int(0, "ID", DBID);
		cache_get_value_name_int(0, "Faccion", faccion);
		cache_get_value_name_int(0, "Rango", rango);
		new string[145];
		if(faccion > 0 && rango == 8)
		{
			mysql_format(Conecction, DB_Query, sizeof(DB_Query), "UPDATE `facciones` SET `Nombre`='Slot Disponible',`EnUso`='0' WHERE `id`='%d' LIMIT 1",faccion);
			mysql_tquery(Conecction, DB_Query);
		}
		format(string, sizeof(string), "El jugador {FF3300}%s"CB" fue baneado por un admin. Raz�n: {FF3300}%s"CB".", JugadorBaneado, RazonBan);
		MensajeAll(-1, string);
		format(string, 128, "Administrador: %s",NombreJugador(playerid));
		MensajeAdmin(COLOR_GREY, string, 3);
		mysql_format(Conecction, DB_Query, sizeof DB_Query, "UPDATE `usuarios` SET `Baneado`='1',`razon`='%e',`QuienBan`='%e', `Fecha_Ban`='%d', Faccion = '0', Rango = '0' WHERE `ID`='%d' LIMIT 1", RazonBan, NombreJugador(playerid), gettimeVariable,DBID);
		mysql_tquery(Conecction, DB_Query);
		mysql_format(Conecction, DB_Query, sizeof DB_Query, "INSERT INTO `registros_admin` (Responsable, Jugador, Razon, Accion) VALUES ('%d','%d','%e','3')",PlayerInfo[playerid][p_DBID],DBID,RazonBan);
		mysql_tquery(Conecction, DB_Query);
	}
	else va_SendClientMessage(playerid, -1, "No se encontr� al jugador que deseas banear %s.", JugadorBaneado);
	return 1;
}

Funcion:SelectJugadorASan(playerid, tiempo, JugadorSancionado[25], RazonSan[128])
{
	if(cache_num_rows())
	{
		new DBID, DB_Query[256];
		cache_get_value_index_int(0, 0, DBID);
		new string[145];
		format(string, sizeof(string), "%s fue sancionado por %s.", JugadorSancionado, RazonSan);
		MensajeAll(0xAA3333FF, string);
		format(string, 128, "Administrador: %s",NombreJugador(playerid));
		MensajeAdmin(COLOR_GREY, string, 3);
		mysql_format(Conecction, DB_Query, sizeof DB_Query, "UPDATE `usuarios` SET `TiempoJail`='%d',`RazonSan`='%e', Sanciones=Sanciones+1 WHERE `ID`='%d' LIMIT 1", tiempo * 60, RazonSan, DBID);
		mysql_tquery(Conecction, DB_Query);
		mysql_format(Conecction, DB_Query, sizeof DB_Query, "INSERT INTO `registros_admin` (Responsable, Jugador, Razon, Accion, NotaNivel, Nota) VALUES ('%d','%d','%e','2', '0','%d')",PlayerInfo[playerid][p_DBID],DBID,RazonSan,tiempo);
		mysql_tquery(Conecction, DB_Query);
	}
	else Mensaje(playerid, -1, "No se encontro al jugador que deseas sancionar.");
	return 1;
}

Funcion:BaileProstitutas()
{
	if(Bailarina[0] == 0)
	{
		BaileP[0]++;
        switch(BaileP[0])
        {
            case 1:  ApplyDynamicActorAnimation(ActorP[0], "STRIP","STR_Loop_C",4.1,1,5,1,1,0);
            case 7:  ApplyDynamicActorAnimation(ActorP[0], "STRIP","STR_Loop_B",4.1,1,5,1,1,0);
            case 14: ApplyDynamicActorAnimation(ActorP[0], "STRIP","STR_B2C",4.1,0,5,1,1,0);
            case 20: ApplyDynamicActorAnimation(ActorP[0], "STRIP","STR_C1",4.1,0,5,1,1,0);
            case 28: ApplyDynamicActorAnimation(ActorP[0], "STRIP","STR_C2",4.1,0,5,1,1,0);
			case 35: BaileP[0] = 0;
		}
	}
	if(Bailarina[1] == 0)
	{
        BaileP[1] ++;
        switch(BaileP[1])
        {
            case 1: ApplyDynamicActorAnimation(ActorP[1], "STRIP","STR_Loop_A",4.1,1,5,1,1,0);
            case 6: ApplyDynamicActorAnimation(ActorP[1], "STRIP","strip_G",4.1,1,5,1,1,0);
            case 15: BaileP[1] = 0;
        }
	}
	if(Bailarina[2] == 0)
	{
        BaileP[2] ++;
        switch(BaileP[2])
        {
            case 1: ApplyDynamicActorAnimation(ActorP[2], "STRIP","strip_G",4.1,1,5,1,1,0);
            case 7: ApplyDynamicActorAnimation(ActorP[2], "STRIP","STR_Loop_A",4.1,1,5,1,1,0);
            case 12: BaileP[2] = 0;
        }
	}
	if(Bailarina[3] == 0)
	{
        BaileP[3] ++;
        switch(BaileP[3])
        {
            case 1: ApplyDynamicActorAnimation(ActorP[3], "STRIP","STR_C1",4.1,0,5,1,1,0);
            case 7: ApplyDynamicActorAnimation(ActorP[3], "STRIP","STR_Loop_C",4.1,1,5,1,1,0);
            case 13: ApplyDynamicActorAnimation(ActorP[3], "STRIP","STR_Loop_B",4.1,1,5,1,1,0);
            case 18: ApplyDynamicActorAnimation(ActorP[3], "STRIP","STR_B2C",4.1,0,5,1,1,0);
			case 22: BaileP[3] = 0;
		}
	}
	if(Bailarina[4] == 0)
	{
        BaileP[4] ++;
        switch(BaileP[4])
        {
            case 1: ApplyDynamicActorAnimation(ActorP[4], "STRIP","STR_C1",4.1,0,5,1,1,0);
            case 8: ApplyDynamicActorAnimation(ActorP[4], "STRIP","STR_C2",4.1,0,5,1,1,0);
            case 14: ApplyDynamicActorAnimation(ActorP[4], "STRIP","STR_Loop_C",4.1,1,5,1,1,0);
            case 25: ApplyDynamicActorAnimation(ActorP[4], "STRIP","STR_Loop_B",4.1,1,5,1,1,0);
            case 33: ApplyDynamicActorAnimation(ActorP[4], "STRIP","STR_B2C",4.1,0,5,1,1,0);
            case 38: BaileP[4] = 0;
		}
	}
	if(Bailarina[5] == 0)
	{
        BaileP[5] ++;
        switch(BaileP[5])
        {
            case 1: ApplyDynamicActorAnimation(ActorP[5], "STRIP","STR_Loop_A",4.1,1,5,1,1,0);
            case 7: ApplyDynamicActorAnimation(ActorP[5], "STRIP","strip_G",4.1,1,5,1,1,0);
            case 15: BaileP[5] = 0;
        }
	}
	return true;
}

Funcion:DarAfinidad(playerid, prostituta)
{
	if(GetPlayerVirtualWorld(playerid) != 5) return 0;
	if(gettimeVariable > TiempoCLUB[playerid])
	{
		TiempoCLUB[playerid] = gettimeVariable + 4;
		if(PlayerInfo[playerid][jDinero] < 500) return Mensaje(playerid,-1,"Te quedaste sin dinero.");
		new DinerObjeto,rand,nombre[50],string[256];
		TextDrawShowForPlayer(playerid, Cuadroputi);
		TextDrawShowForPlayer(playerid, Cuadroputi1);
		TextDrawShowForPlayer(playerid, FlechasArribaPuti);
		TextDrawShowForPlayer(playerid, FlechasArribaPuti2);
		TextDrawShowForPlayer(playerid, PuticlubMedia);
		TextDrawShowForPlayer(playerid, PuticlubAlta);
		format(nombre,sizeof(nombre), "Afinidad con %s", ObtenerBailarina(prostituta));
		PlayerTextDrawSetString(playerid, AfinidadconX[playerid], Desbug(nombre));
	    format(nombre,sizeof(nombre),"%s arroj� dinero a %s.",NombreJugador(playerid),ObtenerBailarina(prostituta));
    	ProxDetector(20.0, playerid, nombre, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
		if(Afinidad[prostituta][playerid] < 100) Afinidad[prostituta][playerid]++;
		AfinidadTotal = Afinidad[prostituta][playerid]/3;
		if(prostituta == 0) { rand = random(sizeof(DineroSpawn1)); DinerObjeto = CreateDynamicPickup(1212, 1, DineroSpawn1[rand][0], DineroSpawn1[rand][1], DineroSpawn1[rand][2], -1, -1, -1, 10.0); }
		if(prostituta == 1) { rand = random(sizeof(DineroSpawn2)); DinerObjeto = CreateDynamicPickup(1212, 1, DineroSpawn2[rand][0], DineroSpawn2[rand][1], DineroSpawn2[rand][2], -1, -1, -1, 10.0); }
		if(prostituta == 2) { rand = random(sizeof(DineroSpawn3)); DinerObjeto = CreateDynamicPickup(1212, 1, DineroSpawn3[rand][0], DineroSpawn3[rand][1], DineroSpawn3[rand][2], -1, -1, -1, 10.0); }
		if(prostituta == 3) { rand = random(sizeof(DineroSpawn4)); DinerObjeto = CreateDynamicPickup(1212, 1, DineroSpawn4[rand][0], DineroSpawn4[rand][1], DineroSpawn4[rand][2], -1, -1, -1, 10.0); }
		if(prostituta == 4) { rand = random(sizeof(DineroSpawn5)); DinerObjeto = CreateDynamicPickup(1212, 1, DineroSpawn5[rand][0], DineroSpawn5[rand][1], DineroSpawn5[rand][2], -1, -1, -1, 10.0); }
		if(prostituta == 5) { rand = random(sizeof(DineroSpawn6)); DinerObjeto = CreateDynamicPickup(1212, 1, DineroSpawn6[rand][0], DineroSpawn6[rand][1], DineroSpawn6[rand][2], -1, -1, -1, 10.0); }
		PlayerTextDrawShow(playerid, AfinidadconX[playerid]);
		PlayerTextDrawShow(playerid, LineasPutiNivel[playerid]);
		for(new a=0;a<AfinidadTotal;a++)
		{
			if(a < 30) format(string,sizeof(string),"%s-",string);
			else format(string,sizeof(string),"------------------------------",string);
		}
		PlayerTextDrawSetString(playerid,Radly[playerid],string);
		PlayerTextDrawShow(playerid, Radly[playerid]);
		QuitarDinero(playerid, 500);
		KillTimer(TimerDineroP[playerid]);
		TimerDineroP[playerid] = SetTimerEx("CerrarAviso",4000,false,"d",playerid);
		ApplyAnimation(playerid,"STRIP","PUN_CASH",4.1,0,5,1,2000,0);
		SetTimerEx("ClearAnim",2000,false,"d",playerid);
		new randDineroB,TiempoDinero;
		randDineroB = random(5);
		if(randDineroB == 0) TiempoDinero = 21000;
		if(randDineroB == 1) TiempoDinero = 30000;
		if(randDineroB == 2) TiempoDinero = 60000;
		if(randDineroB == 3) TiempoDinero = 32000;
		if(randDineroB == 4) TiempoDinero = 21000;
		if(randDineroB == 5) TiempoDinero = 21000;
		SetTimerEx("BorrarDinero",TiempoDinero,false,"d",DinerObjeto);
		if(PlayerInfo[playerid][pLogro][16] == 0)
		{
			if(Afinidad[0][playerid] > 89 && Afinidad[1][playerid] > 89 && Afinidad[2][playerid] > 89 && Afinidad[3][playerid] > 89 && Afinidad[4][playerid] > 89 && Afinidad[5][playerid] > 89) RevisarLogro(playerid, 16);
		}
	}
	return 1;
}

Funcion:BorrarDinero(id) return DestroyDynamicPickupEx(id);

Funcion:ClearAnim(playerid)
{
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	return 1;
}

Funcion:CerrarAviso(playerid)
{
	TextDrawHideForPlayer(playerid, Cuadroputi);
 	TextDrawHideForPlayer(playerid, Cuadroputi1);
	PlayerTextDrawHide(playerid, AfinidadconX[playerid]);
	PlayerTextDrawHide(playerid, LineasPutiNivel[playerid]);
	TextDrawHideForPlayer(playerid, PuticlubMedia);
	TextDrawHideForPlayer(playerid, PuticlubAlta);
	TextDrawHideForPlayer(playerid, FlechasArribaPuti);
	TextDrawHideForPlayer(playerid, FlechasArribaPuti2);
	PlayerTextDrawHide(playerid, Radly[playerid]);
	return 1;
}

Funcion:LlevarClub(playerid)
{
	SetPlayerPosAC(playerid,1204.5544,17.5049,1000.9219);
	SetPlayerFacingAngle(playerid,146.0252);
 	SetPlayerInterior(playerid, 2);
	LoopingAnim(playerid, "BLOWJOBZ","BJ_COUCH_LOOP_P", 4.0, 0, 1, 1, 1,0);
	SetCameraBehindPlayer(playerid);
	return 1;
}

Funcion:QuitarAfinidad(playerid)
{
	if(Afinidad[PlayerTemp[playerid][BailarinaPlayer]][playerid] >= 45 && Afinidad[PlayerTemp[playerid][BailarinaPlayer]][playerid] < 78) Afinidad[PlayerTemp[playerid][BailarinaPlayer]][playerid] -= 15;
	else if(Afinidad[PlayerTemp[playerid][BailarinaPlayer]][playerid] >= 78) Afinidad[PlayerTemp[playerid][BailarinaPlayer]][playerid] -= 25;
	return 1;
}

Funcion:TimerBaile(playerid)
{
	if(Afinidad[PlayerTemp[playerid][BailarinaPlayer]][playerid] < 45) DarAnimacion(playerid, ActorP[PlayerTemp[playerid][BailarinaPlayer]]);
	else if(Afinidad[PlayerTemp[playerid][BailarinaPlayer]][playerid] >= 45) DarAnimacion2(playerid, ActorP[PlayerTemp[playerid][BailarinaPlayer]]);
}

Funcion:Sexo2(playerid) LoopingAnim(playerid, "BLOWJOBZ","BJ_COUCH_LOOP_P", 4.0, 0, 1, 1, 1,0);

Funcion:BailePrivado(playerid, prostituta)
{
	new precio;
	if(PlayerTemp[playerid][BailarinaPlayer] != 0) return 1;
	if(Afinidad[prostituta][playerid] < 45) precio = BailarinaPrecio(prostituta);
	else if(Afinidad[prostituta][playerid] >= 45 && Afinidad[prostituta][playerid] < 78) precio = BailarinaPrecio(prostituta)/2;
	else if(Afinidad[prostituta][playerid] >= 78) precio = BailarinaPrecio(prostituta)/3;
	if(PlayerInfo[playerid][jDinero] < precio) return Mensaje(playerid,-1,"No tienes el dinero suficiente.");
	QuitarDinero(playerid,precio);
	if(Bailarina[prostituta] == 1) return Mensaje(playerid,-1,"La bailarina se encuentra "CR"ocupada"CB", ingresa con otra o espera un momento.");
	ResetPlayerWeapons(playerid);
	Bailarina[prostituta] = 1;
	SetPlayerVirtualWorld(playerid, playerid + MAX_PLAYERS);
	SetDynamicActorPos(ActorP[prostituta], 1203.6381,16.0237,1000.9219);
	SetDynamicActorFacingAngle(ActorP[prostituta], 327.8965);
	SetDynamicActorVirtualWorld(ActorP[prostituta],playerid + MAX_PLAYERS);
	PlayerTemp[playerid][BailarinaPlayer] = prostituta;
	ClearDynamicActorAnimations(ActorP[prostituta]);
	ApplyDynamicActorAnimation(ActorP[prostituta], "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	TimerBailando[playerid] = SetTimerEx("TimerBaile",5000,true,"d",playerid);
	IniciarCargadoClub(playerid);
	SetTimerEx("QuitarCargando",5000,false,"d",playerid);
 	LlevarClub(playerid);
	EnClub[playerid] = 1;
	PlayerTemp[playerid][BailePlayer] = 1;
	return 1;
}

Funcion:DarAnimacion(playerid, actorid)
{
	switch(PlayerTemp[playerid][BailePlayer])
	{
		case 1: ApplyDynamicActorAnimation(actorid, "STRIP","strip_G", 4.1,1,0,0,1,0);
		case 2: ApplyDynamicActorAnimation(actorid, "STRIP","strip_E", 4.1,1,0,0,1,0);
		case 3: ApplyDynamicActorAnimation(actorid, "STRIP","STR_B2C",4.1,0,0,0,1,1);
		case 4: ApplyDynamicActorAnimation(actorid, "STRIP","STR_C1",4.1,0,0,0,1,1);
		case 5: ApplyDynamicActorAnimation(actorid, "STRIP","STR_C2",4.1,0,0,0,1,1);
		case 6: ApplyDynamicActorAnimation(actorid, "STRIP","STR_Loop_A", 4.1,1,0,0,1,0);
		case 7: ApplyDynamicActorAnimation(actorid, "STRIP","strip_G", 4.1,1,0,0,1,0);
		case 8: ApplyDynamicActorAnimation(actorid, "STRIP","strip_E", 4.1,1,0,0,1,0);
		case 9: ApplyDynamicActorAnimation(actorid, "STRIP","strip_G", 4.1,1,0,0,1,0);
		case 10:
		{
			SetTimerEx("SacarClub",2500,false,"d",playerid);
			PlayerTemp[playerid][BailePlayer] = 0;
			LoopingAnim(playerid, "ped", "SEAT_up", 4.000000, 0, 1, 1, 1, 0);
			return 1;
		}
	}
	PlayerTemp[playerid][BailePlayer]++;
	return 1;
}

Funcion:DarAnimacion2(playerid, actorid)
{
	switch(PlayerTemp[playerid][BailePlayer])
	{
		case 1: ApplyDynamicActorAnimation(actorid, "STRIP","strip_G", 4.1,1,0,0,1,0);
		case 2: ApplyDynamicActorAnimation(actorid, "STRIP","strip_E", 4.1,1,0,0,1,0);
		case 3: ApplyDynamicActorAnimation(actorid, "STRIP","STR_B2C",4.1,0,0,0,1,1);
		case 4: ApplyDynamicActorAnimation(actorid, "STRIP","STR_C1",4.1,0,0,0,1,1);
		case 5: ApplyDynamicActorAnimation(actorid, "STRIP","STR_C2",4.1,0,0,0,1,1);
		case 6: ApplyDynamicActorAnimation(actorid, "STRIP","STR_Loop_A", 4.1,1,0,0,1,0);
		case 7: ApplyDynamicActorAnimation(actorid, "BLOWJOBZ","BJ_COUCH_START_W",4.1,0,0,0,1,1);
		case 8: ApplyDynamicActorAnimation(actorid, "BLOWJOBZ","BJ_COUCH_LOOP_W", 4.1,1,0,0,1,0);
		case 9:
		{
			LoopingAnim(playerid,"BLOWJOBZ","BJ_COUCH_END_P", 4.0, 0, 1, 1, 1,0);
			SetTimerEx("Sexo2", 3000, false, "d", playerid);
			ApplyDynamicActorAnimation(actorid, "BLOWJOBZ","BJ_COUCH_LOOP_W", 4.1,1,0,0,1,0);
		}
		case 10: ApplyDynamicActorAnimation(actorid, "BLOWJOBZ","BJ_COUCH_LOOP_W", 4.1,1,0,0,1,0);
		case 11: { LoopingAnim(playerid,"BLOWJOBZ","BJ_COUCH_END_P",4.1,0,1,1,1,0); ApplyDynamicActorAnimation(actorid, "BLOWJOBZ","BJ_COUCH_END_W",4.1,0,0,0,1,1); }
		case 12: return SetTimerEx("SacarClub",2300,false,"d",playerid);
	}
	PlayerTemp[playerid][BailePlayer]++;
	return 1;
}

Funcion:SacarClub(playerid)
{
 	DesconectarClub(playerid, PlayerTemp[playerid][BailarinaPlayer]);
	KillTimer(TimerBailando[playerid]);
	SetPlayerPosAC(playerid,1204.8699,12.5584,1000.921);
	SetPlayerFacingAngle(playerid,181.6822);
	SetPlayerInterior(playerid,2);
	SetPlayerVirtualWorld(playerid,5);
	ClearAnimations(playerid);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	EnClub[playerid] = 0;
	PlayerTemp[playerid][BailePlayer] = 0;
	PlayerTemp[playerid][BailarinaPlayer] = 0;
	QuitarAfinidad(playerid);
	DarArmas(playerid);
	return 1;
}

Funcion:DesconectarClub(playerid, prostituta)
{
	if(prostituta == 0) { ClearDynamicActorAnimations(ActorP[0]); SetDynamicActorPos(ActorP[0], 1219.7974,-6.6276,1001.3281); SetDynamicActorFacingAngle(ActorP[0], 191.0230); }
	if(prostituta == 1) { ClearDynamicActorAnimations(ActorP[1]); SetDynamicActorPos(ActorP[1], 1214.0870,-4.2850,1001.3281); SetDynamicActorFacingAngle(ActorP[1], 52.4976); }
	if(prostituta == 2) { ClearDynamicActorAnimations(ActorP[2]); SetDynamicActorPos(ActorP[2], 1202.8500,9.1434,1000.9219);  SetDynamicActorFacingAngle(ActorP[2], 141.9280); }
	if(prostituta == 3) { ClearDynamicActorAnimations(ActorP[3]); SetDynamicActorPos(ActorP[3], 1220.9673,8.2033,1001.3356);  SetDynamicActorFacingAngle(ActorP[3], 118.1507); }
	if(prostituta == 4) { ClearDynamicActorAnimations(ActorP[4]); SetDynamicActorPos(ActorP[4], 1208.4001,-6.2825,1001.3281); SetDynamicActorFacingAngle(ActorP[4], 80.8317); }
	if(prostituta == 5) { ClearDynamicActorAnimations(ActorP[5]); SetDynamicActorPos(ActorP[5], 1202.9122,-8.3771,1002.0255); SetDynamicActorFacingAngle(ActorP[5], 279.8937); }
	SetDynamicActorVirtualWorld(ActorP[prostituta],5);
	Bailarina[prostituta] = 0;
}

static VehicleKey(playerid)
{
	
	if(gettimeVariable > TiempoEntrarH[playerid])
	{
		new vehicleid = GetPlayerVehicleID(playerid),pvehicle = 0;
		for(new a = 0; a < MAX_PAUTOS; a++)
		{
			if(!IsValidVehicle(autos[a][playerid])) continue;
			if(vehicleid == autos[a][playerid]) pvehicle++;
		}

		for(new e = 1; e < MAX_ESTACIONA; e++)
		{
			if(EstaEn(playerid,10.0,InfoEst[e][estX],InfoEst[e][estY],InfoEst[e][estZ]))
			{
				if(pvehicle != 0)
				{
					if(InfoEst[e][estVIP] == 1) SetVehicleP(playerid,vehicleid,2057.9192,2427.1948,10.5534,178.4852, InfoEst[e][estInt],InfoEst[e][estVirW]);
					else if(InfoEst[e][estVIP] == 2) SetVehicleP(playerid,vehicleid,-1262.7711,461.1456,7.2091,88.8890, InfoEst[e][estInt],InfoEst[e][estVirW]);
					else SetVehicleP(playerid,vehicleid,1699.8279,-1876.9562,-49.1702,90.7951,InfoEst[e][estInt],InfoEst[e][estVirW]);
					Mensaje(playerid, COLOR_BLANCO, "Ingresaste a un "CR"estacionamiento"CB", el costo por d�a es de "CR"$150"CB".");
					Mensaje(playerid, COLOR_BLANCO, "Por favor, usa "CR"/estacionar"CB" para dejar tu veh�culo guardado en este estacionamiento.");
					Mensaje(playerid, COLOR_BLANCO, "Al guardarlo te aseguras de que nadie pueda sacarlo del estacionamiento.");
				}
				else return Mensaje(playerid,-1,"No puedes entrar con un veh�culo que no te pertenece.");
			}
			if(GetPlayerVirtualWorld(playerid) == InfoEst[e][estVirW] && GetPlayerInterior(playerid) == InfoEst[e][estInt])
			{
				if(EstaEn(playerid,10.0, 1706.9027, -1876.7185, -48.8961) || EstaEn(playerid,10.0, 2058.5505,2437.2556,10.8428) || EstaEn(playerid,10.0, -1257.3156,461.1437,7.2091))
				{
					if(pvehicle != 0)
					{
						new Float:posx, Float:posy, Float:sizex, Float:sizey, Float:sizez;
						GetVehicleModelInfo(GetVehicleModel(vehicleid), VEHICLE_MODEL_INFO_SIZE, sizex, sizey, sizez);
						posx = InfoEst[e][estX] - (floatsqroot(sizey + sizey + sizey) * floatsin(-InfoEst[e][estA], degrees));
						posy = InfoEst[e][estY] - (floatsqroot(sizey + sizey + sizey) * floatcos(-InfoEst[e][estA], degrees));
						SetVehicleP(playerid,vehicleid,posx,posy,InfoEst[e][estZ],InfoEst[e][estA]+180,0,0);
					}
					else return Mensaje(playerid,-1,"No puedes salir con un veh�culo que no te pertenece.");
				}
			}
		}
		if(PlayerInfo[playerid][jMiembro] > 0)
		{
			foreach(new f : Fabricas)
			{
				if(Fabricas[f][pBanda] == PlayerInfo[playerid][jMiembro] || FaccLegal(playerid))
				{
					if(Fabricas[f][pEnUso] == 1)
					{
					    if(EstaEn(playerid,5.0,-1978.9973,212.0329,1035.8162))
						{
							new Float:posx, Float:posy, Float:sizex, Float:sizey, Float:sizez;
							GetVehicleModelInfo(GetVehicleModel(vehicleid), VEHICLE_MODEL_INFO_SIZE, sizex, sizey, sizez);
							posx = Fabricas[f][pEntradaGX] - (floatsqroot(sizey + sizey + sizey) * floatsin(-Fabricas[f][pEntradaGA], degrees));
							posy = Fabricas[f][pEntradaGY] - (floatsqroot(sizey + sizey + sizey) * floatcos(-Fabricas[f][pEntradaGA], degrees));
							if(PlayerInfo[playerid][pDuty] == 1 && SAPD(vehicleid)) return SetVehicleP(playerid,vehicleid,posx,posy,Fabricas[f][pEntradaGZ],Fabricas[f][pEntradaGA]+180,0,0);
							if(PlayerInfo[playerid][pDutyM] == 1 && EDSA(vehicleid)) return SetVehicleP(playerid,vehicleid,posx,posy,Fabricas[f][pEntradaGZ],Fabricas[f][pEntradaGA]+180,0,0);
							if(pvehicle != 0)
					    	{
								if(GetPlayerInterior(playerid) == Fabricas[f][pInt]) SetVehicleP(playerid,vehicleid,posx,posy,Fabricas[f][pEntradaGZ],Fabricas[f][pEntradaGA]+180,0,0);
          					}
					    	else if(Fabricas[f][Auto1F] == vehicleid || Fabricas[f][Auto2F] == vehicleid)
					    	{
		        				if(VehiculoConBarril[vehicleid] != 0) return Mensaje(playerid,-1,"Tienes que "CR"descargar los qu�micos"CB" para poder salir con camioneta.");
					    	    if(VehiculoConCajas[vehicleid] < 5 && VehiculoConCajas[vehicleid] != 0) return Mensaje(playerid,-1,"La camioneta tiene que estar cargada con "CR"5 cajas "CB"de "CR"metanfetamina"CB".");
								SetVehicleP(playerid,vehicleid,posx,posy,Fabricas[f][pEntradaGZ],Fabricas[f][pEntradaGA]+180,0,0);
								if(Fabricas[f][Auto1F] == vehicleid)
								{
				    				ObjetosTransporte(vehicleid, f);
								    BarrilesTransporte(vehicleid, f);
								}
								if(Fabricas[f][Auto2F] == vehicleid) ObjetoDistraccion(vehicleid, f);
	    			  		}
						}
						if(EstaEn(playerid,5.0,Fabricas[f][pEntradaGX],Fabricas[f][pEntradaGY],Fabricas[f][pEntradaGZ]))
						{
							if(PlayerInfo[playerid][pDuty] == 1 && gettimeVariable > Fabricas[f][TiempoSoborno])
							{
								if(SAPD(vehicleid)) return SetVehicleP(playerid,vehicleid,-1988.1583,212.3283,1035.3835,90.0000,Fabricas[f][pInt],Fabricas[f][pVW]);
							}
							if(PlayerInfo[playerid][pDutyM] == 1 && gettimeVariable > Fabricas[f][TiempoSoborno])
							{
								if(EDSA(vehicleid)) return SetVehicleP(playerid,vehicleid,-1988.1583,212.3283,1035.3835,90.0000,Fabricas[f][pInt],Fabricas[f][pVW]);
							}
			    			if(PlayerInfo[playerid][jMiembro] == Fabricas[f][pBanda])
						    {
								if(pvehicle != 0) SetVehicleP(playerid,vehicleid,-1988.1583,212.3283,1035.3835,90.0000,Fabricas[f][pInt],Fabricas[f][pVW]);
						    	else if(vehicleid == Fabricas[f][Auto1F] || vehicleid == Fabricas[f][Auto2F])
					    		{
		    		  				new var = 0;
					    		    if(var == 0)
		       						{
					    		    	if(VehiculoConBarril[vehicleid] != 0 && AdquiriendoQuimicosF[f] == 1)
						    		    {
											PuntoQMCX[f] = 0; PuntoQMCY[f] = 0; PuntoQMCZ[f] = 0;
											new coco = 5974 + random(150);
											new capxd = 150 + random(350);
											new Float:a1x,Float:a1y,Float:a1z;
											GetVehiclePos(Fabricas[f][Auto1F], a1x, a1y, a1z);
											foreach(new ifp : Player)
											{
												if(EstaEn(ifp,8.0, a1x, a1y, a1z) && PlayerInfo[ifp][jMiembro] == PlayerInfo[playerid][jMiembro])
												{
								    				
													DarDinero(ifp,coco);
													PlayerInfo[ifp][pMateriales] += capxd;
													AdquiriendoQuimicosF[f] = 0;
													va_SendClientMessage(ifp,-1,"Productos qu�micos transportados con �xito. Recibes "CR"$%d"CB" + {EE0000}%d"CB" piezas de armas por haber participado.",coco,capxd);
													
												}
											}
										}
			    					}
									SetVehicleP(playerid,vehicleid,-1988.1583,212.3283,1035.3835,90.0000,Fabricas[f][pInt],Fabricas[f][pVW]);
									if(Fabricas[f][Auto1F] == vehicleid) ObjetosTransporte(vehicleid, f),BarrilesTransporte(vehicleid, f);
									if(Fabricas[f][Auto2F] == vehicleid) ObjetoDistraccion(vehicleid, f);
									var = 1;
								}
								else Mensaje(playerid,-1,"No puedes entrar con un veh�culo que no sea de tu propiedad.");
			                }
						}
					}
				}
			}
		}
		if(EstaEn(playerid, 5.0,-1166.5009,2126.8232,1246.5457)) return SetVehicleP(playerid,vehicleid, 1410.2614,-1237.0621,13.3828, 177.9267, 0, 0);
		if(EstaEn(playerid, 10.0, 263.592102, 22.960014, 2.170951)) return cmd_tuning(playerid);

		foreach(new c : Propiedades)
		{
			if(EstaEn(playerid,4.5,PropInfo[c][pGX],PropInfo[c][pGY],PropInfo[c][pGZ]) && PropInfo[c][pGX] != 0)
			{
				if(PlayerInfo[playerid][p_DBID] == PropInfo[c][pIDPropietario])
				{
					if(PlayerInfo[playerid][pCargos] >= 2)
					{
						foreach(new i : Player)
						{
							if(FaccLegal(i) && FaccLegal2(i) && EstaEnP(playerid,i,25)) return Mensaje(playerid,-1,"No puedes entrar si la polic�a te est� siguiendo.");
						}
					}
					if(pvehicle != 0)
					{
						if(PropInfo[c][pInterior] == 43) SetVehicleP(playerid,vehicleid,1403.4517,594.0328,1000.7422,178.6772,99,PropInfo[c][pVW]);
						else SetVehicleP(playerid,vehicleid,303.7281,306.4251,999.2913,0,4,PropInfo[c][pVW]);
						GuardarPropiedad(c);
						return 1;
					}
					else return Mensaje(playerid,-1,"Este veh�culo no te pertenece.");
				}
				else return Mensaje(playerid,-1,"El due�o de la casa puede guardar sus veh�culos.");
			}
			if((EstaEn(playerid,10,303.7281,306.4251,999.2913) || EstaEn(playerid,10,1403.6276,600.1758,1001.0373)) && GetPlayerVirtualWorld(playerid) == PropInfo[c][pVW]) // Garaje
			{
				if(PlayerInfo[playerid][p_DBID] == PropInfo[c][pIDPropietario])
				{
					if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
					{
						new Float:posx, Float:posy, Float:sizex, Float:sizey, Float:sizez;
						GetVehicleModelInfo(GetVehicleModel(vehicleid), VEHICLE_MODEL_INFO_SIZE, sizex, sizey, sizez);
						posx = PropInfo[c][pGX] - (floatsqroot(sizey + sizey + sizey) * floatsin(-PropInfo[c][pGA], degrees));
						posy = PropInfo[c][pGY] - (floatsqroot(sizey + sizey + sizey) * floatcos(-PropInfo[c][pGA], degrees));
						SetVehicleP(playerid,vehicleid,posx,posy,PropInfo[c][pGZ],PropInfo[c][pGA]+180,0,0);
					}
				}
			}
		}
	}
	return 1;
}

static EntrarF(playerid)
{
	new MundoVirtual = GetPlayerVirtualWorld(playerid), MundoInterior = GetPlayerInterior(playerid);
	
	if(EstaEn(playerid, 2.0, -611.3183,2325.3333,79.5786)) // Mina
	{
		if(Armado(playerid) && !FaccLegal(playerid)) return Mensaje(playerid,-1,"No puedes entrar armado a la mina.");
		if(TieneTrabajo(playerid, MINERO))
		{
			if(RopaMine[playerid] == 1) return SetPosEx(playerid,-718.7835,2462.5969,9.9039,192.4327,9,9);
			else Mensaje(playerid,-1,"Necesitas la ropa de minero para poder ingresar a la mina.");
		}
		else return Mensaje(playerid,-1,"Necesitas el trabajo de minero para poder ingresar a la mina.");
	}
	
	if(EstaEn(playerid, 2.0,186.7460,1428.8141,10.5912) && PlayerInfo[playerid][pTipoCarcel] == 4 || EstaEn(playerid, 2.0,186.7460,1428.8141,10.5912) && FaccLegal(playerid)) 	// FC
	{
	    StatusFC[playerid] = 0;
		SetPosEx(playerid,168.1586,1436.1012,1084.8462,0,15,15);
		return 1;
	}
    if(PlayerInfo[playerid][pTiempoJail] == 0 && PlayerInfo[playerid][pTiempoCarcel] == 0)
	{

		if(EstaEn(playerid, 2.0,632.2560,-587.9955,16.3359) && PlayerInfo[playerid][jMiembro] == 2) return SetPosEx(playerid,246.7592,62.3243,1003.6406,0,6,6,10); // Entrada Milicia
		if(EstaEn(playerid, 2.0,246.7592,62.3243,1003.6406) && PlayerInfo[playerid][jMiembro] == 2) return SetPosEx(playerid,632.2560,-587.9955,16.3359,0,0,0,10); // Salida Milicia

		if(EstaEn(playerid, 2.0,246.5009,87.8434,1003.6406) && PlayerInfo[playerid][jMiembro] == 2) return SetPosEx(playerid,627.0826,-554.3762,47.3112,0,0,0,10); // Ascensor Milicia Entrada
		if(EstaEn(playerid, 2.0,627.0826,-554.3762,47.3112) && PlayerInfo[playerid][jMiembro] == 2) return SetPosEx(playerid,246.5009,87.8434,1003.6406,0,6,6,10); // Ascensor Milicia Salida

		//if(EstaEn(playerid, 2.0, 2495.4424,-1691.1359,14.7656)) return Mensaje(playerid,-1,"Solamente los miembros de la banda pueden ingresar a la propiedad."); // Pandilla
		//if(EstaEn(playerid, 2.0, 1122.7065,-2036.9232,69.8942)) return Mensaje(playerid,-1,"Solamente los miembros de la banda pueden ingresar a la propiedad."); // Mafia
		if(EstaEn(playerid, 2.0, 2492.1687,924.8982,11.0234)) return SetPosEx(playerid,-2190.9082,-79.5421,1016.4803,180.5258,10,10); // Iglesia LV 1
		if(EstaEn(playerid, 2.0,207.9470,142.3866,1003.0234) && PlayerInfo[playerid][jMiembro] == 1) return SetPosEx(playerid,251.20,76.40,1003.64,0,6,8); // Vestuario LVPD
		if(EstaEn(playerid, 2.0,638.8741,-218.1260,1276.7928) && PlayerInfo[playerid][jMiembro] == 1) return SetPosEx(playerid,251.20,76.40,1003.64,0,6,10); // Vestuario Academia
		if(EstaEn(playerid, 2.0, 1094.0945,1597.0083,12.5469)) // Estadio
		{
			if(Armado(playerid) && !FaccLegal(playerid)) return Mensaje(playerid,-1,"No puedes entrar armado al estadio.");
		    if(PlayerInfo[playerid][jNivel] < 4) return Mensaje(playerid,-1,"Necesitas nivel 4 para poder ingresar al estadio.");
			if(HabilitarCarreras == 0) return Mensaje(playerid,-1,"El estadio esta cerrado en este momento.");
			if(EntradaCarrera[playerid] == false) return Mensaje(playerid,-1,"Debes comprar una entrada en la boleteria primero.");
			if(PlayerInfo[playerid][pCargos] > 0) return Mensaje(playerid,-1,"No puedes entrar si la polic�a te est� siguiendo.");
			SetPosEx(playerid,-1387.9806,-324.9726,1052.0834,3.5876,7,7);
			return 1;
		}
		if(EstaEn(playerid,5.0,1410.7946,-1228.7570,13.5469)) //Salon de eventos - vehiculos
		{
			if(Armado(playerid) && FaccLegal(playerid)) return Mensaje(playerid,-1,"No puedes entrar armado al sal�n de eventos.");
		    if(TipoEvento != 3) return Mensaje(playerid,-1,"Solamente podr�n ingresar veh�culos al sal�n cuando haya una exposici�n.");
		    if(!IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid,-1,"Esta entrada es solamente para entrar en veh�culo.");
	    	CargandoEx(playerid);
		    SetPosVeh(GetPlayerVehicleID(playerid), -1165.8710,2118.6238,1246.5457, 182.4401, 13, 1);
		   	return 1;
		}
		if(EstaEn(playerid, 2.0,276.2080,122.0958,1004.6172) && PlayerInfo[playerid][jMiembro] == 1) // Vestuario LSPD - SFPD
		{
			switch(MundoVirtual)
			{
				case 1: return SetPosEx(playerid,251.20,76.40,1003.64,0,6,2);
				case 5: return SetPosEx(playerid,251.20,76.40,1003.64,0,6,6);
			}
		}
		foreach(new d: Puertas)
		{
			if(EstaEn(playerid,2.0,DoorData[d][dX], DoorData[d][dY], DoorData[d][dZ])) // Puerta
			{
			    if(IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid,-1,"Tienes que estar parado en la puerta de la propiedad para poder entrar.");
				if(DoorData[d][darma] == 1 && Armados(playerid) && !FaccLegal2(playerid)) return Mensaje(playerid,-1,"No puedes entrar armado.");
				if(DoorData[d][dcargos] == 1 && PlayerInfo[playerid][pCargos] > 0) return Mensaje(playerid,-1,"La polic�a te est� buscando, no puedes entrar a esta propiedad.");
				if(EnCombate[playerid] == 1 && !FaccLegal2(playerid))  return Mensaje(playerid,-1,"No puedes entrar estando en combate.");
				SetPosEx(playerid,DoorData[d][dsX], DoorData[d][dsY], DoorData[d][dsZ],0,DoorData[d][dint],DoorData[d][dvw]);
				if(DoorData[d][dtienda] == 1) Mensaje(playerid,-1,"Ingresaste a un supermercado "CR"24/7"CB", para comprar productos escribe "CR"/comprar productos"CB".");
				return 1;
			}
		}
		if(EnCombate[playerid] == 0)
		{
			for(new e = 1; e < MAX_ESTACIONA; e++)
			{
				if(EstaEn(playerid,5.0,InfoEst[e][estX],InfoEst[e][estY],InfoEst[e][estZ]))
				{
					//if(EnCombate[playerid] == 1) return Mensaje(playerid,-1,"No puedes entrar estando en combate.");
					switch(InfoEst[e][estVIP])
					{
						case 1: return SetPosEx(playerid, 2058.5505,2437.2556,10.8428,0,InfoEst[e][estInt],InfoEst[e][estVirW],1);
						default: return SetPosEx(playerid, 1706.9027,-1876.7185,-48.8961,0,InfoEst[e][estInt],InfoEst[e][estVirW],1);
					}
					break;
				}
			}
			foreach(new fb : Fabricas)
			{
				if(EstaEn(playerid,2.0,Fabricas[fb][pEntradaX],Fabricas[fb][pEntradaY],Fabricas[fb][pEntradaZ]))
				{
					//if(EnCombate[playerid] == 1) return Mensaje(playerid,-1,"No puedes entrar estando en combate.");
					if(gettimeVariable < Fabricas[fb][TiempoSoborno] && FaccLegal(playerid)) return 1;
					if(IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid,-1,"Tienes que estar parado en la puerta de la propiedad para poder entrar.");
					if(PlayerInfo[playerid][jMiembro] == Fabricas[fb][pBanda] && PlayerInfo[playerid][jMiembro] != 0 || FaccLegal(playerid))
					{
						if(MundoVirtual == 0)
						{
							if(PlayerInfo[playerid][pCargos] >= 2)
							{
								foreach(new i : StreamedPlayer[playerid])
								{
									if(FaccLegal(i) && FaccLegal2(i) && EstaEnP(playerid,i,30.00)) return Mensaje(playerid,-1,"No puedes entrar si la polic�a te est� siguiendo.");
								}
							}
							return SetPosEx(playerid,Fabricas[fb][pSalidaX],Fabricas[fb][pSalidaY],Fabricas[fb][pSalidaZ],86.5570,Fabricas[fb][pInt],Fabricas[fb][pVW]);
						}
					}
				}
			}

			foreach(new c : Propiedades)
			{
				if(PropInfo[c][pEnUso] == 1)
				{
					if(EstaEn(playerid,2.0,PropInfo[c][pPosX],PropInfo[c][pPosY],PropInfo[c][pPosZ])) // Puerta
					{
						if(MundoVirtual == 0)
						{
							//if(EnCombate[playerid] == 1) return Mensaje(playerid,-1,"No puedes entrar estando en combate.");
							if(PlayerInfo[playerid][pCargos] > 0 && PropInfo[c][pEnVenta] == 1) return Mensaje(playerid,-1,"No puedes entrar a esta propiedad si la polic�a te est� buscando.");
							if(PropInfo[c][pAbierta] == 1)
							{
								if(PlayerInfo[playerid][pCargos] >= 2)
								{
									foreach(new i : StreamedPlayer[playerid])
									{
										if(FaccLegal(i) && EstaEnP(playerid,i,25)) return Mensaje(playerid,-1,"No puedes entrar si la polic�a te est� siguiendo.");
									}
								}
								SetPosEx(playerid,PropInfo[c][pPosXS],PropInfo[c][pPosYS],PropInfo[c][pPosZS],PropInfo[c][pPosAS],PropInfo[c][pInteriorID],PropInfo[c][pVW]);
								if(PropInfo[c][pEmisora] != 0)
								{
									foreach(new id : Player)
									{
										if(Emisoras[id][CabinaOcupada] == PropInfo[c][pEmisora])
										{
											if(Emisoras[id][TransEmisora] == 1)
											{
												MP3Escuchando[playerid] = -1;
												va_SendClientMessage(playerid, COLOR_BLANCO, ""CB"Escuchando radio "CR"%s"CB".", Emisoras[id][NombreEmisora]);
												if(ShowSound[playerid] == 1)
												{
													new stringa[70];
													format(stringa, sizeof(stringa),"http://radio."WebName":8000/listen.pls?sid=%d", Emisoras[id][EmisoraID]);
													PlayAudioStreamForPlayer(playerid, stringa);
												}
											}
										}
									}
								}
							}
							else
							{
								if(PlayerInfo[playerid][p_DBID] == PropInfo[c][pIDPropietario])
								{
									//if(EnCombate[playerid] == 1) return Mensaje(playerid,-1,"No puedes entrar estando en combate.");
									if(PlayerInfo[playerid][pCargos] >= 2)
									{
										foreach(new i : StreamedPlayer[playerid])
										{
											if(FaccLegal(i) && EstaEnP(playerid,i,25)) return Mensaje(playerid,-1,"No puedes entrar si la polic�a te est� siguiendo.");
										}
									}
									SetPosEx(playerid,PropInfo[c][pPosXS],PropInfo[c][pPosYS],PropInfo[c][pPosZS],PropInfo[c][pPosAS],PropInfo[c][pInteriorID],PropInfo[c][pVW]);
									Mensaje(playerid,-1,"La puerta se encuentra cerrada, para dejar que ingresen otras personas, usa "CR"/abrir puerta");
									if(PropInfo[c][pEmisora] != 0)
									{
										foreach(new id : Player)
										{
											if(Emisoras[id][CabinaOcupada] == PropInfo[c][pEmisora])
											{
												if(Emisoras[id][TransEmisora] == 1)
												{
													MP3Escuchando[playerid] = -1;
													va_SendClientMessage(playerid, COLOR_BLANCO, ""CB"Escuchando radio "CR"%s"CB".", Emisoras[id][NombreEmisora]);
													if(ShowSound[playerid] == 1)
													{
														new stringa[70];
														format(stringa, sizeof(stringa),"http://radio."WebName":8000/listen.pls?sid=%d", Emisoras[id][EmisoraID]);
														PlayAudioStreamForPlayer(playerid, stringa);
													}
												}
											}
										}
									}
								}
								else Mensaje(playerid,-1,"La casa est� cerrada, solo el due�o puede entrar.");
							}
						}
						break;
					}
					if(EstaEn(playerid,2.5,PropInfo[c][pRoperoX],PropInfo[c][pRoperoY],PropInfo[c][pRoperoZ]) && MundoVirtual == PropInfo[c][pVW]) // Ropero
					{
						if(PlayerInfo[playerid][p_DBID] == PropInfo[c][pIDPropietario])
						{
							if(PropInfo[c][pRoperoAbierto] == 0)
							{
								new query[80];
								format(query,sizeof(query),"%s abre el ropero, entra y lo cierra r�pidamente.",NombreJugador(playerid));
								ProxDetector(15.0, playerid, query, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
								Mensaje(playerid,-1,"El ropero est� cerrado, usa "CR"/abrir ropero"CB" para abrirlo.");
							}
							return SetPosEx(playerid,254.2685,-41.5420,1002.0308,267.0000,14,PropInfo[c][pVW]);
						}
						else
						{
							if(PropInfo[c][pRoperoAbierto] == 0) return Mensaje(playerid,-1,"El ropero est� cerrado.");
							return SetPosEx(playerid,254.2685,-41.5420,1002.0308,267.0000,14,PropInfo[c][pVW]);
						}
						
					}
					if(EstaEn(playerid,5,300.3367,311.7175,999.1484) && MundoVirtual == PropInfo[c][pVW] && MundoInterior == 4) // Garaje puerta
					{
						if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) return SetPosEx(playerid,PropInfo[c][pPosXS],PropInfo[c][pPosYS],PropInfo[c][pPosZS],0,PropInfo[c][pInteriorID],PropInfo[c][pVW]);
						else return Mensaje(playerid,-1,"Necesitas estar parado en la puerta para entrar.");
					}
				}
			}
		}
	}
	SalirF(playerid);
	return 1;
}

static SalirF(playerid)
{
	new MundoInterior = GetPlayerInterior(playerid),MundoVirtual = GetPlayerVirtualWorld(playerid);
	
	if(EstaEn(playerid, 2.0,-718.7835,2462.5969,9.9039)) // Mina
	{
		if(TieneTrabajo(playerid, MINERO)) return SetPosEx(playerid,-611.3183,2325.3333,79.5786,307.3289,0,0);
	}
	
	if(EstaEn(playerid, 2.0,168.1586,1436.1012,1084.8462) && PlayerInfo[playerid][pTipoCarcel] == 4 || EstaEn(playerid, 2.0,168.1586,1436.1012,1084.8462) && FaccLegal(playerid)) 	// FC
	{
	    StatusFC[playerid] = 1;
		SetPosEx(playerid,186.7460,1428.8141,10.5912,0,0,0);
		return 1;
	}
	foreach(new fb : Fabricas)
	{
		if(PlayerInfo[playerid][pTiempoJail] == 0)
		{
			if(EstaEn(playerid,2.5,Fabricas[fb][pSalidaX],Fabricas[fb][pSalidaY],Fabricas[fb][pSalidaZ]))
			{
				if(MundoVirtual == Fabricas[fb][pVW]) return SetPosEx(playerid,Fabricas[fb][pEntradaX],Fabricas[fb][pEntradaY],Fabricas[fb][pEntradaZ],Fabricas[fb][pEntradaA]+180.0,0,0);
			}
		}
		else return 0;
	}
    if(PlayerInfo[playerid][pTiempoJail] == 0 && PlayerInfo[playerid][pTiempoCarcel] == 0)
	{
	    foreach(new c : Propiedades)
		{
	    	if(PropInfo[c][pEnUso] == 1)
		    {
		        if(EstaEn(playerid,2.5,PropInfo[c][pPosXS],PropInfo[c][pPosYS],PropInfo[c][pPosZS])) // Puerta
	    	    {
	        	    if(MundoVirtual == PropInfo[c][pVW])
		            {
						SetPosEx(playerid, PropInfo[c][pPosX],PropInfo[c][pPosY],PropInfo[c][pPosZ], PropInfo[c][pPosA]+180.0, 0, 0);
	    	            if(PropInfo[c][pEmisora] != 0) StopAudioStreamForPlayer(playerid);
						return 1;
	        	    }
		        }
		        else if(EstaEn(playerid,2.5,254.2685,-41.5420,1002.0308) && MundoVirtual == PropInfo[c][pVW]) // Ropero
	    	    {
					SetPosEx(playerid,PropInfo[c][pRoperoX],PropInfo[c][pRoperoY],PropInfo[c][pRoperoZ],0,PropInfo[c][pInteriorID],PropInfo[c][pVW]);
					return 1;
		        }
		    }
		}
		if(EstaEn(playerid, 2.0,1783.8291,-1301.7024,13.5026)) return SetPosEx(playerid,1783.8192,-1300.4727,13.4618,1.0332,0,0); // Elevador
		if(EstaEn(playerid, 2.0,-1427.7034,-291.6166,1051.2515)) return SetPosEx(playerid,-1405.2959,-309.6738,1052.0900,190.0000,7,7); // Estadio
		if(EstaEn(playerid, 2.0, 966.0934,-53.1477,1001.1246)) return SetPosEx(playerid,2014.8544,1150.5472,10.8203,327.7274,0,0);
		if(EstaEn(playerid, 5.0, 246.4200,107.3000,1003.2200)) // LSPD - SFPD
		{
			switch(MundoVirtual)
			{
				case 1: return SetPosEx(playerid,1555.4847,-1675.5411,16.1953,269.7595,0,0);
				case 5: return SetPosEx(playerid,-1605.5419,710.5440,13.8672,1.2209,0,0);
			}
		}
		if(EstaEn(playerid, 2.0,-1387.9806,-324.9726,1052.0834)) 	// Estadio LV
		{
			SetPosEx(playerid,1094.0945,1597.0083,12.5469,0,0,0);
			EntradaCarrera[playerid] = false;
	  		if(EnCarreras[playerid] > 0) SacarCarrera(playerid, 1);
			return 1;
		}
		if(EstaEn(playerid,5.0,-1166.5009,2126.8232,1246.5457)) //Salon de eventos - vehiculos
		{
	    	if(!IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid,-1,"Esta salida es solamente para salir en veh�culo.");
		}
		if(EstaEn(playerid, 2.0, -2190.9082,-79.5421,1016.4803)) // Iglesia
		{
			switch(MundoVirtual)
			{
				case 0: return SetPosEx(playerid,2253.9443,-1333.2175,23.9815,86.6701,0,0);
				case 10: return SetPosEx(playerid,2492.1687,924.8982,11.0234,180.3810,0,0);
			}
		}
		if(EstaEn(playerid, 5.0,251.20,76.40,1003.64) && PlayerInfo[playerid][jMiembro] == 1) // Vestuario SAPD
		{
			switch(MundoVirtual)
			{
				case 0: return SetPosEx(playerid,276.2080,122.0958,1004.6172,0,10,1);
				case 2: return SetPosEx(playerid,276.2080,122.0958,1004.6172,0,10,1);
				case 6: return SetPosEx(playerid,276.2080,122.0958,1004.6172,0,10,5);
				case 8: return SetPosEx(playerid,207.9470,142.3866,1003.0234,0,3,7);
				case 10: return SetPosEx(playerid,638.8741,-218.1260,1276.7928,0,55,55);
			}
		}
		foreach(new d: Puertas)
		{
			if(EstaEn(playerid,2.0,DoorData[d][dsX], DoorData[d][dsY], DoorData[d][dsZ])) // Puerta
			{
				if(MundoVirtual == 0) return SetPosEx(playerid,DoorData[d][dX], DoorData[d][dY], DoorData[d][dZ],0,0,0);
				else if(MundoVirtual > 0)
				{
				    if(DoorData[d][dvw] == MundoVirtual)
					{
						SetPosEx(playerid,DoorData[d][dX], DoorData[d][dY], DoorData[d][dZ],0,0,0);
						if(DoorData[d][drobo] != -1)
						{
				 			if(TRobada[DoorData[d][drobo]][MundoVirtual] == 1 && ShowSound[playerid] == 1) PlayAudioStreamForPlayer(playerid,"https://"URL"/Alarma.mp3",DoorData[d][dX], DoorData[d][dY], DoorData[d][dZ],50.0,1);
	 					}
						return 1;
					}
				}
			}
		}
		for(new e = 1; e < MAX_ESTACIONA; e++)
		{
		    if(MundoVirtual == InfoEst[e][estVirW] && MundoInterior == InfoEst[e][estInt])
			{
   				if(EstaEn(playerid,10.0, 1706.9027, -1876.7185, -48.8961) || EstaEn(playerid,10.0, 2058.5505,2437.2556,10.8428) || EstaEn(playerid,10.0, -1257.3156,461.1437,7.2091))
				{
					return SetPosEx(playerid,InfoEst[e][estX],InfoEst[e][estY],InfoEst[e][estZ], 0, 0, 0);
				}
			}
		}
	}
	return 1;
}

Funcion:ComproVehiculo(playerid)
{
	if(!IsPlayerInAnyVehicle(playerid)) return 1;
	new carid = GetPlayerVehicleID(playerid);
	if(VehiculosInfo[carid][vcomprable] != 1) return 1;
	if(UsandoVPN[playerid] && strcmp(User_Temp[playerid][DiscordID], "0", true) == 0)
	{
		return MostrarDialog(playerid, DIALOG_AYUDA, DIALOG_STYLE_MSGBOX, "Proxy/VPN {AD2A2A}detectado", "{FFFFFF}Hola, hemos detectado que usas VPN, para comprar veh�culos tendr�s que vincular tu {AD46D1}/discord{FFFFFF} en {AD46D1}/est > Vincular discord{FFFFFF}.\n\nDespu�s de vincular tu discord podr�s comprar veh�culos. Si no puedes vincular discord conectate al servidor sin VPN.\n\nSi tienes alg�n problema abre ticket en nuestro servidor de {AD46D1}/discord{FFFFFF}.", "Aceptar", "");
	}
	switch(PlayerInfo[playerid][VIP])
	{
	    case 1: if(ObtenerAutos(playerid) > 2) return Mensaje(playerid, -1, "Tu ya tienes 3 veh�culos, compra una membres�a VIP superior para poder comprar m�s veh�culos."),RemovePlayerFromVehicle(playerid);
	    case 2: if(ObtenerAutos(playerid) > 3) return Mensaje(playerid, -1, "Tu ya tienes 4 veh�culos, compra una membres�a VIP superior para poder comprar m�s veh�culos."),RemovePlayerFromVehicle(playerid);
	    case 3: if(ObtenerAutos(playerid) > 5) return Mensaje(playerid, -1, "Tu ya tienes 6 veh�culos."),RemovePlayerFromVehicle(playerid);
	    default: if(ObtenerAutos(playerid) > 1) return Mensaje(playerid, -1, "Tu ya tienes 2 veh�culos, compra una membres�a VIP para poder comprar m�s veh�culos."),RemovePlayerFromVehicle(playerid);
	}
	new mensaje[10], kevin[5], value = random(999);
	randomString(kevin, 4);
	format(mensaje, 10,"%s %d",kevin, value);
	if(VehiculosInfo[carid][vmoneda] == 0 && PlayerInfo[playerid][jDinero] < VehiculosInfo[carid][vprecio]) return Mensaje(playerid,-1,"No tienes el dinero suficiente para comprar este veh�culo."),RemovePlayerFromVehicle(playerid);
	else if(VehiculosInfo[carid][vmoneda] == 1 && PlayerInfo[playerid][Moneda] < VehiculosInfo[carid][vprecio]) return Mensaje(playerid,-1,"No tienes los "Moneda1" necesarios para comprar este veh�culo."),RemovePlayerFromVehicle(playerid);
	new query[900],slot = CompraSlot(playerid);
	if(slot != -1)
	{
		QuitarVelocimetro(playerid);
		TimerRC[playerid] = gettimeVariable + 15;
		VehicleInfo[playerid][slot][vModelo] = VehiculosInfo[carid][vmodelo];
		VehicleInfo[playerid][slot][vColor1] = VehiculosInfo[carid][vcolor1];
		VehicleInfo[playerid][slot][vColor2] = VehiculosInfo[carid][vcolor2];
		VehicleInfo[playerid][slot][vPrecio] = VehiculosInfo[carid][vprecio];
		VehicleInfo[playerid][slot][vMonedaa] = VehiculosInfo[carid][vmoneda];
		bloqueado[autos[slot][playerid]] = 0;
		alarma[autos[slot][playerid]] = 0;
		Patente[playerid][slot] = mensaje;
		VehicleInfo[playerid][slot][pVidaV] = 1000;
		VehicleInfo[playerid][slot][pVidaVE] = 1000;
		for(new i = 1; i < 11; i++) EspacioBaul[playerid][slot][i] = 0;
		for(new c = 0; c < 13; c++) Componentes[playerid][c][slot] = 0;
		switch(VehiculosInfo[carid][vmoneda])
		{
		    case 0:	QuitarDinero(playerid,VehiculosInfo[carid][vprecio]);
		    case 1: PlayerInfo[playerid][Moneda] -= VehiculosInfo[carid][vprecio];
		}
		mysql_format(Conecction, query, 900, "INSERT INTO `p_autos` (UserID,Modelo,Segurov,X,Y,Z,A,Color1,Color2,VidaV,Precio,vMoneda,Patente) VALUES ('%d','%d','0','%f','%f','%f','%f','%d','%d','1000.0','%d','%d','%e')",PlayerInfo[playerid][p_DBID],VehiculosInfo[carid][vmodelo],VehiculosInfo[carid][vx],VehiculosInfo[carid][vy],VehiculosInfo[carid][vz],VehiculosInfo[carid][va],VehiculosInfo[carid][vcolor1],VehiculosInfo[carid][vcolor2],VehiculosInfo[carid][vprecio],VehiculosInfo[carid][vmoneda],mensaje);
		mysql_tquery(Conecction, query, "VehiculoRegistrado","dd",playerid,slot);
		SetTimerEx("RespawnearV",5000,false,"d",carid);
		RemovePlayerFromVehicle(playerid);
		ConceCercano(playerid, VehiculosInfo[carid][vmodelo],VehiculosInfo[carid][vcolor1],VehiculosInfo[carid][vcolor2],slot);
	}
	return 1;
}
Funcion:ComproVehiculoTienda(playerid, modelo)
{
	if(UsandoVPN[playerid] && strcmp(User_Temp[playerid][DiscordID], "0", true) == 0)
	{
		return MostrarDialog(playerid, DIALOG_AYUDA, DIALOG_STYLE_MSGBOX, "Proxy/VPN {AD2A2A}detectado", "{FFFFFF}Hola, hemos detectado que usas VPN, para crear armas tendr�s que vincular tu {AD46D1}/discord{FFFFFF} en {AD46D1}/est > Vincular discord{FFFFFF}.\n\nDespu�s de vincular tu discord podr�s crear armas. Si no puedes vincular discord conectate al servidor sin VPN.\n\nSi tienes alg�n problema abre ticket en nuestro servidor de {AD46D1}/discord{FFFFFF}.", "Aceptar", "");
	}
	switch(PlayerInfo[playerid][VIP])
	{
	    case 1: if(ObtenerAutos(playerid) > 2) return Mensaje(playerid, -1, "Tu ya tienes 3 veh�culos, compra una membres�a VIP superior para poder comprar m�s veh�culos."),RemovePlayerFromVehicle(playerid);
	    case 2: if(ObtenerAutos(playerid) > 3) return Mensaje(playerid, -1, "Tu ya tienes 4 veh�culos, compra una membres�a VIP superior para poder comprar m�s veh�culos."),RemovePlayerFromVehicle(playerid);
	    case 3: if(ObtenerAutos(playerid) > 5) return Mensaje(playerid, -1, "Tu ya tienes 6 veh�culos."),RemovePlayerFromVehicle(playerid);
	    default: if(ObtenerAutos(playerid) > 1) return Mensaje(playerid, -1, "Tu ya tienes 2 veh�culos, compra una membres�a VIP para poder comprar m�s veh�culos."),RemovePlayerFromVehicle(playerid);
	}

	switch(TipoVehiculo[playerid])
	{
		case 1:
		{
			if(PlayerInfo[playerid][Moneda] < PRECIO_VEH_WZ) return va_SendClientMessage(playerid,-1,"No tienes los %d "Moneda1" necesarios para comprar este veh�culo.", PRECIO_VEH_WZ);
			PlayerInfo[playerid][Moneda] -= PRECIO_VEH_WZ;
			va_SendClientMessage(playerid, -1, "Compraste un veh�culo por {00CC00}%d "Moneda1""CB", usa "CR"/localizar"CB" para ubicarlo.", PRECIO_VEH_WZ);
		}
		case 2:
		{
			if(PlayerInfo[playerid][Credits] < PRECIO_VEH_COINS) return va_SendClientMessage(playerid,-1,"No tienes los %d "Moneda3" necesarios para comprar este veh�culo.",PRECIO_VEH_COINS);
			PlayerInfo[playerid][Credits] -= PRECIO_VEH_COINS;
			va_SendClientMessage(playerid, -1, "Compraste un veh�culo por {00CC00}%d "Moneda3""CB", usa "CR"/localizar"CB" para ubicarlo.", PRECIO_VEH_COINS);
		}
		case 3:
		{
			if(PlayerInfo[playerid][Credits] < PRECIO_VEH_COINS_E) return va_SendClientMessage(playerid,-1,"No tienes los %d "Moneda3" necesarios para comprar este veh�culo.", PRECIO_VEH_COINS_E);
			PlayerInfo[playerid][Credits] -= PRECIO_VEH_COINS_E;
			va_SendClientMessage(playerid, -1, "Compraste un veh�culo por {00CC00}%d "Moneda3""CB", usa "CR"/localizar"CB" para ubicarlo.", PRECIO_VEH_COINS_E);
		}
	}
	new mensaje[10], value = random(999);
	format(mensaje, 10,""Moneda1"RP %d",value);
	new query[900],slot = CompraSlot(playerid), Float:CompraPos[4];
	if(slot != -1)
 	{
		new precio, moneda;
		switch (TipoVehiculo[playerid])
		{
			case 1:
			{
				moneda = 1;
				precio = PRECIO_VEH_WZ;
			}
			case 2:
			{
				moneda = 3;
				precio = PRECIO_VEH_COINS;
			}
			case 3:
			{
				moneda = 3;
				precio = PRECIO_VEH_COINS_E;
			}
			default:
			{
				moneda = 1;
				precio = PRECIO_VEH_WZ;
			}
		}
		VehicleInfo[playerid][slot][vModelo] = modelo;
		VehicleInfo[playerid][slot][vColor1] = 9;
		VehicleInfo[playerid][slot][vColor2] = 6;
		VehicleInfo[playerid][slot][vPrecio] = precio;
		VehicleInfo[playerid][slot][vMonedaa] = moneda;
		VehicleInfo[playerid][slot][v0_interior] = 0;
		VehicleInfo[playerid][slot][v0_vw] = 0;
		Patente[playerid][slot] = mensaje;
		for(new i = 1; i < 11; i++) EspacioBaul[playerid][slot][i] = 0;
		for(new c = 0; c < 13; c++) Componentes[playerid][c][slot] = 0;
		switch(modelo)
		{
			case 430,446,452,453,454,472,473,484,493,595:
			{
				new rand = random(sizeof(ConceBSpawn));
				CompraPos[0] = ConceBSpawn[rand][0],CompraPos[1] = ConceBSpawn[rand][1],CompraPos[2] = ConceBSpawn[rand][2],CompraPos[3] = ConceBSpawn[rand][3];
			}

			case 592,577,511,512,593,520,553,476,519,460,513,548,425,417,487,488,497,563,447,469:
			{
				new rand = random(sizeof(ConceHeliSpawn));
				CompraPos[0] = ConceHeliSpawn[rand][0],CompraPos[1] = ConceHeliSpawn[rand][1],CompraPos[2] = ConceHeliSpawn[rand][2],CompraPos[3] = ConceHeliSpawn[rand][3];
			}
			default:
			{
				new rand = random(sizeof(ConceSpawn));
				CompraPos[0] = ConceSpawn[rand][0],CompraPos[1] = ConceSpawn[rand][1],CompraPos[2] = ConceSpawn[rand][2],CompraPos[3] = ConceSpawn[rand][3];
			}
		}
		mysql_format(Conecction, query, 900, "INSERT INTO `p_autos` (UserID,Modelo,Segurov,X,Y,Z,A,Color1,Color2,VidaV,Precio,vMoneda,Patente) VALUES ('%d','%d','0','%f','%f','%f','%f','%d','%d','1000.0','%d','%d','%e')",PlayerInfo[playerid][p_DBID],modelo,CompraPos[0],CompraPos[1],CompraPos[2],CompraPos[3],9,6,precio,moneda,mensaje);
		mysql_tquery(Conecction, query, "VehiculoRegistrado","dd",playerid,slot);
		autos[slot][playerid] = CreateVehicle(modelo,CompraPos[0],CompraPos[1],CompraPos[2],CompraPos[3],9,6,-1);
		VehicleFuel[autos[slot][playerid]] = CombustibleCoche(autos[slot][playerid]);
		VehicleInfo[playerid][slot][vGas] = CombustibleCoche(autos[slot][playerid]);
		alarma[autos[slot][playerid]] = 0;
		bloqueado[autos[slot][playerid]] = 0;
		VehicleInfo[playerid][slot][pOX] = CompraPos[0];
		VehicleInfo[playerid][slot][pOY] = CompraPos[1];
		VehicleInfo[playerid][slot][pOZ] = CompraPos[2];
		VehicleInfo[playerid][slot][pOA] = CompraPos[3];
		VehicleInfo[playerid][slot][pVidaV] = 1000;
		VehicleInfo[playerid][slot][pVidaVE] = 1000;

		SetVehicleNumberPlate(autos[slot][playerid], Patente[playerid][slot]);
		//GuardarCuenta(playerid);
	}
	return 1;
}
static CriminalCheck(playerid, check, sec)
{
	if(PlayerTemp[playerid][TieneEncargo] == check && Encargo[check][IdColega] == playerid)
	{
		if(Encargo[check][Tiene9mm] == 0) return Mensaje(playerid, -1, "Necesitas una 9mm silenciada para continuar.");
		if(!IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid,-1,"Necesitas un veh�culo para escapar");
		if(sec == 1)
		{
			PlayerTextDrawSetString(Encargo[check][IdColega],IndicacionesT[Encargo[check][IdColega]],Desbug("~g~Lleva~w~_a_tu_colega_al_punto_marcado."));
			PlayerTextDrawSetString(Encargo[check][IdCriminal],IndicacionesT[Encargo[check][IdCriminal]],Desbug("Espera_en_el_~g~vehiculo~w~_de_tu_colega."));
			Mensaje(Encargo[check][IdCriminal],-1,"Espera en el vehiculo de tu colega para que te acerque.");
			Mensaje(Encargo[check][IdColega],-1,"Lleva a tu colega al punto marcado.");
			Encargo[1][SegundosMision] = 30;
			BorrarCheckpoint(Encargo[check][IdCriminal]);
		}
		else if(sec == 2)
		{
			PlayerTextDrawSetString(Encargo[check][IdColega],IndicacionesT[Encargo[check][IdColega]],Desbug("~g~Espera~w~_mientras_tu_colega_realiza_el_encargo."));
			PlayerTextDrawSetString(Encargo[check][IdCriminal],IndicacionesT[Encargo[check][IdCriminal]],Desbug("~r~Asesina_~w~al_objetivo."));
			Mensaje(Encargo[check][IdCriminal],-1,"Asesina al objetivo.");
			Mensaje(Encargo[check][IdColega],-1,"Espera mientras tu colega realiza el encargo.");
			Encargo[check][SegundosMision] = 60;
		}
		if(check == 1)
		{
			if(sec == 1)
			{
				CrearCheckpoint(playerid,1466.6655,-1031.2390,23.2810, 3.0);
				Encargo[check][Actor1] = CreateDynamicActor(148,1469.3304,-1013.2700,26.8438,127.7706, 0, 100.0, 0, 0);
				Encargo[check][Objetivo] = CreateDynamicActor(186,1465.1709,-1013.5018,26.8438,175.3351, 0, 100.0, 0, 0);
				return 1;
			}
			else return BorrarCheckpoint(playerid);
		}
		if(check == 2)
		{
			if(sec == 1)
			{
				CrearCheckpoint(playerid,1530.5500,-1673.8456,13.0874, 3.0);
				Encargo[check][Actor1] = CreateDynamicActor(161,1542.3446,-1666.4531,13.5543,195.9680, 0, 100.0, 0, 0);
				Encargo[check][Objetivo] = CreateDynamicActor(265,1544.9623,-1673.3115,13.5594,92.1910, 0, 100.0, 0, 0);
				return 1;
			}
			else return BorrarCheckpoint(playerid);
		}
		if(check == 3)
		{
			if(sec == 1)
			{
				CrearCheckpoint(playerid,1433.7010,2671.2415,10.6719, 3.0);
				Encargo[check][Actor1] = CreateDynamicActor(31,1429.2253,2656.9607,11.3926,180.7949, 0, 100.0, 0, 0);
				Encargo[check][Actor2] = CreateDynamicActor(39,1434.0170,2657.3088,11.3926,112.5413, 0, 100.0, 0, 0);
				Encargo[check][Objetivo] = CreateDynamicActor(7,1429.5349,2655.2700,11.3926,306.6725, 0, 100.0, 0, 0);
				return 1;
			}
			else return BorrarCheckpoint(playerid);
		}
		if(check == 4)
		{
			if(sec == 1)
			{
				CrearCheckpoint(playerid,1175.5085,-905.2410,43.0075, 3.0);
				Encargo[check][Actor1] = CreateDynamicActor(11,1185.1980,-909.3603,43.2700,194.8558, 0, 100.0, 0, 0);
				ApplyDynamicActorAnimation(Encargo[check][Actor1], "COP_AMBIENT", "Coplook_loop", 4.000000, 0, 0, 0, 1, 0);
				Encargo[check][Actor2] = CreateDynamicActor(250,1183.5961,-912.2095,43.2882,287.0236, 0, 100.0, 0, 0);
				ApplyDynamicActorAnimation(Encargo[check][Actor2], "PED", "IDLE_chat", 4.000000, 0, 0, 0, 1, 0);
				Encargo[check][Objetivo] = CreateDynamicActor(205,1186.4438,-911.4187,43.2618,100.4657, 0, 100.0, 0, 0);
				ApplyDynamicActorAnimation(Encargo[check][Objetivo], "PED", "IDLE_chat", 4.000000, 0, 0, 0, 1, 0);
				return 1;
			}
			else return BorrarCheckpoint(playerid);
		}
		if(check == 5)
		{
			if(sec == 1)
			{
				CrearCheckpoint(playerid,2368.6667,-1361.7528,23.8382, 3.0);
				Encargo[check][Actor1] = CreateDynamicActor(32,2353.2302,-1364.0353,24.3984,188.6589, 0, 100.0, 0, 0);
				Encargo[check][Actor2] = CreateDynamicActor(31,2353.2488,-1366.9259,24.3984,359.6988, 0, 100.0, 0, 0);
				Encargo[check][Objetivo] = CreateDynamicActor(29,2347.9490,-1351.1028,24.0177,177.7770, 0, 100.0, 0, 0);
				return 1;
			}
			else return BorrarCheckpoint(playerid);
		}
	}
	return 1;
}

Funcion:ReanimarMedico(playerid,ID)
{
    switch(PlayerInfo[playerid][pNivelMedico])
	{
		case 1:
		{
			new intento = random(6);
			switch(intento)
			{
				case 0..4: return ReanimarAmbu(playerid,ID);
				case 5: return ReanimarLugar(playerid,ID);
			}
		}
		case 2:
		{
			new intento = random(5);
			switch(intento)
			{
				case 0..2: return ReanimarAmbu(playerid,ID);
				case 3..4: return ReanimarLugar(playerid,ID);
			}
		}
		default:
		{
			new intento = random(3);
			switch(intento)
			{
				case 0..1: return ReanimarLugar(playerid,ID);
				case 2: return ReanimarAmbu(playerid,ID);
			}
		}
	}
	return 1;
}

static ReanimarLugar(playerid,ID)
{
	SetPlayerColor(ID, COLORCARGO0);
	PlayerInfo[ID][Agonizando] = 0;
	Muriendo[ID] = 0;
	VariableCaido[ID] = 0;
	Esposando[ID] = 0;
	MarcadoMedicos[ID] = 0;
	LlamadaMedicos[ID] = 0;
	DescongelarEx(ID);
	EstablecerVida(ID, 100.0);
	ClearAnimations(ID);
	ApplyAnimation(ID, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	new data[128];
	format(data, sizeof(data), "%s logro reanimar a %s en el lugar.", NombreJugador(playerid), NombreJugador(ID));
	ProxDetector(20.0, playerid, data, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
	PlayerTemp[playerid][reanimamedico] = 0;
	DarDinero(playerid, 10000);
	Mensaje(playerid,-1,"Ganaste "CR"$10.000"CB" por salvar una vida.");
	TextDrawHideForPlayer(ID,Sangre);
	TextDrawHideForPlayer(ID,MisionT2[5]);
	PlayerTextDrawHide(ID,IndicacionesT[ID]);
	return 1;
}

static ReanimarAmbu(playerid,ID)
{
	SetPlayerColor(ID, COLORCARGO0);
	LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	Mensaje(playerid, -1, "El paciente est� listo para ser trasladado al hospital.");
	Mensaje(playerid, -1, "Sube a tu ambulancia y escribe "CR"/subir paciente"CB", luego conduce al hospital m�s cercano.");
	Mensaje(playerid, -1, "Apres�rate porque est� perdiendo mucha sangre y puede morir en el camino.");
	EstablecerVida(ID, 100.0);
	Reanimado[ID] = 1;
	Paciente[playerid] = ID;
	MarcadoMedicos[ID] = 0;
	PlayerTemp[playerid][reanimamedico] = 0;
	TextDrawHideForPlayer(ID,MisionT2[5]);
	PlayerTextDrawHide(ID,IndicacionesT[ID]);
	return 1;
}

static RevisarLogro(playerid, tipo)
{
	new query[256],logroName[64],logrotext[128],porcentaje;
	switch(tipo)
	{
		case 2,3,5,6,7,11,12:
		{
			if(PlayerInfo[playerid][pLogro][tipo] == 0) PlayerInfo[playerid][pLogro][tipo]++,mysql_format(Conecction, query, sizeof(query), "INSERT INTO logros (UserID,Progreso,Tipo) VALUES ('%d','%d','%d')",PlayerInfo[playerid][p_DBID],PlayerInfo[playerid][pLogro][tipo],tipo);
			else PlayerInfo[playerid][pLogro][tipo]++,mysql_format(Conecction, query, sizeof(query), "UPDATE logros SET `Progreso` = '%d' WHERE UserID = '%d' AND `Tipo` = '%d' LIMIT 1", PlayerInfo[playerid][pLogro][tipo], PlayerInfo[playerid][p_DBID],tipo);
			mysql_tquery(Conecction, query);
		}
		default:
		{
			if(PlayerInfo[playerid][pLogro][tipo] == 0)
			{
				mysql_format(Conecction, query, sizeof(query), "INSERT INTO logros (UserID,Tipo) VALUES ('%d','%d')",PlayerInfo[playerid][p_DBID],tipo);
				mysql_tquery(Conecction, query);
			}
		}
	}
	if(tipo == 1 && PlayerInfo[playerid][pLogro][1] == 1) return 1;
	if(tipo == 2 && PlayerInfo[playerid][pLogro][2] != 50 && PlayerInfo[playerid][pLogro][2] != 200 && PlayerInfo[playerid][pLogro][2] != 500 && PlayerInfo[playerid][pLogro][2] != 1200 && PlayerInfo[playerid][pLogro][2] != 2400 && PlayerInfo[playerid][pLogro][2] != 5000) return 1;
	if(tipo == 3 && PlayerInfo[playerid][pLogro][3] != 50 && PlayerInfo[playerid][pLogro][3] != 200 && PlayerInfo[playerid][pLogro][3] != 500 && PlayerInfo[playerid][pLogro][3] != 1200 && PlayerInfo[playerid][pLogro][3] != 2400 && PlayerInfo[playerid][pLogro][3] != 5000) return 1;
	if(tipo == 4 && PlayerInfo[playerid][pLogro][4] == 1) return 1;
	if(tipo == 5 && PlayerInfo[playerid][pLogro][5] != 30 && PlayerInfo[playerid][pLogro][5] != 30 && PlayerInfo[playerid][pLogro][5] != 70 && PlayerInfo[playerid][pLogro][5] != 160 && PlayerInfo[playerid][pLogro][5] != 350 && PlayerInfo[playerid][pLogro][5] != 800 && PlayerInfo[playerid][pLogro][5] != 2000) return 1;
	if(tipo == 6 && PlayerInfo[playerid][pLogro][6] != 3 && PlayerInfo[playerid][pLogro][6] != 8 && PlayerInfo[playerid][pLogro][6] != 15 && PlayerInfo[playerid][pLogro][6] != 25 && PlayerInfo[playerid][pLogro][6] != 40) return 1;
	if(tipo == 7 && PlayerInfo[playerid][pLogro][7] != 10 && PlayerInfo[playerid][pLogro][7] != 25 && PlayerInfo[playerid][pLogro][7] != 60 && PlayerInfo[playerid][pLogro][7] != 140 && PlayerInfo[playerid][pLogro][7] != 300) return 1;
	if(tipo == 8 && PlayerInfo[playerid][pLogro][8] == 1) return 1;
	if(tipo == 9 && PlayerInfo[playerid][pLogro][9] == 1) return 1;
	if(tipo == 10 && PlayerInfo[playerid][pLogro][10] == 1) return 1;
	if(tipo == 11 && PlayerInfo[playerid][pLogro][11] != 10 && PlayerInfo[playerid][pLogro][11] != 25 && PlayerInfo[playerid][pLogro][11] != 60 && PlayerInfo[playerid][pLogro][11] != 100 && PlayerInfo[playerid][pLogro][11] != 200) return 1;
	if(tipo == 12 && PlayerInfo[playerid][pLogro][12] != 5 && PlayerInfo[playerid][pLogro][12] != 15 && PlayerInfo[playerid][pLogro][12] != 40 && PlayerInfo[playerid][pLogro][12] != 100 && PlayerInfo[playerid][pLogro][12] != 250) return 1;
	if(tipo == 13 && PlayerInfo[playerid][pLogro][13] == 1) return 1;
	if(tipo == 14 && PlayerInfo[playerid][pLogro][14] == 1) return 1;
	if(tipo == 15 && PlayerInfo[playerid][pLogro][15] == 1) return 1;
	if(tipo == 16 && (PlayerInfo[playerid][pLogro][16] == 1 || Afinidad[0][playerid] < 90 || Afinidad[1][playerid] < 90 || Afinidad[2][playerid] < 90 || Afinidad[3][playerid] < 90 || Afinidad[4][playerid] < 90 || Afinidad[5][playerid] < 90)) return 1;
	if(tipo == 16) CerrarAviso(playerid);
	switch(tipo) { case 0,1,4,8,9,10,13,14,15,16: PlayerInfo[playerid][pLogro][tipo] = 1; }
	porcentaje = 10;
	switch(tipo)
	{
		case 0: { format(logroName,sizeof(logroName),"Nivel %d",PlayerInfo[playerid][jNivel]),format(logrotext,sizeof(logrotext),"~n~_~n~_~n~Alcanzar el nivel %d.~n~_", PlayerInfo[playerid][jNivel]); if(PlayerInfo[playerid][jNivel] > 12) { porcentaje = 120; } else porcentaje = PlayerInfo[playerid][jNivel]*10; }
		case 1: { format(logroName,sizeof(logroName),"Sobre ruedas"),format(logrotext,sizeof(logrotext),"~n~_~n~_~n~Compra su primer vehiculo.~n~_"); porcentaje = 10; }
		case 2: { format(logroName,sizeof(logroName),"Automedicado"),format(logrotext,sizeof(logrotext),"~n~_~n~_~n~Consume %d medicamentos~n~_",PlayerInfo[playerid][pLogro][2]); }
		case 3: { format(logroName,sizeof(logroName),"Adicto al crack"),format(logrotext,sizeof(logrotext),"~n~_~n~_~n~Consume %d gramos de Crack.~n~_",PlayerInfo[playerid][pLogro][3]); }
		case 4: { format(logroName,sizeof(logroName),"Tortuga mayor"),format(logrotext,sizeof(logrotext),"~n~_~n~_~n~Pesca una tortuga de 310Kg en~n~el sur de Los Santos.~n~_"); porcentaje = 50;}
		case 5: { format(logroName,sizeof(logroName),"Marihuanero"),format(logrotext,sizeof(logrotext),"~n~_~n~_~n~Fuma %d porros~n~_",PlayerInfo[playerid][pLogro][5]); }
		case 6: { format(logroName,sizeof(logroName),"Piloto experto"),format(logrotext,sizeof(logrotext),"~n~_~n~_~n~Gana %d carreras en el estadio~n~de Las Venturas.~n~_",PlayerInfo[playerid][pLogro][6]); }
		case 7: { format(logroName,sizeof(logroName),"Negocio redondo"),format(logrotext,sizeof(logrotext),"~n~_~n~_~n~Cosechar %d plantas de~n~marihuana.~n~_",PlayerInfo[playerid][pLogro][7]); }
		case 8: { format(logroName,sizeof(logroName),"Techo propio"),format(logrotext,sizeof(logrotext),"~n~_~n~_~n~Compra una casa en cualquier~n~lugar de San Andreas.~n~_"); }
		case 9: { format(logroName,sizeof(logroName),"Lugar de trabajo"),format(logrotext,sizeof(logrotext),"~n~_~n~_~n~Compra una oficina  en~n~cualquier lugar de San Andreas.~n~_"); }
		case 10: { format(logroName,sizeof(logroName),"Iniciando negocios"),format(logrotext,sizeof(logrotext),"~n~_~n~_~n~Compra un restaurante en~n~cualquier lugar de San Andreas.~n~_"); }
		case 11: { format(logroName,sizeof(logroName),"Cerrajero nocturno"),format(logrotext,sizeof(logrotext),"~n~_~n~_~n~Fuerza la cerradura de %d~n~casas.~n~_",PlayerInfo[playerid][pLogro][11]); }
		case 12: { format(logroName,sizeof(logroName),"M�dico profesional"),format(logrotext,sizeof(logrotext),"~n~_~n~_~n~Salva la vida de %d personas.~n~_",PlayerInfo[playerid][pLogro][12]); }
		case 13: { format(logroName,sizeof(logroName),"Maestro cervecero"),format(logrotext,sizeof(logrotext),"~n~_~n~_~n~Participar en la Fiesta de la~n~cerveza.~n~_"); }
		case 14: { format(logroName,sizeof(logroName),"Truco o trato"),format(logrotext,sizeof(logrotext),"~n~_~n~_~n~Consigue dulces de todos los~n~puestos de Haloween.~n~_"); }
		case 15: { format(logroName,sizeof(logroName),"Hechizado"),format(logrotext,sizeof(logrotext),"~n~_~n~_~n~Consigue un sombrero~n~descartable durante Halloween.~n~_"); }
		case 16: { format(logroName,sizeof(logroName),"Ganador"),format(logrotext,sizeof(logrotext),"~n~_~n~_~n~Consigue afinidad m�xima con~n~todas las bailarinas del club de~n~Las Venturas.~n~_"); }
	}
	if(tipo == 2 || tipo == 3)
	{
		if(PlayerInfo[playerid][pLogro][tipo] == 50) porcentaje = 10;
		if(PlayerInfo[playerid][pLogro][tipo] == 200) porcentaje = 20;
		if(PlayerInfo[playerid][pLogro][tipo] == 500) porcentaje = 30;
		if(PlayerInfo[playerid][pLogro][tipo] == 1200) porcentaje = 40;
		if(PlayerInfo[playerid][pLogro][tipo] == 2400) porcentaje = 50;
		if(PlayerInfo[playerid][pLogro][tipo] == 5000) porcentaje = 60;
	}
	if(tipo == 5)
	{
		if(PlayerInfo[playerid][pLogro][5] == 30) porcentaje = 10;
		if(PlayerInfo[playerid][pLogro][5] == 70) porcentaje = 20;
		if(PlayerInfo[playerid][pLogro][5] == 160) porcentaje = 30;
		if(PlayerInfo[playerid][pLogro][5] == 350) porcentaje = 40;
		if(PlayerInfo[playerid][pLogro][5] == 800) porcentaje = 50;
		if(PlayerInfo[playerid][pLogro][5] == 2000) porcentaje = 60;
	}
	if(tipo == 6)
	{
		if(PlayerInfo[playerid][pLogro][6] == 3) porcentaje = 10;
		if(PlayerInfo[playerid][pLogro][6] == 8) porcentaje = 20;
		if(PlayerInfo[playerid][pLogro][6] == 15) porcentaje = 30;
		if(PlayerInfo[playerid][pLogro][6] == 25) porcentaje = 40;
		if(PlayerInfo[playerid][pLogro][6] == 40) porcentaje = 50;
	}
	if(tipo == 7)
	{
		if(PlayerInfo[playerid][pLogro][7] == 10) porcentaje = 10;
		if(PlayerInfo[playerid][pLogro][7] == 25) porcentaje = 20;
		if(PlayerInfo[playerid][pLogro][7] == 60) porcentaje = 30;
		if(PlayerInfo[playerid][pLogro][7] == 140) porcentaje = 40;
		if(PlayerInfo[playerid][pLogro][7] == 300) porcentaje = 50;
	}
	if(tipo == 11)
	{
		if(PlayerInfo[playerid][pLogro][11] == 10) porcentaje = 10;
		if(PlayerInfo[playerid][pLogro][11] == 25) porcentaje = 20;
		if(PlayerInfo[playerid][pLogro][11] == 60) porcentaje = 30;
		if(PlayerInfo[playerid][pLogro][11] == 100) porcentaje = 40;
		if(PlayerInfo[playerid][pLogro][11] == 200) porcentaje = 50;
	}
	if(tipo == 12)
	{
		if(PlayerInfo[playerid][pLogro][12] == 5) porcentaje = 10;
		if(PlayerInfo[playerid][pLogro][12] == 15) porcentaje = 20;
		if(PlayerInfo[playerid][pLogro][12] == 40) porcentaje = 30;
		if(PlayerInfo[playerid][pLogro][12] == 100) porcentaje = 40;
		if(PlayerInfo[playerid][pLogro][12] == 250) porcentaje = 50;
	}
	mysql_format(Conecction, query, sizeof(query), "UPDATE logros SET Fecha = CURRENT_TIMESTAMP() WHERE UserID = '%d' AND Tipo = '%d'",PlayerInfo[playerid][p_DBID],tipo);
	mysql_tquery(Conecction, query);
	GameTextForPlayer(playerid, "~g~] ~w~LOGRO CONSEGUIDO ~g~]", 5000, 4);
	Mensaje(playerid,0xA385CBFF,"Conseguiste un logro, puedes ver tus logros y los de otras personas en la web.");
   	if(ShowSound[playerid] == 1) PlayAudioStreamForPlayer(playerid, "https://"URL"/Logro.mp3");
	new porcento[5];
	valstr(porcento,porcentaje);
	MostrarLogro(playerid,logroName,logrotext,porcento);
	if(PlayerInfo[playerid][jMiembro] > 0)
	{
		new logro[256],color[64];
		switch(PlayerInfo[playerid][jMiembro])
		{
			case 1: format(color,sizeof(color),"{3399FF}[Radio]"CB"");
			default: format(color,sizeof(color),"{%s}[Banda]"CB"",BandasInfo[PlayerInfo[playerid][jMiembro]][BColor]);
		}
		format(logro,sizeof(logro),"%s El jugador "CR"%s"CB" consigui� el logro {A385CB}* %s *"CB" (%d puntos).",color,NombreJugador(playerid),logroName,porcentaje);
		foreach(new i : Player) { if(PlayerInfo[i][jMiembro] == PlayerInfo[playerid][jMiembro]) Mensaje(i,-1,logro); }
	}
	SetTimerEx("QuitarLogro",6000,false,"d",playerid);
	return true;
}

static TimeConvertEx(sec, &days, &hours, &minutes, &seconds)
{
    days = floatround(sec / 86400);
    hours = floatround((sec - (days * 86400)) / 3600);
    minutes = floatround((sec - (days * 86400) - (hours * 3600)) / 60);
    seconds = sec % 60;
    return 1;
}
/*
Funcion:darstats(playerid)
{
    new query[256];
	DarDinero(playerid, 800000);
	PlayerInfo[playerid][pStats] = 1;
	PlayerInfo[playerid][jNivel] = 5;
	PlayerInfo[playerid][Credits] += 5;
	PlayerInfo[playerid][Moneda] += 600;
	PlayerInfo[playerid][pCrack] += 10000;
	PlayerInfo[playerid][pMedicamentos]	+= 10000;
	PlayerInfo[playerid][pMateriales] += 25000;
	PlayerInfo[playerid][pNivelLadron] = 1;
	PlayerInfo[playerid][pNivelCamionero] = 1;
	PlayerInfo[playerid][pNivelBasurero] = 2;
	PlayerInfo[playerid][pNivelArmero] = 8;
	PlayerInfo[playerid][pGPS] = 1;
	mysql_format(Conecction, query, sizeof(query), "UPDATE `usuarios` SET `Stats`='1' WHERE `ID`='%d' LIMIT 1", PlayerInfo[playerid][p_DBID]);
	mysql_tquery(Conecction, query);
	mysql_format(Conecction, query, sizeof(query), "INSERT INTO `logros` (UserID,Tipo) VALUES ('%d','0')",PlayerInfo[playerid][p_DBID]);
	mysql_tquery(Conecction, query);
	PlayerInfo[playerid][pLogro][0] = 1;
	Actualizar(playerid);
	GuardarCuenta(playerid);
}*/

Funcion:ActualizarLabelArmas(f)
{
    new string2[160];
    format(string2,sizeof(string2),""CR"Armas"CB"\nCantidad disponible:"CR" %d"CB"\n\nPulsa "CR"'H'"CB" para equipar una.\nPulsa "CR"'Y'"CB" para guardar el arma que llevas en tus manos.",Fabricas[f][pRecortada]+Fabricas[f][pUzi]+Fabricas[f][pTec9]+Fabricas[f][pSniper]);
	UpdateDynamic3DTextLabelText(Fabricas[f][pLabel4], COLOR_BLANCO, string2);
}

static PosCajas(i) return i*2;
			                
Funcion:CargarCajasFabrica(f)
{
	new pos;
	for(new i = 0; i < 10; i++)
    {
        if(Fabricas[f][Almacen][i] > 0)
        {
			pos = PosCajas(i);
            if(Fabricas[f][Almacen][i] > 0) Fabricas[f][Meta][pos] = CreateDynamicObject(1271, CajasMetaEstante[pos][0], CajasMetaEstante[pos][1], CajasMetaEstante[pos][2], 0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]);
            if(Fabricas[f][Almacen][i] > 1) Fabricas[f][Meta][pos+1] = CreateDynamicObject(1271, CajasMetaEstante[pos+1][0], CajasMetaEstante[pos+1][1], CajasMetaEstante[pos+1][2], 0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]);
        }
    }
	return 1;
}

Funcion:DanoFabrica(playerid)
{
	new Float:Vida;
	GetPlayerHealth(playerid,Vida);
	EstablecerVida(playerid,Vida-10);
	return 1;
}

task JobCocinero[72000]()
{
	foreach(new f : Fabricas)
	{
		CheckSoborno(f);
		for(new n = 0; n < 5; n++)
		{
			if(Fabricas[f][StatoCuoco][n] == 1)
			{
			    if(Fabricas[f][PorcentajeCocinero][n] >= 100)
			    {
					Fabricas[f][Bloque][n] = CreateDynamicObject(1271, PosicionesCoc[n][0],PosicionesCoc[n][1],PosicionesCoc[n][2], 0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]);
			        Fabricas[f][Termino][n] = 1;
			        Fabricas[f][StatoCuoco][n] = 4;
			        Fabricas[f][PorcentajeCocinero][n] = 0;
			        ActualizarLabelMoledores(f,n);
					ApplyDynamicActorAnimation(Fabricas[f][ActorFabrica][n+1], "COP_AMBIENT","Coplook_loop", 4.1,1,0,0,1,0);
			        GuardarFabrica(f);
			        return 1;
			    }
				Fabricas[f][PorcentajeCocinero][n]++;
				ActualizarLabelMoledores(f,n);
			}
		}
		
 	}
	return 1;
}

static AntiClones()
{
	new bool: occupied[MAX_VEHICLES], vehid;
	foreach(new i : Player)
	{
		vehid = GetPlayerVehicleID(i);
		if(IsValidVehicle(vehid)) occupied[vehid] = true;
		for(new a = 0; a < MAX_PAUTOS; a++){ 
			if(IsValidVehicle(autos[a][i])) occupied[autos[a][i]] = true;
		}
	}
	foreach(new f : Fabricas)
	{
		if(IsValidVehicle(Fabricas[f][Auto1F])) occupied[Fabricas[f][Auto1F]] = true;
		if(IsValidVehicle(Fabricas[f][Auto2F])) occupied[Fabricas[f][Auto2F]] = true;
	}
	for(new a; a < sizeof(VehiculoCarrera); a++) if(IsValidVehicle(VehiculoCarrera[a])) occupied[VehiculoCarrera[a]] = true;
	for(new i = 1; i <= 13; i++) occupied[i] = true;
	foreach(new v : Vehicle)
	{
		if(VehiculosInfo[v][vcomprable] == 1 && GetDistanceVehAC(v) > 5) Respawnear(v);
		if(VehiculosInfo[v][vfaccion] == 1 || VehiculosInfo[v][SpawnManual] == 1) occupied[v] = true;
		if(v > AUTOS)
		{
			if(!occupied[v])
			{
				printf("Vehiculo respawneado id: %d", v);
				MotorAuto[v] = 0;
				//DestroyVehicle(v);
				//Iter_SafeRemove(Vehicle,v,v);
				//new idx = v;
				//Iter_SafeRemove(Vehicle, idx, v);
				DestroyVehicle(v);
			}
		}
	}
}


task Horno[30000]()
{
	if(UsarAntiClones) AntiClones();
	foreach(new f : Fabricas)
	{
		for(new a = 0; a < 3; a++)
		{
		    if(HornoEncendido[a][f] > 0)
			{
				new tanque[3],string[360];
				switch(a)
				{
				    case 0: tanque[0] = 0, tanque[1] = 1, tanque[2] = 2;
				    case 1: tanque[0] = 3, tanque[1] = 4, tanque[2] = 5;
				    case 2: tanque[0] = 6, tanque[1] = 7, tanque[2] = 8;
				}
				if(Fabricas[f][Porcentaje][a] < 99)
				{
		   			if(Fabricas[f][pTanque][tanque[0]] != 0) Fabricas[f][pTanque][tanque[0]] --,ActualizarLabelTanque(f,tanque[0]);
		   			else if(Fabricas[f][pTanque][tanque[1]] != 0) Fabricas[f][pTanque][tanque[1]] --,ActualizarLabelTanque(f,tanque[1]);
		   			else if(Fabricas[f][pTanque][tanque[2]] != 0) Fabricas[f][pTanque][tanque[2]] --,ActualizarLabelTanque(f,tanque[2]);
		     		else
		     		{
					    HornoEncendido[a][f] = 0;
						DestroyDynamicObjectEx(Fabricas[f][humo][a]);
		     		}
					Fabricas[f][Porcentaje][a] ++;
				}
				else
				{
					Fabricas[f][Porcentaje][a] = 100;
    				Fabricas[f][Crisol][a] = 1;
				    HornoEncendido[a][f] = 0;
					Fabricas[f][Porcentaje][a] = 0;
					GuardarFabrica(f);
					DestroyDynamicObjectEx(Fabricas[f][humo][a]);
				}
				format(string,sizeof(string),""CR"Cocina: #%d"CB"\nProducci�n: {3d83ce}%d%%"CB" completada.\nEstado: %s"CB"\n\n%s"CB"%s",a+1,Fabricas[f][Porcentaje][a],EstadoH(HornoEncendido[a][f]),EstadoHo(HornoEncendido[a][f]),EstadoCristal(Fabricas[f][Crisol][a]));
				UpdateDynamic3DTextLabelText(Fabricas[f][olla][a], COLOR_BLANCO, string);
			}
   		}
	}
}

static ActualizarLabelTanque(f,i)
{
	new string[300];
	format(string,sizeof(string),"{3399FF}Tanque de almacenaje de qu�micos"CB"\nCapacidad ocupada: "CR"%d%%"CB"\nCocina:"CR" #%d",Fabricas[f][pTanque][i],ObtenerCocina(i));
	UpdateDynamic3DTextLabelText(Fabricas[f][LTanque][i], COLOR_BLANCO, string);
	return 1;
}

static FabricaPickup(f)
{
	new icon;
	DestroyDynamicPickupEx(Fabricas[f][pPickup]);
	Fabricas[f][RojoPick] = 0;
	if(Fabricas[f][pBanda] == 0) icon = 1273;
	else
	{
		if(Fabricas[f][TiempoSoborno] > gettimeVariable) icon = 19524;
		else Fabricas[f][RojoPick] = 1,icon = 19522;
	}
	Fabricas[f][pPickup] = CreateDynamicPickup(icon,1,Fabricas[f][pEntradaX],Fabricas[f][pEntradaY],Fabricas[f][pEntradaZ],0);
	return 1;
}

static CheckSoborno(f)
{
	
	if(Fabricas[f][pBanda] > 0)
	{
		if(gettimeVariable > Fabricas[f][TiempoSoborno])
		{
			if(Fabricas[f][RojoPick] == 0) FabricaPickup(f);
		}
	}
	
	return 1;
}

static CheckDesalojo(f)
{
	new cont,cont2;
	for(new a = 0; a < 11; a++)
	{
		if(Fabricas[f][TieneActor][a] != 0)
		{
            if(Fabricas[f][EstadoActor][a] == 1) cont++;
			cont2++;
		}
	}
	if(cont == cont2)
	{
		new query[300];
	    Fabricas[f][pBanda] = 0;
		BorrarStatsFabrica(f);
		GuardarFabrica(f);
		mysql_format(Conecction, query,sizeof(query),"UPDATE `fabricas` SET `BandaID`='0' WHERE `ID`='%d' LIMIT 1",Fabricas[f][pID]);
		mysql_tquery(Conecction, query);
		mysql_format(Conecction, query,sizeof(query),"UPDATE `fabricas` SET `EnVenta`='1', `EnUso`='0' WHERE `ID`='%d' LIMIT 1",Fabricas[f][pID]);
		mysql_tquery(Conecction, query);
	}
	return 1;
}



public OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid, bodypart)
{
	if(AntiBypass)
	{
		if(GetPlayerScore(playerid) == 0) return ExpulsarJugador(playerid, "Error (1896)");
	}



	if(IsPlayerAndroid(damagedid) && IsPlayerConnected(damagedid) && weaponid != 0)
	{
		RestarVida(damagedid,amount);
	}




	return 1;
}
public OnPlayerGiveDamageDynamicActor(playerid, actorid, Float:amount, weaponid, bodypart)
{
	if(FaccLegal(playerid))
	{
		foreach(new f : Fabricas)
		{
			for(new a = 0; a < 11; a++)
			{
				if(actorid == Fabricas[f][ActorFabrica][a])
				{
					if(gettimeVariable > Fabricas[f][TiempoSoborno])
					{
						if(Fabricas[f][EstadoActor][a] == 0)
						{
							ApplyDynamicActorAnimation(Fabricas[f][ActorFabrica][a],"WUZI","CS_Dead_Guy", 4.1,1,0,0,1,0);
							Fabricas[f][EstadoActor][a] = 1;
							if(a > 0 && a < 6)
							{
								Fabricas[f][StatoCuoco][a-1] = 3;
								ActualizarLabelMoledores(f,a-1);
							}
							CheckDesalojo(f);
						}
					}
				}
			}
		}
	}
	if(PlayerTemp[playerid][TieneEncargo] > 0)
	{
		if(actorid == Encargo[PlayerTemp[playerid][TieneEncargo]][Objetivo] && IsValidDynamicActor(Encargo[PlayerTemp[playerid][TieneEncargo]][Objetivo]) && Encargo[PlayerTemp[playerid][TieneEncargo]][ObjetivoTake] == 1)
		{
			ApplyDynamicActorAnimation(Encargo[PlayerTemp[playerid][TieneEncargo]][Objetivo], "WUZI","CS_Dead_Guy", 4.1,1,0,0,1,0);
			Encargo[PlayerTemp[playerid][TieneEncargo]][ObjetivoTake] = 2;
			CrearCheckpoint(Encargo[PlayerTemp[playerid][TieneEncargo]][IdColega],-2157.8093,654.7702,51.9927, 3.0);
			Encargo[PlayerTemp[playerid][TieneEncargo]][SegundosMision] = 300;
			PlayerTextDrawSetString(Encargo[PlayerTemp[playerid][TieneEncargo]][IdCriminal],IndicacionesT[Encargo[PlayerTemp[playerid][TieneEncargo]][IdColega]],Desbug("~g~Huye~w~_en_el_vehiculo_de_tu_colega."));
			PlayerTextDrawSetString(Encargo[PlayerTemp[playerid][TieneEncargo]][IdColega],IndicacionesT[Encargo[PlayerTemp[playerid][TieneEncargo]][IdCriminal]],Desbug("~r~Huye~w~_con_tu_colega."));
			Mensaje(Encargo[PlayerTemp[playerid][TieneEncargo]][IdColega],-1,"Huye en el veh�culo de tu colega, la polic�a los est� buscando.");
			Mensaje(Encargo[PlayerTemp[playerid][TieneEncargo]][IdCriminal],-1,"Huye con tu colega, la polic�a los est� buscando.");
			DarEstrella(Encargo[PlayerTemp[playerid][TieneEncargo]][IdCriminal], 2);
			DarEstrella(Encargo[PlayerTemp[playerid][TieneEncargo]][IdColega], 2);
		}
		if(actorid == Encargo[PlayerTemp[playerid][TieneEncargo]][Objetivo] && IsValidDynamicActor(Encargo[PlayerTemp[playerid][TieneEncargo]][Objetivo]) && Encargo[PlayerTemp[playerid][TieneEncargo]][ObjetivoTake] == 0)
		{
			if(IsValidDynamicActor(Encargo[PlayerTemp[playerid][TieneEncargo]][Actor1])) ApplyDynamicActorAnimation(Encargo[PlayerTemp[playerid][TieneEncargo]][Actor1], "ped","cower", 4.1,1,0,0,1,0);
			if(IsValidDynamicActor(Encargo[PlayerTemp[playerid][TieneEncargo]][Actor2])) ApplyDynamicActorAnimation(Encargo[PlayerTemp[playerid][TieneEncargo]][Actor2], "ped","cower", 4.1,1,0,0,1,0);
			ApplyDynamicActorAnimation(Encargo[PlayerTemp[playerid][TieneEncargo]][Objetivo], "SWEET","Sweet_injuredloop", 4.1,1,0,0,1,0);
			Encargo[PlayerTemp[playerid][TieneEncargo]][ObjetivoTake] = 1;
		}
		if(actorid == Encargo[PlayerTemp[playerid][TieneEncargo]][Actor1] && IsValidDynamicActor(Encargo[PlayerTemp[playerid][TieneEncargo]][Objetivo]))
		{
			ApplyDynamicActorAnimation(Encargo[PlayerTemp[playerid][TieneEncargo]][Actor1], "WUZI","CS_Dead_Guy", 4.1,1,0,0,1,0);
			Encargo[PlayerTemp[playerid][TieneEncargo]][Bajas]++;
		}
		if(actorid == Encargo[PlayerTemp[playerid][TieneEncargo]][Actor2] && IsValidDynamicActor(Encargo[PlayerTemp[playerid][TieneEncargo]][Objetivo]))
		{
			ApplyDynamicActorAnimation(Encargo[PlayerTemp[playerid][TieneEncargo]][Actor2], "WUZI","CS_Dead_Guy", 4.1,1,0,0,1,0);
			Encargo[PlayerTemp[playerid][TieneEncargo]][Bajas]++;
		}
	}
	return true;
}


static OnVehicleHealthChange(playerid,vehicleid,Float:newhealth,Float:oldheatlh)
{
	if(playerid != INVALID_PLAYER_ID && VidaVehiculo[vehicleid] != 0)
	{
		if(VidaVehiculo[vehicleid] < newhealth  && !IsPlayerNPC(playerid) && newhealth != 375.0)
		{
		    new string[145];
		    if(!IsPlayerInPaint(playerid) && !IsPlayerInTransfender(playerid))
		    {
      			if(newhealth > 1000)
	        	{
					format(string,sizeof(string),"[!]"CB" El anticheat ha detectado que el usuario "CR"%s(ID:%d)"CB" tiene mas de 1000 de vida en veh�culos. (N:%d- %dhs)",NombreJugador(playerid),playerid,PlayerInfo[playerid][jNivel],PlayerInfo[playerid][horasjugadas]);
					MensajeAdmin(COLOR_CHEAT, string, 3);
					SetVehicleHealthAC(vehicleid, oldheatlh);
					ExpulsarJugador(playerid,"Mas de 1000 de vida en vehiculos.");
     				return 1;
	        	}
				if(TimerRC[playerid] < gettimeVariable)
				{
				   	//format(string,sizeof(string),"[!]"CB" El anticheat ha detectado que el usuario us� RC "CR"%s(ID:%d)"CB" - Nivel: %d - RC VH: %f - %f",NombreJugador(playerid),playerid,GetPlayerScore(playerid),VidaVehiculo[vehicleid],newhealth);
					//MensajeAdmin(COLOR_CHEAT, string, 3);
					format(string,sizeof(string),"El jugador {FF3300}%s(ID: %d)"CB" fue expulsado por el anticheat. Raz�n:{FF3300} Repair Car (971)"CB".",NombreJugador(playerid),playerid);
					MensajedeCheater(string);
					SetVehicleHealthAC(vehicleid, oldheatlh);
					ExpulsarJugador(playerid,"Repair Car.");
					return 1;
				}
		    }
		}
	}
	VidaVehiculo[vehicleid] = newhealth;
	return true;
}

IsPlayerInPaint(playerid)
{
	
    for(new i; i < sizeof(paynspray); i++)
    {
    	if(EstaEn(playerid, 70, paynspray[i][0], paynspray[i][1], paynspray[i][2])) return true;
	}
	return false;
}





IsPlayerInTransfender(playerid)
{
	if(EstaEn(playerid,20,-1936.1331,239.1335,34.3217)) return true;
	if(EstaEn(playerid,20,-2715.7805,217.4583,4.3305)) return true;
	if(EstaEn(playerid,20,1041.3293,-1026.3267,32.1016)) return true;
	if(EstaEn(playerid,20,2644.7444,-2038.8055,13.5500)) return true;
	if(EstaEn(playerid,20,2386.2405,1043.2152,10.8203)) return true;
	new interior = GetPlayerInterior(playerid);
	if(interior == 1 && EstaEn(playerid,20.0,617.5380,-1.9900,1000.6829))	return true;	//Transfender
	if(interior == 2 && EstaEn(playerid,20.0,616.7820,-74.815,997.6350))	return true;	//Loco Low
	if(interior == 3 && EstaEn(playerid,20.0,615.2851,-124.2390,997.6350))	return true;	//Wheel Arch Angels
	return false;
}

static DarObjetoBaul(playerid,baul)
{
	switch(baul)
	{
		case 1000: { SetPlayerAttachedObject(playerid,4,2060,6, 0.265999,0.002999,0.034000,107.000038,178.100204,175.399856,0.388000,0.463999,0.587999); Objeto[playerid] = 1000; }
		case 1001: { SetPlayerAttachedObject(playerid,4,3800,6, 0.262000,0.070999,0.021000,106.599998,-1.999999,171.599975,0.372999,0.239999,0.166000); Objeto[playerid] = 1001;  }
		case 1002: { SetPlayerAttachedObject(playerid,4,2900,6, 0.256000,0.074999,0.019000,94.400001,0.000000,1.300018,0.376999,0.207000,0.164999); Objeto[playerid] = 1002; }
		case 1429: { SetPlayerAttachedObject(playerid,4,1429,5, -0.045800, 0.189297, 0.213481, 276.266876, 0.722662, 119.390830, 0.825105, 0.976897, 0.840149 ); Objeto[playerid] = 1429; SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY); }
		case 1518: { SetPlayerAttachedObject(playerid,4,1518,5, -0.035699, 0.228443, 0.209540, 278.555969, 357.488067, 106.670646, 0.932163, 0.899836, 0.902104 ); Objeto[playerid] = 1518; SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY); }
		case 2912: { SetPlayerAttachedObject(playerid,4,2912,5, -0.143977, 0.171898, -0.158107, 8.848129, 16.818716, 3.184455, 0.555940, 0.397590, 1.000000 ); Objeto[playerid] = 2912; SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY); }
		case 2190: { SetPlayerAttachedObject(playerid,4,2190,5, -0.358281, -0.002825, 0.023657, 285.520538, 355.671569, 107.623764, 1.000000, 1.000000, 1.000000 ); Objeto[playerid] = 2190; SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY); }
		case 1788: { SetPlayerAttachedObject(playerid,4,1788,5, 0.004669, 0.026491, 0.180251, 283.267181, 347.590423, 108.920188, 1.000000, 1.000000, 1.000000 ); Objeto[playerid] = 1788; SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY); }
		case 1790: { SetPlayerAttachedObject(playerid,4,1790,5, 0.036196, 0.060064, 0.137536, 281.493682, 354.646545, 110.527542, 1.000000, 1.000000, 1.000000 ); Objeto[playerid] = 1790; SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY); }
		case 2028: { SetPlayerAttachedObject(playerid,4,2028,5, -0.025814, 0.044218, 0.205650, 283.869171, 351.121704, 2.281757, 1.000000, 1.000000, 1.000000 ); Objeto[playerid] = 2028; SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY); }
		case 2226: { SetPlayerAttachedObject(playerid,4,2226,5, -0.025814, 0.044218, 0.205650, 283.869171, 351.121704, 2.281757, 1.000000, 1.000000, 1.000000 ); Objeto[playerid] = 2226; SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY); }
		case 1650: { SetPlayerAttachedObject(playerid,4,1650,5,0.125999,0.011999,0.000000,-4.999999,-98.099983,16.600004,1.000000,1.000000,1.000000); Bidon[playerid] = 1; }
		case 2404: { SetPlayerAttachedObject(playerid,4,2404,6,0.103999,0.036000,-0.127999,175.999954,-157.499877,174.199905,0.620001,0.515000,0.856000); Objeto[playerid] = 2404; }
		case 1210: { SetPlayerAttachedObject(playerid,4,1210,6, 0.289999, 0.079999, -0.000000, 0.000000, -100.000000, 1.000000); Objeto[playerid] = 1210; }
		case 2405: { SetPlayerAttachedObject(playerid,4,2405,6,0.103999,0.036000,-0.127999,175.999954,-157.499877,174.199905,0.620001,0.515000,0.856000); Objeto[playerid] = 2405; }
		case 9003: { SetPlayerAttachedObject(playerid,4,19468,5, 0.126999,-0.089000,0.127998,101.199981,-164.499847,82.999900,1.032001,0.972000,1.002997); AguaBalde[playerid] = 1; Objeto[playerid] = 9003; SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY); }
		case 10000: { SetPlayerAttachedObject(playerid,4,2969,6, 0.137999,0.039999,-0.168998,66.699996,-162.999877,-95.900085,0.533998,0.622999,0.756998); Objeto[playerid] = 10000; SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY); }
		case 10001: { SetPlayerAttachedObject(playerid,4,2969,6, 0.137999,0.039999,-0.168998,66.699996,-162.999877,-95.900085,0.533998,0.622999,0.756998); Objeto[playerid] = 10001; SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY); }
		case 10002: { SetPlayerAttachedObject(playerid,4,2969,6, 0.137999,0.039999,-0.168998,66.699996,-162.999877,-95.900085,0.533998,0.622999,0.756998); Objeto[playerid] = 10002; SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY); }
		case 10003: { SetPlayerAttachedObject(playerid,4,2969,6, 0.137999,0.039999,-0.168998,66.699996,-162.999877,-95.900085,0.533998,0.622999,0.756998); Objeto[playerid] = 10003; SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY); }
		case 10004: { SetPlayerAttachedObject(playerid,4,19571,6, 0.263000,0.039999,-0.141999,116.299987,-76.799858,136.799835,0.800998,1.016000,0.866998); Objeto[playerid] = 10004; SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY); }
		case 19317: { SetPlayerAttachedObject(playerid,4,19317,6,0.103999,0.036000,-0.127999,175.999954,-157.499877,174.199905,0.620001,0.515000,0.856000); Objeto[playerid] = 19317; }
		case 19318: { SetPlayerAttachedObject(playerid,4,19318,6,0.103999,0.036000,-0.127999,175.999954,-157.499877,174.199905,0.620001,0.515000,0.856000); Objeto[playerid] = 19318; }
		case 18634: {SetPlayerAttachedObject(playerid,4,18634,6,0.074999,0.014999,-0.002000,90.999969,-104.199966,7.999999,1.000000,1.000000,1.000000); Objeto[playerid] = 18634; }
	}
}

static MostrarMenu(playerid,menu)
{
	new prendas[4], p_e, pe[5] = 0;
	MarcadoMenu[playerid] = 0;
	PlayerTextDrawSetString(playerid, TextoMenu[playerid], "Prendas");
	for(new a = 0; a < 4; a++)
	{
		prendas[a] = 19382;
		switch(menu)
		{
		    case 1: PlayerTextDrawSetString(playerid, TextoMenu[playerid], "Selecciona la puerta"),prendas[a] = CasaRobo[playerid][a];
		    case 2: prendas[a] = PlayerInfo[playerid][pObj][a];
			case 9: prendas[a] = PlayerInfo[playerid][pObj][a];
		    case 3,4,8,10:
			{
				if(UsandoObj[a][playerid] == 1 && p_e == 0) prendas[a] = PlayerInfo[playerid][pObj][a],p_e = 1,pe[a] = 1;
		    	if(UsandoObj[a][playerid] == 1 && pe[a] == 0) prendas[a] = PlayerInfo[playerid][pObj][a];
	  		}
		    case 5: PlayerTextDrawSetString(playerid, TextoMenu[playerid], "Selecciona tu objetivo"),prendas[a] = PescaM[playerid][a];
		    case 6: PlayerTextDrawSetString(playerid, TextoMenu[playerid], "Selecciona la roca"),prendas[a] = RocasM[playerid][a];
		    case 7: PlayerTextDrawSetString(playerid, TextoMenu[playerid], "Uniformes"),prendas[a] = UniformeM[playerid][a];
		}
		MarcadoMenu[playerid] = menu;
		TextDrawShowForPlayer(playerid,BoxMenu);
		PlayerTextDrawShow(playerid,TextoMenu[playerid]);
		PlayerTextDrawSetPreviewModel(playerid,SelectionTD[playerid][a], prendas[a]);
		PlayerTextDrawShow(playerid,SelectionTD[playerid][a]);
		PlayerTextDrawShow(playerid,CerrarPrenda[playerid]);
	 	SelectTextDraw(playerid,0x272828FF);
 	}
 	return 1;
}

ptask IconUpdate[20000](playerid)
{
	
	/*if(PlayerConectado(playerid))
	{*/
	if(ViendoGPS[playerid] == 1 && !IsPlayerPaused(playerid)) MapIcons(playerid);
	if(TAXI(GetPlayerVehicleID(playerid)) && GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) Taximetro(playerid);
	//}
	
}

static Taximetro(i)
{
	if(TAXI(GetPlayerVehicleID(i)) && GetPlayerState(i) == PLAYER_STATE_PASSENGER && Taxista[i] != INVALID_PLAYER_ID && IsPlayerConnected(i))
	{
		if(PlayerInfo[i][jDinero] >= Ficha[Taxista[i]])
		{
			new cuenta,string[15];
			cuenta = Monto[Taxista[i]]+Ficha[Taxista[i]];
			QuitarDinero(i, Ficha[Taxista[i]]);
			DarDinero(Taxista[i],Ficha[Taxista[i]]);
			Monto[Taxista[i]] = cuenta;
			format(string,sizeof string,"$%s",ConvertirNumero(Monto[Taxista[i]]));
			TextDrawSetString(TAXIMET2[i], string);
			TextDrawSetString(TAXIMET2[Taxista[i]], string);
		}
		else
		{
			Mensaje(i,-1,"Te has quedado sin dinero para pagar el taxi.");
			Mensaje(Taxista[i],-1,"Tu pasajero se ha quedado sin dinero.");
			RemovePlayerFromVehicle(i);
		}
	}
	return 1;
}

static MapIcons(u)
{
	if(ViendoGPS[u] == 1)
	{
		if(PlayerCheckPoint[u][cpX] != 0)
		{
			new i = (MAX_ICONS-1);
			floatMapa3Da2D(PlayerCheckPoint[u][cpX],PlayerCheckPoint[u][cpY], 360.000000, 26.000000,256.000000,256.000000, GPSPOS[i][0], GPSPOS[i][1]);
			CrearPlayerIconoGPS(u, i, GPSPOS[i][0], GPSPOS[i][1], 0xAA0000FF);
		}
		else if(PlayerCheckPoint[u][cpX] == 0)
		{
 		   new i = (MAX_ICONS-1);
		   if(TDPGPSCreado[u][i] == 1) BorrarPlayerIconoGPS(u,i);
		}
	}
	return 1;
}

Funcion:CreateIconsGPS()
{
	new Float:DyGPSPos[2];
	TDGPSCreadoS = 0;
	for(new i; i < sizeof(MapIconPos); i++)
	{
		if(MapIconPos[i][GPSIconTipo] == 1)
		{
			floatMapa3Da2D(MapIconPos[i][GPSIconPos_X],MapIconPos[i][GPSIconPos_Y], 360.000000, 26.000000,256.000000,256.000000, GPSPOS[i][0], GPSPOS[i][1]);
			CrearIconoGPS(TDGPSCreadoS, GPSPOS[i][0], GPSPOS[i][1], "hud:radar_gangY");
		}
	}
	for(new i = 0; i < sizeof(DynamicHousesInfo); i++)
	{
	    if(DynamicHousesInfo[i][int_Tipo] == DH_TIPO_LOVE)
	    {
	        floatMapa3Da2D(DynamicHousesInfo[i][int_Pickup_X], DynamicHousesInfo[i][int_Pickup_Y], 360.000000, 26.000000,256.000000,256.000000, GPSPOS[i][0], GPSPOS[i][1]);
			CrearIconoGPS(TDGPSCreadoS, GPSPOS[i][0], GPSPOS[i][1], "hud:radar_girlfriend");
        }
        if(DynamicHousesInfo[i][int_Tipo] == DH_TIPO_SPRAY)
	    {
	        floatMapa3Da2D(DynamicHousesInfo[i][int_Pickup_X], DynamicHousesInfo[i][int_Pickup_Y], 360.000000, 26.000000,256.000000,256.000000, GPSPOS[i][0], GPSPOS[i][1]);
			CrearIconoGPS(TDGPSCreadoS, GPSPOS[i][0], GPSPOS[i][1], "hud:radar_spray");
        }
		if(DynamicHousesInfo[i][int_Tipo] == DH_TIPO_COMISARIA)
		{
			floatMapa3Da2D(DynamicHousesInfo[i][int_Pickup_X], DynamicHousesInfo[i][int_Pickup_Y], 360.000000, 26.000000,256.000000,256.000000, GPSPOS[i][0], GPSPOS[i][1]);
			CrearIconoGPS(TDGPSCreadoS, GPSPOS[i][0], GPSPOS[i][1], "hud:radar_police");
		}
		if(DynamicHousesInfo[i][int_Tipo] == DH_TIPO_HOSPITAL)
		{
			floatMapa3Da2D(DynamicHousesInfo[i][int_Pickup_X], DynamicHousesInfo[i][int_Pickup_Y], 360.000000, 26.000000,256.000000,256.000000, GPSPOS[i][0], GPSPOS[i][1]);
			CrearIconoGPS(TDGPSCreadoS, GPSPOS[i][0], GPSPOS[i][1], "hud:radar_hostpital");
		}
		if(DynamicHousesInfo[i][int_Tipo] == DH_TIPO_PIZZERIA)
		{
			floatMapa3Da2D(DynamicHousesInfo[i][int_Pickup_X], DynamicHousesInfo[i][int_Pickup_Y], 360.000000, 26.000000,256.000000,256.000000, GPSPOS[i][0], GPSPOS[i][1]);
			CrearIconoGPS(TDGPSCreadoS, GPSPOS[i][0], GPSPOS[i][1], "hud:radar_pizza");
		}
		if(DynamicHousesInfo[i][int_Tipo] == DH_TIPO_TIENDA)
		{
			floatMapa3Da2D(DynamicHousesInfo[i][int_Pickup_X], DynamicHousesInfo[i][int_Pickup_Y], 360.000000, 26.000000,256.000000,256.000000, GPSPOS[i][0], GPSPOS[i][1]);
			CrearIconoGPS(TDGPSCreadoS, GPSPOS[i][0], GPSPOS[i][1], "hud:radar_tshirt");
		}
		if(DynamicHousesInfo[i][int_Tipo] == DH_TIPO_BANCO)
		{
			floatMapa3Da2D(DynamicHousesInfo[i][int_Pickup_X], DynamicHousesInfo[i][int_Pickup_Y], 360.000000, 26.000000,256.000000,256.000000, GPSPOS[i][0], GPSPOS[i][1]);
			CrearIconoGPS(TDGPSCreadoS, GPSPOS[i][0], GPSPOS[i][1], "hud:radar_cash");
		}
	}
	floatMapa3Da2D(1656.1246,-1883.6947, 360.000000, 26.000000,256.000000,256.000000, DyGPSPos[0], DyGPSPos[1]);
	CrearIconoGPS(TDGPSCreadoS,DyGPSPos[0], DyGPSPos[1], "hud:radar_impound");
	floatMapa3Da2D(2127.5342,-1123.4701, 360.000000, 26.000000,256.000000,256.000000, DyGPSPos[0], DyGPSPos[1]);
	CrearIconoGPS(TDGPSCreadoS,DyGPSPos[0], DyGPSPos[1], "hud:radar_impound");
	floatMapa3Da2D(557.6544,-1260.8588, 360.000000, 26.000000,256.000000,256.000000, DyGPSPos[0], DyGPSPos[1]);
	CrearIconoGPS(TDGPSCreadoS,DyGPSPos[0], DyGPSPos[1], "hud:radar_impound");
	floatMapa3Da2D(-1989.7445,288.3349, 360.000000, 26.000000,256.000000,256.000000, DyGPSPos[0], DyGPSPos[1]);
	CrearIconoGPS(TDGPSCreadoS,DyGPSPos[0], DyGPSPos[1], "hud:radar_impound");
	floatMapa3Da2D(1464.9510,-1780.9888, 360.000000, 26.000000,256.000000,256.000000, DyGPSPos[0], DyGPSPos[1]);
	CrearIconoGPS(TDGPSCreadoS,DyGPSPos[0], DyGPSPos[1], "hud:radar_impound");
	floatMapa3Da2D(1790.4875,-1291.0826, 360.000000, 26.000000,256.000000,256.000000, DyGPSPos[0], DyGPSPos[1]);
	CrearIconoGPS(TDGPSCreadoS,DyGPSPos[0], DyGPSPos[1], "hud:radar_runway");
	floatMapa3Da2D(-1618.9741,56.8790, 360.000000, 26.000000,256.000000,256.000000, DyGPSPos[0], DyGPSPos[1]);
	CrearIconoGPS(TDGPSCreadoS,DyGPSPos[0], DyGPSPos[1], "hud:radar_truck");
	floatMapa3Da2D(113.9482,-151.5917, 360.000000, 26.000000,256.000000,256.000000, DyGPSPos[0], DyGPSPos[1]);
	CrearIconoGPS(TDGPSCreadoS,DyGPSPos[0], DyGPSPos[1], "hud:radar_modGarage");
	floatMapa3Da2D(2229.6833,-1721.4192, 360.000000, 26.000000,256.000000,256.000000, DyGPSPos[0], DyGPSPos[1]);
	CrearIconoGPS(TDGPSCreadoS,DyGPSPos[0], DyGPSPos[1], "hud:radar_gym");
	floatMapa3Da2D(2362.7573,2306.3086, 360.000000, 26.000000,256.000000,256.000000, DyGPSPos[0], DyGPSPos[1]);
	CrearIconoGPS(TDGPSCreadoS,DyGPSPos[0], DyGPSPos[1], "hud:radar_gangN");
}

Funcion:OnCheatDetected(playerid, ip_address[], type, code, code2)
{
	if(IsPlayerNPC(playerid)) return 1;
    //if(type) BlockIpAddress(ip_address, 100);
    else
    {
		new string[144];
		if(PlayerInfo[playerid][pAdmin] >= ADMIN_LVL_JUEGO1) return 1;
		if(JugadorLogeado[playerid] != 1) return 1;
		if(code == 4 && PlayerInfo[playerid][jNivel] > 5) return 1;
		if(code == 3 && PlayerInfo[playerid][jNivel] > 5 || code == 3 && IsPlayerAndroid(playerid)) return 1;
		if(code == 10 && GetVehicleModel(GetPlayerVehicleID(playerid)) == 520) return 1;
		if(code == 47 && GetPlayerWeapon(playerid) == 1) return 1;
		if(PlayerTemp[playerid][CheatDetectado] == 0)
		{
			format(string,sizeof(string),"[!]"CB" El anticheat ha detectado que el usuario "Rojo"%s(ID:%d)"CB" us� %s - C�digo: %d",NombreJugador(playerid),playerid,NombreCheat(code),code);
   			MensajeAdmin(COLOR_CHEAT, string, 3);
			PlayerTemp[playerid][CheatDetectado] = 1;
			format(string,sizeof(string),"Anticheat - C�digo: %d",code);
			ExpulsarJugador(playerid, string);
	    }
	}
	return 1;
}

static SalirTuning(playerid)
{
	EnTuning[playerid] = false;
	MostrarVelocimetro(playerid);
	GetVehicleParamsEx(TuningVehiculo[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(TuningVehiculo[playerid], 1, lights, alarm, doors, bonnet, boot, objective);
	MotorAuto[TuningVehiculo[playerid]] = 1;
	SetVehicleVirtualWorld(TuningVehiculo[playerid], 0);
	SetPlayerVirtualWorld(playerid, 0);
	SetVehiclePosAC(TuningVehiculo[playerid], 1147.5715,1351.7931,10.5474 + 3);
	SetVehicleZAngle(TuningVehiculo[playerid], 2.3420);
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) PutPlayerInVehicleAC(playerid, TuningVehiculo[playerid],0);
	SetCameraBehindPlayer(playerid);
	return 1;
}

static Bidones(playerid)
{
	foreach(new f : Fabricas)
	{
		if(PlayerInfo[playerid][jMiembro] == Fabricas[f][pBanda])
		{
			if(QuimicosActivo[f] != 0)
			{
				new asd, asd2;
				if(QuimicosActivo[f] == 1) asd = 0,asd2 = 6;
				if(QuimicosActivo[f] == 2) asd = 5,asd2 = 10;
				if(QuimicosActivo[f] == 3) asd = 10,asd2 = 15;
				if(QuimicosActivo[f] == 4) asd = 15,asd2 = 20;
				if(QuimicosActivo[f] == 5) asd = 20,asd2 = 25;
				if(QuimicosActivo[f] == 6) asd = 25,asd2 = 30;
				for(new i = asd; i < asd2; i++)
				{
					if(EstaEn(playerid,2.0,QuimicosSpawn[i][0], QuimicosSpawn[i][1], QuimicosSpawn[i][2]))
					{
						if(IsValidDynamicObject(MetaCompra[i]))
						{
							switch(TieneBarril[playerid])
							{
								case 0:
								{
									TieneBarril[playerid] = 1;
									DestroyDynamicObjectEx(MetaCompra[i]);
									UpdateDynamic3DTextLabelText(MetaCompraText[i], COLOR_BLANCO, "");
									LCaja(playerid);
									SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
									AccionesRol(playerid,"levant� un tanque de qu�micos.", 20);
									Mensaje(playerid,-1,"Pulsa "CR"'H'"CB" para dejar el tanque sobre el veh�culo de la f�brica");
									SetPlayerAttachedObject(playerid, 4, 3632, 1, 0.216000, 0.365000, -0.032000, 0.000000, 0.000000, 0.000000, 0.667000, 0.651999, 0.568000);
									return 1;
								}
								case 1: Mensaje(playerid,-1,"Descarga el barril que llevas en las manos para poder agarrar otro.");
							}
				  		}
					}
				}
			}
			break;
		}
	}
	return 1;
}

Funcion:ComenzarConquista(playerid,asd)
{
	new mensaje[160],mensaje2[160], mensaje3[160], mensaje4[160],zone[MAX_ZONE_NAME], integrantes;
	foreach(new t : Player)
	{
		if(PlayerInfo[t][jMiembro] == PlayerInfo[playerid][jMiembro] && PlayerInfo[t][jNivel] > 2)
		{
			if(IsPlayerInDynamicArea(t, Tdata[asd][tzone]) && !IsPlayerInAnyVehicle(t) && !IsPlayerPaused(t) && PlayerInfo[t][Agonizando] == 0 && VariableCaido[t] == 0) integrantes++;
		}
	}
	if(integrantes >= 3)
	{
		GetPlayer2DZone(playerid, zone, MAX_ZONE_NAME);
		Tdata[asd][tsegundos] = gettimeVariable + 360;
		Tdata[asd][ttime] = gettimeVariable + 600;
		BandasInfo[PlayerInfo[playerid][jMiembro]][ctime] = gettimeVariable + 300;
		Tdata[asd][tactiva] = PlayerInfo[playerid][jMiembro];
		format(mensaje,sizeof(mensaje),"{%s}[Banda]"CB" Tu banda inici� una conquista de territorio en %s.",BandasInfo[PlayerInfo[playerid][jMiembro]][BColor],zone);
		format(mensaje2,sizeof(mensaje2),"{%s}[Banda]"CB" La banda {%s}'%s'"CB" comenz� a atacar tu territorio en %s.",BandasInfo[Tdata[asd][tBanda]][BColor],BandasInfo[Tdata[asd][tactiva]][BColor],BandasInfo[Tdata[asd][tactiva]][BNombre],zone);
		
		format(mensaje3,sizeof(mensaje3),"{4286f4}[Central polic�a]"CB" %s inici� una conquista de territorio en %s.",BandasInfo[Tdata[asd][tactiva]][BNombre], zone);

		foreach(new t : Player)
		{
			if(FaccLegal(t) && FaccLegal2(t)) Mensaje(t,-1, mensaje3); 
			if(PlayerInfo[t][jMiembro] > 2 && ShowTerritorio[t] == 1) GangZoneFlashForPlayer(t,Tdata[asd][tCreate],((BandasInfo[PlayerInfo[playerid][jMiembro]][BColor2] & ~0xFF) | 0x50));
			if(PlayerInfo[t][jMiembro] > 2 && PlayerInfo[t][jMiembro] != Tdata[asd][tactiva])
			{
				format(mensaje4,sizeof(mensaje4),"{%s}[Banda]"CB" La banda '%s' comenz� a atacar un territorio de '%s' en %s.",BandasInfo[PlayerInfo[t][jMiembro]][BColor],BandasInfo[Tdata[asd][tactiva]][BNombre],BandasInfo[Tdata[asd][tBanda]][BNombre],zone);
				Mensaje(t,-1,mensaje4);
			}
			if(PlayerInfo[t][jMiembro] == PlayerInfo[playerid][jMiembro])
			{
				Mensaje(t,-1,mensaje);
				if(IsPlayerInDynamicArea(t, Tdata[asd][tzone]))
				{
					if(!IsPlayerPaused(t) && PlayerInfo[t][Agonizando] == 0 && VariableCaido[t] == 0 && PlayerInfo[t][jNivel] > 2) TimerConquista(t,asd);
				}
			}
			if(PlayerInfo[t][jMiembro] == Tdata[asd][tBanda]) Mensaje(t,-1,mensaje2);
		}
		return 1;
	}
	else Mensaje(playerid,-1,"Necesitas estar con al menos 3 miembros para iniciar una conquista.");
	return 1;
}

Funcion:TimerConquista(playerid,asd)
{
	if(PlayerConectado(playerid) && PlayerInfo[playerid][Agonizando] == 0 && VariableCaido[playerid] == 0)
	{
		if(gettimeVariable < Tdata[asd][tsegundos])
		{
			if(IsPlayerInDynamicArea(playerid, Tdata[asd][tzone]))
			{
				if(Tdata[asd][tactiva] != 0)
				{
					new stringtime[55],time = Tdata[asd][tsegundos]-gettimeVariable;
					format(stringtime, 100, "Conquista:_%d:%d",time/60,time%(60));
					PlayerTextDrawSetString(playerid,IndicacionesT[playerid],stringtime);
					TextDrawShowForPlayer(playerid,MisionT2[5]);
					PlayerTextDrawShow(playerid,IndicacionesT[playerid]);
					SetTimerEx("TimerConquista", 1000, false, "ii", playerid, asd);
					return 1;
				}
			}
			else Mensaje(playerid,-1,"Has {FF0000}abandonado"CB" el territorio."),PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
		}
		TextDrawHideForPlayer(playerid,MisionT2[5]);
		PlayerTextDrawHide(playerid,IndicacionesT[playerid]);
	}
	return 1;
}

Funcion:Conquistado(chupala)
{
	new mensaje[160],mensaje2[160],integrantes = 0,logro = 0,msj[10],asd = Tdata[chupala][tBanda];
	foreach(new t : Player)
	{
        if(!IsPlayerInAnyVehicle(t) && !IsPlayerPaused(t) && PlayerInfo[t][jNivel] > 2)
        {
			if(PlayerInfo[t][jMiembro] == Tdata[chupala][tactiva] && IsPlayerInDynamicArea(t, Tdata[chupala][tzone]) && PlayerInfo[t][Agonizando] == 0 && VariableCaido[t] == 0) integrantes++;
		}
	}
	if(gettimeVariable < Tdata[chupala][tsegundos]) { if(integrantes >= 3) return 1; }
	else
	{
		if(integrantes >= 3)
		{
			logro = 1;
			Tdata[chupala][tBanda] = Tdata[chupala][tactiva];
			GuardarTerritorio(chupala);
		}
	}
	switch(logro)
	{
		case 0: msj = "no logr�";
		case 1: msj = "logr�";
	}
	format(mensaje,sizeof(mensaje),"{%s}[Banda]"CB" Tu banda %s conquistar el territorio de {%s}'%s'"CB".",BandasInfo[Tdata[chupala][tactiva]][BColor],msj,BandasInfo[asd][BColor],BandasInfo[asd][BNombre]);
	format(mensaje2,sizeof(mensaje2),"{%s}[Banda]"CB" La banda {%s}'%s'"CB" %s conquistar tu territorio.",BandasInfo[asd][BColor],BandasInfo[Tdata[chupala][tactiva]][BColor],BandasInfo[Tdata[chupala][tactiva]][BNombre],msj);
	foreach(new t : Player)
	{
		if(PlayerInfo[t][jMiembro] > 2 && ShowTerritorio[t] == 1)
		{
			GangZoneStopFlashForPlayer(t,Tdata[chupala][tCreate]);
			if(logro == 1)
			{
				GangZoneHideForPlayer(t,Tdata[chupala][tCreate]);
				GangZoneShowForPlayer(t,Tdata[chupala][tCreate],((BandasInfo[Tdata[chupala][tactiva]][BColor2] & ~0xFF) | 0x50));
			}
		}
		if(PlayerInfo[t][jMiembro] == Tdata[chupala][tactiva]){

			if(IsPlayerInDynamicArea(t, Tdata[chupala][tzone]) && PlayerInfo[t][Agonizando] == 0 && VariableCaido[t] == 0  && logro == 1)
			{
				RegaloRandomConquista(t);
			}
			Mensaje(t,-1,mensaje);

		} 
		if(PlayerInfo[t][jMiembro] == asd) Mensaje(t,-1,mensaje2);
	}
	Tdata[chupala][tactiva] = 0;
	return 1;
}

static SpawnFabrica(playerid)
{
	MarcadoMedicos[playerid] = 0;
	foreach(new f : Fabricas)
	{
		if(PlayerInfo[playerid][jMiembro] == Fabricas[f][pBanda])
		{
			if(Fabricas[f][TieneActor][0] != 0)
			{
				Mensaje(playerid,-1,"Fuiste trasladado a la {f8345c}f�brica"CB" y el {20c126}m�dico"CB" te est� atendiendo.");
				new x = random(4);
				switch(x)
				{
					case 0:
					{
			  			SetPosEx(playerid,-2020.5188,217.8162,1035.8162,356.8376,Fabricas[f][pInt],Fabricas[f][pVW]);
			  			SetDynamicActorPos(Fabricas[f][ActorFabrica][0],-2021.9110,217.5005,1035.8162);
						SetDynamicActorFacingAngle(Fabricas[f][ActorFabrica][0], 314.3846);
			    	}
			    	case 1:
				   	{
			   			SetPosEx(playerid,-2016.1354,217.8139,1035.8162,4.0443,Fabricas[f][pInt],Fabricas[f][pVW]);
			  			SetDynamicActorPos(Fabricas[f][ActorFabrica][0],-2005.8960,217.4496,1035.8162);
						SetDynamicActorFacingAngle(Fabricas[f][ActorFabrica][0], 42.7454);
			    	}
			    	case 2:
			    	{
			   			SetPosEx(playerid,-2012.3738,217.8155,1035.8162,356.8609,Fabricas[f][pInt],Fabricas[f][pVW]);
			   			SetDynamicActorPos(Fabricas[f][ActorFabrica][0],-2010.2089,217.4500,1035.8162);
						SetDynamicActorFacingAngle(Fabricas[f][ActorFabrica][0], 62.4855);
				   	}
				   	case 3:
				   	{
			   			SetPosEx(playerid,-2008.2267,217.8161,1035.8162,0.6210,Fabricas[f][pInt],Fabricas[f][pVW]);
			   			SetDynamicActorPos(Fabricas[f][ActorFabrica][0],-2014.4325,217.5275,1035.8162);
						SetDynamicActorFacingAngle(Fabricas[f][ActorFabrica][0], 44.3120);
				    }
		    	}
			    DarPrendas(playerid);
    			EstablecerVida(playerid,4.0);
				TextDrawHideForPlayer(playerid,Sangre);
				TextDrawHideForPlayer(playerid,MisionT2[5]);
				PlayerTextDrawHide(playerid,IndicacionesT[playerid]);
				PlayerInfo[playerid][Agonizando] = 0;
				LlamadaMedicos[playerid] = 0;
				VariableCaido[playerid] = 0;
				Esposando[playerid] = 0;
				FabCurando[playerid] = SetTimerEx("CurandoFabrica",2000,true,"d",playerid);
				PlayerTemp[playerid][CurandoFab] = 1;
				SetPlayerColor(playerid,COLORCARGO0);
				return 1;
 			}
			break;
		}
 	}
	return 1;
}

Funcion:MostrarBoxMedico(playerid)
{
    new string[360],string2[95], string3[130], string4[130], medicos = 0;
	medicos = GetMedicos();
    if(medicos == 0) { format(string3,sizeof(string3),"\n"CR"- "CB"Solicitar servicio m�dico\tUn m�dico ir� a buscarte\t"CR"No"CB""); }
    else { format(string3,sizeof(string3),"\n"CR"- "CB"Solicitar servicio m�dico\tUn m�dico ir� a buscarte {FFFB00}(%d en servicio)"CB"\t"CR"No"CB"",medicos); }
	format(string4,sizeof(string4),"\n{52b4be}-"CB" Ir al hospital\tTranslado directo al hospital\t"CR"Si"CB"");
	if(PlayerInfo[playerid][jMiembro] > 2)
	{
		foreach(new f : Fabricas)
		{
			if(PlayerInfo[playerid][jMiembro] == Fabricas[f][pBanda])
			{
				if(Fabricas[f][TieneActor][0] != 0)
				{
					if(EstaEn(playerid,1000.0,Fabricas[f][pEntradaX],Fabricas[f][pEntradaY],Fabricas[f][pEntradaZ]) || EstaEn(playerid,500.0,Fabricas[f][pSalidaX],Fabricas[f][pSalidaY],Fabricas[f][pSalidaZ]))
					{
						if(Fabricas[f][EstadoActor][0] == 0) { format(string2,sizeof(string2),"\n"CR"- "CB"Atenci�n clandestina\tTranslado directo a tu f�brica\t\t"CR"No"CB""); }
					}
				}
				break;
			}
		}
	}
	format(string,sizeof(string),"Acci�n\tDetalles\tP�rdida de armas\n%s%s%s",string3,string4,string2);
	
	MostrarDialog(playerid, MMEDICO, DIALOG_STYLE_TABLIST_HEADERS, "Necesitas atenci�n m�dica, selecciona una opci�n.", string, "Aceptar","Cancelar");
	TextDrawHideForPlayer(playerid,MisionT2[5]);
	PlayerTextDrawHide(playerid,IndicacionesT[playerid]);
	return 1;
}


static MostrarInfoVehiculo(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    ShowTDN(playerid,"Compraste un vehiculo, ahora comprale una traba de seguridad en algun ~g~24/7 ~w~para que no te lo roben.");
	}
	return 1;
}

static CompraAnim(playerid)
{
	new actor;
	foreach(new i : Actores)
	{
	    if(ActorData[i][ValidActor] > 0)
	    {
		   	actor = ActorData[i][ActorPlayer];
		    if(IsValidDynamicActor(actor))
			{
			    new Float:x,Float:y,Float:z;
	    		GetDynamicActorPos(actor, x,y,z);
				if(IsPlayerInRangeOfPoint(playerid,10.0,x,y,z))
				{
				    if(GetDynamicActorVirtualWorld(actor) == GetPlayerVirtualWorld(playerid))
				    {
						if(ActorData[actor][RoboEstado] == 0) ApplyDynamicActorAnimation(actor,"BAR","Barserve_give", 4.000000, 0, 0, 0, 0, 0);
						break;
					}
				}
			}
		}
	}
}

static CerrarGPS(playerid)
{
	if(ViendoGPS[playerid] == 0) return Mensaje(playerid, -1, "Actualmente no estas viendo tu GPS.");
    ViendoGPS[playerid] = 0;
	if(PlayerPoint[playerid] == 1) PlayerTextDrawDestroy(playerid, PlayerGPS[playerid]),PlayerPoint[playerid] = 0;
	for(new i = 0; i < 4; i++) TextDrawHideForPlayer(playerid, MapaLateral[i]);
	for(new i = 0; i < TDGPSCreadoS; i++) TextDrawHideForPlayer(playerid, TextDGPS[i]);
	//new h = GetPlayerPoolSize();
	//for(new i = 0; i < h; i++) { BorrarPlayerIconoGPS(playerid,i); }
	BorrarPlayerIconoGPS(playerid,MAX_ICONS-1);
	if(SedOculta[playerid] == 1) BarraHambre(playerid, 1),BarraSed(playerid, 1);
	return 1;
}

static AbrirGPS(playerid)
{
	if(ViendoGPS[playerid] == 1) return Mensaje(playerid, -1, "Ya estas viendo tu GPS, usa "CR"/ocultar gps"CB".");
 	if(gettimeVariable < vemapa[playerid]) return Mensaje(playerid, -1, "Espera unos segundos e intenta nuevamente.");
	vemapa[playerid] = gettimeVariable + 7;
	BarraHambre(playerid, 2);
	BarraSed(playerid, 2);
	for(new i = 0; i < 4; i++) TextDrawShowForPlayer(playerid, MapaLateral[i]);
	for(new i = 0; i < TDGPSCreadoS; i++) TextDrawShowForPlayer(playerid, TextDGPS[i]);
	if(PlayerInfo[playerid][VIP] == 0) Mensaje(playerid, -1, "Usa "CR"/ocultar gps"CB" para quitar el mapa.");
	else Mensaje(playerid, -1, "Usa "CR"/ocultar gps"CB" o el bot�n "CR"'N'"CB" para quitar el mapa.");
	ViendoGPS[playerid] = 1;
	PlayerPlaySound(playerid,1083,0.0,0.0,0.0);
	PointUpdate(playerid);
	MapIcons(playerid);
	return 1;
}



static ForzarCerradura(playerid)
{
	new string[128],Float:Pos[3],casa, tiempo;
	GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	if(EstaEn(playerid, 2.0,-2277.1763,-9.9763,38.2523)) casa = 0;
	else if(EstaEn(playerid, 2.0,932.2239,1973.6547,11.6083)) casa = 1;
	else if(EstaEn(playerid, 2.0,-2393.9712,-13.1641,35.3125)) casa = 2;
	else if(EstaEn(playerid, 2.0,2373.8467,-1139.5442,30.0510)) casa = 3;
	else if(EstaEn(playerid, 2.0,-2727.5435,-50.9449,7.0301)) casa = 4;
	else if(EstaEn(playerid, 2.0,-2727.5054,-155.6168,7.2009)) casa = 5;
	else if(EstaEn(playerid, 2.0,1762.8772,-2101.1462,13.9916)) casa = 6;
	else if(EstaEn(playerid, 2.0,2485.1733,-1997.1724,13.9166)) casa = 7;
	else if(EstaEn(playerid, 2.0,1844.5101,770.9579,11.4838)) casa = 8;
	else if(EstaEn(playerid, 2.0,-1448.9193,2647.9514,56.4912)) casa = 9;
	else if(EstaEn(playerid, 2.0,1344.6938,2610.3264,11.5494)) casa = 10;
	else if(EstaEn(playerid, 2.0,1666.2400, 2610.7400, 10.4000)) casa = 11;
	switch(PlayerInfo[playerid][pNivelLadron])
	{
	    case 1: tiempo = 20;
		case 2: tiempo = 16;
   		default: tiempo = 12;
	}
	if(Forzada[casa] == 0)
	{
		TimerForzado[playerid] = gettimeVariable + tiempo;
		Forzada[casa] = 1;
		UpdateDynamic3DTextLabelText(EscaparLabel[casa], COLOR_BLANCO, "");
		switch(PlayerInfo[playerid][pNivelLadron])
		{
			case 1:
			{
				SetPlayerAttachedObject(playerid,4,18635,6,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);
				LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 0);
				//foreach(new i : Player) { if(EstaEn(i,15.0,Pos[0],Pos[1],Pos[2]) && ShowSound[i] == 1) PlayAudioStreamForPlayer(i,"https://"URL"/Golpes.mp3",Pos[0],Pos[1],Pos[2],50.0,1); }
			}
			case 2:
			{
				SetPlayerAttachedObject(playerid,4,18634,6,0.074999,0.014999,-0.002000,90.999969,-104.199966,7.999999,1.000000,1.000000,1.000000);
				LoopingAnim(playerid, "BASEBALL", "bat_part", 4.0, 1, 1, 1, 1, 0);
		  		foreach(new i : StreamedPlayer[playerid]) { if(EstaEn(i,15.0,Pos[0],Pos[1],Pos[2]) && ShowSound[i] == 1) PlayAudioStreamForPlayer(i,"https://"URL"/Barreta.mp3",Pos[0],Pos[1],Pos[2],50.0,1); }
			}
			default:
			{
				SetPlayerAttachedObject(playerid,4,18644,6,0.073999,0.022000,0.000000,-167.300018,0.000000,0.000000,1.000000,1.000000,1.000000);
				LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 0);
		  		foreach(new i : StreamedPlayer[playerid]) { if(EstaEn(i,15.0,Pos[0],Pos[1],Pos[2]) && ShowSound[i] == 1) PlayAudioStreamForPlayer(i,"https://"URL"/Destornillador.mp3",Pos[0],Pos[1],Pos[2],50.0,1); }
			}
		}
		SetTimerEx("Forzado",tiempo*1000,false,"dd",playerid, casa);
		SetTimerEx("CargarCasa",1800000,false,"d",casa);
		format(string, sizeof(string), "%s comienz� a forzar la cerradura.", NombreJugador(playerid));
		va_SendClientMessage(playerid,-1,"Forzando cerradura, espera "CR"%d segundos"CB".",tiempo);
		ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
	}
	else return Mensaje(playerid,-1,"Los vecinos est�n alertados, vuelve m�s tarde.");
	return 1;
}

Funcion:Forzado(playerid, casa)
{
	new intento;
	switch(PlayerInfo[playerid][pNivelLadron])
	{
		case 1: intento = random(3);
		case 2: intento = random(2);
		case 3: return LogroForzar(playerid,1,casa);
	}
	if(intento == 1) LogroForzar(playerid,1,casa);
	else LogroForzar(playerid,2,casa);
	return 1;
}

Funcion:AbrirPuerta(casa)
{
	switch(casa)
	{
		case 0: MoveDynamicObjectEx(PuertaRobo[0], -2277.5667, -9.4666, 37.2482, 100.0, 0.0000, 0.0000, 184.9418);
		case 1: MoveDynamicObjectEx(PuertaRobo[1], 931.2819, 1974.0637, 10.6143, 100.0, 0.0000, 0.0000, 165.7200);
		case 2:	MoveDynamicObjectEx(PuertaRobo[2], -2394.8667, -12.3576, 34.2706, 100.0, 0.0000, 0.0000, 177.3064);
		case 3: MoveDynamicObjectEx(PuertaRobo[3],2373.0024, -1138.5510, 29.0312, 100.0, 0.0000, 0.0000, 87.0000);
		case 4:	MoveDynamicObjectEx(PuertaRobo[4],-2728.5708, -50.4009, 6.0173, 100.0, 0.0000, 0.0000, 179.7599);
		case 5:	MoveDynamicObjectEx(PuertaRobo[5],-2728.5442, -155.0267, 6.2020, 100.0, 0.0000, 0.0000, 178.0000);
		case 6:	MoveDynamicObjectEx(PuertaRobo[6],1762.12488, -2100.72290, 12.96590, 100.0, 0.00000, 0.00000, 178.00000);
		case 7:	MoveDynamicObjectEx(PuertaRobo[7],2484.4492, -1996.0295, 13.2080, 100.0,   0.00000, 0.00000, 80.52003);
		case 8:	MoveDynamicObjectEx(PuertaRobo[8],1844.1000, 770.1200, 10.4400, 100.0, 0.0000, 0.0000, 181.0000);
		case 9: MoveDynamicObjectEx(PuertaRobo[9],-1449.1982, 2647.2046, 55.4890, 100.0,   0.00000, 0.00000,  197.2201);
		case 10: MoveDynamicObjectEx(PuertaRobo[10],1343.9200, 2610.7400, 10.4000, 100.0, 0.0000, 0.0000, 98.0000);
		case 11: MoveDynamicObjectEx(PuertaRobo[11],1666.2400, 2610.7400, 10.4000, 100.0, 0.0000, 0.0000, 86.0000);
	}
	CasaAbierta[casa] = 1;
	return 1;
}

Funcion:CerrarPuerta(casa)
{
	switch(casa)
	{
		case 0: MoveDynamicObjectEx(PuertaRobo[0],-2277.5667, -9.4666, 37.2482, 100.0, 0.0000, 0.0000, 269.1064);
		case 1: MoveDynamicObjectEx(PuertaRobo[1], 931.28186, 1974.06372, 10.61430, 100.0, 0.00000, 0.00000, 0.00000);
		case 2: MoveDynamicObjectEx(PuertaRobo[2],-2394.86670, -12.35760, 34.27060, 100.0,  0.00000, 0.00000, 269.82654);
		case 3: MoveDynamicObjectEx(PuertaRobo[3],2373.0024, -1138.5510, 29.0312, 100.0, 0.0000, 0.0000, 0.0000);
		case 4: MoveDynamicObjectEx(PuertaRobo[4],-2728.5708, -50.4009, 6.0173, 100.0, 0.0000, 0.0000, 269.9401);
		case 5: MoveDynamicObjectEx(PuertaRobo[5],-2728.5442, -155.0267, 6.2020, 100.0, 0.0000, 0.0000, 269.8600);
		case 6: MoveDynamicObjectEx(PuertaRobo[6],1762.12488, -2100.72290, 12.96590, 100.0, 0.00000, 0.00000, 0.00000);
		case 7: MoveDynamicObjectEx(PuertaRobo[7],2484.4492, -1996.0295, 13.2080, 100.0, 0.0000, 0.0000,0.1800);
		case 8: MoveDynamicObjectEx(PuertaRobo[8],1844.1000, 770.1200, 10.4400, 100.0, 0.0000, 0.0000, 90.0000);
		case 9: MoveDynamicObjectEx(PuertaRobo[9],-1449.19824, 2647.20459, 55.48900, 100.0,  0.00000, 0.00000, 90.00000);
		case 10: MoveDynamicObjectEx(PuertaRobo[10],1343.9200, 2610.7400, 10.4000, 100.0, 0.0000, 0.0000, 0.0000);
		case 11: MoveDynamicObjectEx(PuertaRobo[11],1666.2400, 2610.7400, 10.4000, 100.0, 0.0000, 0.0000, 0.0000);
	}
	UpdateDynamic3DTextLabelText(EscaparLabel[casa], COLOR_BLANCO, ""CB"Escribe"CR" /escapar"CB" para salir de la casa.");
	CasaAbierta[casa] = 0;
	return 1;
}

static MenuBailarinas(playerid)
{
	new mensaje[600];
	format(mensaje, sizeof(mensaje), "Bailarina\tAfinidad\tCosto\n"CB"%s\t%s\t"CR"%s"CB"\n%s\t%s\t"CR"%s"CB"\n%s\t%s\t"CR"%s"CB"\n%s\t%s\t"CR"%s"CB"\n%s\t%s\t"CR"%s"CB"\n%s\t%s\t"CR"%s"CB"",Bailarinas(0),AfinidadNivel(playerid,0),AfinidadPrecio(playerid,0),Bailarinas(1),AfinidadNivel(playerid,1),AfinidadPrecio(playerid,1),Bailarinas(2),AfinidadNivel(playerid,2),AfinidadPrecio(playerid,2),Bailarinas(3),AfinidadNivel(playerid,3),AfinidadPrecio(playerid,3),Bailarinas(4),AfinidadNivel(playerid,4),AfinidadPrecio(playerid,4),Bailarinas(5),AfinidadNivel(playerid,5),AfinidadPrecio(playerid,5));
	MostrarDialog(playerid, DCLUB, DIALOG_STYLE_TABLIST_HEADERS,"Entrar a la sala privada con...", mensaje, "Entrar", "Cancelar");
	return 1;
}

static BailarinaPrecio(id)
{
	new precio;
	switch(id)
	{
	    case 0,1: precio = 5000;
		case 2: precio = 3000;
		case 3: precio = 4500;
		case 4: precio = 4000;
		case 5: precio = 5000;
	}
	return precio;
}

static DarOferta(playerid,ID)
{
	TiempoOferta[ID] = gettimeVariable + 60;
	TiempoVenta[playerid] = gettimeVariable + 60;
	return 1;
}

static TerminarOferta(playerid)
{
	armaofertada[playerid] = 0;
	dineropedido[playerid] = 0;
	CrackOfrecidos[playerid] = 0;
	MedicamentosOfrecidos[playerid] = 0;
	MarihuanaOfrecida[playerid] = 0;
	PiezasOfrecidas[playerid] = 0;
	EVOfrecidos[playerid] = 0;
	CROfrecidos[playerid] = 0;
	TipoOferta[playerid] = 0;
	ofertador[playerid] = INVALID_PLAYER_ID;
	return 1;
}

static AvisoVenta(playerid,ID,tipo,monto,precio)
{
	new IsP[40],IsP2[40],prod[13],string[200];
	GetPlayerIp(playerid,IsP,sizeof(IsP));
	GetPlayerIp(ID,IsP2,sizeof(IsP2));
	switch(tipo)
	{
		case 0: prod = ""Moneda4"";
		case 1: prod = "crack";
		case 2: prod = "medicamentos";
		case 3: prod = "marihuana";
	    case 4: prod = ""Moneda2"";
	    case 5: prod = "piezas";
	    case 6: prod = "arma";
	}
	format(string, 200, "Notificaci�n: Jugador %s (ID: %d | Nivel: %d) ofrece %s %s por $%s a %s (ID: %d | Nivel: %d)", NombreJugador(playerid),playerid,PlayerInfo[playerid][jNivel],ConvertirNumero(monto),prod,ConvertirNumero(precio),NombreJugador(ID),ID,PlayerInfo[ID][jNivel]);
	if(strcmp(IsP,IsP2,true) == 0) MensajeAdmin(COLOR_CHEAT, string, 5);
	else MensajeAdmin(COLOR_CHEAT, string, 4);
	return 1;
}

static LogVenta(playerid,type)
{
	new Query[250],cant,ip = 0,IsP[40],IsP2[40];
	if(type == 6) type = 7;
	switch(type)
	{
		case 0: cant = CROfrecidos[playerid];
		case 1: cant = CrackOfrecidos[playerid];
		case 2: cant = MedicamentosOfrecidos[playerid];
		case 3: cant = MarihuanaOfrecida[playerid];
	    case 4: cant = EVOfrecidos[playerid];
	    case 5: cant = PiezasOfrecidas[playerid];
	    case 7: cant = HongosOfrecidos[playerid];
	    case 8: cant = CocainaOfrecida[playerid];
	}
	GetPlayerIp(playerid,IsP,sizeof(IsP));
	GetPlayerIp(ofertador[playerid],IsP2,sizeof(IsP2));
	if(strcmp(IsP,IsP2,true) == 0) ip = 1;
	mysql_format(Conecction, Query, sizeof(Query), "INSERT INTO `log_ventas` (Vendedor, item, cantidad, precio, comprador, fecha, ip) VALUES ('%d','%d','%d','%d','%d',CURRENT_TIMESTAMP(),'%d')",PlayerInfo[ofertador[playerid]][p_DBID],type,cant,dineropedido[playerid],PlayerInfo[playerid][p_DBID],ip);
	mysql_tquery(Conecction, Query);
	return 1;
}

static ObtenerBailarina(id)
{
	new nombre[30];
	switch(id)
	{
 		case 0: nombre = "Gat�bela";
		case 1: nombre = "Bailarina Ardiente";
 		case 2: nombre = "Gordita Sensual";
		case 3: nombre = "Poli-Bailarina";
		case 4: nombre = "Colegiala";
 		case 5: nombre = "Chocolatita";
	}
	return nombre;
}

static Bailarinas(id)
{
	new texto[70];
	if(Bailarina[id] == 0) format(texto,sizeof(texto),"{faafff}%s"CB"",ObtenerBailarina(id));
 	else format(texto,sizeof(texto),""CR"%s"CB"",ObtenerBailarina(id));
	return texto;
}

static AfinidadNivel(playerid,id)
{
	new NombreFinal[50];
	if(Afinidad[id][playerid] < 45) format(NombreFinal, sizeof(NombreFinal), ""CB"Baja"CB"");
 	else if(Afinidad[id][playerid] >= 45 && Afinidad[id][playerid] < 78) NombreFinal = ""CB"Media"CB"";
  	else if(Afinidad[id][playerid] >= 78) NombreFinal = ""CB"Alta"CB"";
	return NombreFinal;
}

static AfinidadPrecio(playerid,id)
{
	new precio[50];
	if(Afinidad[id][playerid] < 45) format(precio, sizeof(precio),""CR"$%d"CB"",BailarinaPrecio(id));
   	if(Afinidad[id][playerid] >= 45 && Afinidad[id][playerid] < 78) format(precio, sizeof(precio),""CR"$%d"CB"",BailarinaPrecio(id)/2);
   	if(Afinidad[id][playerid] >= 78) format(precio, sizeof(precio),""CR"$%d"CB"",BailarinaPrecio(id)/3);
	return precio;
}
/*
static GetSexo(var, tipo = 1)
{
	new str[32];
	switch(var)
	{
		case 0: if(tipo == 1) str = "Masculino"; else str = "Hombre";
		case 1: if(tipo == 1) str = "Femenino"; else str = "Mujer";
	}
	return str;
}*/

Funcion:ProtePerdida(playerid)
{
	if(GuardaEspalda[playerid] != INVALID_PLAYER_ID) GuardaEspalda[playerid] = INVALID_PLAYER_ID;
}
/*
Funcion:CodigoRopa(playerid,idjugador)
{
	if(!EnBinco(playerid) && !EnZIP(playerid) && !EnVictim(playerid) && !EnSubUrban(playerid) && !EnDidierSachs(playerid) && !EnProLaps(playerid)) return 1;
	if(cache_num_rows() > 0)
	{
		new skinid, precio, sexo, tienda[16],fechas[3],id_db,invalido = 0;
		getdate(fechas[0], fechas[1], fechas[2]);
		cache_get_value_name_int(0, "SkinID",skinid),
		cache_get_value_name_int(0, "Precio", precio);
		cache_get_value_name_int(0, "ID", id_db);
		cache_get_value_name_int(0, "Sexo", sexo),
		cache_get_value_name(0, "Tienda", tienda);
		if(EnBinco(playerid) && strcmp(tienda, "Binco", true) != 0) invalido = 1;
		if(EnZIP(playerid) && strcmp(tienda, "ZIP", true) != 0) invalido = 1;
		if(EnVictim(playerid) && strcmp(tienda, "Victim", true) != 0) invalido = 1;
		if(EnSubUrban(playerid) && strcmp(tienda, "SubUrban", true) != 0) invalido = 1;
		if(EnDidierSachs(playerid) && strcmp(tienda, "DidierSachs", true) != 0) invalido = 1;
		if(EnProLaps(playerid) && strcmp(tienda, "ProLaps", true) != 0) invalido = 1;
		if(idjugador != PlayerInfo[playerid][p_DBID]+1329771+fechas[2]) invalido = 1;
		if(invalido == 1)
		{
			Mensaje(playerid,-1,"El c�digo es incorrecto o esta tienda no vende esa ropa.");
			Mensaje(playerid,-1,"Verifica la informaci�n en https://"WebName"");
			return 1;
		}
		if(FaccLegal(playerid)) return Mensaje(playerid,-1, "No puedes comprar ropa estando de servicio.");
		if(PlayerInfo[playerid][jDinero] < precio) return Mensaje(playerid,-1,"No tienes el dinero suficiente.");
		if(sexo != PlayerInfo[playerid][jSexo])	return va_SendClientMessage(playerid,-1,"Este conjunto es solo para %s",GetSexo(sexo,2));
		new Query[250];
		Mensaje(playerid, -1, "Ropa cambiada correctamente.");
		PlayerInfo[playerid][jRopa] = skinid;
		SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]);
		mysql_format(Conecction, Query, sizeof(Query), "UPDATE `usuarios` SET `Skin`='%d' WHERE `ID`='%d'",skinid,PlayerInfo[playerid][p_DBID]);
		mysql_tquery(Conecction, Query);
		mysql_format(Conecction2, Query, sizeof(Query), "UPDATE `smf_members` SET avatar='%d.png' WHERE `UserID`='%d'",skinid,PlayerInfo[playerid][p_DBID]);
		mysql_tquery(Conecction2, Query);
		QuitarDinero(playerid, precio);
	}
	return 1;
}*/

Funcion:CargarCasa(casa)
{
	if(casa == 0)
	{
		if(!IsValidDynamicObject(ObjetoRobo[0])) ObjetoRobo[0] = CreateDynamicObject(1429, -2280.60376, -14.82680, 38.03000,   0.00000, 0.00000, 70.61990);
		if(!IsValidDynamicObject(ObjetoRobo[1])) ObjetoRobo[1] = CreateDynamicObject(1518, -2280.63721, -16.44526, 38.05420,   0.00000, 0.00000, 120.36000);
		if(!IsValidDynamicObject(ObjetoRobo[2])) ObjetoRobo[2] = CreateDynamicObject(2912, -2278.36792, -14.86620, 37.29990,   0.00000, 0.00000, -1.62000);
		if(!IsValidDynamicObject(ObjetoRobo[3])) ObjetoRobo[3] = CreateDynamicObject(2190, -2280.72827, -15.26394, 37.77455,   0.00000, 0.00000, 50.69999);
		if(!IsValidDynamicObject(ObjetoRobo[4])) ObjetoRobo[4] = CreateDynamicObject(1788, -2280.53418, -16.19723, 37.44304,   0.00000, 0.00000, -49.37999);
		if(!IsValidDynamicObject(ObjetoRobo[5])) ObjetoRobo[5] = CreateDynamicObject(1790, -2280.39893, -14.92786, 37.45214,   0.00000, 0.00000, 88.37997);
		if(!IsValidDynamicObject(ObjetoRobo[6])) ObjetoRobo[6] = CreateDynamicObject(2028, -2278.22900, -16.77450, 37.40304,  0.00000, 0.00000, 0.00000);
	}
	if(casa == 1)
	{
		if(!IsValidDynamicObject(ObjetoRobo[7])) ObjetoRobo[7] = CreateDynamicObject(1429, 942.56305, 1976.67395, 11.34690, 0.00000, 0.00000, -62.10000);
		if(!IsValidDynamicObject(ObjetoRobo[8])) ObjetoRobo[8] = CreateDynamicObject(1518, 942.44531, 1974.96301, 11.42232, 0.00000, 0.00000, -112.56001);
		if(!IsValidDynamicObject(ObjetoRobo[9])) ObjetoRobo[9] = CreateDynamicObject(2912, 939.79364, 1974.82947, 10.62529, 0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[10])) ObjetoRobo[10] = CreateDynamicObject(1788, 942.32104, 1976.73279, 10.83022, 0.00000, 0.00000, -85.32000);
		if(!IsValidDynamicObject(ObjetoRobo[11])) ObjetoRobo[11] = CreateDynamicObject(1790, 942.38721, 1975.06116, 10.73031, 0.00000, 0.00000, -90.17999);
		if(!IsValidDynamicObject(ObjetoRobo[12])) ObjetoRobo[12] = CreateDynamicObject(2028, 940.09308, 1977.05005, 10.82510, 0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[13])) ObjetoRobo[13] = CreateDynamicObject(2190, 939.99139, 1977.32190, 11.11951, 0.00000, 0.00000, 0.00000);
	}
	if(casa == 2)
 	{
		if(!IsValidDynamicObject(ObjetoRobo[14])) ObjetoRobo[14] = CreateDynamicObject(1429, -2394.00562, -15.47150, 36.23100,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[15])) ObjetoRobo[15] = CreateDynamicObject(1518, -2395.78857, -15.53133, 36.23100,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[16])) ObjetoRobo[16] = CreateDynamicObject(2912, -2395.92505, -19.09909, 34.42548,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[17])) ObjetoRobo[17] = CreateDynamicObject(2190, -2394.71484, -15.21817, 35.98800,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[18])) ObjetoRobo[18] = CreateDynamicObject(1788, -2395.75928, -15.45650, 35.19190,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[19])) ObjetoRobo[19] = CreateDynamicObject(2028, -2394.01709, -15.45650, 35.19190,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[20])) ObjetoRobo[20] = CreateDynamicObject(1790, -2394.86279, -15.45650, 35.19190,  0.00000, 0.00000, 0.00000);
 	}
	if(casa == 3)
	{
		if(!IsValidDynamicObject(ObjetoRobo[21])) ObjetoRobo[21] = CreateDynamicObject(1429, 2368.61401, -1131.40259, 30.97320, 0.00000, 0.00000, 160.32001);
		if(!IsValidDynamicObject(ObjetoRobo[22])) ObjetoRobo[22] = CreateDynamicObject(1518, 2370.30200, -1131.43127, 30.97320, 0.00000, 0.00000, 201.35999);
		if(!IsValidDynamicObject(ObjetoRobo[23])) ObjetoRobo[23] = CreateDynamicObject(2912, 2370.40674, -1129.14221, 28.96821, 0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[24])) ObjetoRobo[24] = CreateDynamicObject(2190, 2369.12378, -1131.64221, 30.68020, 0.00000, 0.00000, 164.82001);
		if(!IsValidDynamicObject(ObjetoRobo[25])) ObjetoRobo[25] = CreateDynamicObject(1788, 2368.51880, -1131.42798, 29.94000, 0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[26])) ObjetoRobo[26] = CreateDynamicObject(2028, 2370.12720, -1131.46106, 29.94000, 0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[27])) ObjetoRobo[27] = CreateDynamicObject(1790, 2369.39893, -1131.51331, 29.46600, 0.00000, 0.00000, 0.00000);
	}
	if(casa == 4)
	{
		if(!IsValidDynamicObject(ObjetoRobo[28])) ObjetoRobo[28] = CreateDynamicObject(1429, -2730.06982, -59.74450, 7.20490, 0.00000, 0.00000, 196.14000);
		if(!IsValidDynamicObject(ObjetoRobo[29])) ObjetoRobo[29] = CreateDynamicObject(1518, -2731.72534, -59.64209, 7.20490, 0.00000, 0.00000, 178.20003);
		if(!IsValidDynamicObject(ObjetoRobo[30])) ObjetoRobo[30] = CreateDynamicObject(2912, -2731.85327, -57.35418, 6.03176, 0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[31])) ObjetoRobo[31] = CreateDynamicObject(2190, -2731.16846, -59.89901, 6.93235, 0.00000, 0.00000, 174.30002);
		if(!IsValidDynamicObject(ObjetoRobo[32])) ObjetoRobo[32] = CreateDynamicObject(1788, -2730.06030, -59.85120, 6.16510, 0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[33])) ObjetoRobo[33] = CreateDynamicObject(2028, -2730.97656, -59.74975, 6.60280, 0.00000, 0.00000, -2.40000);
		if(!IsValidDynamicObject(ObjetoRobo[34])) ObjetoRobo[34] = CreateDynamicObject(1790, -2731.64380, -59.69650, 6.16510, 0.00000, 0.00000, -5.64000);
	}
	if(casa == 5)
	{
		if(!IsValidDynamicObject(ObjetoRobo[35])) ObjetoRobo[35] = CreateDynamicObject(1429, -2731.07056, -164.54240, 7.68000,   0.00000, 0.00000, 196.80000);
		if(!IsValidDynamicObject(ObjetoRobo[36])) ObjetoRobo[36] = CreateDynamicObject(1518, -2732.74170, -164.46756, 7.68000,   0.00000, 0.00000, 164.58005);
		if(!IsValidDynamicObject(ObjetoRobo[37])) ObjetoRobo[37] = CreateDynamicObject(2912, -2733.24390, -163.87219, 6.20990,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[38])) ObjetoRobo[38] = CreateDynamicObject(2190, -2732.13647, -164.68983, 7.42307,   0.00000, 0.00000, 182.57997);
		if(!IsValidDynamicObject(ObjetoRobo[39])) ObjetoRobo[39] = CreateDynamicObject(1788, -2731.10449, -164.46933, 7.08504,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[40])) ObjetoRobo[40] = CreateDynamicObject(2028, -2731.81323, -164.44690, 6.67120,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[41])) ObjetoRobo[41] = CreateDynamicObject(1790, -2732.57373, -164.33932, 7.12180,  0.00000, 0.00000, 0.00000);
	}
	if(casa == 6)
	{
		if(!IsValidDynamicObject(ObjetoRobo[42])) ObjetoRobo[42] = CreateDynamicObject(1429, 1758.10046, -2094.56860, 14.84190,   0.00000, 0.00000, 181.00000);
		if(!IsValidDynamicObject(ObjetoRobo[43])) ObjetoRobo[43] = CreateDynamicObject(1518, 1757.27979, -2094.54028, 14.86940,   0.00000, 0.00000, 185.00000);
		if(!IsValidDynamicObject(ObjetoRobo[44])) ObjetoRobo[44] = CreateDynamicObject(2912, 1756.40784, -2093.84546, 12.97720,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[45])) ObjetoRobo[45] = CreateDynamicObject(2190, 1756.16321, -2094.66846, 14.58550,   0.00000, 0.00000, 160.00000);
		if(!IsValidDynamicObject(ObjetoRobo[46])) ObjetoRobo[46] = CreateDynamicObject(1788, 1757.77637, -2094.57056, 14.23650,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[47])) ObjetoRobo[47] = CreateDynamicObject(2028, 1756.81677, -2094.56934, 14.25400,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[48])) ObjetoRobo[48] = CreateDynamicObject(1790, 1757.29041, -2094.61108, 13.80020,  0.00000, 0.00000, 0.00000);
	}
	if(casa == 7)
	{
		if(!IsValidDynamicObject(ObjetoRobo[49])) ObjetoRobo[49] = CreateDynamicObject(1429, 2481.20239, -1987.11511, 14.57980,   0.00000, 0.00000, 7.80000);
		if(!IsValidDynamicObject(ObjetoRobo[50])) ObjetoRobo[50] = CreateDynamicObject(1518, 2482.81030, -1987.17395, 14.59980,   0.00000, 0.00000, -11.82000);
		if(!IsValidDynamicObject(ObjetoRobo[51])) ObjetoRobo[51] = CreateDynamicObject(2912, 2483.55371, -1988.90125, 12.62243,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[52])) ObjetoRobo[52] = CreateDynamicObject(2190, 2482.27319, -1986.94861, 14.31840,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[53])) ObjetoRobo[53] = CreateDynamicObject(1788, 2481.10767, -1987.15283, 13.52780,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[54])) ObjetoRobo[54] = CreateDynamicObject(2028, 2481.93018, -1987.23987, 13.08109,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[55])) ObjetoRobo[55] = CreateDynamicObject(1790, 2482.70459, -1987.20215, 13.52780,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[56])) ObjetoRobo[56] = CreateDynamicObject(2226, 2481.90552, -1987.28687, 13.89582,  0.00000, 0.00000, 0.00000);
	}
	if(casa == 8)
	{
		if(!IsValidDynamicObject(ObjetoRobo[57])) ObjetoRobo[57] = CreateDynamicObject(1429, 1841.54749, 768.94519, 12.49500,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[58])) ObjetoRobo[58] = CreateDynamicObject(1518, 1842.49048, 768.88428, 12.51880,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[59])) ObjetoRobo[59] = CreateDynamicObject(2912, 1843.43506, 768.10840, 10.54610,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[60])) ObjetoRobo[60] = CreateDynamicObject(2190, 1843.46643, 769.13379, 12.23620,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[61])) ObjetoRobo[61] = CreateDynamicObject(1788, 1842.00537, 768.90112, 11.88750,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[62])) ObjetoRobo[62] = CreateDynamicObject(2028, 1843.04565, 769.07501, 11.90490,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[63])) ObjetoRobo[63] = CreateDynamicObject(1790, 1842.38196, 769.15088, 11.42320,  0.00000, 0.00000, 0.00000);
	}
	if(casa == 9)
	{
		if(!IsValidDynamicObject(ObjetoRobo[64])) ObjetoRobo[64] = CreateDynamicObject(1429, -1449.86682, 2645.77490, 56.87230,   0.00000, 0.00000, 8.10000);
		if(!IsValidDynamicObject(ObjetoRobo[65])) ObjetoRobo[65] = CreateDynamicObject(1518, -1448.15234, 2645.76807, 56.92000,   0.00000, 0.00000, -20.88000);
		if(!IsValidDynamicObject(ObjetoRobo[66])) ObjetoRobo[66] = CreateDynamicObject(2912, -1450.80640, 2642.91479, 55.52976,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[67])) ObjetoRobo[67] = CreateDynamicObject(2190, -1447.24390, 2643.42358, 56.43425,   0.00000, 0.00000, -115.86000);
		if(!IsValidDynamicObject(ObjetoRobo[68])) ObjetoRobo[68] = CreateDynamicObject(1788, -1448.96399, 2645.68677, 56.28100,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[69])) ObjetoRobo[69] = CreateDynamicObject(2028, -1449.89099, 2645.64771, 55.88598,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[70])) ObjetoRobo[70] = CreateDynamicObject(1790, -1448.14539, 2645.64087, 55.85600,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[71])) ObjetoRobo[71] = CreateDynamicObject(2226, -1449.01904, 2645.76733, 56.64311,  0.00000, 0.00000, 0.00000);
	}
	if(casa == 10)
	{
		if(!IsValidDynamicObject(ObjetoRobo[72])) ObjetoRobo[72] = CreateDynamicObject(1429, 1355.97156, 2613.77515, 12.45300,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[73])) ObjetoRobo[73] = CreateDynamicObject(1518, 1356.83423, 2613.72314, 12.47980,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[74])) ObjetoRobo[74] = CreateDynamicObject(2912, 1354.72119, 2613.42578, 11.02990,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[75])) ObjetoRobo[75] = CreateDynamicObject(2190, 1357.78296, 2613.98975, 12.19500,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[76])) ObjetoRobo[76] = CreateDynamicObject(1788, 1356.28943, 2613.73511, 11.84600,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[77])) ObjetoRobo[77] = CreateDynamicObject(2028, 1357.32434, 2613.74854, 11.86400,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[78])) ObjetoRobo[78] = CreateDynamicObject(1790, 1356.62915, 2613.61646, 11.40970,  0.00000, 0.00000, 0.00000);
	}
	if(casa == 11)
	{
		if(!IsValidDynamicObject(ObjetoRobo[79])) ObjetoRobo[79] = CreateDynamicObject(1429, 1678.29834, 2613.74878, 12.45260,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[80])) ObjetoRobo[80] = CreateDynamicObject(1518, 1679.14563, 2613.73535, 12.48270,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[81])) ObjetoRobo[81] = CreateDynamicObject(2912, 1677.09839, 2613.43970, 11.03870,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[82])) ObjetoRobo[82] = CreateDynamicObject(2190, 1680.08850, 2613.91479, 12.19470,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[83])) ObjetoRobo[83] = CreateDynamicObject(1788, 1678.56201, 2613.76880, 11.84410,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[84])) ObjetoRobo[84] = CreateDynamicObject(2028, 1679.57751, 2613.75708, 11.86450,  0.00000, 0.00000, 0.00000);
		if(!IsValidDynamicObject(ObjetoRobo[85])) ObjetoRobo[85] = CreateDynamicObject(1790, 1678.98792, 2613.76904, 11.41040,  0.00000, 0.00000, 0.00000);
	}
	Forzada[casa] = 0;
	return 1;
}

static TerminarCosecha(playerid,autoid)
{
	DisablePlayerRaceCheckpoint(playerid);
	new Bono = random(6);
	switch(Bono)
	{
		case 0:
		{
			new Pago = random(4);
			switch(Pago)
			{
				case 0: ResetearCosecha(playerid, autoid, 1900, 0);
				case 1: ResetearCosecha(playerid, autoid, 2500, 0);
				case 2: ResetearCosecha(playerid, autoid, 3100, 0);
				case 3: ResetearCosecha(playerid, autoid, 4700, 0);
			}
		}
		case 1: ResetearCosecha(playerid, autoid, 2700, 1);
		case 2: ResetearCosecha(playerid, autoid, 2900, 2);
		case 3: ResetearCosecha(playerid, autoid, 3900, 3);
		case 4: ResetearCosecha(playerid, autoid, 4600, 4);
		case 5: ResetearCosecha(playerid, autoid, 5600, 5);
	}
	BarraJob(playerid,2);
	return 1;
}

static RobarObjeto(playerid)
{
	if(gettimeVariable < RobadoReciente[playerid]) return Mensaje(playerid,-1,"Tu personaje est� cansado, vuelve a intentarlo en unos segundos.");
	if(Objeto[playerid] > 0) return 1;
	for(new i = 0; i < sizeof(ObjetoRobo); i++)
	{
	    if(IsValidDynamicObject(ObjetoRobo[i]))
	    {
			new Float:Pos[3];
			GetDynamicObjectPos(ObjetoRobo[i],Pos[0],Pos[1],Pos[2]);
			if(EstaEn(playerid,10.0,Pos[0],Pos[1],Pos[2]))
	        {
				if(EnLugarRobo(playerid) == 0) return 1;
         		if(CasaAbierta[EnLugarRobo(playerid)-1] == 0) { Mensaje(playerid,-1,"La puerta se ha cerrado, ya no puedes robar mas objetos."); break; }
         		if(PlayerInfo[playerid][jNivel] < 4 && PlayerInfo[playerid][VIP] == 0) { Mensaje(playerid,-1,"Solamente jugadores VIP2 o de nivel 4 en adelante pueden robar casas."); break; }
         		RobadoReciente[playerid] = gettimeVariable + 5;
				DarObjetoBaul(playerid,Streamer_GetIntData(STREAMER_TYPE_OBJECT, ObjetoRobo[i], E_STREAMER_MODEL_ID));
				DestroyDynamicObjectEx(ObjetoRobo[i]);
				Mensaje(playerid,-1,"Tienes que "CR"/baul guardar objeto"CB" en un ba�l y escapar antes que llegue la polic�a.");
				break;
			}
	    }
	}
	return 1;
}

static ComponenteValido(modelid, componentid)
{
	if(400 <= modelid <= 611)
	{
		if(1000 <= componentid <= 1191)
		{
			componentid -= 1000;
			if(ComponentesCheck[(modelid - 400) * 6 + (componentid >>> 5)] & 1 << (componentid & 0b00011111)) return 1;
		}
		if(componentid == 1192 || componentid == 1193) if(modelid == 576) return 1;
	}
	return 0;
}

static CompraPrenda(playerid,slot)
{
	new Query[256];
	//Mensaje(playerid,-1,""CR"�Felicidades!"CB" Compraste una prenda, ahora puedes usar "CR"/prendas");
	ShowTDN(playerid, "~p~Felicidades~w~, compraste una prenda, ahora puedes usar ~p~/prendas~w~.");
	NPrendas[playerid]++;
	UsandoObj[slot][playerid] = 0;
	PlayerInfo[playerid][pObj][slot] = PrendaMarcada[playerid];
	PlayerInfo[playerid][pfOffsetX][slot] = 0.085;
	PlayerInfo[playerid][pfOffsetY][slot] = 0.017999;
	PlayerInfo[playerid][pfOffsetZ][slot] = 0.000999;
	PlayerInfo[playerid][pfRotX][slot] = 87.2;
	PlayerInfo[playerid][pfRotY][slot] = 88.1;
	PlayerInfo[playerid][pfRotZ][slot] = -7.5;
	PlayerInfo[playerid][pfScaleX][slot] = 1;
	PlayerInfo[playerid][pfScaleY][slot] = 1;
	PlayerInfo[playerid][pfScaleZ][slot] = 1;
	mysql_format(Conecction, Query, sizeof(Query), "INSERT INTO `prendas` (`UserID`, `Objeto`, `Slot`, `PrendaPos`) VALUES ('%d', '%d', '%d', 2)", PlayerInfo[playerid][p_DBID], PrendaMarcada[playerid],slot+1);
	mysql_tquery(Conecction, Query);
	if(TipoPrenda[playerid] == 1) return PlayerInfo[playerid][Moneda] -= PRECIO_PRENDAS_WZ;
	if(TipoPrenda[playerid] == 2) return PlayerInfo[playerid][Credits] -= PRECIO_PRENDAS_COINS;
	return 1;
}

static TieneConsumible(playerid)
{
	if(PlayerTemp[playerid][TieneSprunk] == 0 && PlayerTemp[playerid][TienePizza] == 0 && PlayerTemp[playerid][TieneVino] == 0 && PlayerTemp[playerid][TieneAquari] == 0 && PlayerTemp[playerid][TieneCerveza] == 0) return 1;
	return 0;
}

static BaulSlot(id)
{
	new espacio[10];
	switch(id)
	{
		case 1: espacio = "vBaul";
		case 2: espacio = "vBaul2";
  		case 3: espacio = "vBaul3";
    	case 4: espacio = "vBaul4";
		case 5: espacio = "vBaul5";
		case 6: espacio = "vBaul6";
		case 7: espacio = "vBaul7";
		case 8: espacio = "vBaul8";
		case 9: espacio = "vBaul9";
		case 10: espacio = "vBaul10";
 	}
 	return espacio;
}

static CompraSlot(playerid)
{
	new slot = -1;
    for(new i = 0; i < MAX_PAUTOS; i++)
    {
        if(VehicleInfo[playerid][i][vModelo] != 0) continue;
        else
		{
			slot = i;
        	break;
  		}
	}
	return slot;
}

static ObtenerCasas(playerid)
{
	new casas;
    for(new i = 0; i < MAX_PCASAS; i++)
    {
    	if(PlayerInfo[playerid][CasaID][i] == 0) continue;
		else casas++;
    }
	return casas;
}

static SlotPropiedad(playerid)
{
	new slot = -1;
    for(new i = 0; i < MAX_PCASAS; i++)
    {
        if(PlayerInfo[playerid][CasaID][i] != 0) continue;
        else
		{
			slot = i;
        	break;
  		}
	}
	return slot;
}

static ObtenerAutos(playerid)
{
	new vehs;
    for(new i = 0; i < MAX_PAUTOS; i++)
    {
		if(VehicleInfo[playerid][i][vModelo] != 0) vehs++;
    }
	return vehs;
}

static MostrarRopero(playerid)
{
	if(EstaEn(playerid,10,254.2685,-41.5420,1002.0308) && GetPlayerInterior(playerid) == 14)
 	{
 		foreach(new c : Propiedades)
  		{
   			if(GetPlayerVirtualWorld(playerid) == PropInfo[c][pVW])
     		{
       			new total = EspacioRopero(c),ropero[40],ropero2[1000],ropero3[1200];
				format(ropero,sizeof(ropero),""CB"Estanter�a    [Lugares: %d/%d]",total,PropInfo[c][pLugarRopero]);
				if(total > 0)
				{
    				format(ropero2,sizeof(ropero2),"Armas:\n");
				    strcat(ropero3,ropero2);
				    new cosas;
				    if(PropInfo[c][pManopla] > 0)
					{
						format(ropero2,sizeof(ropero2)," "CB"Manopla "CR"x%d {009BE4}||",PropInfo[c][pManopla]);
						strcat(ropero3,ropero2);
						cosas ++;
					}
					if(PropInfo[c][pPaloDeGolf] > 0)
					{
						format(ropero2,sizeof(ropero2)," "CB"Palo de golf "CR"x%d {009BE4}||",PropInfo[c][pPaloDeGolf]);
						strcat(ropero3,ropero2);
						cosas ++;
					}
	    			if(PropInfo[c][pCuchillo] > 0)
					{
						format(ropero2,sizeof(ropero2)," "CB"Cuchillo "CR"x%d {009BE4}||",PropInfo[c][pCuchillo]);
						strcat(ropero3,ropero2);
						cosas ++;
					}
					if(PropInfo[c][pBateDeBeisbol] > 0)
					{
						format(ropero2,sizeof(ropero2)," "CB"Bate de beisbol "CR"x%d {009BE4}||",PropInfo[c][pBateDeBeisbol]);
						strcat(ropero3,ropero2);
						cosas ++;
					}
					if(PropInfo[c][pPala] > 0)
					{
						format(ropero2,sizeof(ropero2)," "CB"Pala "CR"x%d {009BE4}||",PropInfo[c][pPala]);
						strcat(ropero3,ropero2);
						cosas ++;
					}
					if(PropInfo[c][pPaloDeBillar] > 0)
					{
						format(ropero2,sizeof(ropero2)," "CB"Palo de billar "CR"x%d {009BE4}||",PropInfo[c][pPaloDeBillar]);
						strcat(ropero3,ropero2);
						cosas ++;
					}
	    			if(PropInfo[c][pKatana] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
					    }
					    cosas ++;
						format(ropero2,sizeof(ropero2)," "CB"Katana "CR"x%d {009BE4}||",PropInfo[c][pKatana]);
						strcat(ropero3,ropero2);
					}
					if(PropInfo[c][pConsoladorRosa] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
					    }
					    cosas ++;
						format(ropero2,sizeof(ropero2)," "CB"Consolador rosa "CR"x%d {009BE4}||",PropInfo[c][pConsoladorRosa]);
						strcat(ropero3,ropero2);
					}
					if(PropInfo[c][pVibradorBlanco] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
	    				}
					    cosas ++;
						format(ropero2,sizeof(ropero2)," "CB"Vibrador blanco "CR"x%d {009BE4}||",PropInfo[c][pVibradorBlanco]);
						strcat(ropero3,ropero2);
					}
					if(PropInfo[c][pGranVibradorBlanco] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
					    }
					    cosas ++;
						format(ropero2,sizeof(ropero2)," "CB"Gran vibrador blanco "CR"x%d {009BE4}||",PropInfo[c][pGranVibradorBlanco]);
						strcat(ropero3,ropero2);
					}
					if(PropInfo[c][pUzi] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
					    }
					    cosas ++;
						format(ropero2,sizeof(ropero2)," "CB"Uzi "CR"x%d {009BE4}||",PropInfo[c][pUzi]);
						strcat(ropero3,ropero2);
					}
					if(PropInfo[c][pTec9] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
					    }
					    cosas ++;
						format(ropero2,sizeof(ropero2)," "CB"Tec 9 "CR"x%d {009BE4}||",PropInfo[c][pTec9]);
						strcat(ropero3,ropero2);
					}
					if(PropInfo[c][pMotosierra] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
					    }
					    cosas ++;
						format(ropero2,sizeof(ropero2)," "CB"Motosierra "CR"x%d {009BE4}||",PropInfo[c][pMotosierra]);
						strcat(ropero3,ropero2);
					}
					if(PropInfo[c][pSniper] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
					    }
					    cosas ++;
						format(ropero2,sizeof(ropero2)," "CB"Sniper "CR"x%d {009BE4}||",PropInfo[c][pSniper]);
						strcat(ropero3,ropero2);
					}
					if(PropInfo[c][pLanzacohetes] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
	    				}
					    cosas ++;
						format(ropero2,sizeof(ropero2)," "CB"Lanzacohetes "CR"x%d {009BE4}||",PropInfo[c][pLanzacohetes]);
						strcat(ropero3,ropero2);
					}
					if(PropInfo[c][pBazooka] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
					    }
					    cosas ++;
						format(ropero2,sizeof(ropero2)," "CB"Bazooka "CR"x%d {009BE4}||",PropInfo[c][pBazooka]);
						strcat(ropero3,ropero2);
					}
					if(PropInfo[c][pLanzallamas] > 0)
					{
	    				if(cosas >= 2)
				    	{
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
	    				}
					    cosas ++;
						format(ropero2,sizeof(ropero2)," "CB"Lanzallamas "CR"x%d {009BE4}||",PropInfo[c][pLanzallamas]);
						strcat(ropero3,ropero2);
					}
					if(PropInfo[c][pMinigun] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
			      			strcat(ropero3,ropero2);
					    }
					    cosas ++;
						format(ropero2,sizeof(ropero2)," "CB"Minigun "CR"x%d {009BE4}||",PropInfo[c][pMinigun]);
						strcat(ropero3,ropero2);
					}
					if(PropInfo[c][pParacaidas] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
					    }
					    cosas ++;
						format(ropero2,sizeof(ropero2)," "CB"Paracaidas "CR"x%d {009BE4}||",PropInfo[c][pParacaidas]);
						strcat(ropero3,ropero2);
					}
					if(PropInfo[c][pVibradorPlateado] > 0)
					{
						if(cosas >= 2)
						{
							cosas = 0;
       						format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
			    		}
					    cosas ++;
						format(ropero2,sizeof(ropero2)," "CB"Vibrador plateado "CR"x%d {009BE4}||",PropInfo[c][pVibradorPlateado]);
						strcat(ropero3,ropero2);
					}
					if(PropInfo[c][pFlores] > 0)
					{
	    				if(cosas >= 2)
					    {
		       				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
					    }
					    cosas ++;
						format(ropero2,sizeof(ropero2)," "CB"Ramo de flores "CR"x%d {009BE4}||",PropInfo[c][pFlores]);
						strcat(ropero3,ropero2);
					}
					if(PropInfo[c][pBaston] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
	    				}
					    cosas ++;
						format(ropero2,sizeof(ropero2)," "CB"Baston "CR"x%d {009BE4}||",PropInfo[c][pBaston]);
						strcat(ropero3,ropero2);
					}
	    			if(PropInfo[c][p9mm] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
					    }
					    cosas ++;
						format(ropero2,sizeof(ropero2)," "CB"9mm "CR"x%d {009BE4}||",PropInfo[c][p9mm]);
						strcat(ropero3,ropero2);
					}
     				if(PropInfo[c][p9mmSilenciada] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
					    }
					    cosas ++;
						format(ropero2,sizeof(ropero2)," "CB"9mm silenciada "CR"x%d {009BE4}||",PropInfo[c][p9mmSilenciada]);
						strcat(ropero3,ropero2);
					}
					if(PropInfo[c][pDesertEagle] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
					    }
					    cosas ++;
						format(ropero2,sizeof(ropero2)," "CB"Desert eagle "CR"x%d {009BE4}||",PropInfo[c][pDesertEagle]);
						strcat(ropero3,ropero2);
					}
					if(PropInfo[c][pEscopetaNormal] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
					    }
					    cosas ++;
						format(ropero2,sizeof(ropero2)," "CB"Escopeta "CR"x%d {009BE4}||",PropInfo[c][pEscopetaNormal]);
						strcat(ropero3,ropero2);
					}
					if(PropInfo[c][pEscopetaDeCombate] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
		       				strcat(ropero3,ropero2);
					    }
					    cosas ++;
						format(ropero2,sizeof(ropero2)," "CB"Escopeta de combate "CR"x%d {009BE4}||",PropInfo[c][pEscopetaDeCombate]);
						strcat(ropero3,ropero2);
					}
     				if(PropInfo[c][pMP5] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
					    }
					    cosas ++;
						format(ropero2,sizeof(ropero2)," "CB"MP5 "CR"x%d {009BE4}||",PropInfo[c][pMP5]);
						strcat(ropero3,ropero2);
					}
     				if(PropInfo[c][pAK47] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
					    }
					    cosas ++;
						format(ropero2,sizeof(ropero2)," "CB"AK 47 "CR"x%d {009BE4}||",PropInfo[c][pAK47]);
						strcat(ropero3,ropero2);
					}
	    			if(PropInfo[c][pM4] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
					    }
					    cosas ++;
						format(ropero2,sizeof(ropero2)," "CB"M4 "CR"x%d {009BE4}||",PropInfo[c][pM4]);
						strcat(ropero3,ropero2);
					}
	    			if(PropInfo[c][pRifle] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
					    }
					    cosas ++;
						format(ropero2,sizeof(ropero2)," "CB"Rifle "CR"x%d {009BE4}||",PropInfo[c][pRifle]);
						strcat(ropero3,ropero2);
					}
  					if(PropInfo[c][pRifle] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
					    }
					    cosas ++;
						format(ropero2,sizeof(ropero2)," "CB"Sniper "CR"x%d {009BE4}||",PropInfo[c][Sniper]);
						strcat(ropero3,ropero2);
					}
	    			if(PropInfo[c][pGranada] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
					    }
					    cosas ++;
						format(ropero2,sizeof(ropero2)," "CB"Granada "CR"x%d {009BE4}||",PropInfo[c][pGranada]);
						strcat(ropero3,ropero2);
					}
					if(PropInfo[c][pCamara] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
					    }
					    cosas ++;
						format(ropero2,sizeof(ropero2)," "CB"Camara "CR"x%d {009BE4}||",PropInfo[c][pCamara]);
						strcat(ropero3,ropero2);
					}
					if(PropInfo[c][pMedicamentos] > 0 || PropInfo[c][pCrack] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
					    }
					    cosas ++;
					    format(ropero2,sizeof(ropero2),"\n\n");
					    strcat(ropero3,ropero2);
					}
					if(PropInfo[c][pCrack] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
					    }
					    cosas ++;
						format(ropero2,sizeof(ropero2),"\n"CB"Crack: "CR"%d",PropInfo[c][pCrack]);
						strcat(ropero3,ropero2);
					}
					if(PropInfo[c][pMedicamentos] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
					    }
					    cosas ++;
						format(ropero2,sizeof(ropero2),"\n"CB"Medicamentos: "CR"%d",PropInfo[c][pMedicamentos]);
						strcat(ropero3,ropero2);
					}
					if(PropInfo[c][pCocaina] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
					    }
					    cosas ++;
						format(ropero2,sizeof(ropero2),"\n"CB"Cocaina: "CR"%d",PropInfo[c][pCocaina]);
						strcat(ropero3,ropero2);
					}
					if(PropInfo[c][pHongos] > 0)
					{
	    				if(cosas >= 2)
					    {
	        				cosas = 0;
					        format(ropero2,sizeof(ropero),"\n");
					        strcat(ropero3,ropero2);
					    }
					    cosas ++;
						format(ropero2,sizeof(ropero2),"\n"CB"Hongos: "CR"%d",PropInfo[c][pHongos]);
						strcat(ropero3,ropero2);
					}
				}
				else
				{
    				format(ropero2,sizeof(ropero2),"La estanter�a est� vac�a.");
				    strcat(ropero3,ropero2);
				}
				MostrarDialog(playerid,0,DIALOG_STYLE_MSGBOX,ropero,ropero3,"Cerrar","");
				break;
  			}
		}
	}
	return 1;
}

CrearActor(skin, Float:x, Float:y, Float:z, Float:a, lib[], libname[], vw, repite,robable)
{
	new query[256];
	mysql_format(Conecction,query,sizeof(query),"INSERT INTO `actores` (`Skin`,`Mundo`,`X`,`Y`,`Z`,`A`,`anim_lib`,`anim_name`,`Repite`,`robable`) VALUES (%i,%i,%f,%f,%f,%f,'%e','%e',%i,%i)",skin,vw,x,y,z,a,lib,libname,repite,robable);
	mysql_tquery(Conecction,query);
}

TerritoriosCarga() return mysql_tquery(Conecction, "SELECT * FROM `territorios`", "LoadTerritorios");

CargarActores2()
{
	Iter_Clear(Actores);
    for(new i = 0; i < MAX_ACTORS; i++)
	{
	    if(ActorData[i][ValidActor] == 1)
		{
			ActorData[i][aID] = 0;
			DestroyDynamicActorEx(ActorData[i][ActorPlayer]);
		}
	}
	mysql_tquery(Conecction, "SELECT * FROM `actores`", "OnActorLoad");
	return 1;
}

static NoDispares(playerid)
{
	ShowTDN(playerid, "~r~Atenci�n: ~w~Nadie ve tus disparos y nadie es afectado.");
	 
	return 1;
}



	IPacket:VEHICLE_SYNC(playerid, BitStream:bs)
	{
		if(UsarRaknet)
		{
			if(!IsPlayerConnected(playerid)) return 1;
			new InCar[PR_InCarSync];
			BS_IgnoreBits(bs, 8);
			BS_ReadInCarSync(bs, InCar);

			new modelo = GetVehicleModel(InCar[PR_vehicleId]);
			for(new i; i != sizeof(NoDisparen); i++)
			{
				if(modelo == NoDisparen[i])
				{
					break;
				}

				if(sizeof(NoDisparen) - i == 1)
				{
					return 1;
				}
			}
			if((InCar[PR_keys] & KEY_FIRE && !EsFundador(playerid) ) || (InCar[PR_keys] & KEY_ACTION && !EsFundador(playerid)))
			{
				InCar[PR_keys] &= ~KEY_FIRE;
				InCar[PR_keys] &= ~KEY_ACTION;

				BS_SetWriteOffset(bs, 8);
				BS_WriteInCarSync(bs, InCar);

				if(TiempoRevisar[playerid] < gettimeVariable)
				{
					NoDispares(playerid);
					TiempoRevisar[playerid] = gettimeVariable + 35;
				}

			}
		}
		return 1;
	}


	const CRASHER_PACKET = 228;
	IPacket:CRASHER_PACKET(playerid, BitStream:bs)
	{
		if(UsarRaknet)
		{
			printf("[ADVERTENCIA] Packet 228 recibido!");
			ExpulsarJugador(playerid, "Crasher");
		}
	}

	const AIM_SYNC = 203;
	IPacket:AIM_SYNC(playerid, BitStream:bs)
	{
		if(UsarRaknet)
		{
			new aimData[PR_AimSync];
			BS_IgnoreBits(bs, 8);
			BS_ReadAimSync(bs, aimData);
			if(aimData[PR_camMode] == 45 || aimData[PR_camMode] == 49)
			{
				ExpulsarJugador(playerid, "C�mara Inv�lida");
				return false;
			}
			if(aimData[PR_aimZ] != aimData[PR_aimZ]) // is NaN
			{
				aimData[PR_aimZ] = 0.0;
				BS_SetWriteOffset(bs, 8);
				BS_WriteAimSync(bs, aimData);
			}
		}
		return true;
	}

	const BULLET_SYNC = 206;
	IPacket:BULLET_SYNC(playerid, BitStream:bs)
	{
		if(UsarRaknet)
		{
			new bulletData[PR_BulletSync];
			BS_IgnoreBits(bs, 8);
			BS_ReadBulletSync(bs, bulletData);
			switch(bulletData[PR_weaponId])
			{
				case 38, 35, 36, 37, 39, 40, 42, 17, 18, 16, 45, 44:
				{
					if(PlayerInfo[playerid][pAdmin] == 0)
					{
						ExpulsarJugador(playerid, "Cheat de armas 7174");
						return false;
					}
				}
			}
			if(!(-35000.0 <= bulletData[PR_origin][0] <= 35000.0) || !(-35000.0 <= bulletData[PR_origin][1] <= 35000.0) || !(-35000.0 <= bulletData[PR_origin][2] <= 35000.0))
			{
				ExpulsarJugador(playerid, "Enviar datos falsos (1)");
				return false;
			}
			if(!(-35000.0 <= bulletData[PR_hitPos][0] <= 35000.0) || !(-35000.0 <= bulletData[PR_hitPos][1] <= 35000.0) || !(-35000.0 <= bulletData[PR_hitPos][2] <= 35000.0))
			{
				if(!IsPlayerAndroid(playerid))
				{
					ExpulsarJugador(playerid, "Enviar datos falsos (2)");
					return false;
				}
			}
		}
		return true;
	}

	const PLAYER_SYNC = 207;
	public OnIncomingPacket(playerid, packetid, BitStream:bs)
	{
		if(UsarRaknet)
		{
			//if(!IsPlayerConnected(playerid)) return 1;
			if(packetid == PLAYER_SYNC)
			{
				new onFootData[PR_OnFootSync];
				BS_IgnoreBits(bs, 8); // ignora el id de paquete (byte)
				BS_ReadOnFootSync(bs, onFootData);

				if(onFootData[PR_position][2] == -5.5)
				{
					ExpulsarJugador(playerid, "BulletCrasher");
					return false;
				}
				if(onFootData[PR_specialAction] == SPECIAL_ACTION_USEJETPACK && PlayerInfo[playerid][pAdmin] < 4)
				{
					ExpulsarJugador(playerid, "JetPack");
					return false;
				}
				
				if(onFootData[PR_surfingVehicleId] != 0 && onFootData[PR_surfingVehicleId] != INVALID_VEHICLE_ID)
				{
					if((floatabs(onFootData[PR_surfingOffsets][0]) >= 10.0) || (floatabs(onFootData[PR_surfingOffsets][1]) >= 10.0) ||
						(floatabs(onFootData[PR_surfingOffsets][2]) >= 10.0) || (floatabs(onFootData[PR_surfingOffsets][0]) <= -10.0) ||
						(floatabs(onFootData[PR_surfingOffsets][1]) <= -10.0) || (floatabs(onFootData[PR_surfingOffsets][2]) <= -10.0))
					{
						onFootData[PR_surfingOffsets][0] = onFootData[PR_surfingOffsets][1] = onFootData[PR_surfingOffsets][2] = 0.0;
						BS_SetWriteOffset(bs, 8);
						BS_WriteOnFootSync(bs, onFootData);
					}
				}

				if (GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][pAdmin] == 0)
				{
					ExpulsarJugador(playerid, "Cheat spec");
					return false;
				}
			}
		}
		return 1;
	}


	#if !defined IsNaN
		#define IsNaN(%0) ((%0) != (%0))
	#endif


	const UNOCCUPIED_SYNC = 209;
	IPacket:UNOCCUPIED_SYNC(playerid, BitStream:bs)
	{
		if(UsarRaknet)
		{
			new unoccupiedData[PR_UnoccupiedSync];
		
			BS_IgnoreBits(bs, 8); // ignore packetid (byte)
			BS_ReadUnoccupiedSync(bs, unoccupiedData);

			if ((
					IsNaN(unoccupiedData[PR_roll][0]) ||
					IsNaN(unoccupiedData[PR_roll][1]) ||
					IsNaN(unoccupiedData[PR_roll][2]) ||
					IsNaN(unoccupiedData[PR_direction][0]) ||
					IsNaN(unoccupiedData[PR_direction][1]) ||
					IsNaN(unoccupiedData[PR_direction][2]) ||
					IsNaN(unoccupiedData[PR_position][0]) ||
					IsNaN(unoccupiedData[PR_position][1]) ||
					IsNaN(unoccupiedData[PR_position][2]) ||
					IsNaN(unoccupiedData[PR_angularVelocity][0]) ||
					IsNaN(unoccupiedData[PR_angularVelocity][1]) ||
					IsNaN(unoccupiedData[PR_angularVelocity][2]) ||
					IsNaN(unoccupiedData[PR_velocity][0]) ||
					IsNaN(unoccupiedData[PR_velocity][1]) ||
					IsNaN(unoccupiedData[PR_velocity][2]) ||
					floatabs(unoccupiedData[PR_position][0]) >= 20000.0 ||
					floatabs(unoccupiedData[PR_position][1]) >= 20000.0 ||
					floatabs(unoccupiedData[PR_position][2]) >= 20000.0 ||
					floatabs(unoccupiedData[PR_angularVelocity][0]) >= 1.0 ||
					floatabs(unoccupiedData[PR_angularVelocity][1]) >= 1.0 ||
					floatabs(unoccupiedData[PR_angularVelocity][2]) >= 1.0 ||
					floatabs(unoccupiedData[PR_velocity][0]) >= 100.0 ||
					floatabs(unoccupiedData[PR_velocity][1]) >= 100.0 ||
					floatabs(unoccupiedData[PR_velocity][2]) >= 100.0
				) || (
					unoccupiedData[PR_roll][0] * unoccupiedData[PR_direction][0] +
					unoccupiedData[PR_roll][1] * unoccupiedData[PR_direction][1] +
					unoccupiedData[PR_roll][2] * unoccupiedData[PR_direction][2] >= 0.000001
				) || (
					floatabs(
						1.0 - VectorSize(
							unoccupiedData[PR_roll][0],
							unoccupiedData[PR_roll][1],
							unoccupiedData[PR_roll][2]
						)
					) >= 0.000001
				) || (
					floatabs(
						1.0 - VectorSize(
							unoccupiedData[PR_direction][0],
							unoccupiedData[PR_direction][1],
							unoccupiedData[PR_direction][2]
						)
					) >= 0.000001
				)
			) {
				return 0; // ignore bad packet
			}
		}
		return 1;
	}


	const PASSENGER_SYNC = 211;
	IPacket:PASSENGER_SYNC(playerid, BitStream:bs)
	{
		if(UsarRaknet)
		{
			new passengerData[PR_PassengerSync];
			BS_IgnoreBits(bs, 8);
			BS_ReadPassengerSync(bs, passengerData);
			if(GetPlayerVehicleSeat(playerid) == 0)
			{
				ExpulsarJugador(playerid, "Crasher (Asiento inv�lido)");
				return false;
			}
		}
		return true;
	}


CMD:vergpci(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5) return 0;
	new id;
	if(sscanf(params,"d",id)) return Mensaje(playerid,-1,"Usa "CR"/vergpci [id]");
	if(!IsPlayerConnected(id)) return 1;
	va_SendClientMessage(playerid,-1,"El GPCI es: %s", ReturnCI(id));
	return 1;
}

CMD:resetearcarrera2(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	ResetearCarrera();
	UpdateDynamic3DTextLabelText(TextoCarrera,COLOR_BLANCO,"{FF3300}Boleteria cerrada\n"CR"Horarios de los eventos: "CB"Carreras a cada hora!");
	return 1;
}

CMD:resetearcarrera(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	ResetearCarrera();
	VerEnCarreras();
	UpdateDynamic3DTextLabelText(TextoCarrera,COLOR_BLANCO,"{FF3300}Boleteria cerrada\n"CR"Horarios de los eventos: "CB"Carreras a cada hora!");
	return 1;
}

CMD:sacartodoscarrera(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	VerEnCarreras();
	return 1;
}

CMD:crearcarrera(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(sscanf(params,"d",params[0])) return Mensaje(playerid,-1,"Usa "CR"/crearcarrera [minutos]");
	if(HabilitarCarreras == 1) return Mensaje(playerid,-1,"Ya hay una carrera en curso.");
	if(params[0] < 2) return Mensaje(playerid,-1,"El tiempo debe ser mayor que 1.");
	ResetearCarrera();
	HabilitarCarreras = 1;
	UpdateDynamic3DTextLabelText(TextoCarrera,COLOR_BLANCO,""CR"Boleteria abierta\n"CB"Costo de la entrada: "CR"$600\n"CR"/comprar entrada");
	ConteoCarrera = params[0];
	SetTimer("EmpezarCarrera",60*1000,0);
	new string[250];
	format(string,sizeof(string),"En "CR"%d minutos"CB" comienza la carrera, ya se inscribieron "CR"%d"CB" corredores.",ConteoCarrera,GetParticipantesC());
 	foreach(new i : Player)
	{
	 	if(EstaEn(i,250,-1408.8688,-304.5082,1056.4351) && GetPlayerInterior(i) == 7) Mensaje(i,-1,string);
 	}
	return true;
}

#define alias:%0(%1) CMD:%1(playerid,params[]) return cmd_%0(playerid,params)



CMD:strip(playerid,params[]) return Mensaje(playerid, -1, "Usa: "CR"/strip[1-20]");

CMD:danzar(playerid,params[]) return Mensaje(playerid, -1, "Usa "CR"/danzar[0-12]");

CMD:fumar(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"SMOKING", "M_smklean_loop",4.1,0,1,1,1,1);
}

CMD:anim1(playerid)
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "BD_FIRE", "M_SMKLEAN_LOOP", 4.0, 1, 0, 0, 0, 0);
}

CMD:anim2(playerid)
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "KISSING", "GRLFRD_KISS_02", 4.0, 0, 0, 0, 0, 0);
}

CMD:anim3(playerid)
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "DEALER", "DEALER_IDLE", 4.0, 1, 0, 0, 0, 0);
}

CMD:anim4(playerid)
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "BMX", "BMX_BACK", 4.0, 1, 0, 0, 0, 0);
}
CMD:anim5(playerid)
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "DAM_JUMP", "DAM_DIVE_LOOP", 4.0, 1, 0, 0, 0, 0);
}

CMD:anim6(playerid)
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "RIOT", "RIOT_ANGRY", 4.0, 0, 0, 0, 0, 0);
}

CMD:anim7(playerid)
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "MISC", "BITCHSLAP", 4.0, 1, 0, 0, 0, 0);
}

CMD:anim8(playerid)
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "PED", "HIT_WALK", 4.0, 1, 0, 0, 0, 0);
}

CMD:anim9(playerid)
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "MISC", "BMX_IDLELOOP_02", 4.0, 0, 0, 0, 0, 0);
}

CMD:sexo(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	if(!sscanf(params, "d", params[0]))
    {
		switch(params[0])
		{
			case 1: ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_START_P",4.1,0,1,1,1,1);
			case 2: ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_START_W",4.1,0,1,1,1,1);
			case 3: ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_LOOP_P",4.1,0,1,1,1,1);
			case 4: ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_LOOP_W",4.1,0,1,1,1,1);
			case 5: ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_END_P",4.1,0,1,1,1,1);
			case 6: ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_END_W",4.1,0,1,1,1,1);
			case 7: ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_START_P",4.1,0,1,1,1,1);
			case 8: ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_START_W",4.1,0,1,1,1,1);
			case 9: ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_LOOP_P",4.1,0,1,1,1,1);
			case 10: ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_LOOP_W",4.1,0,1,1,1,1);
			case 11: ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_END_P",4.1,0,1,1,1,1);
			case 12: ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_END_W",4.1,0,1,1,1,1);
			case 13: ApplyAnimation(playerid,"SNM","SPANKING_IDLEW",4.0, 0, 1, 1, 1, 1);
			case 14: ApplyAnimation(playerid, "SNM","SPANKING_IDLEP", 4.0, 1, 1, 1, 1, 1);
			case 15: ApplyAnimation(playerid, "SNM","SPANKINGW", 4.0, 1, 1, 1, 1, 1);
			case 16: ApplyAnimation(playerid, "SNM","SPANKINGP", 4.0, 1, 1, 1, 1, 1);
			case 17: ApplyAnimation(playerid, "SNM","SPANKEDW", 4.0, 1, 1, 1, 1, 1);
			case 18: ApplyAnimation(playerid, "SNM","SPANKEDP", 4.0, 1, 1, 1, 1, 1);
			case 19: ApplyAnimation(playerid, "SNM","SPANKING_ENDW", 4.0, 1, 1, 1, 1, 1);
			case 20: ApplyAnimation(playerid, "SNM","SPANKING_ENDP", 4.0, 1, 1, 1, 1, 1);
			default: Mensaje(playerid,-1,"USA: "CR"/sexo [1-20]");
		}
	}
	else return Mensaje(playerid,-1,"USA: "CR"/sexo [1-20]");
	return 1;
}

CMD:gesto(playerid, params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	if(!sscanf(params, "d", params[0]))
    {
		switch(params[0])
		{
			case 1: ApplyAnimation(playerid,"GHANDS","gsign1",4.0,0,0,0,0,0);
			case 2: ApplyAnimation(playerid,"GHANDS","gsign1LH",4.0,0,0,0,0,0);
			case 3: ApplyAnimation(playerid,"GHANDS","gsign2",4.0,0,0,0,0,0);
			case 4: ApplyAnimation(playerid,"GHANDS","gsign2LH",4.0,0,0,0,0,0);
			case 5: ApplyAnimation(playerid,"GHANDS","gsign3",4.0,0,0,0,0,0);
			case 6: ApplyAnimation(playerid,"GHANDS","gsign3LH",4.0,0,0,0,0,0);
			case 7: ApplyAnimation(playerid,"GHANDS","gsign4",4.0,0,0,0,0,0);
			case 8: ApplyAnimation(playerid,"GHANDS","gsign4LH",4.0,0,0,0,0,0);
			case 9: ApplyAnimation(playerid,"GHANDS","gsign5",4.0,0,0,0,0,0);
			case 10: ApplyAnimation(playerid,"GHANDS","gsign5",4.0,0,0,0,0,0);
			case 11: ApplyAnimation(playerid,"GHANDS","gsign5LH",4.0,0,0,0,0,0);
			case 12: ApplyAnimation(playerid,"GANGS","Invite_No",4.0,0,0,0,0,0);
			case 13: ApplyAnimation(playerid,"GANGS","Invite_Yes",4.0,0,0,0,0,0);
			case 14: ApplyAnimation(playerid,"GANGS","prtial_gngtlkD",4.0,0,0,0,0,0);
			case 15: ApplyAnimation(playerid,"GANGS","smkcig_prtl",4.0,0,0,0,0,0);
			default: Mensaje(playerid,-1,"USA: "CR"/gesto [1-15]");
		}
	}
	else return Mensaje(playerid,-1,"USA: "CR"/gesto [1-15]");
	return 1;
}

CMD:saludo(playerid, params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	if(!sscanf(params, "d", params[0]))
    {
		switch(params[0])
		{
			case 1: ApplyAnimation(playerid,"GANGS","hndshkaa",4.1,0,0,0,0,0);
			case 2: ApplyAnimation(playerid,"GANGS","hndshkba",4.1,0,0,0,0,0);
			case 3: ApplyAnimation(playerid,"GANGS","hndshkca",4.1,0,0,0,0,0);
			case 4: ApplyAnimation(playerid,"GANGS","hndshkfa_swt",4.1,0,0,0,0,0);
			case 5: ApplyAnimation(playerid,"ON_LOOKERS","Pointup_loop",4.0,0,0,0,0,0);
			case 6: ApplyAnimation(playerid,"WUZI","Wuzi_Greet_Wuzi",4.0,0,0,0,0,0);
			default: Mensaje(playerid,-1,"USA: "CR"/saludo [1-6]");
		}
	}
	else return Mensaje(playerid,-1,"USA: "CR"/saludo [1-6]");
	return 1;
}

CMD:apuntar(playerid, params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	if(!sscanf(params, "d", params[0]))
    {
		switch(params[0])
		{
			case 1: ApplyAnimation(playerid,"SHOP","ROB_Loop_Threat",4.1,1,0,0,1,1);
			case 2: ApplyAnimation(playerid,"ped", "ARRESTgun", 4.0,0,1,1,1,1);
			case 3: ApplyAnimation(playerid,"SHOP","SHP_Gun_Aim",4.1,1,0,0,1,1);
			case 4: ApplyAnimation(playerid,"PED","GUN_STAND",4.1,1,1, 1,1,1,1);
			default: Mensaje(playerid, -1, "Utilize: "CR"/apuntar [1-4]");
		}
	}
	else return Mensaje(playerid, -1, "Utilize: "CR"/apuntar [1-4]");
	return 1;
}

CMD:bailar(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	if(!sscanf(params, "d", params[0]))
	{
	    switch(params[0])
	    {
	        case 1: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
	        case 2: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
	        case 3: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
	        case 4: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
	        default: Mensaje(playerid, -1, "Utiliza "CR"/bailar [1-4]");
    	}
	}
	else return Mensaje(playerid, -1, "Utiliza "CR"/bailar [1-4]");
	return 1;
}

CMD:asiento(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	if(!sscanf(params, "d", params[0]))
	{
		switch(params[0])
		{
			case 1: ApplyAnimation(playerid, "ped", "SEAT_down", 4.000000, 0, 0, 0, 1, 0);
			case 2: ApplyAnimation(playerid,"INT_HOUSE","LOU_In",4.1,0,1,1,1,1);
			case 3: ApplyAnimation(playerid,"Attractors","Stepsit_in",4.1,0,0,0,1,0);
			case 4: ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_idleA",4.000000, 0, 1, 1, 1, 0);
		   	default: return Mensaje(playerid, -1, "Utiliza: "CR"/asiento [1-4]");
		}
		Mensaje(playerid, -1, "Para seguir "CR"/depie");
	}
	else return Mensaje(playerid, -1, "Utiliza: "CR"/asiento [1-4]");
	return 1;
}

CMD:caer(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
    if(!sscanf(params, "d", params[0]))
    {
		switch(params[0])
		{
			case 1: ApplyAnimation(playerid,"PED","KO_skid_front",4.1,0,1,1,1,0);
			case 2: ApplyAnimation(playerid,"PED","KO_skid_back",4.1,0,1,1,1,0);
			case 3: ApplyAnimation(playerid,"FIGHT_E","Hit_fightkick_B",4.1,0,1,1,1,0);
			default: Mensaje(playerid, -1, "Utiliza: "CR"/caer [1-3]");
		}
	}
	else return Mensaje(playerid, -1, "Utiliza: "CR"/caer [1-3]");
	return 1;
}

CMD:crearauto(playerid,params[])
{
   	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_ADM) return 0;
    new color1,color2,precio[28],comprable,monedas,faccion,trabajo;
   	if(!IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid,-1,"Debes estar en un auto");
    if(sscanf(params, "ddddddd", color1,color2,precio,comprable,monedas,faccion,trabajo)) return Mensaje(playerid,-1,"Escribe "CR"/ca "CB"<Color primario> <Color secundario> <Precio> <Comprable> <Moneda> <Faccion> <Trabajo>");
    {
        new Float:X,Float:Y,Float:Z,Float:z_A,car,modelo,query[900];
        car = GetPlayerVehicleID(playerid);
        GetVehiclePos(car, X,Y,Z);
        GetVehicleZAngle(car, z_A);
        modelo = GetVehicleModel(car);
        Mensaje(playerid,-1,"Auto guardado");
        mysql_format(Conecction, query,sizeof(query),"INSERT INTO vehicles (propietario, modelo, precio,x,y,z,a,color1,color2,comprable,moneda,faccion,trabajo) VALUES ('Gobierno', '%d','%d','%f','%f','%f','%f','%d','%d','%d','%d','%d','%d')", modelo,precio,Float:X,Float:Y,Float:Z,Float:z_A,color1,color2,comprable,monedas,faccion,trabajo);
        mysql_tquery(Conecction, query);
    }
    return 1;
}

CMD:sentadosexy(playerid)
{
	if(HabilitarAnim(playerid) == 0) return 1;
	ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_idleA",4.000000, 0, 1, 1, 1, 0);
	return Mensaje(playerid, -1, "Para ponerte de pie utiliza "CR"/pararse");
}

CMD:herido(playerid)
{
	if(HabilitarAnim(playerid) == 0) return 1;
	ApplyAnimation(playerid, "SWEET", "LaFin_Sweet", 4.0, 0, 1, 1, 1, 0);
	return Mensaje(playerid, -1, "Para continuar utiliza "CR"/agonizar");
}

CMD:descansar(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	LoopingAnim(playerid,"SUNBATHE", "Lay_Bac_in", 4.0, 0, 0, 0, 1, 0);
	return Mensaje(playerid, -1, "Para dejar de descansar utiliza"CR" /no");
}

CMD:inhalar(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	ApplyAnimation(playerid, "SMOKING", "M_smk_drag", 4.000000, 1, 0, 0, 0, -1);
	return Mensaje(playerid, -1, "Para continuar "CR"/apagar");
}

CMD:agonizar(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	ApplyAnimation(playerid, "WUZI", "CS_Dead_Guy", 4.0, 0, 0, 0, 1, 0);
	return Mensaje(playerid, -1, "Para seguir "CR"/levantarse");
}

CMD:cubrirse(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	ApplyAnimation(playerid, "ped", "cower", 4.0, 1, 0, 0, 0, 0);
	return Mensaje(playerid, -1, "Para seguir "CR"/pararse");
}

CMD:recostarse(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	ApplyAnimation(playerid,"SUNBATHE", "Lay_Bac_in", 4.0, 0, 0, 0, 1, 0);
	return Mensaje(playerid, -1, "Para ponerse de pie usa "CR"/pararse");
}

CMD:paja(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	ApplyAnimation(playerid, "PAULNMAC", "wank_loop", 4.0, 1, 0, 0, 1, 0);
	return Mensaje(playerid, -1, "Para terminar usa "CR"/acabar");
}

CMD:agredido(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	ApplyAnimation(playerid, "POLICE", "crm_drgbst_01", 4.0, 0, 0, 0, 1, 0);
	return Mensaje(playerid, -1, "Para continuar "CR"/levantarse");
}

CMD:encender(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	ApplyAnimation(playerid, "SMOKING", "M_smk_in", 4.000000, 0, 0, 1, 1, 0);
	return Mensaje(playerid, -1, "Para continuar "CR"/inhalar"CB" o "CR"/apagar");
}

CMD:clica(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	ApplyAnimation(playerid,"GANGS","DRUGS_BUY",4.0, 0, 0, 0, 0, -1);
	return Mensaje(playerid, -1, "Usa "CR"/no"CB" para terminar.");
}

CMD:grafiti(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	ApplyAnimation(playerid,"GRAFFITI","GRAFFITI_CHKOUT",4.0, 0, 0, 0, 0, -1);
	return Mensaje(playerid, -1, "Usa "CR"/no"CB" para terminar.");
}
CMD:spray(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	ApplyAnimation(playerid,"SPRAYCAN","SPRAYCAN_FIRE",4.0, 0, 0, 0, 0, -1);
	return Mensaje(playerid, -1, "Usa "CR"/no"CB" para terminar.");
}

CMD:shop(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	ApplyAnimation(playerid,"SHOP","SHP_DUCK_AIM",4.0, 0, 0, 0, 0, -1);
	return Mensaje(playerid, -1, "Usa "CR"/no"CB" para terminar.");
}

CMD:sentarse(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	ApplyAnimation(playerid, "SUNBATHE", "ParkSit_M_in", 4.000000, 0, 1, 1, 1, 0);
	return Mensaje(playerid, -1, "Para seguir "CR"/pararse");
}

CMD:pelea(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	ApplyAnimation(playerid, "ped", "FIGHTIDLE", 4.000000, 0, 1, 1, 1, 1);
	return Mensaje(playerid, -1, "Para seguir "CR"/boxear");
}

CMD:recoger(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	ApplyAnimation(playerid, "BSKTBALL", "BBALL_pickup", 4.000000, 0, 1, 1, 1, 1);
	return Mensaje(playerid, -1, "Para seguir "CR"/botear");
}

CMD:botear(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	ApplyAnimation(playerid, "BSKTBALL", "BBALL_walk", 4.000000, 1, 1, 1, 1, 500);
	return Mensaje(playerid, -1, "Para seguir "CR"/clavarse"CB" o "CR"/arrojar");
}

CMD:asiento1(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	ApplyAnimation(playerid, "ped", "SEAT_down", 4.000000, 0, 0, 0, 1, 0);
	return Mensaje(playerid, -1, "Para seguir "CR"/depie");
}

CMD:asiento2(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	ApplyAnimation(playerid,"INT_HOUSE","LOU_In",4.1,0,1,1,1,1);
	return Mensaje(playerid, -1, "Para seguir "CR"/depie");
}

CMD:asiento3(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	ApplyAnimation(playerid,"Attractors","Stepsit_in",4.1,0,0,0,1,0);
	return Mensaje(playerid, -1, "Para seguir "CR"/depie");
}

CMD:asiento4(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_idleA",4.000000, 0, 1, 1, 1, 0);
	return Mensaje(playerid, -1, "Para seguir "CR"/depie");
}

CMD:rodar(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	ApplyAnimation(playerid,"MD_CHASE","MD_HANG_Lnd_Roll",4.1,0,1,1,1,0);
	return Mensaje(playerid, -1, "Para seguir "CR"/levantarse");
}

CMD:asientosexi(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_idleA",4.000000, 0, 1, 1, 1, 0);
	return Mensaje(playerid, -1, "Para seguir "CR"/pararse");
}

CMD:bailar1(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
}

CMD:bailar2(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
}

CMD:bailar3(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
}

CMD:bailar4(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
}

CMD:rendirse(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
}

CMD:borracho(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"PED", "WALK_DRUNK",4.0,1,1,1,1,500);
}

CMD:bj1(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "BLOWJOBZ", "BJ_COUCH_START_W", 4.0, 1, 1, 1, 0, 0);
}

CMD:bj2(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "BLOWJOBZ", "BJ_COUCH_START_P", 4.0, 1, 1, 1, 0, 0);
}

CMD:bj3(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "BLOWJOBZ", "BJ_COUCH_LOOP_W", 4.0, 1, 1, 1, 0, 0);
}

CMD:bj4(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "BLOWJOBZ", "BJ_COUCH_LOOP_P", 4.0, 1, 1, 1, 0, 0);
}

CMD:bj5(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "BLOWJOBZ", "BJ_COUCH_END_W", 4.0, 1, 1, 1, 0, 0);
}

CMD:bj6(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "BLOWJOBZ", "BJ_COUCH_END_P", 4.0, 1, 1, 1, 0, 0);
}

CMD:bj7(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "BLOWJOBZ", "BJ_STAND_START_W", 4.0, 1, 1, 1, 0, 0);
}

CMD:bj8(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "BLOWJOBZ", "BJ_STAND_START_P", 4.0, 1, 1, 1, 0, 0);
}

CMD:bj9(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "BLOWJOBZ", "BJ_STAND_LOOP_W", 4.0, 1, 1, 1, 0, 0);
}

CMD:bj10(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "BLOWJOBZ", "BJ_STAND_LOOP_P", 4.0, 1, 1, 1, 0, 0);
}

CMD:bj11(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "BLOWJOBZ", "BJ_STAND_END_W", 4.0, 1, 1, 1, 0, 0);
}

CMD:bj12(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "BLOWJOBZ", "BJ_STAND_END_P", 4.0, 1, 1, 1, 0, 0);
}

CMD:bj13(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "BLOWJOBZ", "BJ_CAR_START_W", 4.0, 1, 1, 1, 0, 0);
}

CMD:bj14(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "BLOWJOBZ", "BJ_CAR_START_P", 4.0, 1, 1, 1, 0, 0);
}

CMD:bj15(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "BLOWJOBZ", "BJ_CAR_LOOP_W", 4.0, 1, 1, 1, 0, 0);
}

CMD:bj16(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "BLOWJOBZ", "BJ_CAR_LOOP_P", 4.0, 1, 1, 1, 0, 0);
}

CMD:bj17(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "BLOWJOBZ", "BJ_CAR_END_W", 4.0, 1, 1, 1, 0, 0);
}

CMD:bj18(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "BLOWJOBZ", "BJ_CAR_END_P", 4.0, 1, 1, 1, 0, 0);
}

CMD:rollfall(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"PED","BIKE_fallR",4.0,0,1,1,1,0);
}

CMD:bomba(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);
}

CMD:jaja(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0,0);
}

CMD:sapiar(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"PED","roadcross_female",4.1,0,0,0,0,0);
}

CMD:apuntar1(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"SHOP","ROB_Loop_Threat",4.1,1,0,0,1,1);
}

CMD:escribir(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Type_Loop", 4.1, 1, 1, 1, 0, 0, 1);
}

CMD:apuntar2(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"ped", "ARRESTgun", 4.0,0,1,1,1,1);
}

CMD:apuntar3(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"SHOP","SHP_Gun_Aim",4.1,1,0,0,1,1);
}

CMD:apuntar4(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"PED","GUN_STAND",4.1,1,1, 1,1,1,1);
}

CMD:amenazar(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 0, 0, 0, 1,500);
}

CMD:acabar(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "PAULNMAC", "wank_out", 4.0, 0, 0, 0, 0, 0);
}

CMD:vigilar(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "COP_AMBIENT", "COPLOOK_LOOP", 4.0, 1, 1, 1, 0, 4000);
}

CMD:pararse(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"SUNBATHE", "Lay_Bac_out", 4.0, 0, 0, 0, 0, 0);
}

CMD:vomitar(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
	PlayerInfo[playerid][pHambre] += 10;
	PlayerInfo[playerid][pSed] += 20;
	if(SedOculta[playerid] == 1)
	{
		BarraHambre(playerid, 1);
		BarraSed(playerid, 1);
	}
	return 1;
}

CMD:comer(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.00, 0, 0, 0, 0, 0);
}

CMD:chao(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "KISSING", "BD_GF_Wave", 3.0, 0, 0, 0, 0, 0);
}

CMD:palmada(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0);
}

CMD:levantarse(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "ped", "getup_front", 4.000000, 0, 0, 0, 0, 0);
}

CMD:traficar(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "DEALER", "DEALER_DEAL", 4.0, 0, 0, 0, 0, 0);
}

CMD:beso(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "KISSING", "Playa_Kiss_02", 4.0, 0, 0, 0, 0, 0);
}

CMD:mear(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return SetPlayerSpecialAction(playerid, 68);
}

CMD:fokear(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation( playerid,"ped", "fucku", 4.0, 0, 1, 1, 1, 1 );
}

CMD:si(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "GANGS", "Invite_Yes", 4.0, 0, 0, 0, 0, 0);
}

CMD:taichi(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "PARK", "Tai_Chi_Loop",  4.1,7,5,1,1,1);
}

CMD:beber(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "BAR", "dnk_stndM_loop", 4.0, 0, 1, 1, 0, 4000);
}

CMD:boxear(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "GYMNASIUM", "gym_shadowbox",  4.1,7,5,1,1,1);
}

CMD:clavarse(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "BSKTBALL", "BBALL_def_jump_shot", 4.0, 0, 1, 1, 1, 500);
}

CMD:depie(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "ped", "SEAT_up", 4.000000, 0, 0, 1, 0, 0);
}

CMD:depie2(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"Attractors","Stepsit_out",4.1,0,0,0,0,0);
}

CMD:servirse(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"BAR","Barcustom_get",4.1,0,0,0,0,0);
}

CMD:servir(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"BAR","Barserve_give",4.1,0,0,0,0,0);
}

CMD:mmm(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"COP_AMBIENT","Coplook_think",4.1,0,0,0,0,0);
}

CMD:saludo1(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"GANGS","hndshkaa",4.1,0,0,0,0,0);
}

CMD:saludo2(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"GANGS","hndshkba",4.1,0,0,0,0,0);
}

CMD:saludo3(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"GANGS","hndshkca",4.1,0,0,0,0,0);
}

CMD:saludo4(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"GANGS","hndshkfa_swt",4.1,0,0,0,0,0);
}

CMD:llorar(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"GRAVEYARD","mrnF_loop",4.1,0,0,0,0,0);
}

CMD:pensar(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"COP_AMBIENT","Coplook_think",4.1,0,0,0,0,0);
}

CMD:dormir(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	if(GetPlayerInterior(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"INT_HOUSE","BED_In_R",4.1,0,0,0,1,0);
}

CMD:rapear(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"RAPPING","RAP_B_Loop",4.0,1,0,0,0,8000);
}

CMD:strip1(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"CAR","flag_drop",4.1,0,1,1,1,1);
}

CMD:strip2(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"STRIP","PUN_CASH",4.1,7,5,1,1,1);
}

CMD:strip3(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"STRIP","PUN_HOLLER",4.1,7,5,1,1,1);
}

CMD:strip4(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"STRIP","PUN_LOOP",4.1,7,5,1,1,1);
}

CMD:strip5(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"STRIP","strip_A",4.1,7,5,1,1,1);
}

CMD:strip6(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"STRIP","strip_B",4.1,7,5,1,1,1);
}

CMD:strip7(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"STRIP","strip_C",4.1,7,5,1,1,1);
}

CMD:strip8(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"STRIP","strip_D",4.1,7,5,1,1,1);
}

CMD:strip9(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"STRIP","strip_E",4.1,7,5,1,1,1);
}

CMD:strip10(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"STRIP","strip_F",4.1,7,5,1,1,1);
}

CMD:strip11(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"STRIP","strip_G",4.1,7,5,1,1,1);
}

CMD:strip12(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"STRIP","STR_B2A",4.1,0,1,1,1,1);
}

CMD:strip13(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"STRIP","strip_E",4.1,7,5,1,1,1);
}

CMD:strip14(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"STRIP","STR_B2C",4.000000, 0, 1, 1, 1, 0);
}

CMD:strip15(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"STRIP","STR_C1",4.000000, 0, 1, 1, 1, 0);
}

CMD:strip16(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"STRIP","STR_C2",4.000000, 0, 1, 1, 1, 0);
}

CMD:strip17(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"STRIP","STR_C2B",4.1,7,5,1,1,1);
}

CMD:strip18(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"STRIP","STR_Loop_A",4.1,7,5,1,1,1);
}

CMD:strip19(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"STRIP","STR_Loop_C",4.1,7,5,1,1,1);
}

CMD:strip20(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"STRIP","STR_Loop_B",4.1,7,5,1,1,1);
}

CMD:echarse(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"SUNBATHE","SitnWait_in_W",4.000000, 0, 0, 0, 1, 0);
}

CMD:patada(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"FIGHT_C","FightC_2",4.1,7,5,1,1,1);
}

CMD:danzar0(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"DANCING","bd_clap",4.1,7,5,1,1,1);
}

CMD:danzar1(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"DANCING","bd_clap1",4.1,7,5,1,1,1);
}

CMD:danzar2(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"DANCING","dance_loop",4.1,7,5,1,1,1);
}

CMD:danzar3(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"DANCING","DAN_Down_A",4.1,7,5,1,1,1);
}

CMD:danzar4(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"DANCING","DAN_Left_A",4.1,7,5,1,1,1);
}

CMD:danzar5(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"DANCING","DAN_Loop_A",4.1,7,5,1,1,1);
}

CMD:danzar6(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"DANCING","DAN_Right_A",4.1,7,5,1,1,1);
}

CMD:danzar7(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"DANCING","DAN_Up_A",4.1,7,5,1,1,1);
}

CMD:danzar8(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"DANCING","dnce_M_a",4.1,7,5,1,1,1);
}

CMD:danzar9(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"DANCING","dnce_M_b",4.1,7,5,1,1,1);
}

CMD:danzar10(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"DANCING","dnce_M_c",4.1,7,5,1,1,1);
}

CMD:danzar11(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"DANCING","dnce_M_d",4.1,7,5,1,1,1);
}

CMD:danzar12(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"DANCING","dnce_M_e",4.1,7,5,1,1,1);
}

CMD:asustado(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"PED","handscower",4.1,0,1,1,1,1);
}

CMD:taxi(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"PED","IDLE_taxi",4.1,0,1,1,1,1);
}

CMD:adolorido(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"PED","KO_shot_stom",4.1,0,1,1,1,1);
}

CMD:seacabo(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"PED","Shove_Partial",4.1,0,1,1,1,1);
}

CMD:fuerza(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"benchpress","gym_bp_celebrate",4.1,0,1,1,1,1);
}

CMD:choriso(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"PED","WALK_gang1",4.0,1,1,1,1,500);
}

CMD:tullio(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"PED","WALK_old",4.0,1,1,1,1,500);
}

CMD:mujer(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.0,1,1,1,1,500);
}

CMD:asco(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"FOOD","EAT_Vomit_SK",4.1,0,1,1,1,1);
}

CMD:quepa(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"GANGS","hndshkea",4.1,0,1,1,1,1);
}

CMD:alentar(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"ON_LOOKERS","SHOUT_02",4.1,7,5,1,1,1);
}

CMD:quepasa(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"GHANDS","gsign1LH",4.1,0,1,1,1,1);
}

CMD:alsar(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"GHANDS","gsign2LH",4.1,0,1,1,1,1);
}

CMD:cansado(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"PED","WOMAN_runfatold",4.1,7,5,1,1,1);
}

CMD:superpatada(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"FIGHT_C","FightC_3",4.1,0,1,1,1,1);
}

CMD:comodo(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"INT_HOUSE","LOU_In",4.1,0,1,1,1,1);
}

CMD:caerse(playerid)
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"DAM_JUMP","DAM_LAUNCH",2,0,1,1,0,0);
}

CMD:reir(playerid)
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0,0);
}

CMD:relax(playerid)
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "CRACK", "crckidle1",4.0,0,1,1,1,-1);
}

CMD:arrestado(playerid)
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation( playerid,"ped", "ARRESTgun", 4.0, 0, 1, 1, 1,500);
}

CMD:chau(playerid)
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "KISSING", "BD_GF_Wave", 3.0, 0, 0, 0, 0, 0);
}

CMD:stop(playerid)
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"PED","endchat_01",4.0,0,0,0,0,0);
}

CMD:sigueme(playerid)
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"WUZI","Wuzi_follow",4.0,0,0,0,0,0);
}

CMD:arrojar(playerid)
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "BSKTBALL", "BBALL_Jump_Shot", 4.0, 0, 1, 1, 1, 500);
}

CMD:negarse(playerid)
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "GANGS", "Invite_No", 4.0, 0, 0, 0, 0, 0);
}

CMD:basta(playerid)
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"POLICE","CopTraf_Stop",4.1,0,0,0,0,0);
}

CMD:pesas(playerid)
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"Freeweights", "gym_free_B",4.0,1,1,1,1,500);
}

CMD:regay(playerid)
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.0,1,1,1,1,500);
}

CMD:asustar(playerid)
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation( playerid,"ped", "fucku", 4.0, 0, 1, 1, 1, 1 );
}

CMD:claro(playerid)
{
	if(HabilitarAnim(playerid) == 0) return 1;
	return ApplyAnimation(playerid, "GANGS", "Invite_Yes", 4.0, 0, 0, 0, 0, 0);
}

CMD:no(playerid,params[])
{
	if(HabilitarAnim(playerid) == 0) return 1;
	if(IsPlayerInAnyVehicle(playerid)) return 1;
	ClearAnimations(playerid);
	return ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
}

CMD:acciones(playerid)
{
	Mensaje(playerid,COLOR_DORADO,"[--------------------------------------[Acciones]--------------------------------------]");
	Mensaje(playerid,COLORCARGO0,""CR"/sexo [1-20],/apuntar [1-4],/gesto [1-15],/asiento,/saludo[1-6]");
	Mensaje(playerid,COLORCARGO0,""CR"/strip[1-20],/patinar[1-3],/danzar[1-13],/fumar,/bailar [1-4]");
	Mensaje(playerid,COLORCARGO0,""CR"/rendirse,/caerse,/borracho,/bomba,/reir,/relax,/paja,/acabar");
	Mensaje(playerid,COLORCARGO0,""CR"/arrestado,/herido,/encender,/inhalar,/vigilar,/recostarse");
	Mensaje(playerid,COLORCARGO0,""CR"/pararse,/cubrirse,/vomitar,/comer,/chau,/palmada,/agonizar");
	Mensaje(playerid,COLORCARGO0,""CR"/levantarse,/beso,/mear,/stop,/sigueme,/sentarse,/pararse");
	Mensaje(playerid,COLOR_DORADO,"[---------------------------[Mas acciones /acciones2]----------------------------]");
	return 1;
}

CMD:acciones2(playerid)
{
	Mensaje(playerid,COLOR_DORADO,"[-------------------------------------[Acciones 2]-------------------------------------]");
	Mensaje(playerid,COLORCARGO0,""CR"/arrojar,/negarse,/taichi,/beber,/pelea,/servirse,/servir,/pensar,/caer");
	Mensaje(playerid,COLORCARGO0,""CR"/botear,/rodar,/llorar,/dormir,/tullio,/rapear,/echarse,/sentadosexy");
	Mensaje(playerid,COLORCARGO0,""CR"/patada,/asustado,/taxi,/adolorido,/basta,/fuerza,/pesas,/regay");
	Mensaje(playerid,COLORCARGO0,""CR"/asco,/asustar,/alentar,/cansado,/patada,/comodo,/hablar,/claro");
	Mensaje(playerid,COLORCARGO0,""CR"/no (para terminar cualquier acci�n)");
	Mensaje(playerid,COLOR_DORADO,"[-------------------------------------------------------------------------------------------]");
	return 1;
}

CMD:hablar(playerid, params[])
{
	if(ProxDetectorS(2.5,playerid, Camello))
	{
		if(PuntosCamello(Camello) == -1) return SetPlayerChatBubble(Camello, "Ven... S�gueme.", -1, 30.0, 5000);
		{
			MostrarDialog(playerid, COMPRARCAMELLO, DIALOG_STYLE_LIST, "Camello", "Comprar\nVender", "Aceptar" , "Cancelar");
		}
	}
	else
	{
		if(HabilitarAnim(playerid) == 0) return 1;
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			ApplyAnimation(playerid,"PED","IDLE_chat",4.1,7,5,1,1,1);
			ApplyAnimation(playerid,"PED","IDLE_chat",4.1,7,5,1,1,1);
		}
	}
	return 1;
}

CMD:apagar(playerid, params[])
{
	new string[50];
    if(strcmp(params,"radio",true) == 0)
	{
	    if(EnRadio(playerid))
		{
		    foreach(new p : Propiedades)
			{
			    if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW])
       			{
       			    if(PropInfo[p][pEmisora] == 0) return Mensaje(playerid, COLOR_BLANCO, "La radio ya se encuentra apagada.");
				    PropInfo[p][pEmisora] = 0;
				    format(string, sizeof(string), "%s apag� la radio.", NombreJugador(playerid));
					ProxDetector(30.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
     				foreach(new i : Player)
					{
						//if(!IsPlayerConnected(i) || IsPlayerNPC(i)) continue;
						if(GetPlayerVirtualWorld(i) == PropInfo[p][pVW]) Mensaje(i, COLOR_BLANCO, "Ya no se escucha la radio."),StopAudioStreamForPlayer(i);
					}
					return 1;
				}
			}
		}
		else return Mensaje(playerid, COLOR_BLANCO, "Necesitas estar junto a una radio para poder apagarla.");
	}
	else if(strcmp(params,"mp3",true) == 0)
	{
		if(MP3Escuchando[playerid] != -1)
		{

			AccionesRol(playerid,"apaga su reproductor mp3.", 15);
			MP3Escuchando[playerid] = -1;
			StopAudioStreamForPlayer(playerid);
			return 1;
		}
		else return Mensaje(playerid,-1,"Tu reproductor mp3 ya est� apagado.");
	}
	return 1;
}

CMD:limpiarchat(playerid) return LimpiarChat(playerid, 20, -1);

CMD:patinar(playerid, params[])
{
	
	if(PlayerInfo[playerid][pPatines] == 0) return Mensaje(playerid,-1,"No tienes patines.");
	Mensaje(playerid,-1,"USA: "CR"/patinar[1-3]");
	return 1;
}

CMD:patinar1(playerid)
{
	if(HabilitarAnim(playerid) == 0) return 1;
	if(PlayerInfo[playerid][pPatines] == 0) return Mensaje(playerid,-1,"No tienes patines.");
	return ApplyAnimation(playerid,"SKATE","skate_run",4.0,1,1,1,1,500);
}

CMD:patinar2(playerid)
{
	if(HabilitarAnim(playerid) == 0) return 1;
	if(PlayerInfo[playerid][pPatines] == 0) return Mensaje(playerid,-1,"No tienes patines.");
	return ApplyAnimation(playerid,"SKATE","skate_sprint",4.0,1,1,1,1,500);
}

CMD:patinar3(playerid)
{
	if(HabilitarAnim(playerid) == 0) return 1;
	if(PlayerInfo[playerid][pPatines] == 0) return Mensaje(playerid,-1,"No tienes patines.");
	return ApplyAnimation(playerid,"SKATE","SKATE_IDLE",4.0,1,1,1,1,500);
}

CMD:vibrar(playerid,params[])
{
	if(PlayerInfo[playerid][pObj][0]  == 19086 && UsandoObj[0][playerid]  == 1 || PlayerInfo[playerid][pObj][1] == 19086 && UsandoObj[1][playerid] == 1 || PlayerInfo[playerid][pObj][2] == 19086 && UsandoObj[2][playerid] == 1 || PlayerInfo[playerid][pObj][3] == 19086 && UsandoObj[3][playerid] == 1)
	{
		if(HabilitarAnim(playerid) == 0) return 1;
		new string[55];
		format(string, 256,"%s pone a vibrar su motosierra.", NombreJugador(playerid));
		ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
		Mensaje(playerid, -1, "Usa "CR"/no"CB" para terminar.");
		ApplyAnimation(playerid,"CHAINSAW","CSAW_PART",4.000000, 1, 0, 0, 0, 0);
	}
	else return Mensaje(playerid, COLORCARGO0, "Necesitas tener un motosierra para usar este comando.");
	return 1;
}

CMD:loro(playerid,params[])
{
	if((PlayerInfo[playerid][pObj][0]  == 19078 || PlayerInfo[playerid][pObj][0]  == 19079 && UsandoObj[0][playerid]  == 1) || (PlayerInfo[playerid][pObj][1] == 19078 || PlayerInfo[playerid][pObj][1] == 19079 && UsandoObj[1][playerid] == 1) || (PlayerInfo[playerid][pObj][2] == 19078 || PlayerInfo[playerid][pObj][2] == 19079 && UsandoObj[2][playerid] == 1) || (PlayerInfo[playerid][pObj][3] == 19078 || PlayerInfo[playerid][pObj][3] == 19079 && UsandoObj[3][playerid] == 1))
	{
		MostrarDialog(playerid, LORO, DIALOG_STYLE_LIST, "Loro", "Ense�ar frase\nSilenciar", "Aceptar", "Cancelar");
	}
	else return Mensaje(playerid, COLORCARGO0, "Necesitas tener un loro para usar este comando.");
	return 1;
}

CMD:vercoche(playerid, params[])
{
	new carid = GetPlayerVehicleID(playerid);
	new closestcar = GetClosestCar(playerid, carid);
	if(IsPlayerInRangeOfVehicle(playerid, closestcar, 9.0))
	{
	 	foreach(new i : Player)
	 	{
			
			new v = GetPlayerVehicle(i, closestcar);
			for(new a = 0; a < MAX_PAUTOS; a++)
			{
				if(v == a)
				{
					va_SendClientMessage(playerid, -1, "ID: %d | Patente: %s | Usuario:  %s", closestcar, Patente[i][a], NombreJugador(i));
					break;
				}
			}
			
		}
		return Mensaje(playerid, -1, "Este veh�culo no pertenece a nadie!");
	}
	else return Mensaje(playerid, -1, "No est�s cerca de un veh�culo.");
}

CMD:pagar(playerid, params[])
{
	new item[32], d, h, m, s;
    if(Jail[playerid] != 1) return 1;
	if(PlayerInfo[playerid][pTiempoJail] > 0) return 1;
	if(EstaEnBus[playerid] != 0) return Mensaje(playerid, -1, "No puedes pagar fianza mientras te trasladan.");
	if(sscanf(params, "s[31]", item)) return 1;
	if(strcmp(item, "fianza", true) == 0)
 	{
  		if(gettimeVariable > TiempoFianza[playerid]){
			new string[100];
			format(string, sizeof string, ""CB"El costo para cumplir la condena es de "CR"%d "Moneda1""CB".", PRECIO_FIANZA);
			MostrarDialog(playerid, P_FIANZA, DIALOG_STYLE_MSGBOX, ""CB"Pagar fianza", string,"Aceptar","Rechazar");
			return 1;
		}
		else
		{
			TimeConvertEx((TiempoFianza[playerid] - gettimeVariable) , d, h, m, s);
			if(h == 0 && m == 0 && s > 0) return va_SendClientMessage(playerid, COLOR_BLANCO, "Debes esperar "CR"%d segundos"CB" para poder pagar tu fianza.",s);
			else if(h == 0 && m == 1) return va_SendClientMessage(playerid, COLOR_BLANCO, "Debes esperar "CR"%d minuto"CB" para poder pagar tu fianza.",m);
			else if(h == 0 && m > 0) return va_SendClientMessage(playerid, COLOR_BLANCO, "Debes esperar "CR"%d minutos"CB" para poder pagar tu fianza.",m);
		}
	}
	return 1;
}

CMD:domiciliaria(playerid,params[])
{
    if(Jail[playerid] != 1) return 1;
	if(PlayerInfo[playerid][pTiempoJail] > 0) return 1;
	new found;
	for(new n = 0; n < MAX_PCASAS; n++) if(PlayerInfo[playerid][CasaID][n] > 0) found++;
    if(found != 0) MostrarDialog(playerid, DOMICILIO, DIALOG_STYLE_MSGBOX, ""CB"Cumplimiento de condena en domicilio", ""CB"El costo para cumplir la condena en tu domicilio es de "CR"10"Moneda1""CB".","Aceptar","Rechazar");
    return 1;
}

CMD:frecuencias(playerid, params[])
{
	if(PlayerInfo[playerid][jMiembro] != 1) return 1;
	if(PlayerInfo[playerid][pDuty] != 1) return 1;
    new string[300];
	for(new p = 1; p < 9; p++) format(string,sizeof(string),"%s{8baab7}#%d: "CB"%s\n", string, p, DatosFrecuencia(frecuencias[p]));
	MostrarDialog(playerid,FRECUENCIAS,DIALOG_STYLE_LIST,"Frencuencias",string,"Cambiar","Cancelar");
	return 1;
}

CMD:cosechar(playerid, params[])
{
	new item[30];
	/*if(!sscanf(params,"s[32]",item))
	{
		if(strcmp(item,"planta",true)==0)
		{
		    if(PlayerTemp[playerid][pt_Congelado]) return Mensaje(playerid,-1,"No puedes hacer esto en este momento.");
			if(PlayerInfo[playerid][jNivel] < 4) return Mensaje(playerid, COLOR_BLANCO, "Para sembrar necesitas tener como m�nimo nivel 4.");
			if(PlayerInfo[playerid][pWP1] != 4) return Mensaje(playerid, COLOR_BLANCO, "Necesitas un cuchillo para cosechar marihuana.");
			foreach(new e : Plantas)
			{
				if(EstaEn(playerid,2.0,MariInfo[e][pX], MariInfo[e][pY], MariInfo[e][pZ]))
				{
					if(MariInfo[e][Creado] == 0) continue;
					if(MariInfo[e][Estado] == 3)
					{
					    if(strcmp(MariInfo[e][Plantador], NombreJugador(playerid), true) == 1)
					    {
					        if(PlayerInfo[playerid][jExperiencia] <= 0) return Mensaje(playerid,-1,"Necesitas por lo menos 1 hora de experiencia para poder cosechar la planta de otro jugador.");
					    	PlayerInfo[playerid][jExperiencia] -= 1;
						}
						new string[100];
						if(ShowSound[playerid] == 1) PlayAudioStreamForPlayer(playerid,"https://"URL"/Cortar.mp3");
						LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 3000);
						GameTextForPlayer(playerid, "~r~Cosechando...", 3000, 3);
						SetTimerEx("CosechandoPlanta", 3000, false, "ud", playerid, e);
						format(string, sizeof(string), "%s corta con un cuchillo la planta de marihuana.", NombreJugador(playerid));
						ProxDetector(10.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
						return 1;
					}
				}
			}
		}
	}*/
	if(sscanf(params, "s[30]", item))
	{
		if(EstaEn(playerid,5.0,-386.6332,-1470.0067,25.7266) || EstaEn(playerid,5.0,-38.5662,56.1850,3.1172))
		{
			if(IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid,-1,"No puedes obtener el trabajo estando en un veh�culo.");
			{
				if(Cosechando[playerid] == 0)
				{
					if(EstaEn(playerid,5.0,-386.6332,-1470.0067,25.7266))
					{
						new pago = random(2);
						switch(pago)
						{
							case 0: TipoCosecha[playerid] = 1;
							case 1: TipoCosecha[playerid] = 2;
						}
       				}
					else if(EstaEn(playerid,5.0,-38.5662,56.1850,3.1172))
					{
						new pago = random(2);
						switch(pago)
						{
							case 0: TipoCosecha[playerid] = 3;
							case 1: TipoCosecha[playerid] = 4;
						}
					}
					Cosechando[playerid] = 1;
					PCosechar[playerid] = 1;
					Mensaje(playerid,-1,"Bien hecho, ahora puedes comenzar a cosechar.");
				}
				else return Mensaje(playerid,-1,"Termina tu recorrido actual para volver a cosechar.");
			}
		}
	}
	return 1;
}

CMD:llenar(playerid,params[])
{
    if(PlayerTemp[playerid][pt_Congelado]) return Mensaje(playerid,-1,"No puedes hacer esto en este momento.");
	new item[32],autoid,resta,string[128]/*,Float:Pos[3]*/;
	if(!sscanf(params,"s[32]",item))
	{
	    /*if(strcmp(item, "balde", true) == 0)
		{
		    if(PlayerInfo[playerid][jBalde] == 0) return Mensaje(playerid,-1,"Necesitas tener un balde en tu inventario.");
		    if(Objeto[playerid] > 0) return Mensaje(playerid,-1,"Ya tienes un objeto en tu inventario.");
			if(AguaBalde[playerid] == 1) return Mensaje(playerid, -1, "Tu balde ya contiene agua.");
			if(EnBalde(playerid))
			{
			    new vw = GetPlayerVirtualWorld(playerid);
                GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
				CongelarEx(playerid);
    			foreach(new i : Player)
				{
					if(EstaEn(i,15.0,Pos[0],Pos[1],Pos[2]))
					{
					    if(vw == GetPlayerVirtualWorld(i) && ShowSound[i] == 1) PlayAudioStreamForPlayer(i,"https://"URL"/AguaBalde.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
				    }
				}
				Mensaje(playerid, COLOR_BLANCO, "Se est� llenando el balde de agua, espera por favor..");
				GameTextForPlayer(playerid, "~b~Llenando Balde...", 6000, 4);
				SetTimerEx("LlenarBalde", 6000, false, "u", playerid);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
			}
			else return Mensaje(playerid, COLOR_BLANCO, "No puedes llenar el balde en este lugar.");
		}*/
		if(strcmp(item, "tanque", true)== 0)
		{
			if(!EnGasolinera(playerid)) return 1;
			if(!IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid,-1,"Debes estar en un veh�culo para llenar el tanque.");
			autoid = GetPlayerVehicleID(playerid);
			resta = CombustibleCoche(autoid)-VehicleFuel[autoid];
			if(PlayerInfo[playerid][jDinero] < resta*10)
			{
				format(string,128,"No tienes suficiente dinero para llenar tu veh�culo, necesitas "CR"$%s", ConvertirNumero(resta*10));
				Mensaje(playerid, -1,string);
				return 1;
			}
			llenado[autoid] = SetTimerEx("DarGasolina",1000,true,"dd", autoid, CombustibleCoche(autoid));
			llenadobarra[playerid] = SetTimerEx("DarGasolinaBarra",1000,true,"dd", playerid, CombustibleCoche(autoid));
			format(string,128,"Se van a cargar %d litros de combustible.", resta);
			Mensaje(playerid, -1,string);
			format(string,128,"Costo total: "CR"$%s", ConvertirNumero(resta*10));
			Mensaje(playerid, -1,string);
			CongelarEx(playerid);
			QuitarDinero(playerid, resta*10);
			SinGaso[autoid] = 0;
		}
	}
	return 1;
}

CMD:combustible(playerid,params[])
{
    if(PlayerTemp[playerid][pt_Congelado]) return Mensaje(playerid,-1,"No puedes hacer esto en este momento.");
	new litros,autoid,string[128],petroleo;
	if(!sscanf(params,"d",litros))
	{
		autoid = GetPlayerVehicleID(playerid);
		if(!EnGasolinera(playerid)) return 1;
		if(!IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid,-1,"Debes estar en un veh�culo para llenar el tanque.");
		if(litros <= 0) return Mensaje(playerid, -1, "El combustible debe ser mayor a 0.");
		new nuevacantidad = litros+VehicleFuel[autoid];
		if(nuevacantidad > CombustibleCoche(autoid)) return Mensaje(playerid,-1,"No puedes recargar esa cantidad de combustible.");
		petroleo = VehicleFuel[autoid]+litros;
		if(PlayerInfo[playerid][jDinero] < litros*10)
		{
			format(string,128,"El litro de combustible cuesta "CR"$10"CB", necesitas "CR"$%s"CB" para pagar "CR"%d"CB" litros.",ConvertirNumero(litros*10), litros);
			Mensaje(playerid, -1,string);
			return 1;
		}
		llenado[autoid] = SetTimerEx("DarGasolina",1000,true,"dd", autoid, petroleo);
		llenadobarra[playerid] = SetTimerEx("DarGasolinaBarra",1000,true,"dd", playerid, petroleo);
		format(string,128,"Se van a cargar %d litros de combustible.", litros);
		Mensaje(playerid, -1,string);
		format(string,128,"Costo total: "CR"$%s", ConvertirNumero(litros*10));
		Mensaje(playerid, -1,string);
		CongelarEx(playerid);
		QuitarDinero(playerid, litros*10);
		SinGaso[autoid] = 0;
	}
	return 1;
}
/*
CMD:regar(playerid, params[])
{
	if(PlayerInfo[playerid][jBalde] != 4) return Mensaje(playerid, COLOR_BLANCO, "Necesitas tener un balde con agua para regar.");
	if(AguaBalde[playerid] != 1) return Mensaje(playerid, COLOR_BLANCO, "Necesitas llenar el balde de agua para hacer esto.");
	if(IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid, COLOR_BLANCO, "No puedes hacer esto en un veh�culo.");
	if(GetPlayerInterior(playerid) != 0) return Mensaje(playerid, COLOR_BLANCO, "No puedes hacer esto en un interior.");
	if(GetPlayerVirtualWorld(playerid) != 0) return Mensaje(playerid, COLOR_BLANCO, "No puedes hacer esto en un interior.");
	new string[80];
	foreach(new e : Plantas)
	{
		if(EstaEn(playerid,1.0,MariInfo[e][pX], MariInfo[e][pY], MariInfo[e][pZ]))
		{
			if(MariInfo[e][Estado] == 1)
			{
				GameTextForPlayer(playerid, "~b~Regando...", 3000, 3);
				LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 3000);
				SetTimerEx("Regando", 3000, false, "ud", playerid, e);
				format(string, sizeof(string), "%s vac�a el balde de agua en la planta.", NombreJugador(playerid));
				ProxDetector(10.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
				return 1;
			}
		}
	}
	return 1;
}*/

CMD:armar(playerid,params[])
{
	new item[6], string[76];
	if(!sscanf(params,"s[6]",item))
	{
		if(strcmp(item, "porro", true)==0)
		{
			if(gettimeVariable > TiempoMarihuana[playerid])
			{
			    if(PlayerTemp[playerid][pt_Congelado]) return Mensaje(playerid,-1,"No puedes hacer esto en este momento.");
				if(EnCombate[playerid] == 1) return ShowTDN(playerid,"No puedes hacer eso estando en ~r~combate~w~.");
				if(GetPlayerSpecialAction(playerid) == 21) return Mensaje(playerid, COLOR_BLANCO, "Ya tienes un porro en la mano.");
				if(GetPlayerState(playerid) == 2 || GetPlayerState(playerid) == 3) return Mensaje(playerid, -1, "No puedes armar un porro si estas en un vehiculo.");
				if(PlayerInfo[playerid][pMarihuana] < 5) return Mensaje(playerid, -1, "No tienes los gramos suficientes de marihuana (5).");
				format(string, sizeof(string), "%s arma un porro.", NombreJugador(playerid));
				ProxDetector(10.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
				Mensaje(playerid,-1,"Usa "CR"'Y'"CB" para fumar o "CR"INTRO"CB" para tirar el porro.");
    			SetPlayerAttachedObject(playerid,4,3044,6,0.003999, 0.001999, 0.051000, -2.799998, 0.000000, 56.699954, 1.000000, 1.000000, 1.000000);
				PlayerTemp[playerid][TienePorro] = 100;
				PlayerInfo[playerid][pMarihuana] -= 5;
				TiempoMarihuana[playerid] = gettimeVariable + 60;
				RevisarLogro(playerid,5);
			}
			else format(string,76,"Por favor espera {FF3300}%d"CB" segundos para volver a armar un porro.", TiempoMarihuana[playerid] - gettimeVariable),Mensaje(playerid, -1, string);
		}
	}
	return 1;
}

CMD:sembrar(playerid, params[])
{
	Mensaje(playerid, -1, "Deshabilitado temporalmente");
    /*if(PlayerTemp[playerid][pt_Congelado]) return Mensaje(playerid,-1,"No puedes hacer esto en este momento.");
	if(PlayerInfo[playerid][jNivel] < 4) return Mensaje(playerid, COLOR_BLANCO, "Para sembrar necesitas tener como m�nimo nivel 4.");
	if(PlayerInfo[playerid][pWP1] != 4) return Mensaje(playerid, COLOR_BLANCO, "Necesitas un cuchillo para sembrar marihuana.");
	if(PlayerInfo[playerid][pSemillas] < 5) return Mensaje(playerid, COLOR_BLANCO, "Necesitas 5 semillas de marihuana.");
	if(IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid, COLOR_BLANCO, "No puedes hacer esto en un veh�culo.");
	if(GetPlayerVirtualWorld(playerid) != 0) return Mensaje(playerid, COLOR_BLANCO, "No puedes hacer esto en un interior.");
	if(GetPlayerInterior(playerid) != 0) return Mensaje(playerid, COLOR_BLANCO, "No puedes hacer esto en un interior.");
	switch(PlayerInfo[playerid][VIP])
	{
	    case 1: if(CuantoPlanto(playerid) == 4) return va_SendClientMessage(playerid,-1,"No puedes tener m�s de %d plantas, necesitas una cuenta VIP superior para aumentar la capacidad permitida.",CuantoPlanto(playerid));
	    case 2: if(CuantoPlanto(playerid) == 6) return va_SendClientMessage(playerid,-1,"No puedes tener m�s de %d plantas, necesitas una cuenta VIP superior para aumentar la capacidad permitida.",CuantoPlanto(playerid));
	    case 3: if(CuantoPlanto(playerid) == 8) return va_SendClientMessage(playerid,-1,"No puedes tener m�s de %d plantas, necesitas una cuenta VIP superior para aumentar la capacidad permitida.",CuantoPlanto(playerid));
	    default: if(CuantoPlanto(playerid) == 2) return va_SendClientMessage(playerid,-1,"No puedes tener m�s de %d plantas, necesitas una cuenta VIP superior para aumentar la capacidad permitida.",CuantoPlanto(playerid));
	}
	new id = PlantaLibre();
    if(id == -1) return Mensaje(playerid,-1,"No se puede crear mas plantas, intentalo mas tarde.");
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	foreach(new e : Plantas)
	{
		if(EstaEn(playerid,4.0,MariInfo[e][pX],MariInfo[e][pY],MariInfo[e][pZ])) return Mensaje(playerid,-1,"No puedes sembrar tan cerca de otra plantaci�n.");
	}
	PlayerInfo[playerid][pSemillas] -= 5;
	CongelarEx(playerid);
	GameTextForPlayer(playerid, "~g~Sembrando...", 6000, 3);
	LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 6000);
	SetTimerEx("CreandoMaria", 5000, false, "ud", playerid, id);
	MariInfo[id][Label] = CreateDynamic3DTextLabel("Sembrando...", COLOR_BLANCO, x, y, z+0.4, 8.0);
	return 1;*/
}

CMD:bajar(playerid,params[])
{
	if(EstaEn(playerid, 5.0, 152.5124,-1952.7639,47.8750)) return SetPosEx(playerid,154.3395,-1946.6226,5.3902,175.0090,0,0);
	if(EstaEn(playerid, 5.0, 909.9585,-3016.6672,49.9987)) return SetPosEx(playerid,905.5018,-3022.0146,7.5141,311.8669,0,0);
	if(EstaEn(playerid, 5.0, -1116.5095,336.0152,14.1442)) return SetPosEx(playerid,-1115.7904,335.3422,1.9609,0,0,0);
	if(EstaEn(playerid, 5.0, -1183.2729,59.7690,14.1484)) return SetPosEx(playerid,-1182.6328,60.4289,1.9609,0,0,0);
	if(EstaEn(playerid, 5.0, -1082.6582,-208.3099,14.1440)) return SetPosEx(playerid,-1081.8900,-207.9342,1.9609,0,0,0);
	if(EstaEn(playerid, 5.0, -1155.1638,-476.1771,14.1484)) return SetPosEx(playerid,-1154.2579,-476.7021,1.9609,0,0,0);
	if(EstaEn(playerid, 5.0, -1361.0728,-695.5795,14.1484)) return SetPosEx(playerid,-1361.0671,-696.6432,1.9609,0,0,0);
	if(EstaEn(playerid, 5.0, -1603.4130,-695.7511,14.1440)) return SetPosEx(playerid,-1603.3958,-696.6434,1.9609,0,0,0);
	if(EstaEn(playerid, 5.0, -1735.5591,-445.9360,14.1484)) return SetPosEx(playerid,-1736.4478,-445.9445,1.9609,0,0,0);
	if(EstaEn(playerid, 5.0, -1618.0411,-84.6595,14.1484)) return SetPosEx(playerid,-1618.7266,-83.9973,1.9609,0,0,0);
	if(EstaEn(playerid, 5.0, -1443.7330,89.5017,14.1466)) return SetPosEx(playerid,-1444.4602,90.2323,1.9609,0,0,0);
	if(EstaEn(playerid, 5.0, -1164.0070,369.3972,14.1484)) return SetPosEx(playerid,-1164.6530,369.9854,1.9609,0,0,0);
	return 1;
}

CMD:heladera(playerid,params[])
{
	new opcion[15],opcion2[15],query[250];
	if(!sscanf(params,"s[15]s[15]",opcion,opcion2))
	{
		if(strcmp(opcion,"guardar",true) == 0)
		{
	    	if(strcmp(opcion2,"objeto",true) == 0)
	    	{
	        	if(GetPlayerVirtualWorld(playerid) != 0)
	        	{
	            	foreach(new p : Propiedades)
	            	{
	                	if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW])
	                	{
	                    	if(EstaEn(playerid,2,PropInfo[p][pHeladeraX],PropInfo[p][pHeladeraY],PropInfo[p][pHeladeraZ]))
	                    	{
	                    	    if(PropInfo[p][pTipo] == 3)
	                    	    {
									if(PlayerInfo[playerid][p_DBID] != PropInfo[p][pIDPropietario]) return Mensaje(playerid, -1, "No puedes ver el contenido de esta heladera.");
	                    	    }
	                    		new total = PropInfo[p][pCerveza] + PropInfo[p][pVino] + PropInfo[p][pSprunk] + PropInfo[p][pPizzas]  + PropInfo[p][pAquarius];
								if(total < PropInfo[p][pLugarHeladera])
								{
									if(Objeto[playerid] == 10000)//Aquarius x12
	                    	    	{
	                    	    	    if(total+12 > PropInfo[p][pLugarHeladera]) PropInfo[p][pAquarius] += PropInfo[p][pLugarHeladera]-total;
										else PropInfo[p][pAquarius] += 12;
										SacarObjeto(playerid,Objeto[playerid]);
                                    	mysql_format(Conecction, query, sizeof(query),"UPDATE `propiedades` SET `Aquarius`='%d' WHERE `ID`='%d'",PropInfo[p][pAquarius],PropInfo[p][propiedad_ID]);
										mysql_tquery(Conecction, query);
										format(query,sizeof(query),"%s guard� algunas botellas de aquarius en la heladera.",NombreJugador(playerid));
										ProxDetector(15.0, playerid, query, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
										GuardarPropiedad(p);
										return 1;
				        	    	}
	                    	    	else if(Objeto[playerid] == 10001)//Vino x12
	                    	    	{
	                    	    	    if(total+12 > PropInfo[p][pLugarHeladera]) PropInfo[p][pVino] += PropInfo[p][pLugarHeladera]-total;
										else PropInfo[p][pVino] += 12;
                                    	SacarObjeto(playerid,Objeto[playerid]);
                                    	mysql_format(Conecction, query, sizeof(query),"UPDATE `propiedades` SET `Vino`='%d' WHERE `ID`='%d'",PropInfo[p][pVino],PropInfo[p][propiedad_ID]);
										mysql_tquery(Conecction, query);
										format(query,sizeof(query),"%s guard� algunas botellas de vino en la heladera.",NombreJugador(playerid));
										ProxDetector(15.0, playerid, query, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
										GuardarPropiedad(p);
										return 1;
	                    	    	}
	                    	    	else if(Objeto[playerid] == 10002)//Cerveza x12
	                    	    	{
	                    	    	    if(total+12 > PropInfo[p][pLugarHeladera]) PropInfo[p][pCerveza] += PropInfo[p][pLugarHeladera]-total;
										else PropInfo[p][pCerveza] += 12;
                                    	SacarObjeto(playerid,Objeto[playerid]);
                                    	mysql_format(Conecction, query, sizeof(query),"UPDATE `propiedades` SET `Cerveza`='%d' WHERE `ID`='%d'",PropInfo[p][pCerveza],PropInfo[p][propiedad_ID]);
										mysql_tquery(Conecction, query);
										format(query,sizeof(query),"%s guard� algunos botellas de cerveza en la heladera.",NombreJugador(playerid));
										ProxDetector(15.0, playerid, query, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
										GuardarPropiedad(p);
										return 1;
	                    	    	}
	                    	    	else if(Objeto[playerid] == 10003)//Sprunk x12
	                    	    	{
	                    	    	    if(total+12 > PropInfo[p][pLugarHeladera]) PropInfo[p][pSprunk] += PropInfo[p][pLugarHeladera]-total;
          								else PropInfo[p][pSprunk] += 12;
                                    	SacarObjeto(playerid,Objeto[playerid]);
                                    	mysql_format(Conecction, query, sizeof(query),"UPDATE `propiedades` SET `Sprunk`='%d' WHERE `ID`='%d'",PropInfo[p][pSprunk],PropInfo[p][propiedad_ID]);
										mysql_tquery(Conecction, query);
										format(query,sizeof(query),"%s guard� algunos vasos de sprunk en la heladera.",NombreJugador(playerid));
										ProxDetector(15.0, playerid, query, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
										GuardarPropiedad(p);
										return 1;
	                    	    	}
									else if(Objeto[playerid] == 10004)//Pizzas x8
	                    	    	{
	                    	    	    if(total+8 > PropInfo[p][pLugarHeladera]) PropInfo[p][pPizzas] += PropInfo[p][pLugarHeladera]-total;
										else PropInfo[p][pPizzas] += 8;
                                    	SacarObjeto(playerid,Objeto[playerid]);
                                    	mysql_format(Conecction, query, sizeof(query),"UPDATE `propiedades` SET `Pizzas`='%d' WHERE `ID`='%d'",PropInfo[p][pPizzas],PropInfo[p][propiedad_ID]);
										mysql_tquery(Conecction, query);
										format(query,sizeof(query),"%s guard� algunas porciones de pizza en la heladera.",NombreJugador(playerid));
										ProxDetector(15.0, playerid, query, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
										GuardarPropiedad(p);
										return 1;
	                    	    	}
	                    	    	else if(Objeto[playerid] == 1000)//Cerveza x6
	                    	    	{
	                    	    	    if(total+6 > PropInfo[p][pLugarHeladera]) PropInfo[p][pCerveza] += PropInfo[p][pLugarHeladera]-total;
										else PropInfo[p][pCerveza] += 6;
                                    	SacarObjeto(playerid,Objeto[playerid]);
                                    	mysql_format(Conecction, query, sizeof(query),"UPDATE `propiedades` SET `Cerveza`='%d' WHERE `ID`='%d'",PropInfo[p][pCerveza],PropInfo[p][propiedad_ID]);
										mysql_tquery(Conecction, query);
										format(query,sizeof(query),"%s guard� algunos botellas de cerveza en la heladera.",NombreJugador(playerid));
										ProxDetector(15.0, playerid, query, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
										GuardarPropiedad(p);
										return 1;
	                    	    	}
	                    	    	else if(Objeto[playerid] == 1001)//Vino x6
	                    	    	{
	                    	    	    if(total+6 > PropInfo[p][pLugarHeladera]) PropInfo[p][pVino] += PropInfo[p][pLugarHeladera]-total;
										else PropInfo[p][pVino] += 6;
                                    	SacarObjeto(playerid,Objeto[playerid]);
                                    	mysql_format(Conecction, query, sizeof(query),"UPDATE `propiedades` SET `Vino`='%d' WHERE `ID`='%d'",PropInfo[p][pVino],PropInfo[p][propiedad_ID]);
										mysql_tquery(Conecction, query);
										format(query,sizeof(query),"%s guard� algunas botellas de vino en la heladera.",NombreJugador(playerid));
										ProxDetector(15.0, playerid, query, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
										GuardarPropiedad(p);
										return 1;
	                    	    	}
                                    else if(Objeto[playerid] == 1002)//Sprunk x4
	                    	    	{
	                    	    	    if(total+4 > PropInfo[p][pLugarHeladera]) PropInfo[p][pSprunk] += PropInfo[p][pLugarHeladera]-total;
										else PropInfo[p][pSprunk] += 4;
                                    	SacarObjeto(playerid,Objeto[playerid]);
                                    	mysql_format(Conecction, query, sizeof(query),"UPDATE `propiedades` SET `Sprunk`='%d' WHERE `ID`='%d'",PropInfo[p][pSprunk],PropInfo[p][propiedad_ID]);
										mysql_tquery(Conecction, query);
										format(query,sizeof(query),"%s guard� algunos vasos de sprunk en la heladera.",NombreJugador(playerid));
										ProxDetector(15.0, playerid, query, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
										GuardarPropiedad(p);
										return 1;
	                    	    	}
	                    	    	else Mensaje(playerid,-1,"No tienes nada para guardar, puedes comprar bebidas en el Mercado Central de BlueBerry.");
	                    		}
	                    		else Mensaje(playerid,-1,"No hay m�s lugar en la heladera.");
	                    	}
	                	}
	            	}
	        	}
	    	}
		}
		else if(strcmp(opcion,"sacar",true) == 0)
		{
	    	if(strcmp(opcion2,"vino",true) == 0)
	    	{
	        	if(GetPlayerVirtualWorld(playerid) != 0)
	        	{
	            	foreach(new p : Propiedades)
	            	{
	                	if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW])
	                	{
	                    	if(EstaEn(playerid,2,PropInfo[p][pHeladeraX],PropInfo[p][pHeladeraY],PropInfo[p][pHeladeraZ]))
	                    	{
	                    	    if(PropInfo[p][pTipo] == 3)
								{
									if(PlayerInfo[playerid][p_DBID] != PropInfo[p][pIDPropietario])
									{
										Mensaje(playerid, -1, "No puedes hacer uso de esta heladera.");
										return 1;
									}
								}
	                    		if(PropInfo[p][pVino] > 0)
	                    		{
	                            	PropInfo[p][pVino] --;
	                            	DarVino(playerid);
									format(query,sizeof(query),"%s saca una botella de vino de la heladera.",NombreJugador(playerid));
									ProxDetector(15.0, playerid, query, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
									GuardarPropiedad(p);
									return 1;
	                    		}
	                    		else Mensaje(playerid,-1,"No hay botellas de vino en esta heladera.");
							}
	                	}
					}
				}
	    	}
	    	else if(strcmp(opcion2,"cerveza",true) == 0)
	    	{
	        	if(GetPlayerVirtualWorld(playerid) != 0)
	        	{
	            	foreach(new p : Propiedades)
	            	{
	                	if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW])
	                	{
	                    	if(EstaEn(playerid,2,PropInfo[p][pHeladeraX],PropInfo[p][pHeladeraY],PropInfo[p][pHeladeraZ]))
	                    	{
	                    	    if(PropInfo[p][pTipo] == 3)
								{
									if(PlayerInfo[playerid][p_DBID] != PropInfo[p][pIDPropietario]) return Mensaje(playerid, -1, "No puedes hacer uso de esta heladera.");
								}
	                    		if(PropInfo[p][pCerveza] > 0)
	                    		{
	                            	PropInfo[p][pCerveza] --;
	                            	DarCerveza(playerid);
									format(query,sizeof(query),"%s saca una botella de cerveza de la heladera.",NombreJugador(playerid));
									ProxDetector(15.0, playerid, query, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
									GuardarPropiedad(p);
									return 1;
	                    		}
	                    		else Mensaje(playerid,-1,"No hay botellas de cerveza en esta heladera.");
							}
	                	}
					}
				}
	    	}
	    	else if(strcmp(opcion2,"sprunk",true) == 0)
	    	{
	        	if(GetPlayerVirtualWorld(playerid) != 0)
	        	{
	            	foreach(new p : Propiedades)
	            	{
	                	if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW])
	                	{
	                    	if(EstaEn(playerid,2,PropInfo[p][pHeladeraX],PropInfo[p][pHeladeraY],PropInfo[p][pHeladeraZ]))
	                    	{
	                    	    if(PropInfo[p][pTipo] == 3)
								{
									if(PlayerInfo[playerid][p_DBID] != PropInfo[p][pIDPropietario]) Mensaje(playerid, -1, "No puedes hacer uso de esta heladera.");
								}
	                    		if(PropInfo[p][pSprunk] > 0)
	                    		{
	                            	PropInfo[p][pSprunk] --;
									DarSprunk(playerid);
									format(query,sizeof(query),"%s saca un vaso de sprunk de la heladera.",NombreJugador(playerid));
									ProxDetector(15.0, playerid, query, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
									GuardarPropiedad(p);
									return 1;
	                    		}
	                    		else Mensaje(playerid,-1,"No hay vasos de sprunk en esta heladera.");
							}
	                	}
					}
				}
	    	}
			else if(strcmp(opcion2,"aquarius",true) == 0)
	    	{
	        	if(GetPlayerVirtualWorld(playerid) != 0)
	        	{
	            	foreach(new p : Propiedades)
	            	{
	                	if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW])
	                	{
	                    	if(EstaEn(playerid,2,PropInfo[p][pHeladeraX],PropInfo[p][pHeladeraY],PropInfo[p][pHeladeraZ]))
	                    	{
	                    	    if(PropInfo[p][pTipo] == 3)
								{
									if(PlayerInfo[playerid][p_DBID] != PropInfo[p][pIDPropietario]) return Mensaje(playerid, -1, "No puedes hacer uso de esta heladera.");
								}
	                    		if(PropInfo[p][pAquarius] > 0)
	                    		{
	                            	PropInfo[p][pAquarius] --;
									DarAquarius(playerid);
									format(query,sizeof(query),"%s saca una botella de aquarius de la heladera.",NombreJugador(playerid));
									ProxDetector(15.0, playerid, query, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
									GuardarPropiedad(p);
									return 1;
	                    		}
	                    		else Mensaje(playerid,-1,"No hay botellas de Aquarius en esta heladera.");
							}
	                	}
					}
				}
	    	}
	    	else if(strcmp(opcion2,"pizza",true) == 0)
	    	{
	        	if(GetPlayerVirtualWorld(playerid) != 0)
	        	{
	            	foreach(new p : Propiedades)
	            	{
	                	if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW])
	                	{
	                    	if(EstaEn(playerid,2,PropInfo[p][pHeladeraX],PropInfo[p][pHeladeraY],PropInfo[p][pHeladeraZ]))
	                    	{
	                    	    if(PropInfo[p][pTipo] == 3)
								{
									if(PlayerInfo[playerid][p_DBID] != PropInfo[p][pIDPropietario]) return Mensaje(playerid, -1, "No puedes hacer uso de esta heladera.");
								}
	                    		if(PropInfo[p][pPizzas] > 0)
	                    		{
	                            	PropInfo[p][pPizzas] --;
	                            	DarPizza(playerid);
									format(query,sizeof(query),"%s saca una porci�n de pizza de la heladera.",NombreJugador(playerid));
									ProxDetector(15.0, playerid, query, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
									GuardarPropiedad(p);
									return 1;
	                    		}
	                    		else Mensaje(playerid,-1,"No hay una porci�n de pizza en esta heladera.");
							}
	                	}
					}
				}
	    	}
		}
	}
	return true;
}

CMD:inscribirse(playerid,params[])
{
	if(EstaEn(playerid,5, 415.2025,2535.5874,19.1484))
	{
	    if(ViajeAvion[playerid] == 1) return Mensaje(playerid,-1,"Ya est�s inscrito en el curso de paracaidismo.");
	    if(PlayerInfo[playerid][jDinero] < 5000) return Mensaje(playerid,-1,"Necesitas "CR"$5.000"CB" para poder inscribirte en el curso de paracaidismo.");
		Mensaje(playerid,-1,"Te inscribiste para participar en el curso de paracaidismo, por favor espera unos minutos.");
		Mensaje(playerid,-1,"Si te alejas mucho de la oficina, no podr�s subirte al avi�n.");
		QuitarDinero(playerid, 5000);
		ViajeAvion[playerid] = 1;
		return 1;
	}
	if(EstaEn(playerid,5,-1447.7421,-313.3544,1052.0969))
	{
		if(HabilitarCarreras == 0) return Mensaje(playerid,-1,"No hay una carrera en curso para poder inscribirte.");
		if(EnCarreras[playerid] != 0) return Mensaje(playerid,-1,"Tu ya estas inscripto en la carrera.");
		if(PlayerInfo[playerid][jDinero] < 2000) return Mensaje(playerid,-1,"Necesitas "CR"$2.000"CB" para poder inscribirte en la carrera.");
		if(EmpezoCarrera == 1) return Mensaje(playerid,-1,"No puedes inscribirte si la carrera ya comenzo.");
		if(ParticipantesCarrera >= 13) return Mensaje(playerid,-1,"No hay mas lugares libres para la carrera, espera a la siguiente.");
		QuitarDinero(playerid,2000);
		lugarcarrera ++;
		EnCarreras[playerid] = lugarcarrera;
		ParticipantesCarrera ++;
		ParticipantesCarrera2 ++;
		Mensaje(playerid,-1,"Te inscribiste para participar en la carrera, por favor espera unos minutos.");
		Mensaje(playerid,-1,"Perder�s el puesto si sales del estadio.");
		return 1;
	}
	return true;
}

CMD:transmision(playerid)
{
	if(Emisoras[playerid][TransEmisora] == 0) return Mensaje(playerid, COLOR_BLANCO, "No estas transmitiendo en ninguna cabina de radio.");
	new string[128];
	format(string, sizeof(string),"http://radio."WebName":8000/listen.pls?sid=%d", Emisoras[playerid][EmisoraID]);
	if(ShowSound[playerid] == 1) PlayAudioStreamForPlayer(playerid, string);
	return 1;
}

CMD:oyentes(playerid)
{
	if(Emisoras[playerid][TieneEmisora] == 0) return Mensaje(playerid, COLOR_BLANCO, "No tienes una emisora, ve y consigue una en la entrada.");
	if(Emisoras[playerid][TransEmisora] == 0) return Mensaje(playerid, COLOR_BLANCO, "No estas transmitiendo en ninguna cabina de radio.");
	new emisoraid, string[128];
	emisoraid = Emisoras[playerid][CabinaOcupada];
	format(string, sizeof(string), "Tienes un total de "CR"%d"CB" oyentes.", GetOyentesEmisora(emisoraid));
	Mensaje(playerid,COLOR_BLANCO, string);
	return 1;
}

CMD:r(playerid, params[])
{
	new cabina = 0,mensaje[128], string[128];
	if(sscanf(params, "s[128]", mensaje)) return Mensaje(playerid,COLOR_BLANCO,"Por favor usa "CR"/r texto");
	if(IsPlayerInDynamicArea(playerid, AreaCabinas[1])) cabina = 1;
	else if(IsPlayerInDynamicArea(playerid, AreaCabinas[2])) cabina = 2;
	else if(IsPlayerInDynamicArea(playerid, AreaCabinas[3])) cabina = 3;
	else if(IsPlayerInDynamicArea(playerid, AreaCabinas[4])) cabina = 4;
	if(cabina != 0)
	{
		if(CabinasOcupadasEmisoras[cabina][1] == playerid)
		{
			format(string, sizeof(string), "%s por micr�fono: %s",NombreJugador(playerid), mensaje);
			ProxDetector(15.0, playerid, string, COLOR_GRAD6, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2);
			MandarMensajeLocutor(playerid, cabina, mensaje);
		}
		else if(TieneMicrofono[playerid] == cabina)
		{
		    format(string, sizeof(string), "%s por micr�fono: %s",NombreJugador(playerid), mensaje);
			ProxDetector(15.0, playerid, string, COLOR_GRAD6, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2);
			MandarMensajeInvitado(playerid, cabina, mensaje);
		}
		else return Mensaje(playerid, COLOR_BLANCO, "No tienes un micr�fono para poder hablar por la radio.");
	}
	else Mensaje(playerid, COLOR_BLANCO, "No estas en ninguna cabina de radio.");
	return 1;
}

CMD:parlante(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if(GetPVarInt(playerid, "PlacedBB") == INVALID_STREAMER_ID)
		{
			if(IsPlayerInArea(playerid,335.1406,348.3424, 176.4459,189.2787)) return 1;
			if(IsPlayerInArea(playerid,334.5453,348.3273,154.5333,163.1373)) return 1;
			if(IsPlayerInArea(playerid,341.4131,348.4351,144.0930,153.1205)) return 1;
			if(IsPlayerInArea(playerid,360.7875,366.0172,153.1041,161.7399)) return 1;
			new Float:BBCoord[4];
			GetPlayerPos(playerid, BBCoord[0], BBCoord[1], BBCoord[2]);
			GetPlayerFacingAngle(playerid, BBCoord[3]);
			SetPVarFloat(playerid, "BBX", BBCoord[0]);
			SetPVarFloat(playerid, "BBY", BBCoord[1]);
			SetPVarFloat(playerid, "BBZ", BBCoord[2]);
			BBCoord[0] += (2 * floatsin(-BBCoord[3], degrees));
			BBCoord[1] += (2 * floatcos(-BBCoord[3], degrees));
			BBCoord[2] -= 1.0;
			foreach(new i : Player)
			{
				if(GetPVarInt(i, "PlacedBB") != INVALID_STREAMER_ID)
				{
					if(IsPlayerInRangeOfPoint(playerid, 35.0, GetPVarFloat(i, "BBX"), GetPVarFloat(i, "BBY"), GetPVarFloat(i, "BBZ")))
					{
						Mensaje(playerid, COLOR_WHITE, "No puedes colocar tu parlante aqu�, ya hay una colocada cerca de donde est�s.");
						return 1;
					}
				}
			}
			SetPVarInt(playerid, "PlacedBB", CreateDynamicObject(2231, BBCoord[0], BBCoord[1], BBCoord[2], 0.0, 0.0, 0.0, .worldid = GetPlayerVirtualWorld(playerid), .interiorid = GetPlayerInterior(playerid)));
			SetPVarInt(playerid, "BBArea", CreateDynamicSphere(BBCoord[0], BBCoord[1], BBCoord[2], 30.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid)));
			SetPVarInt(playerid, "BBInt", GetPlayerInterior(playerid));
			SetPVarInt(playerid, "BBVW", GetPlayerVirtualWorld(playerid));
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);
			Mensaje(playerid, -1, "Has colocado un parlante usa el comando "CR"'/musica'"CB" para ver las opciones o usa "CR"/parlante"CB" para quitarlo.");
			AccionesRol(playerid,"ha colocado un parlante en su pocisi�n.",20);

		}
		else
		{
			PickUpBoombox(playerid);
			Mensaje(playerid, COLOR_WHITE, "Has guardado tu parlante.");
		}
	}
	return 1;
}

CMD:mp3(playerid, params[])
{
	new IDemisora;
	if(PlayerInfo[playerid][pNumero] == 0) return Mensaje(playerid, COLOR_GRAD2, "No tienes un tel�fono.");
	if(!sscanf(params, "d", IDemisora))
	{
		if(IDemisora < 0 || IDemisora > 4) return 1;
		if(IDemisora == 0)
		{
			if(MP3Escuchando[playerid] != -1)
			{
				AccionesRol(playerid,"apaga su reproductor mp3.", 15);
				MP3Escuchando[playerid] = -1;
				StopAudioStreamForPlayer(playerid);
				return 1;
			}
			else return Mensaje(playerid,-1,"Tu "CR"reproductor mp3"CB" ya est� apagado.");
		}
		if(CabinasOcupadasEmisoras[IDemisora][0] != 0)
		{
			if(MP3Escuchando[playerid] == IDemisora) return Mensaje(playerid,-1,"Ya te encuentras sintonizando esa emisora.");
			if(MP3Escuchando[playerid] == -1) AccionesRol(playerid,"enciende su reproductor mp3.", 15);
			if(MP3Escuchando[playerid] != -1) AccionesRol(playerid,"cambia la emisora de su reproductor mp3.", 15);
			MP3Escuchando[playerid] = IDemisora;
			ParlanteEscuchando[playerid] = -1;
			new mensaje[128],string2[128];
			format(mensaje, sizeof(mensaje), "Emisora: %d - "CR"%s",IDemisora, Emisoras[CabinasOcupadasEmisoras[IDemisora][1]][NombreEmisora]);
			format(string2, sizeof(string2),"http://radio."WebName":8000/listen.pls?sid=%d", Emisoras[CabinasOcupadasEmisoras[IDemisora][1]][EmisoraID]);
			Mensaje(playerid,-1, mensaje);
			PlayAudioStreamForPlayer(playerid, string2);
			return 1;
		}
		else return Mensaje(playerid, COLOR_BLANCO, "Esa emisora no est� transmitiendo ahora mismo.");
	}
	else
	{
		new encontroemisoras=0, string[264];
	  	foreach(new id : Player)
		{
			if(Emisoras[id][TransEmisora] == 1)
			{
				format(string, sizeof(string), ""CR"/mp3 %d "CB"- %s", Emisoras[id][CabinaOcupada], Emisoras[id][NombreEmisora]);
				Mensaje(playerid, COLOR_BLANCO, string);
				encontroemisoras=1;
			}
		}
		if(encontroemisoras == 0) return Mensaje(playerid,-1,"No hay emisoras transmitiendo en este momento.");
	}
	return 1;
}

CMD:emisoras(playerid)
{
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER || EnRadio(playerid) && GetPlayerVirtualWorld(playerid) != 0)
	{
		new encontroemisoras=0, string[264];
  		foreach(new id : Player)
		{
			if(Emisoras[id][TransEmisora] == 1)
			{
				format(string, sizeof(string), ""CR"/emisora %d "CB"- %s", Emisoras[id][CabinaOcupada], Emisoras[id][NombreEmisora]);
				Mensaje(playerid, COLOR_BLANCO, string);
				encontroemisoras=1;
			}
		}
		if(encontroemisoras == 0) return Mensaje(playerid,-1,"No hay emisoras transmitiendo en este momento.");
	}
	else return Mensaje(playerid, COLOR_BLANCO, "Necesitas estar en un veh�culo o junto a una radio para ver las emisoras disponibles.");
	return 1;
}

CMD:musica(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if(GetPVarInt(playerid, "PlacedBB") != INVALID_STREAMER_ID)
		{
			if(IsPlayerInRangeOfPoint(playerid, 3.0, GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ")))
			{
				MostrarDialog(playerid, DIALOG_PARLANTE,DIALOG_STYLE_LIST,"Elige la opci�n que deseas utilizar", "Reproducir emisora\nReproducir desde youtube", "Aceptar", "Cancelar");
			}
			else
			{
				return Mensaje(playerid, COLOR_WHITE, "No est�s cerca de tu parlante");
			}
		}
		else
		{
			Mensaje(playerid, COLOR_WHITE, "No has colocado ningun parlante");
		}
	}
	return 1;
}



CMD:emisora(playerid, params[])
{
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER || EnRadio(playerid) && GetPlayerVirtualWorld(playerid) != 0)
	{
		new IDemisora;
		if(!sscanf(params, "d", IDemisora))
		{
			if(IDemisora < 1 || IDemisora > 4) return 1;
			if(CabinasOcupadasEmisoras[IDemisora][0] != 0)
			{
			    if(IsPlayerInAnyVehicle(playerid))
				{
					new autoID;
     				autoID = GetPlayerVehicleID(playerid);
					if(EmisoraEscuchando[autoID] == IDemisora) return Mensaje(playerid,-1,"El est�reo ya se encuentra sintonizando esa emisora.");
					if(EmisoraEscuchando[autoID] == -1) AccionesRol(playerid,"enciende el est�reo.", 15);
					if(EmisoraEscuchando[autoID] != -1) AccionesRol(playerid,"cambia de emisora.", 15);
					EmisoraEscuchando[autoID] = IDemisora;
					new mensaje[128],string2[128];
					format(mensaje, sizeof(mensaje), "Emisora: %d - "CR"%s",IDemisora, Emisoras[CabinasOcupadasEmisoras[IDemisora][1]][NombreEmisora]);
					format(string2, sizeof(string2),"http://radio."WebName":8000/listen.pls?sid=%d", Emisoras[CabinasOcupadasEmisoras[IDemisora][1]][EmisoraID]);
					foreach(new i : Player)
					{
 						if(IsPlayerInVehicle(i, autoID))
		    			{
							Mensaje(i,-1, mensaje);
							if(ShowSound[i] == 1) PlayAudioStreamForPlayer(i, string2);
							if(MP3Escuchando[i] != -1) MP3Escuchando[i] = -1;
							ParlanteEscuchando[i] = -1;
						}
					}
				}
				if(EnRadio(playerid) && GetPlayerVirtualWorld(playerid) != 0)
				{
				    foreach(new p : Propiedades)
   					{
					    if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW])
	        			{
	        			    if(PropInfo[p][pEmisora] == IDemisora) return Mensaje(playerid,-1,"La radio ya se encuentra sintonizando esa emisora.");
	        			    if(PropInfo[p][pEmisora] == 0) AccionesRol(playerid,"enciende el est�reo.", 15);
							if(PropInfo[p][pEmisora] != 0) AccionesRol(playerid,"cambia de emisora.", 15);
	        			    PropInfo[p][pEmisora] = IDemisora;
							new mensaje[128],string2[128];
							format(mensaje, sizeof(mensaje), "Emisora: %d - "CR"%s",IDemisora, Emisoras[CabinasOcupadasEmisoras[IDemisora][1]][NombreEmisora]);
       						format(string2, sizeof(string2),"http://radio."WebName":8000/listen.pls?sid=%d", Emisoras[CabinasOcupadasEmisoras[IDemisora][1]][EmisoraID]);
							foreach(new i : Player)
							{
	    						if(GetPlayerVirtualWorld(i) == PropInfo[p][pVW])
						    	{
									Mensaje(i,-1, mensaje);
									if(ShowSound[i] == 1) PlayAudioStreamForPlayer(i, string2);
									if(MP3Escuchando[i] != -1) MP3Escuchando[i] = -1;
									ParlanteEscuchando[i] = -1;
								}
							}
	        			}
					}
				}
			}
			else return Mensaje(playerid, COLOR_BLANCO, "Esa emisora no est� transmitiendo ahora mismo.");
		}
		else return Mensaje(playerid, COLOR_BLANCO, "Para sintonizar una emisora usa "CR"/emisora [numero]"CB" - Para ver la lista de emisoras "CR"/emisoras");
	}
	else Mensaje(playerid, COLOR_BLANCO, "Necesitas conducir un veh�culo o estar junto a una radio para sintonizar una emisoras.");
	return 1;
}

CMD:estereo(playerid, params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid, COLOR_BLANCO, "Necesitas estar en un veh�culo.");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Mensaje(playerid, COLOR_BLANCO, "No eres el conductor de este veh�culo.");
	new vehicleid, string[128];
	vehicleid = GetPlayerVehicleID(playerid);
	if(strcmp(params,"off",true) == 0)
	{
	    EmisoraEscuchando[vehicleid] = -1;
		format(string, sizeof(string), "%s apaga el est�reo.", NombreJugador(playerid));
		ProxDetector(30.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
		foreach(new i : Player)
		{
			if(vehicleid == vehicleid) StopAudioStreamForPlayer(i);
		}
	}
	return 1;
}

CMD:garaje(playerid,params[])
{
	foreach(new p : Propiedades)
	{
		if(PropInfo[p][pEnUso] == 1 && GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW] && GetPlayerInterior(playerid) == PropInfo[p][pInteriorID])
		{
		    if(PropInfo[p][pInterior] == 43) return 1;
		    if(PropInfo[p][pGX] != 0) SetPosEx(playerid, 300.3367,311.7175,999.1484, 0, 4, GetPlayerVirtualWorld(playerid));
			else Mensaje(playerid,-1,"Esta propiedad no tiene garaje.");
		}
	}
	return true;
}

CMD:transmitir(playerid)
{
	if(GetPlayerInterior(playerid) == 5 && GetPlayerVirtualWorld(playerid) == 5)
	{
		if(Emisoras[playerid][TieneEmisora] == 0) return Mensaje(playerid, COLOR_BLANCO, "No tienes una emisora, ve y consigue una en la entrada.");
		if(Emisoras[playerid][TransEmisora] == 1) return Mensaje(playerid, COLOR_BLANCO, "Ya estas transmitiendo en otra cabina de radio.");
		new cabina = 0;
		if(IsPlayerInDynamicArea(playerid, AreaCabinas[1])) cabina = 1;
		else if(IsPlayerInDynamicArea(playerid, AreaCabinas[2])) cabina = 2;
		else if(IsPlayerInDynamicArea(playerid, AreaCabinas[3])) cabina = 3;
		else if(IsPlayerInDynamicArea(playerid, AreaCabinas[4])) cabina = 4;
		if(cabina != 0)
		{
			if(CabinasOcupadasEmisoras[cabina][0] == 0)
			{
				new value;
				CabinasOcupadasEmisoras[cabina][0] = 1;
				CabinasOcupadasEmisoras[cabina][1] = playerid;
				Emisoras[playerid][TransEmisora] = 1;
				Emisoras[playerid][CabinaOcupada] = cabina;
				switch(cabina)
				{
				    case 1: value = randomEx(1,199);
				    case 2: value = randomEx(200,399);
				    case 3: value = randomEx(400,599);
				    case 4: value = randomEx(600,799);
				}
				MP3Escuchando[playerid] = -1;
				ParlanteEscuchando[playerid] = -1;
				Emisoras[playerid][EmisoraID] = value;
				format(Emisoras[playerid][URLEmisora], 128, "http://radio."WebName":8000/listen.pls?sid=%d", Emisoras[playerid][EmisoraID]);
				new string1[128];
				format(string1, sizeof(string1), ""CB"Ocupado por "CR"%s", Emisoras[playerid][NombreEmisora]);
				UpdateDynamic3DTextLabelText(CabinasTextos[cabina], COLOR_BLANCO, string1);
				va_SendClientMessage(playerid, -1, "Ya puedes comenzar a transmitir por Stream ID: "CR"%d", Emisoras[playerid][EmisoraID]);
				SetPlayerAttachedObject(playerid, 4, 19610, 6, 0.068, 0.022, 0.015, 87.2, 88.1, -7.5, 1, 0.752, 1);
				va_SendClientMessage(playerid,-1,"Emisora: %d "CR"- %s",cabina, Emisoras[playerid][NombreEmisora]);
				new string3[128];
				format(string3, sizeof(string3), "http://radio."WebName":8000/listen.pls?sid=%d", Emisoras[playerid][EmisoraID]);
				PlayAudioStreamForPlayer(playerid, string3);
				return 1;
			}
			else return Mensaje(playerid, COLOR_BLANCO, "Ya hay alguien transmitiendo en esta cabina de radio.");
		}
		else return Mensaje(playerid, COLOR_BLANCO, "No estas en ninguna cabina de radio.");
	}
	return 1;
}

CMD:control(playerid,params[])
{
	new maquina1[50],maquina2[50],mensaje[100];
	if(Humo1Ojb == 0) maquina1="Encender maquinas de humo delanteras";
	else maquina1="Apagar maquinas de humo delanteras";
	if(Humo2Ojb == 0) maquina2="Encender maquinas de humo traseras";
	else maquina2="Apagar maquinas de humo traseras";
	format(mensaje, sizeof(mensaje), "%s\n%s",	maquina1,maquina2);
	MostrarDialog(playerid, CONTROLES, DIALOG_STYLE_LIST, "Panel de control", mensaje, "Accionar","Cancelar");
	return 1;
}

CMD:entregarse(playerid,params[])
{
    if(!EnEntregarse(playerid)) return 1;
	if(Jail[playerid] == 1) return 1;
	new string[256];
	switch(PlayerInfo[playerid][pCargos])
	{
	    case 0: return Mensaje(playerid,-1,"No tienes ningun cargo para entregarte.");
		case 1: format(string,sizeof(string),""CB"Tienes solamente {CA5700}1"CB" cargo en tu contra, podemos retirarlo, pero para ello tendr�s que pagar una fianza de "CR"$500"CB".");
		case 2: format(string,sizeof(string),""CB"Podemos quitarte {CA5700}1"CB" de los {CA5700}2"CB" cargos que se te imputan, pero para ello tendr�s que pagar una fianza de "CR"$1.000"CB" en este momento.");
		case 3: format(string,sizeof(string),""CB"Podemos arrestarte con {CA5700}2"CB" de los {CA5700}3"CB" cargos que se te imputan, pero para ello tendr�s que pagar una fianza de "CR"$1.500"CB" en este momento.");
		case 4: format(string,sizeof(string),""CB"Podemos arrestarte con {CA5700}3"CB" de los {CA5700}4"CB" cargos que se te imputan, pero para ello tendr�s que pagar una fianza de "CR"$2.000"CB" en este momento.");
		case 5: format(string,sizeof(string),""CB"Podemos arrestarte con {CA5700}4"CB" de los {CA5700}5"CB" cargos que se te imputan, pero para ello tendr�s que pagar una fianza de "CR"$2.500"CB" en este momento.");
		default: format(string,sizeof(string),""CB"No podemos reducir los cargos que se te imputan, pero podemos aligerar los tr�mites para tu detenci�n.");
	}
	MostrarDialog(playerid, ENTREGARSE, DIALOG_STYLE_MSGBOX, ""CB"�Quieres entregarte?",string,"Aceptar","Rechazar");
	return 1;
}

CMD:nombreson(playerid, params[])
{
	foreach(new i : Player) ShowPlayerNameTagForPlayer(playerid, i, 1);
	GameTextForPlayer(playerid, "~g~ MOSTRAR ~w~NOMBRES", 5000, 5);
	return 1;
}

CMD:nombresoff(playerid, params[])
{
	foreach(new i : Player) ShowPlayerNameTagForPlayer(playerid, i, 0);
	GameTextForPlayer(playerid, "~r~ OCULTAR ~w~NOMBRES", 5000, 5);
	return 1;
}

CMD:picar(playerid)
{
    if(PlayerTemp[playerid][pt_Congelado]) return 1;
	if(TieneTrabajo(playerid, MINERO))
	{
		if(RopaMine[playerid] == 0) return Mensaje(playerid, -1, "Necesitas el uniforme de minero.");
		if(rocajugador[playerid] == 897) return Mensaje(playerid, -1, "Solo puedes cargar una roca en tu inventario.");
		if(!EnMinero(playerid)) return 1;
		if(EstaEn(playerid, 5.0, -745.1193,2408.8325,1.3375)) { if(PlayerInfo[playerid][pNivelMinero] < 2) return Mensaje(playerid, -1, "No tienes suficiente nivel para picar esta roca."); }
		if(EstaEn(playerid, 5.0, -729.0903,2410.1563,7.2710)) { if(PlayerInfo[playerid][pNivelMinero] < 3) return Mensaje(playerid, -1, "No tienes suficiente nivel para picar esta roca."); }
		if(EstaEn(playerid, 5.0, -728.3772,2422.0627,7.1895)) { if(PlayerInfo[playerid][pNivelMinero] < 4) return Mensaje(playerid, -1, "No tienes suficiente nivel para picar esta roca."); }
		CongelarEx(playerid);
		ClearAnimations(playerid);
		if(ShowSound[playerid] == 1) PlayAudioStreamForPlayer(playerid,"https://"URL"/Minero.mp3");
		SetPlayerAttachedObject(playerid,4, 18634, 14, 0.333391, 0.000000, 0.042249, 358.219909, 268.014739, 170.032974, 2.003867, 1.764811, 1.579773);
		ApplyAnimation(playerid,"BASEBALL","Bat_4",4.1,1,0,0,1,11000,1);
		ApplyAnimation(playerid,"BASEBALL","Bat_4",4.1,1,0,0,1,11000,1);
		PlayerTemp[playerid][TimerPicando] = 1;
		SetTimerEx("TimeMiner",10000,false,"i",playerid);
		Mensaje(playerid, -1, "Comienzas a picar la roca.");
		GameTextForPlayer(playerid, "~<~ ~G~PICANDO ROCA ~>~", 5000, 5);
		BarraProgreso[playerid][1] = 10.0;
		BarraJob(playerid,1);
		ActBarraJob(playerid);
	}
	else
	{
		Mensaje(playerid, -1, "Necesitas el trabajo de minero.");
	}
	return 1;
}

CMD:permiso(playerid, params[])
{
	if(strcmp(params,"pesca",true) == 0)
	{
		if(!TieneTrabajo(playerid, PESCADOR)) return Mensaje(playerid, -1, "No eres pescador.");
		if(permisopesca[playerid] !=0) return Mensaje(playerid,-1,"Ya tienes un permiso de pesca.");
		if(!EstaEn(playerid, 7.0, 2785.6536,-2575.7666,3.1917)) return Mensaje(playerid, -1, "Para solicitar el "CR"/permiso pesca"CB", tienes que hablar con la mujer que est� junto a la casa del muelle de Ocean Docks.");
		SetPlayerMapIcon(playerid, 99, 890.69623, -2448.19629, -3.40480, 9, 0, MAPICON_GLOBAL);
		GangZoneShowForPlayer(playerid, mares, 0x0053FF9D);
		permisopesca[playerid] = 1;
		Mensaje(playerid, -1, ""CR"Se marcaron en el mapa las zonas de pesca permitidas.");
		Mensaje(playerid, -1, "Encuentra un barco pesquero para comenzar el viaje.");
		Mensaje(playerid, -1, "Cuando llegues a la zona de pesca, usa "CR"/lanzar arpon"CB".");
	}
	return 1;
}

CMD:lanzar(playerid, params[])
{
	if(strcmp(params,"arpon",true) == 0)
	{
		if(!TieneTrabajo(playerid, PESCADOR)) return Mensaje(playerid, -1, "No eres pescador.");
		if(!EnPesca(playerid)) return Mensaje(playerid, -1, "Los arpones se pueden lanzar �nicamente en zonas de pesca.");
		if(permisopesca[playerid] == 0) return Mensaje(playerid, -1, "No solicitaste un permiso para poder pescar en esta zona.");
		new vehch = GetPlayerNearestVehicle(playerid), Float:Pos[3];
		GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return Mensaje(playerid, -1, "No est�s en la cubierta de un barco pesquero.");
		if(GetVehicleDistanceFromPoint(vehch, Pos[0], Pos[1], Pos[2]) < 4.0)
		{
			switch(PlayerInfo[playerid][pNivelPescador])
			{
				case 1: { PescaM[playerid][0] = 1601; PescaM[playerid][1] = 1601; PescaM[playerid][2] = 1601; PescaM[playerid][3] = 1609; }
				case 2: { PescaM[playerid][0] = 1607; PescaM[playerid][1] = 1601; PescaM[playerid][2] = 1601; PescaM[playerid][3] = 1609; }
				default: { PescaM[playerid][0] = 1601; PescaM[playerid][1] = 1607; PescaM[playerid][2] = 1608; PescaM[playerid][3] = 1609; }
			}
			return MostrarMenu(playerid,5);
		}
		else return Mensaje(playerid, -1 ,"No est�s en la cubierta de un barco pesquero.");
	}
	return 1;
}

CMD:quien(playerid,params[])
{
	new id;
	if(!FaccLegal2(playerid) && PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 1;
	if(sscanf(params,"d",id)) return Mensaje(playerid,-1,"Usa "CR"/quien [id]");
	{
	    if(!IsPlayerConnected(id)) return 1;
		if(PlayerInfo[id][pCargos] == 0) return Mensaje(playerid,-1,"Este jugador no tiene cargos");
		va_SendClientMessage(playerid,-1,"Los cargos (*%d) los puso: %s",PlayerInfo[id][pCargos],PlayerInfo[id][QuienC]);
	}
	return 1;
}

CMD:miscargos(playerid,params[])
{
	if(PlayerInfo[playerid][pCargos] == 0) return Mensaje(playerid,-1,"No tienes cargos.");
	va_SendClientMessage(playerid,-1,"Tienes %d cargos.",PlayerInfo[playerid][pCargos]);
	return 1;
}

CMD:tirar(playerid,params[])
{
	new estado = GetPlayerState(playerid);
    if(estado == 2 || estado == 3) return Mensaje(playerid, -1, "No puedes tirar armas/objetos si estas en un veh�culo.");
	new nombre[32],string[144],asd;
	if(!sscanf(params,"s[32]",nombre))
	{
		if(strcmp(nombre,"manopla",true) == 0) asd = 1;
		else if(strcmp(nombre,"palo-de-golf",true) == 0) asd = 2;
	    else if(strcmp(nombre,"palo-de-policia",true) == 0) asd = 3;
		else if(strcmp(nombre,"cuchillo",true) == 0) asd = 4;
		else if(strcmp(nombre,"bate-de-beisbol",true) == 0) asd = 5;
		else if(strcmp(nombre,"pala",true) == 0) asd = 6;
		else if(strcmp(nombre,"palo-de-billar",true) == 0) asd = 7;
		else if(strcmp(nombre,"katana",true) == 0) asd = 8;
	    else if(strcmp(nombre,"Consolador-rosa",true) == 0) asd = 10;
		else if(strcmp(nombre,"Vibrador-blanco",true) == 0) asd = 11;
		else if(strcmp(nombre,"Gran-vibrador-blanco",true) == 0) asd = 12;
		else if(strcmp(nombre,"Vibrador-plateado",true) == 0) asd = 13;
	    else if(strcmp(nombre,"ramo-de-flores",true) == 0) asd = 14;
		else if(strcmp(nombre,"baston",true) == 0) asd = 15;
		else if(strcmp(nombre,"granada",true) == 0) asd = 16;
		else if(strcmp(nombre,"9mm",true) == 0) asd = 22;
		else if(strcmp(nombre,"9mm-silenciada",true) == 0) asd = 23;
		else if(strcmp(nombre,"desert-eagle",true) == 0) asd = 24;
		else if(strcmp(nombre,"dk",true) == 0) asd = 24;
		else if(strcmp(nombre,"escopeta",true) == 0) asd = 25;
		else if(strcmp(nombre,"escopeta-de-combate",true) == 0) asd = 27;
		else if(strcmp(nombre,"edc",true) == 0) asd = 27;
		else if(strcmp(nombre,"mp5",true) == 0) asd = 29;
		else if(strcmp(nombre,"ak-47",true) == 0) asd = 30;
		else if(strcmp(nombre,"m4",true) == 0) asd = 31;
		else if(strcmp(nombre,"rifle",true) == 0) asd = 33;
		else if(strcmp(nombre,"sniper",true) == 0) asd = 34;
		else if(strcmp(nombre,"minigun",true) == 0) asd = 38;
		else if(strcmp(nombre,"camara",true) == 0) asd = 43;
	    else if(strcmp(nombre,"paracaidas",true) == 0) asd = 46;
		else if(strcmp(nombre,"bidon",true) == 0)
		{
			if(Bidon[playerid] == 0) return Mensaje(playerid,-1,"No puedes tirar algo que no tienes.");
			Bidon[playerid] = 0;
			RemovePlayerAttachedObject(playerid, 5);
			format(string,128,"%s tira un Bidon al suelo.",NombreJugador(playerid));
			ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
			return 1;
		}
		else if(strcmp(nombre,"objeto",true) == 0)
		{
			if(gettimeVariable < RateLimit[playerid]) return 1;
			else RateLimit[playerid] = gettimeVariable+2;
			new accesoa=0;
			if(Objeto[playerid] == 0) accesoa=1;
			if(AguaBalde[playerid] == 0) accesoa=1;
			if(rocajugador[playerid] == 11392) accesoa=1;
			if(!TieneConsumible(playerid)) accesoa=1;
			if(accesoa == 0) return Mensaje(playerid,-1,"No puedes tirar algo que no tienes.");
			PlayerTemp[playerid][TieneSprunk] = 0;
			PlayerTemp[playerid][TieneCerveza] = 0;
			PlayerTemp[playerid][TieneVino] = 0;
			PlayerTemp[playerid][TieneAquari] = 0;
			PlayerTemp[playerid][TienePizza] = 0;
			Objeto[playerid] = 0;
			AguaBalde[playerid] = 0;
			TieneBarril[playerid] = 0;
			PlayerTemp[playerid][TieneCrisol] = 0;
			TieneCajaMeta[playerid] = 0;
			rocajugador[playerid] = 11392;
			RemovePlayerAttachedObject(playerid,4);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			format(string,128,"%s tira un Objeto al suelo.",NombreJugador(playerid));
			ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
			return 1;
		}
		else if(strcmp(nombre, "arma",	true) == 0)
		{
			
			if(GetPlayerWeapon(playerid) == 0) return Mensaje(playerid, -1, "Debes tener el arma en tu mano.");
			else asd = GetPlayerWeapon(playerid);
			
		}
		else return 1;
		if(!SiTieneArma(playerid,asd)) return Mensaje(playerid,-1,"No puedes tirar algo que no tienes.");
		QuitarArma(playerid,asd);
		format(string,200,"%s tira su %s al suelo.",NombreJugador(playerid),GetWeaponNameEx(asd));
		ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
	}
	return 1;
}

CMD:escapar(playerid,params[])
{
	new string[128];
	if(EstaEn(playerid,2.0,-2278.8904,-10.3138,38.2993)) SetPlayerPosAC(playerid,-2277.1763,-9.9763,38.2523);
	else if(EstaEn(playerid,2.0,932.2437,1975.8787,11.6227)) SetPlayerPosAC(playerid,931.9277,1973.0038,11.3073);
	else if(EstaEn(playerid,2.0,-2396.0010,-13.0565,35.3486)) SetPlayerPosAC(playerid,-2393.9712,-13.1641,35.3125);
	else if(EstaEn(playerid,2.0,2373.7302,-1136.8610,30.0583)) SetPlayerPosAC(playerid,2373.8467,-1139.5442,30.0510);
	else if(EstaEn(playerid,2.0,-2729.9800,-50.8513,7.0453)) SetPlayerPosAC(playerid,-2727.5435,-50.9449,7.0301);
	else if(EstaEn(playerid,2.0,-2730.4609,-155.6674,7.2174)) SetPlayerPosAC(playerid,-2727.5054,-155.6168,7.2009);
	else if(EstaEn(playerid,2.0,-2622.0754,-173.1688,4.7835)) SetPlayerPosAC(playerid,-2620.3281,-173.2179,4.8790);
	else if(EstaEn(playerid,2.0,2485.0527,-1995.0458,14.0434)) SetPlayerPosAC(playerid,2485.1733,-1997.1724,13.9166);
	else if(EstaEn(playerid,2.0,-1449.7598,2647.9287,56.5345)) SetPlayerPosAC(playerid,-1448.9193,2647.9514,56.4912);
	else if(EstaEn(playerid,2.0,1762.7701,-2098.9631,13.9989)) SetPlayerPosAC(playerid,1762.8772,-2101.1462,13.9916);
	else if(EstaEn(playerid,2.0,1841.8738,770.7863,11.5959)) SetPlayerPosAC(playerid,1844.5101,770.9579,11.4838);
	else if(EstaEn(playerid,2.0,1344.4647,2612.5925,11.5559)) SetPlayerPosAC(playerid,1344.6938,2610.3264,11.5494);
	else if(EstaEn(playerid,2.0,1666.9180,2612.6965,11.5559)) SetPlayerPosAC(playerid,1667.0402,2610.3267,11.5494);
	else return 1;
	if(Objeto[playerid] > 0)
	{
		format(string, sizeof(string), "%s deja un objeto en el suelo.",NombreJugador(playerid));
		ProxDetector(10.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(playerid,4);
		Objeto[playerid] = 0;
	}
	return 1;
}

CMD:robar(playerid, params[])
{
	new item[11];
	if(!sscanf(params,"s[11]",item))
	{
		if(strcmp(item, "objeto", true) == 0) return RobarObjeto(playerid);
		else if(strcmp(item, "cajafuerte", true) == 0)
		{
            if(IsPlayerInRangeOfPoint(playerid, 2.0, 820.41010,8.37117,1003.60370))
		    {
				RobarCaja(playerid);
			}
			if(IsPlayerInRangeOfPoint(playerid, 4.0, 2306.23193, -5.85020, 26.18000))
		    {
				RobarCaja2(playerid);
			}
			if(IsPlayerInRangeOfPoint(playerid, 4.0, -221.2386,1406.5959,27.7734))
		    {
				RobarCaja3(playerid);
			}
		}
	}
	
 	return 1;
}

CMD:revisar(playerid,params[])
{
	new Float:Pos[3],autoid,string[256],texto[10],id;
	if(!sscanf(params,"s[10]d",texto,id))
	{
		if(strcmp(texto,"paciente",	true) == 0)
		{
			if(!TieneTrabajo(playerid, MEDICO)) return Mensaje(playerid,-1,"Necesitas el trabajo de m�dico para utilizar este comando.");
			if(RopaMedi[playerid] > 0)
			{
				if(PlayerInfo[id][pEnfermedad] == 0) return 1;
				if(PlayerInfo[id][pAtendido] == 1) return Mensaje(playerid,-1,"El paciente ya fue atendido.");
				new enfermedad[32];
				GetPlayerPos(id,Pos[0],Pos[1],Pos[2]);
				switch(PlayerInfo[id][pEnfermedad])
				{
					case 1: enfermedad = "Herida de bala";
					case 2: enfermedad = "M�ltiples heridas de bala";
					case 3: enfermedad = "Fracturas Graves";
					case 4: enfermedad = "Fracturas leves";
					case 5: enfermedad = "Herida abierta de sangre";
					case 6: enfermedad = "Hematomas";
					case 7: enfermedad = "Hematomas y huesos fracturados";
					case 8: enfermedad = "Hemorragia cerebral";
					case 9: enfermedad = "Quemaduras";
					case 10: enfermedad = "Da�os severos";
				}
				if(EstaEn(playerid, 2.0, Pos[0],Pos[1],Pos[2]))
				{
					format(string,sizeof(string),"El paciente presenta %s.",enfermedad);
					Mensaje(playerid,-1,string);
					format(string,sizeof(string),"%s observa al paciente y procede a revisarlo.",NombreJugador(playerid));
					ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
				}
			}
			else return Mensaje(playerid,-1,"Necesitas tener la ropa de m�dico para utilizar este comando.");
		}
	}
	else if(sscanf(params,"s[10]d",texto,id))
	{
		if(!TieneTrabajo(playerid,MECANICO)) return Mensaje(playerid,-1,"Debes ser mec�nico para utilizar este comando.");
		{
			if(RopaMeca[playerid] == 0 && PlayerInfo[playerid][VIP] == 0) return Mensaje(playerid, -1, "Necesitar usar la ropa de mec�nico para poder reparar un vehiculo.");
			foreach(new u : Player)
			{
				if(LlamadaMeca[u] == 1 && IsPlayerInAnyVehicle(u))
				{
					GetPlayerPos(u, Pos[0],Pos[1],Pos[2]);
					if(EstaEn(playerid, 7.0, Pos[0],Pos[1],Pos[2]))
					{
						autoid = GetPlayerVehicleID(u);
						if(Capo[autoid] == 0) return Mensaje(playerid,-1,"El capo del veh�culo debe estar abierto.");
						{
							if(autoid <= AUTOS)
							{
								Mensaje(playerid,-1,"El veh�culo necesita "CR"3"CB" repuestos.");
								MRepuestos[playerid] = 3;
								return 1;
							}
							else
							{
 								foreach(new i : Player)
								{		
									for(new v = 0; v < MAX_PAUTOS; v++)
									{
										if(!IsValidVehicle(autos[v][i])) continue;
										if(autos[v][i] == autoid)
										{
											new repuestos = VehicleInfo[i][v][vPrecio]/5000;
											format(string,256,"Este veh�culo necesita "CR"%d"CB" repuestos.",repuestos);
											Mensaje(playerid,-1,string);
											MRepuestos[playerid] = repuestos;
											return 1;
										}
									}	
								}
							}
						}
					}
					else return Mensaje(playerid,-1,"No hay ning�n cliente en un radio de 5 metros.");
				}
			}
		}
	}
	return 1;
}

CMD:reparar(playerid,params[])
{
	new Float:Pos[3], autoid = GetPlayerVehicleID(playerid), precio, string[256], item[13];
	if(sscanf(params, "s[13]", item))
	{
		if(TieneTrabajo(playerid,MECANICO))
		{
			if(RopaMeca[playerid] == 0 && PlayerInfo[playerid][VIP] == 0) return Mensaje(playerid, -1, "Necesitar usar la ropa de mecanico para poder reparar un vehiculo.");
			if(!IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid, -1, "No est�s en un veh�culo.");
			if(Capo[autoid] == 0) return Mensaje(playerid,-1,"Primero necesitas "CR"/abrir capo"CB".");
			new pvehicle = -1;
			for(new i = 0; i < MAX_PAUTOS; i++)
			{
	            if(!IsValidVehicle(autos[i][playerid])) continue;
				if(autoid == autos[i][playerid]) pvehicle = i;
			}
			if(pvehicle != -1)
			{
				new Float:vida;
				GetVehicleHealth(autoid, vida);
				if(vida > 375.0) return Mensaje(playerid,-1,"El motor de tu veh�culo no est� averiado.");
				if(PlayerInfo[playerid][Repuestos] < VehicleInfo[playerid][pvehicle][vPrecio]/5000) return Mensaje(playerid,-1,"No tienes suficientes repuestos para reparar el motor de tu veh�culo.");
				PlayerInfo[playerid][Repuestos] -= VehicleInfo[playerid][pvehicle][vPrecio]/5000;
				new Float:angle;
				GetPlayerFacingAngle(playerid,angle);
				SetPlayerFacingAngle(playerid,angle+180);
				switch(PlayerInfo[playerid][pNivelMecanico])
				{
					case 1: PlayerTemp[playerid][TimerReparar] = 15;
					case 2: PlayerTemp[playerid][TimerReparar] = 13;
					case 3: PlayerTemp[playerid][TimerReparar] = 9;
					case 4: PlayerTemp[playerid][TimerReparar] = 6;
					default: PlayerTemp[playerid][TimerReparar] = 3;
				}
				BarraProgreso[playerid][1] = PlayerTemp[playerid][TimerReparar];
				BarraJob(playerid,1);
				ActBarraJob(playerid);
				LoopingAnim(playerid,"CAR","Fixn_Car_Loop",4.1,0,0,0,1,PlayerTemp[playerid][TimerReparar]*1000);
				SetTimerEx("Reparando",PlayerTemp[playerid][TimerReparar]*1000,false,"ddd",playerid,playerid,autoid);
				AceptoRepara[playerid] = 1;
				format(string, sizeof(string), "%s comienza a reparar su veh�culo.", NombreJugador(playerid));
				ProxDetector(30.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
				new msjadm[180];
				format(msjadm, sizeof(msjadm), "Notificaci�n: %s repara su veh�culo (ID: %d - Nivel: %d).", NombreJugador(playerid), playerid, PlayerInfo[playerid][jNivel]);
				MensajeAdmin(COLOR_CHEAT, msjadm, 3);
				return 1;
			}
		}
		else return Mensaje(playerid,-1,"Debes ser mec�nico para utilizar este comando.");
	}
	if(!sscanf(params,"d",precio))
	{
		if(precio < 0) return Mensaje(playerid,-1,"Monto inv�lido.");
		if(precio > 15000) return Mensaje(playerid,-1,"No puedes solicitar mas de "CR"$15000"CB" por una reparaci�n.");
		if(RopaMeca[playerid] == 0 && PlayerInfo[playerid][VIP] == 0) return Mensaje(playerid, -1, "Necesitar usar la ropa de mec�nico para poder reparar un veh�culo.");
		if(TieneTrabajo(playerid,MECANICO))
		{
			foreach(new i : Player)
			{
				if(LlamadaMeca[i] == 1 && IsPlayerInAnyVehicle(i))
				{
					GetPlayerPos(i, Pos[0],Pos[1],Pos[2]);
					if(EstaEn(playerid, 7.0, Pos[0],Pos[1],Pos[2]))
					{
						if(Capo[GetPlayerVehicleID(i)] == 1)
						{
							foreach(new u : Player)
							{
								if(PlayerInfo[playerid][Repuestos] >= MRepuestos[playerid])
								{
									va_SendClientMessage(i,-1,"El mec�nico %s te ofrece reparar el veh�culo por "CR"$%s"CB".", NombreJugador(playerid),ConvertirNumero(precio));
									Mensaje(i,-1,"Para aceptar la reparaci�n usa "CR"/aceptar reparacion");
									va_SendClientMessage(playerid,-1,"Le ofreciste una reparaci�n a %s por "CR"$%s"CB".",NombreJugador(i),ConvertirNumero(precio));
									Mecanico[i] = playerid;
									MConductor[i] = precio;
									return 1;
								}
								else return Mensaje(playerid,-1,"No tienes suficientes repuestos para reparar el motor de este veh�culo.");
							}
						}
						else return Mensaje(playerid,-1,"El capo del veh�culo debe estar abierto.");
					}
				}
			}
		}
		else return Mensaje(playerid,-1,"Debes ser mec�nico para utilizar este comando.");
	}
	if(!sscanf(params, "s[13]", item))
	{
		if(strcmp(item,"embarcacion",true) == 0)
		{
			if(!EnBarco(playerid)) return 1;
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Mensaje(playerid, COLOR_GREY, "No est�s en un veh�culo.");
			if(!BOTE(autoid)) return Mensaje(playerid, -1, "Aqu� solo puedes reparar veh�culos acu�ticos.");
			if(PlayerInfo[playerid][jDinero] < 500) return Mensaje(playerid,-1,"Necesitas "CR"$500"CB" para poder reparar tu embarcaci�n.");
			QuitarDinero(playerid, 500);
			TimerRC[playerid] = gettimeVariable + 5;
			SetVehicleHealthAC(autoid, 1000.0);
			RepairVehicle(autoid);
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			PlaySoundForPlayersInRange(1133, 5.0, x, y, z);
            TextDrawShowForPlayer(playerid, EsperarT[0]);
			TextDrawShowForPlayer(playerid, EsperarT[1]);
			SetTimerEx("QuitarCargando", 3000, false, "d", playerid);
			return 1;
		}
		else if(strcmp(item,"aereo",true) == 0)
		{
			if(!EnAereo(playerid)) return 1;
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Mensaje(playerid, COLOR_GREY, "No est�s en un veh�culo.");
			if(!AVION(autoid)) return Mensaje(playerid, -1, "Aqu� solo puedes reparar veh�culos a�reos.");
			if(PlayerInfo[playerid][jDinero] < 500) return Mensaje(playerid,-1,"Necesitas "CR"$500"CB" para poder reparar tu veh�culo a�reo.");
			
			QuitarDinero(playerid, 500);
			TimerRC[playerid] = gettimeVariable + 5;
			SetVehicleHealthAC(autoid, 1000.0);
			RepairVehicle(autoid);
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			PlaySoundForPlayersInRange(1133, 5.0, x, y, z);
            TextDrawShowForPlayer(playerid, EsperarT[0]);
			TextDrawShowForPlayer(playerid, EsperarT[1]);
			SetTimerEx("QuitarCargando", 3000, false, "d", playerid);
			return 1;
		}
		else return Mensaje(playerid,-1,"Utiliza: "CR"/reparar [embarcacion/aereo]");
	}
	return 1;
}

CMD:ficha(playerid,params[])
{
	new monto,autoid,string[128];
	autoid = GetPlayerVehicleID(playerid);
	if(!TieneTrabajo(playerid, TAXISTA)) return Mensaje(playerid,-1,"Necesitas ser taxista para utilizar este comando.");
	if(TAXI(autoid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(!sscanf(params,"d",monto))
		{
			if(monto >= 2 && monto <= 1000)
			{
				if(Ficha[playerid] == monto) return 1;
				Ficha[playerid] = monto;
				format(string,128,"El tax�metro de ({00cbf7}%s"CB") fue configurado con un precio de {11FF00}$%d"CB" por ficha.",NombreJugador(playerid),monto);
				foreach(new i : Player)
				{
					if(IsPlayerInVehicle(i,autoid))
					{
   						Mensaje(i,-1,string);
						Taxista[i] = playerid;
						Pasajero[playerid] = i;
						LlamadaTaxi[i] = 0;
						SetPlayerColor(i, COLORCARGO0);
						TextDrawShowForPlayer(i,TAXIMET);
						TextDrawShowForPlayer(i,TAXIMET2[playerid]);
	  				}
				}
			}
			else return Mensaje(playerid,-1,"El precio de la ficha tiene que ser entre {11FF00}$2"CB" a {11FF00}$1000"CB".");
		}
		else
		{
		    if(Ficha[playerid] == 0) return 1;
		    Ficha[playerid] = 0;
		    format(string,sizeof(string),"({00cbf7}%s"CB") apag� el tax�metro.",NombreJugador(playerid));
			foreach(new i : Player)
			{
				if(IsPlayerInVehicle(i,autoid))
				{
					Mensaje(i,-1,string);
					TextDrawHideForPlayer(i,TAXIMET);
					TextDrawHideForPlayer(i,TAXIMET2[playerid]);
				}
			}
		}
	}
	else return 1;
	return 1;
}

CMD:mecanico(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return 1;
	if(!TieneTrabajo(playerid,MECANICO)) return Mensaje(playerid,-1,"Necesitas ser mec�nico para utilizar este comando.");
	if(EstaEn(playerid, 2.0,84.3491,-149.0520,2.6000))
	{
		if(RopaMeca[playerid] == 0)
		{
            switch(PlayerInfo[playerid][jSexo])
			{
				case 2: SetPlayerSkin(playerid, 309);
				default: SetPlayerSkin(playerid, 50);
			}
			Mensaje(playerid,-1,"Ahora est�s en servicio de mec�nico.");
			RopaMeca[playerid] = 1;
		}
		else if(RopaMeca[playerid] == 1)
		{
			Mensaje(playerid,-1,"Te has quitado la ropa de trabajo.");
			SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]);
			RopaMeca[playerid] = 0;
		}
	}
	return 1;
}

CMD:basurero(playerid, params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return 1;
	if(!TieneTrabajo(playerid, BASURERO)) return Mensaje(playerid,-1,"Primero tienes que conseguir el trabajo de basurero.");
	if(EstaEn(playerid, 2.0,-170.1398,-1556.1694,5.6444))
	{
		if(RopaBasu[playerid] == 0)
		{
		    switch(PlayerInfo[playerid][jSexo])
			{
				case 2:
				{
				    RemovePlayerAttachedObject(playerid, 2);
				    RemovePlayerAttachedObject(playerid, 3);
					SetPlayerSkin(playerid, 131);
					SetPlayerAttachedObject(playerid,3,19904,1,0.103999,0.065000,-0.001998,2.099929,90.200180,174.199905,0.949001,1.222001,0.876000);
				}
				default: SetPlayerSkin(playerid, 16);
			}
			Mensaje(playerid,-1,"Ahora ya puedes manejar los camiones de basura.");
			RopaBasu[playerid] = 1;
		}
		else if(RopaBasu[playerid] == 1)
		{
		    RemovePlayerAttachedObject(playerid, 2);
			RemovePlayerAttachedObject(playerid, 3);
			Mensaje(playerid,-1,"Te sacaste la ropa de basurero.");
            RemovePlayerAttachedObject(playerid, 3);
			SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]);
			RopaBasu[playerid] = 0;
		}
	}
	return 1;
}

CMD:medico(playerid,params[])
{
	new autoid = GetPlayerVehicleID(playerid);
	if(!TieneTrabajo(playerid, MEDICO)) return Mensaje(playerid,-1,"Tu no eres m�dico.");
	if(!IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid,-1,"Debes estar en una ambulancia para colocarte el uniforme.");
	if(!AMBU(autoid)) return Mensaje(playerid,-1,"Debes estar en una ambulancia para colocarte el uniforme.");
	if(GetPlayerVehicleSeat(playerid) == 2 || GetPlayerVehicleSeat(playerid) == 3)
	{
		if(RopaMedi[playerid] == 0)
		{
			RopaMedi[playerid] = 1;
			switch(PlayerInfo[playerid][jSexo])
			{
				case 2: SetPlayerSkin(playerid,308);
				default:
				{
					new xd = VehiculosInfo[autoid][vAmbu];
					switch(xd)
					{
						case 1: SetPlayerSkin(playerid,276);
						case 2: SetPlayerSkin(playerid,275);
						case 3: SetPlayerSkin(playerid,274);
					}
					RopaMedi[playerid] = xd;
				}
			}
			RemovePlayerFromVehicle(playerid);
			Mensaje(playerid,COLOR_DORADO,"Ropa cambiada, ahora est�s en servicio.");
		}
		else if(RopaMedi[playerid] > 0)
		{
			RopaMedi[playerid] = 0;
			SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]);
			RemovePlayerFromVehicle(playerid);
			Mensaje(playerid,COLOR_DORADO,"Ya no est�s de servicio.");
			LimpiarMarker(playerid);
		}
	}
	else return Mensaje(playerid,-1,"Debes estar en la parte trasera de una ambulancia para colocarte el uniforme.");
	return 1;
}

CMD:ref(playerid,params[])
{
	if(PlayerInfo[playerid][jMiembro] > 0)
	{
	    if(PlayerTemp[playerid][Refuerzos] > 0) return va_SendClientMessage(playerid, COLORCARGO0,"Debes esperar "CR"%d segundos"CB" para volver a pedir refuerzos.", PlayerTemp[playerid][Refuerzos]);
		new string[128],zone[MAX_ZONE_NAME] = "Indefinido";
		GetPlayer2DZone(playerid, zone, MAX_ZONE_NAME);
		if(PlayerInfo[playerid][jMiembro] > 2)
		{
			format(string,128,"[Radio]"CB" El integrante {%s}%s"CB" est� solicitando refuerzos en %s.", BandasInfo[PlayerInfo[playerid][jMiembro]][BColor],NombreJugador(playerid),zone);
			SendRadioMessage(PlayerInfo[playerid][jMiembro], BandasInfo[PlayerInfo[playerid][jMiembro]][BColor2], string,playerid, 1);
			format(string,128,"[Radio] El integrante %s est� solicitando refuerzos en %s.", NombreJugador(playerid),zone);
			ProxDetector(15.0, playerid, string, COLORCARGO0,COLORCARGO0,COLORCARGO0,COLORCARGO0,COLORCARGO0);
			PlayerTemp[playerid][Refuerzos] = 180;
			MarcarJugador(playerid,BandasInfo[PlayerInfo[playerid][jMiembro]][BColor2],PlayerInfo[playerid][jMiembro]);
			return 1;
		}
		if(PlayerInfo[playerid][jMiembro] == 1 && PlayerInfo[playerid][pDuty] == 1 || PlayerInfo[playerid][jMiembro] == 2 && PlayerInfo[playerid][pDutyM] == 1)
		{
			format(string,128,"El %s {3399FF}%s"CB" est� solicitando refuerzos en {3399FF}%s"CB".", RangoPolicia(playerid), NombreJugador(playerid), zone);
			SendRadioMessage(1, -1, string,-1, 1);
			PlayerTemp[playerid][Refuerzos] = 100;
			ReportCrimen(playerid,7);
			for(new td; td < sizeof(RefuerzosT); td++) TextDrawShowForPlayer(playerid,RefuerzosT[td]);
			MarcarJugador(playerid,0x3399FFFF,PlayerInfo[playerid][jMiembro]);
		}
	}
	return 1;
}

CMD:mostrar(playerid,params[])
{
	new item[32];
	if(!sscanf(params, "s[32]",item))
	{
		if(strcmp(params,"sed",true) == 0)
		{
			if(SedOculta[playerid] == 1) return Mensaje(playerid,-1,"Ya tienes visible la barra indicadora de sed.");
			SedOculta[playerid] = 1;
			BarraHambre(playerid, 1);
			BarraSed(playerid, 1);
  			Mensaje(playerid,-1,"Ahora puedes ver la barra de sed, para ocultarla usa "CR"/ocultar sed"CB".");
			return 1;
		}
		if(strcmp(params,"nombres",true) == 0)
		{
			foreach(new i : Player) ShowPlayerNameTagForPlayer(playerid, i, 1);
			GameTextForPlayer(playerid, "~g~ MOSTRAR ~w~NOMBRES", 5000, 5);
			return 1;
		}
	}
	return 1;
}

CMD:reglas(playerid,params[])
{
	new string[500];
	if(JugadorLogeado[playerid] == 1)
	{
		string=""CR"Nombres\n"CB"A la hora de elegir un hombre hay que tener en cuenta:\n- El nombre elejido tiene que ser real, es decir, que alguien en el mundo lo tenga.\n- Se prohibe el uso de diminutivos o sobrenombres. Ejemplo: Nico_Gonzales o Nacho_Lopez.\n- Es importante el uso de may�sculas solo en la primer letra del Nombre y Apellido.\n- Se proh�be usar nombres de personas famosas. Ejemplo: Marcelo_Tinelli. Chuck_Norris, etc.";
		MostrarDialog(playerid, REGLAS, DIALOG_STYLE_MSGBOX, "Reglas del juego", string, "Siguiente","");
	}
	return 1;
}

CMD:re(playerid, params[])
{
	new id,razon[250];
	if(ReporteEstado == 0) return Mensaje(playerid,-1,"No puedes reportar en este momento.");
	if(PlayerInfo[playerid][pTiempoJail] > 0) return Mensaje(playerid,-1,"No puedes usar este comando en este momento, en su lugar usa "CR"/reglas");
	if(!sscanf(params,"ds[250]",id,razon))
	{
        if(gettimeVariable > JustReported[playerid])
		{
		    if(!IsPlayerConnected(id)) return Mensaje(playerid,COLORCARGO0,"Jugador reportado no conectado.");
		    new length = strlen(razon);
	    	if(length > 100) return Mensaje(playerid,-1,"No puedes enviar un reporte muy extenso, abrevia tus palabras por favor.");
			SendReportToQue(playerid,id, razon);
			Mensaje(playerid,-1,""CR"El reporte fue enviado correctamente.");
			JustReported[playerid] = gettimeVariable + 60;
			return 1;
		}
		else
		{
		    new numero = JustReported[playerid] - gettimeVariable;
		    va_SendClientMessage(playerid, -1, "Espera "CR"%ds"CB" para enviar otro reporte.", numero);
		    return 1;
		}
	}
	else return Mensaje(playerid,-1,"Por favor, para reportar usa "CR"/reportar [ID] [Raz�n]");
}

CMD:telefono(playerid,params[])
{
	new item[32],string[128];
	if(!sscanf(params,"s[32]",item))
	{
		if(strcmp(item, "on", true)==0)
		{
			if(PlayerInfo[playerid][pNumero] <= 0) return Mensaje(playerid,-1,"No tienes un tel�fono celular.");
			if(TelefonoEstado[playerid] == 0) return Mensaje(playerid,-1,"El tel�fono ya esta encendido.");
			{
				TelefonoEstado[playerid] = 0;
				if(PlayerTemp[playerid][Specteando] == 0)
				{
					format(string,128,"%s encendi� su tel�fono m�vil.", NombreJugador(playerid));
					ProxDetector(15.0,playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
				}
			}
		}
		if(strcmp(item, "off", true)==0)
		{
			if(PlayerInfo[playerid][pNumero] <= 0) return Mensaje(playerid,-1,"No tienes un tel�fono celular.");
			if(TelefonoEstado[playerid] == 1) return Mensaje(playerid,-1,"El tel�fono ya esta apagado.");
			{
				if(PlayerInfo[playerid][MobileSub] == 2540 || PlayerInfo[playerid][MobileSub] == 911)
				{
				    ColgarLaLlamada(playerid);
				}
				new caller = PlayerInfo[playerid][MobileSub];
				if(IsPlayerConnected(caller) && caller != -1)
				{
					Mensaje(caller, -1, "Colgaron la llamada.");
					SetPlayerSpecialAction(caller, SPECIAL_ACTION_STOPUSECELLPHONE);
					PlayerInfo[caller][MobileSub] = -1;
					EnLlamada[caller] = 0;
					finllamada(caller);
    				ColgarLaLlamada(playerid);
				}
				TelefonoEstado[playerid] = 1;
				if(PlayerTemp[playerid][Specteando] == 0)
				{
					format(string,128,"%s apag� su tel�fono m�vil.", NombreJugador(playerid));
					ProxDetector(15.0,playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
				}
			}
		}
	}
	else return Mensaje(playerid,-1,"Modo de uso: "CR"/telefono on/off");
	return 1;
}

CMD:ver(playerid,params[])
{
	new item[32],string[385];
	if(!sscanf(params, "s[32]",item))
	{
		if(strcmp(item,"reporte",true) == 0)
		{
		    if(IDReporte[playerid] == -1) return Mensaje(playerid, -1, "No tienes un reporte pendiente.");
			format(string, 256, "ID: %d - Nivel: %d - Raz�n: {FF3300}%s", IDReporte[playerid], GetPlayerScore(IDReporte[playerid]), IDReporteMensaje[playerid]);
			Mensaje(playerid, 0xB1F6F6F6, string);
			if(PlayerTemp[playerid][Specteando] == 1) return Mensaje(playerid, COLORCARGO0, "Para dejar de ver al jugador usa "CR"/specoff");
		}
		if(strcmp(item, "botiquin", true)==0)
		{
			if(!TieneTrabajo(playerid, MEDICO)) return Mensaje(playerid,-1,"Necesitas el trabajo de m�dico para utilizar este comando.");
			if(RopaMedi[playerid] > 0) return MostrarBotiquin(playerid);
			else return Mensaje(playerid,-1,"Necesitas tener la ropa de m�dico para utilizar este comando.");
		}
		else if(strcmp(params,"mapa",true) == 0)
		{
			if(!EnVerMapa(playerid)) return Mensaje(playerid, -1, "No estas cerca de un mapa.");
			MostrarDialog(playerid, GPS, DIALOG_STYLE_LIST, "Puntos de inter�s", "Concesionarias\nBancos\n24/7\nTrabajos\nEdificios del gobierno\nTiendas de ropa", "Siguiente", "Cancelar");
		}
		else if(strcmp(params,"pantalla",true) == 0)
		{
		    if(!EnPantalla(playerid)) return Mensaje(playerid, -1, "No estas cerca de una pantalla.");
		    if(ViendoPantalla[playerid] == 1) return Mensaje(playerid, -1, "Ya estas viendo una pantalla, usa "CR"/ocultar pantalla"CB".");
		    ViendoPantalla[playerid] = 1;
			TextDrawShowForPlayer(playerid, MapaLateral[0]);
			TextDrawShowForPlayer(playerid, MapaLateral[1]);
			TextDrawShowForPlayer(playerid, MapaLateral[4]);
			TextDrawShowForPlayer(playerid, MapaLateral[5]);
			BarraHambre(playerid, 2);
			BarraSed(playerid, 2);
			foreach(new i : Player)
			{
				if(IsPlayerNPC(i))
				{
	    			if(i == TrenUno || i == TrenDos || i == TrenTres || i == TrenCuatro)
					{
						new Float:DyGPSPos[2];
						new Float:posicionPlayerGPS[3];
						GetPlayerPos(i, posicionPlayerGPS[0], posicionPlayerGPS[1], posicionPlayerGPS[2]);
			   			floatMapa3Da2D(posicionPlayerGPS[0], posicionPlayerGPS[1], 360.000000, 26.000000,256.000000,256.000000, DyGPSPos[0], DyGPSPos[1]);
						tren[playerid][i] = CreatePlayerTextDraw(playerid, DyGPSPos[0], DyGPSPos[1], "hplayeridd:radar_waypoint");
						PlayerTextDrawLetterSize(playerid, tren[playerid][i], 1.000000, 2.000000);
						PlayerTextDrawTextSize(playerid, tren[playerid][i], 8.000000, 8.000000);
						PlayerTextDrawAlignment(playerid, tren[playerid][i], 0);
						PlayerTextDrawUseBox(playerid, tren[playerid][i], 1);
						PlayerTextDrawColor(playerid, tren[playerid][i], -1);
						PlayerTextDrawSetShadow(playerid, tren[playerid][i], 1);
						PlayerTextDrawSetOutline(playerid, tren[playerid][i], 0);
						PlayerTextDrawBackgroundColor(playerid, tren[playerid][i], 0x000000FF);
						PlayerTextDrawSetProportional(playerid, tren[playerid][i], 1);
						PlayerTextDrawFont(playerid, tren[playerid][i], 4);
						PlayerTextDrawShow(playerid, tren[playerid][i]);
					}
				}
   			}
			SetTimerEx("modificarpuntotren", 1000, false, "i", playerid);
			CongelarEx(playerid);
		}
		else if(strcmp(params,"sed",true) == 0)
		{
			if(SedOculta[playerid] == 1) return Mensaje(playerid,-1,"La barra de sed no esta oculta.");
            SedOculta[playerid] = 1;
			BarraHambre(playerid, 1);
			BarraSed(playerid, 1);
			Mensaje(playerid,-1,"Ahora puedes ver la barra de sed, para ocultarla usa "CR"/ocultar sed"CB".");
		}
		else if(strcmp(params,"estanteria",true) == 0) return MostrarRopero(playerid);
	    else if(strcmp(params,"heladera",true) == 0)
	    {
	        if(GetPlayerVirtualWorld(playerid) != 0)
	        {
				foreach(new p : Propiedades)
				{
				    if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW])
				    {
				        if(EstaEn(playerid,2,PropInfo[p][pHeladeraX],PropInfo[p][pHeladeraY],PropInfo[p][pHeladeraZ]))
				        {
				            if(PropInfo[p][pTipo] == 3)
				            {
				            	if(PlayerInfo[playerid][p_DBID] != PropInfo[p][pIDPropietario]) return Mensaje(playerid, -1, "No puedes ver el contenido de esta heladera.");
							}
				            new heladera[100],heladera2[500],heladera3[550];
				            format(string,sizeof(string),"%s abre la heladera.",NombreJugador(playerid));
   	                        ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
                            new total = PropInfo[p][pSprunk] + PropInfo[p][pVino] + PropInfo[p][pCerveza] + PropInfo[p][pPizzas] + PropInfo[p][pAquarius];
							format(heladera,sizeof(heladera),""CB"Heladera    [Lugares: %d/%d]",total,PropInfo[p][pLugarHeladera]);
							if(total == 0)
							{
								format(heladera2,sizeof(heladera2),"La heladera est� vac�a.");
								strcat(heladera3,heladera2);
							}
							else if(total > 0)
							{
								if(PropInfo[p][pCerveza] > 0) format(heladera3,sizeof(heladera3),""CB"Botella de cerveza "CR"x%d\n", PropInfo[p][pCerveza]);
							    if(PropInfo[p][pVino] > 0) format(heladera3,sizeof(heladera3),"%s"CB"Botella de vino "CR"x%d\n", heladera3, PropInfo[p][pVino]);
							    if(PropInfo[p][pSprunk] > 0) format(heladera3,sizeof(heladera3),"%s"CB"Vasos de sprunk "CR"x%d\n", heladera3, PropInfo[p][pSprunk]);
							    if(PropInfo[p][pAquarius] > 0) format(heladera3,sizeof(heladera3),"%s"CB"Botella de aquarius "CR"x%d", heladera3, PropInfo[p][pAquarius]);
								if(PropInfo[p][pPizzas] > 0) format(heladera3,sizeof(heladera3),"%s"CB"Porci�n de pizza "CR"x%d", heladera3, PropInfo[p][pPizzas]);
							}
							MostrarDialog(playerid,0,DIALOG_STYLE_MSGBOX,heladera,heladera3,"Cerrar","");
				        }
				    }
				}
	        }
	    }
	}
	return 1;
}

CMD:guardar(playerid,params[])
{
	new arma[20],armaid,string[150],cantidad;
	if(PlayerInfo[playerid][jNivel] < 6) return Mensaje(playerid,-1,"Necesitas ser nivel 6 para guardar objetos en la estanteria.");
	if(!sscanf(params,"s[20]d",arma,cantidad))
	{
	    if(strcmp(arma,"medicamentos",true) == 0 || strcmp(arma,"medicamento",true) == 0) armaid = 100;
	    if(strcmp(arma,"crack",true) == 0) armaid = 200;
	}
	else if(!sscanf(params,"s[20]",arma))
	{
	    if(strcmp(arma,"manopla",true) == 0) armaid = 1;
	    if(strcmp(arma,"palo-de-golf",true) == 0) armaid = 2;
	    if(strcmp(arma,"cuchillo",true) == 0) armaid = 4;
	    if(strcmp(arma,"bate-de-beisbol",true) == 0) armaid = 5;
	    if(strcmp(arma,"pala",true) == 0) armaid = 6;
	    if(strcmp(arma,"palo-de-billar",true) == 0) armaid = 7;
	    if(strcmp(arma,"katana",true) == 0) armaid = 8;
	    if(strcmp(arma,"consolador-rosa",true) == 0) armaid = 10;
	    if(strcmp(arma,"vibrador-blanco",true) == 0) armaid = 11;
	    if(strcmp(arma,"gran-vibrador-blanco",true) == 0) armaid = 12;
	    if(strcmp(arma,"vibrador-plateado",true) == 0) armaid = 13;
	    if(strcmp(arma,"flores",true) == 0 || strcmp(arma,"ramo-de-flores",true) == 0) armaid = 14;
	    if(strcmp(arma,"baston",true) == 0) armaid = 15;
	    if(strcmp(arma,"9mm",true) == 0) armaid = 22;
	    if(strcmp(arma,"9mm-silenciada",true) == 0) armaid = 23;
	    if(strcmp(arma,"desert-eagle",true) == 0) armaid = 24;
	    if(strcmp(arma,"escopeta",true) == 0 || strcmp(arma,"escopeta-normal",true) == 0 ) armaid = 25;
	    if(strcmp(arma,"escopeta-de-combate",true) == 0) armaid = 27;
	    if(strcmp(arma,"MP5",true) == 0) armaid = 29;
	    if(strcmp(arma,"AK-47",true) == 0) armaid = 30;
	    if(strcmp(arma,"M4",true) == 0) armaid = 31;
	    if(strcmp(arma,"rifle",true) == 0) armaid = 33;
	    if(strcmp(arma,"sniper",true) == 0) armaid = 34;
	    if(strcmp(arma,"camara",true) == 0) armaid = 43;
		if(strcmp(arma,"motosierra",true) == 0) armaid = 9;
		if(strcmp(arma,"lanzacohetes",true) == 0) armaid = 35;
		if(strcmp(arma,"lanzallamas",true) == 0) armaid = 37;
		if(strcmp(arma,"paracaidas",true) == 0) armaid = 46;
		if(strcmp(arma,"bolso",true) == 0) armaid = 1000;
		if(strcmp(arma,"hongos",true) == 0) armaid = 777;
		if(strcmp(arma,"cocaina",true) == 0) armaid = 666;

	}
	if(armaid != 0 && armaid == 100)//Medicamentos
	{
		if(EstaEn(playerid,10,254.2685,-41.5420,1002.0308) && GetPlayerInterior(playerid) == 14)
 		{
  			foreach(new c : Propiedades)
    		{
     			if(GetPlayerVirtualWorld(playerid) == PropInfo[c][pVW])
       			{
	    			if(PlayerInfo[playerid][pMedicamentos] >= cantidad)
	    			{
	        			if(cantidad <= 0) return Mensaje(playerid,-1,"Cantidad inv�lida.");
						PlayerInfo[playerid][pMedicamentos] -= cantidad;
						PropInfo[c][pMedicamentos] += cantidad;
						GuardarPropiedad(c);
						format(string,sizeof(string),"%s coloca medicamentos en el estante.",NombreJugador(playerid));
						ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
					}
					else Mensaje(playerid,-1,"No tienes esa cantidad de medicamentos.");
					break;
				}
			}
	    }
	}
	else if(armaid != 0 && armaid == 777)//hongos
	{
		if(EstaEn(playerid,10,254.2685,-41.5420,1002.0308) && GetPlayerInterior(playerid) == 14)
 		{
  			foreach(new c : Propiedades)
    		{
     			if(GetPlayerVirtualWorld(playerid) == PropInfo[c][pVW])
       			{
	    			if(PlayerInfo[playerid][pHongos] >= cantidad)
	    			{
	        			if(cantidad <= 0) return Mensaje(playerid,-1,"Cantidad inv�lida.");
						PlayerInfo[playerid][pHongos] -= cantidad;
						PropInfo[c][pHongos] += cantidad;
						GuardarPropiedad(c);
						format(string,sizeof(string),"%s coloca hongos en el estante.",NombreJugador(playerid));
						ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
					}
					else Mensaje(playerid,-1,"No tienes esa cantidad de hongos.");
					break;
				}
			}
	    }
	}
	else if(armaid != 0 && armaid == 666)//cocaina
	{
		if(EstaEn(playerid,10,254.2685,-41.5420,1002.0308) && GetPlayerInterior(playerid) == 14)
 		{
  			foreach(new c : Propiedades)
    		{
     			if(GetPlayerVirtualWorld(playerid) == PropInfo[c][pVW])
       			{
	    			if(PlayerInfo[playerid][pCocaina] >= cantidad)
	    			{
	        			if(cantidad <= 0) return Mensaje(playerid,-1,"Cantidad inv�lida.");
						PlayerInfo[playerid][pCocaina] -= cantidad;
						PropInfo[c][pCocaina] += cantidad;
						GuardarPropiedad(c);
						format(string,sizeof(string),"%s coloca gramos de coca�na en el estante.",NombreJugador(playerid));
						ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
					}
					else Mensaje(playerid,-1,"No tienes esa cantidad de coca�na.");
					break;
				}
			}
	    }
	}
	else if(armaid != 0 && armaid == 200)//Crack
	{
		if(EstaEn(playerid,10,254.2685,-41.5420,1002.0308) && GetPlayerInterior(playerid) == 14)
 		{
  			foreach(new c : Propiedades)
    		{
     			if(GetPlayerVirtualWorld(playerid) == PropInfo[c][pVW])
       			{
	    			if(PlayerInfo[playerid][pCrack] >= cantidad)
	    			{
	        			if(cantidad <= 0) return Mensaje(playerid,-1,"Cantidad inv�lida.");
						PlayerInfo[playerid][pCrack] -= cantidad;
						PropInfo[c][pCrack] += cantidad;
						GuardarPropiedad(c);
						format(string,sizeof(string),"%s coloca gramos de crack en el estante.",NombreJugador(playerid));
						ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
					}
					else Mensaje(playerid,-1,"No tienes esa cantidad de crack.");
					break;
				}
			}
	    }
	}
 	else if(armaid != 0 && armaid != 100 && armaid != 200)//Armas
  	{
		if(EstaEn(playerid,10,254.2685,-41.5420,1002.0308) && GetPlayerInterior(playerid) == 14)
 		{
  			foreach(new c : Propiedades)
    		{
     			if(GetPlayerVirtualWorld(playerid) == PropInfo[c][pVW])
       			{
					if(EspacioRopero(c) < PropInfo[c][pLugarRopero])
					{
						if(SiTieneArma(playerid,armaid))
						{
						    if(armaid == 1) PropInfo[c][pManopla] ++;
						    else if(armaid == 2) PropInfo[c][pPaloDeGolf] ++;
						    else if(armaid == 4) PropInfo[c][pCuchillo] ++;
						    else if(armaid == 5) PropInfo[c][pBateDeBeisbol] ++;
						    else if(armaid == 6) PropInfo[c][pPala] ++;
						    else if(armaid == 7) PropInfo[c][pPaloDeBillar] ++;
						    else if(armaid == 8) PropInfo[c][pKatana] ++;
						    else if(armaid == 10) PropInfo[c][pConsoladorRosa] ++;
						    else if(armaid == 11) PropInfo[c][pVibradorBlanco] ++;
						    else if(armaid == 12) PropInfo[c][pGranVibradorBlanco] ++;
						    else if(armaid == 13) PropInfo[c][pVibradorPlateado] ++;
						    else if(armaid == 14) PropInfo[c][pFlores] ++;
						    else if(armaid == 15) PropInfo[c][pBaston] ++;
						    else if(armaid == 16) PropInfo[c][pGranada] ++;
							else if(armaid == 22) PropInfo[c][p9mm] ++;
							else if(armaid == 23) PropInfo[c][p9mmSilenciada] ++;
							else if(armaid == 24) PropInfo[c][pDesertEagle] ++;
							else if(armaid == 25) PropInfo[c][pEscopetaNormal] ++;
							else if(armaid == 27) PropInfo[c][pEscopetaDeCombate] ++;
							else if(armaid == 29) PropInfo[c][pMP5] ++;
							else if(armaid == 30) PropInfo[c][pAK47] ++;
							else if(armaid == 31) PropInfo[c][pM4] ++;
							else if(armaid == 33) PropInfo[c][pRifle] ++;
							else if(armaid == 34) PropInfo[c][Sniper] ++;
							else if(armaid == 43) PropInfo[c][pCamara] ++;
							else if(armaid == 28) PropInfo[c][pUzi] ++;
							else if(armaid == 32) PropInfo[c][pTec9] ++;
							else if(armaid == 9) PropInfo[c][pMotosierra] ++;
							else if(armaid == 34) PropInfo[c][pSniper] ++;
							else if(armaid == 35) PropInfo[c][pLanzacohetes] ++;
							else if(armaid == 36) PropInfo[c][pBazooka] ++;
							else if(armaid == 37) PropInfo[c][pLanzallamas] ++;
							else if(armaid == 38) PropInfo[c][pMinigun] ++;
							else if(armaid == 46) PropInfo[c][pParacaidas] ++;
							QuitarArma(playerid,armaid);
							format(string,sizeof(string),"%s coloca su %s en el estante.",NombreJugador(playerid),GetWeaponNameEx(armaid));
							ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
							GuardarPropiedad(c);
						}
						else Mensaje(playerid,-1,"No tienes esa arma en tus manos.");
					}
					else Mensaje(playerid,-1,"No hay espacios libres en el estante.");
					break;
				}
			}
		}
	}
	return true;
}

CMD:sacar(playerid,params[])
{
	new arma[20],armaid,string[150],cantidad;
	if(ArmasEstado == 0) return Mensaje(playerid,-1,"No puedes sacar armas en este momento.");
	if(PlayerInfo[playerid][jNivel] < 6) return Mensaje(playerid,-1,"Necesitas ser nivel 6 para sacar cosas de la estanteria.");
	if(!sscanf(params,"s[20]d",arma,cantidad))
	{
	    if(strcmp(arma,"medicamentos",true) == 0 || strcmp(arma,"medicamento",true) == 0 || strcmp(arma,"remedio",true) == 0 || strcmp(arma,"remedios",true) == 0) armaid = 100;
	    if(strcmp(arma,"crack",true) == 0) armaid = 200;
	}
	else if(!sscanf(params,"s[20]",arma))
	{
	    if(strcmp(arma,"manopla",true) == 0) armaid = 1;
	    if(strcmp(arma,"palo-de-golf",true) == 0) armaid = 2;
	    if(strcmp(arma,"cuchillo",true) == 0) armaid = 4;
	    if(strcmp(arma,"bate-de-beisbol",true) == 0) armaid = 5;
	    if(strcmp(arma,"pala",true) == 0) armaid = 6;
		if(strcmp(arma,"palo-de-billar",true) == 0) armaid = 7;
	    if(strcmp(arma,"katana",true) == 0) armaid = 8;
	    if(strcmp(arma,"consolador-rosa",true) == 0) armaid = 10;
	    if(strcmp(arma,"vibrador-blanco",true) == 0) armaid = 11;
	    if(strcmp(arma,"gran-vibrador-blanco",true) == 0) armaid = 12;
	    if(strcmp(arma,"vibrador-plateado",true) == 0) armaid = 13;
	    if(strcmp(arma,"flores",true) == 0 || strcmp(arma,"ramo-de-flores",true) == 0) armaid = 14;
	    if(strcmp(arma,"baston",true) == 0) armaid = 15;
	    if(strcmp(arma,"9mm",true) == 0) armaid = 22;
	    if(strcmp(arma,"9mm-silenciada",true) == 0) armaid = 23;
	    if(strcmp(arma,"desert-eagle",true) == 0) armaid = 24;
	    if(strcmp(arma,"escopeta",true) == 0 || strcmp(arma,"escopeta-normal",true) == 0 ) armaid = 25;
	    if(strcmp(arma,"escopeta-de-combate",true) == 0) armaid = 27;
	    if(strcmp(arma,"MP5",true) == 0) armaid = 29;
	    if(strcmp(arma,"AK-47",true) == 0) armaid = 30;
	    if(strcmp(arma,"M4",true) == 0) armaid = 31;
	    if(strcmp(arma,"rifle",true) == 0) armaid = 33;
	    if(strcmp(arma,"sniper",true) == 0) armaid = 34;
	    if(strcmp(arma,"camara",true) == 0) armaid = 43;
	    if(strcmp(arma,"bolso",true) == 0) armaid = 1000;
    	if(strcmp(arma,"hongos",true) == 0) armaid = 777;
		if(strcmp(arma,"cocaina",true) == 0) armaid = 666;
	}
	if(armaid == 100)
	{
		if(EstaEn(playerid,10,254.2685,-41.5420,1002.0308) && GetPlayerInterior(playerid) == 14)
 		{
  			foreach(new c : Propiedades)
    		{
     			if(GetPlayerVirtualWorld(playerid) == PropInfo[c][pVW])
       			{
       			    if(PropInfo[c][pMedicamentos] >= cantidad)
       			    {
       			        if(PlayerInfo[playerid][horasjugadas] < 6) return Mensaje(playerid, -1, "Necesitas por lo menos haber jugado 6 horas para poder sacar cosas del ropero.");
       			        PropInfo[c][pMedicamentos] -= cantidad;
       			        PlayerInfo[playerid][pMedicamentos] += cantidad;
						format(string,sizeof(string),"%s toma medicamentos del estante.",NombreJugador(playerid));
						ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
						GuardarPropiedad(c);
       			    }
       			    else Mensaje(playerid,-1,"No hay esa cantidad de medicamentos en el estante.");
					break;
				}
			}
		}
	}
	else if(armaid == 666)
	{
		if(EstaEn(playerid,10,254.2685,-41.5420,1002.0308) && GetPlayerInterior(playerid) == 14)
 		{
  			foreach(new c : Propiedades)
    		{
     			if(GetPlayerVirtualWorld(playerid) == PropInfo[c][pVW])
       			{
       			    if(PropInfo[c][pCocaina] >= cantidad)
       			    {
       			        PropInfo[c][pCocaina] -= cantidad;
       			        PlayerInfo[playerid][pCocaina] += cantidad;
						format(string,sizeof(string),"%s toma gramos de coca�na del estante.",NombreJugador(playerid));
						ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
						GuardarPropiedad(c);
       			    }
       			    else Mensaje(playerid,-1,"No hay esa cantidad de coca�na en el estante.");
					break;
				}
			}
		}
	}
	else if(armaid == 777)
	{
		if(EstaEn(playerid,10,254.2685,-41.5420,1002.0308) && GetPlayerInterior(playerid) == 14)
 		{
  			foreach(new c : Propiedades)
    		{
     			if(GetPlayerVirtualWorld(playerid) == PropInfo[c][pVW])
       			{
       			    if(PropInfo[c][pHongos] >= cantidad)
       			    {
       			        PropInfo[c][pHongos] -= cantidad;
       			        PlayerInfo[playerid][pHongos] += cantidad;
						format(string,sizeof(string),"%s toma hongos del estante.",NombreJugador(playerid));
						ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
						GuardarPropiedad(c);
       			    }
       			    else Mensaje(playerid,-1,"No hay esa cantidad de hongos en el estante.");
					break;
				}
			}
		}
	}
	else if(armaid == 200)
	{
		if(EstaEn(playerid,10,254.2685,-41.5420,1002.0308) && GetPlayerInterior(playerid) == 14)
 		{
  			foreach(new c : Propiedades)
    		{
     			if(GetPlayerVirtualWorld(playerid) == PropInfo[c][pVW])
       			{
       			    if(PropInfo[c][pCrack] >= cantidad)
       			    {
       			        PropInfo[c][pCrack] -= cantidad;
       			        PlayerInfo[playerid][pCrack] += cantidad;
						format(string,sizeof(string),"%s toma gramos de crack del estante.",NombreJugador(playerid));
						ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
						GuardarPropiedad(c);
       			    }
       			    else Mensaje(playerid,-1,"No hay esa cantidad de crack en el estante.");
					break;
       			}
			}
		}
	}
 	else if(armaid != 0 && armaid != 200 && armaid != 100)
  	{
		if(EstaEn(playerid,10,254.2685,-41.5420,1002.0308) && GetPlayerInterior(playerid) == 14)
 		{
  			foreach(new c : Propiedades)
    		{
     			if(GetPlayerVirtualWorld(playerid) == PropInfo[c][pVW])
       			{
					if(SiRoperoTiene(c,armaid))
					{
					    if(armaid == 1) PropInfo[c][pManopla] --;
	    				else if(armaid == 2) PropInfo[c][pPaloDeGolf] --;
	    				else if(armaid == 4) PropInfo[c][pCuchillo] --;
	    				else if(armaid == 5) PropInfo[c][pBateDeBeisbol] --;
	    				else if(armaid == 6) PropInfo[c][pPala] --;
	    				else if(armaid == 7) PropInfo[c][pPaloDeBillar] --;
	    				else if(armaid == 8) PropInfo[c][pKatana] --;
						else if(armaid == 9) PropInfo[c][pMotosierra] --;
	    				else if(armaid == 10) PropInfo[c][pConsoladorRosa] --;
						else if(armaid == 11) PropInfo[c][pVibradorBlanco] --;
						else if(armaid == 12) PropInfo[c][pGranVibradorBlanco] --;
						else if(armaid == 13) PropInfo[c][pVibradorPlateado] --;
	    				else if(armaid == 14) PropInfo[c][pFlores] --;
	    				else if(armaid == 15) PropInfo[c][pBaston] --;
						else if(armaid == 22) PropInfo[c][p9mm] --;
						else if(armaid == 23) PropInfo[c][p9mmSilenciada] --;
						else if(armaid == 24) PropInfo[c][pDesertEagle] --;
						else if(armaid == 25) PropInfo[c][pEscopetaNormal] --;
						else if(armaid == 27) PropInfo[c][pEscopetaDeCombate] --;
						else if(armaid == 29) PropInfo[c][pMP5] --;
						else if(armaid == 30) PropInfo[c][pAK47] --;
						else if(armaid == 31) PropInfo[c][pM4] --;
						else if(armaid == 33) PropInfo[c][pRifle] --;
						else if(armaid == 34) PropInfo[c][Sniper] --;
						else if(armaid == 43) PropInfo[c][pCamara] --;
						else if(armaid == 28) PropInfo[c][pUzi] --;
						else if(armaid == 32) PropInfo[c][pTec9] --;
						else if(armaid == 34) PropInfo[c][pSniper] --;
						else if(armaid == 35) PropInfo[c][pLanzacohetes] --;
						else if(armaid == 36) PropInfo[c][pBazooka] --;
						else if(armaid == 37) PropInfo[c][pLanzallamas] --;
						else if(armaid == 38) PropInfo[c][pMinigun] --;
						else if(armaid == 46) PropInfo[c][pParacaidas] --;
						DarArma(playerid,armaid);
						format(string,sizeof(string),"%s toma un/a %s del estante.",NombreJugador(playerid),GetWeaponNameEx(armaid));
						ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
						GuardarPropiedad(c);
					}
					else Mensaje(playerid,-1,"No hay esa arma en el estante.");
					break;
				}
			}
		}
	}
	return true;
}

CMD:retirar(playerid,params[])
{
	new id, item[32], string[250];
	if(!sscanf(params, "d", id))
	{
		if(playerid == CabinasOcupadasEmisoras[1][1])
	    {
			if(IsPlayerConnected(id))
			{
				if(IsPlayerInDynamicArea(id, AreaCabinas[1]))
				{
                    SetPosEx(id,349.6348,179.4696,1040.1078,272.4611,5,5);
	    			format(string,sizeof(string),"%s agarra del brazo a %s y lo expulsa de la sala.",NombreJugador(playerid), NombreJugador(id));
					ProxDetector(20.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
	    			Mensaje(id,-1,"Te sacaron de la sala de transmisi�n.");
	    			return 1;
				}
				else return Mensaje(playerid,-1,"El jugador debe estar dentro de la sala de transmisi�n.");
			}
			else return Mensaje(playerid,-1,"Ese jugador est� desconectado.");
		}
		if(playerid == CabinasOcupadasEmisoras[2][1])
	    {
			if(IsPlayerConnected(id))
			{
				if(IsPlayerInDynamicArea(id, AreaCabinas[2]))
				{
                    SetPosEx(id,349.6344,161.5094,1040.1156,275.2812,5,5);
	    			format(string,sizeof(string),"%s agarra del brazo a %s y lo expulsa de la sala.",NombreJugador(playerid), NombreJugador(id));
					ProxDetector(20.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
	    			Mensaje(id,-1,"Te sacaron de la sala de transmisi�n.");
	    			return 1;
				}
				else return Mensaje(playerid,-1,"El jugador debe estar dentro de la sala de transmisi�n.");
			}
			else return Mensaje(playerid,-1,"Ese jugador est� desconectado.");
		}
		if(playerid == CabinasOcupadasEmisoras[3][1])
	    {
			if(IsPlayerConnected(id))
			{
				if(IsPlayerInDynamicArea(id, AreaCabinas[3]))
				{
                    SetPosEx(id,349.5545,150.0601,1040.1156,271.8345,5,5);
	    			format(string,sizeof(string),"%s agarra del brazo a %s y lo expulsa de la sala.",NombreJugador(playerid), NombreJugador(id));
					ProxDetector(20.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
	    			Mensaje(id,-1,"Te sacaron de la sala de transmisi�n.");
	    			return 1;
				}
				else return Mensaje(playerid,-1,"El jugador debe estar dentro de la sala de transmisi�n.");
			}
			else return Mensaje(playerid,-1,"Ese jugador est� desconectado.");
		}
		if(playerid == CabinasOcupadasEmisoras[4][1])
	    {
			if(IsPlayerConnected(id))
			{
                if(IsPlayerInDynamicArea(id, AreaCabinas[4]))
				{
                    SetPosEx(id,361.9513,151.9493,1040.1156,182.2437,5,5);
	    			format(string,sizeof(string),"%s agarra del brazo a %s y lo expulsa de la sala.",NombreJugador(playerid), NombreJugador(id));
					ProxDetector(20.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
	    			Mensaje(id,-1,"Te sacaron de la sala de transmisi�n.");
	    			return 1;
				}
				else return Mensaje(playerid,-1,"El jugador debe estar dentro de la sala de transmisi�n.");
			}
			else return Mensaje(playerid,-1,"Ese jugador est� desconectado.");
		}
	}
	if(!sscanf(params,"s[32]d",item,id))
	{
		if(strcmp(item,"vehiculo", true)==0)
		{
		    if(strcmp(Alquilador,NombreJugador(playerid),true) == 0 || PermisoSalon[playerid] == true)
			{
		    	new inte = GetVehicleInterior(id), vw = GetVehicleVirtualWorld(id);
				if(inte == 13 && vw == 1)
				{
				    format(string,sizeof(string),"Retiraste el veh�culo %d del sal�n de eventos.", id);
				    Mensaje(playerid,-1, string);
				    format(string,sizeof(string),"El jugador "CR"%s"CB" retiro el veh�culo "CR"%s"CB" del sal�n de eventos.", NombreJugador(playerid), id);
					MandarMensajeSalon(string, playerid);
					SetPosVeh(id, 1410.2614,-1237.0621,13.3828,177.9267, 0, 0);
				}
				else return Mensaje(playerid,-1,"Ese veh�culo no se encuentra en el sal�n de eventos.");
			}
		}
	}
	return 1;
}

CMD:dar(playerid,params[])
{
	new id,cantidad,Float:x,Float:y,Float:z,string[256],item[15];
	if(!sscanf(params,"s[15]dd",item,id,cantidad))
	{
		if(strcmp(item,"dinero", true)==0)
		{
			if(gettimeVariable < TiempoMoney[playerid])
			{
				new time = TiempoMoney[playerid]-gettimeVariable;
				if(time > 60) va_SendClientMessage(playerid,-1,"Por favor espera {FF0000}%d:%d "CB"(m:s)"CB".",time/60,time%(60));
				else if(time < 60) va_SendClientMessage(playerid,-1,"Por favor espera {FF0000}%d segundos"CB".",time);
				return 1;
			}
            if(PlayerInfo[playerid][horasjugadas] < 6) return Mensaje(playerid, -1, "Necesitas por lo menos haber jugador 6 horas para dar dinero.");
			if(PlayerInfo[playerid][jNivel] < 6) return Mensaje(playerid,-1,"Necesitas ser nivel 6 para dar dinero.");
			if(!IsPlayerConnected(id)) return Mensaje(playerid,COLORCARGO0,"No se encontr� ning�n jugador.");
			if(PlayerInfo[playerid][jDinero] < cantidad) return Mensaje(playerid,-1,"Tu no tienes esa cantidad de dinero.");
			if(PlayerTemp[id][Specteando] == 1) return Mensaje(playerid,-1,"No estas cerca de ese jugador.");
			if(id == playerid) return 1;
			GetPlayerPos(id, x,y,z);
			if(cantidad > 0 && cantidad < 5000000)
			{
				if(EstaEn(playerid, 5.0, x,y,z))
				{
					new Query[200];
					TiempoMoney[playerid] = gettimeVariable + 10;
					DarDinero(id, cantidad);
					QuitarDinero(playerid, cantidad);
					format(string, sizeof(string), "%s saca su billetera y le da algo de dinero a %s.",NombreJugador(playerid),NombreJugador(id));
					ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
					format(string, sizeof(string), "%s"CB" te ha enviado "CR"$%s"CB".",NombreJugador(playerid),ConvertirNumero(cantidad));
					Mensaje(id,COLOR_AZUL,string);
					mysql_format(Conecction, Query, sizeof(Query), "INSERT INTO `log_ventas` (Vendedor, item, cantidad, comprador,fecha) VALUES ('%d','6', '%d','%d',CURRENT_TIMESTAMP())",PlayerInfo[playerid][p_DBID],cantidad,PlayerInfo[id][p_DBID]);
					mysql_tquery(Conecction, Query);
					if(cantidad >= 50000)
					{
						format(string, 256, ""CR"Notificaci�n: Jugador %s (ID:"CB" %d"CR" | Nivel: %d) entrega $%s a %s (ID:"CB" %d"CR" | Nivel: %d)", NombreJugador(playerid),playerid,PlayerInfo[playerid][jNivel],ConvertirNumero(cantidad),NombreJugador(id),id,PlayerInfo[id][jNivel]);
						MensajeAdmin(COLOR_CHEAT, string, 5);
					}
					return 1;
				}
				else return Mensaje(playerid,-1,"No estas cerca de ese jugador.");
			}
			else return Mensaje(playerid,-1,"Cantidad invalida.");
		}
	}
	if(!sscanf(params,"s[15]r",item,id))
	{
	    if(strcmp(item,"acceso",true) == 0)
	    {
	    	if(Alquilado == false) return 1;
	    	if(strcmp(Alquilador,NombreJugador(playerid),true) == 0)
	    	{
	            if(IsPlayerConnected(id))
	            {
	                if(EnSalonEvento(id) || EnSalonEvento2(id))
	                {
	                    if(PermisoSalon[id] == false)
	                    {
	                        PermisoSalon[id] = true;
	                        format(string,sizeof(string),"Le diste acceso al sal�n a "CR"%s"CB", usa "CR"/quitar acceso"CB" [id] para quitarle el acceso.",NombreJugador(id));
							Mensaje(playerid,-1,string);
							format(string,sizeof(string),"Recibiste una tarjeta de acceso al sal�n, usa "CR"/ayuda salon"CB" para recibir informaci�n.");
							Mensaje(id,-1,string);
							return 1;
	                    }
	                    else Mensaje(playerid,-1,"Ya le diste el acceso a esa persona.");
	                }
	                else Mensaje(playerid,-1,"El jugador debe estar dentro del sal�n.");
	            }
	            else Mensaje(playerid,-1,"Ese jugador est� desconectado.");
	    	}
	    	else Mensaje(playerid,-1,"No tienes permiso para dar acceso.");
	    }
		if(strcmp(item,"microfono",true) == 0)
		{
			if(Emisoras[playerid][TieneEmisora] == 0) return Mensaje(playerid, COLOR_BLANCO, "No tienes una emisora, ve y consigue una en la entrada.");
			if(Emisoras[playerid][TransEmisora] == 0) return Mensaje(playerid, COLOR_BLANCO, "No estas transmitiendo en ninguna cabina de radio.");
			if(IsPlayerConnected(id))
			{
				if(ProxDetectorS(5.0, playerid, id))
				{
					if(TieneMicrofono[id] == Emisoras[playerid][CabinaOcupada]) return Mensaje(playerid, COLOR_BLANCO, "Ya le habias prestado un micr�fono a ese jugador.");
					format(string, sizeof(string), "%s le presta un micr�fono a %s.", NombreJugador(playerid), NombreJugador(id));
					ProxDetector(30.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
					SetPlayerAttachedObject(id, 4, 19610, 6, 0.068, 0.022, 0.015, 87.2, 88.1, -7.5, 1, 0.752, 1);
					TieneMicrofono[id] = Emisoras[playerid][CabinaOcupada];
				}
				else Mensaje(playerid, COLOR_BLANCO, "Ese jugador esta lejos.");
			}
			else Mensaje(playerid, COLOR_BLANCO, "Ese jugador esta desconectado.");
		}
	}
	return 1;
}

CMD:quitar(playerid,params[])
{
	new opcion[15],id,string[147];
	new jugadorid, seleccion[32];
	if(!sscanf(params,"s[15]",opcion))
	{
 		if(strcmp(opcion,"prenda",true) == 0 || strcmp(opcion,"prendas",true) == 0) return MostrarMenu(playerid,4);
	    if(strcmp(params,"sed",true) == 0)
		{
			if(SedOculta[playerid] == 0) return Mensaje(playerid,-1,"La barra de sed ya esta oculta.");
		    SedOculta[playerid] = 0;
			BarraHambre(playerid, 2);
			BarraSed(playerid, 2);
			Mensaje(playerid,-1,"Ocultaste la barra de sed, para volver a mostrarla usa "CR"/mostrar sed"CB".");
			return 1;
		}
	}
	if(!sscanf(params,"s[15]r",opcion,id))
	{
	    if(strcmp(opcion,"acceso",true) == 0)
	    {
	    	if(Alquilado == false) return 1;
	    	if(strcmp(Alquilador,NombreJugador(playerid),true) == 0 || PermisoSalon[playerid] == true)
	    	{
	            if(IsPlayerConnected(id))
	            {
	                if(EnSalonEvento(id) || EnSalonEvento2(id))
	                {
	                    if(PermisoSalon[id] == true)
	                    {
	                        if(strcmp(NombreJugador(id),Alquilador,true) == 0) return Mensaje(playerid,-1,"No puedes quitarle el acceso a esa persona.");
	                        PermisoSalon[id] = false;
	                        format(string,sizeof(string),"Le quitaste el acceso al sal�n a "CR"%s [%d]"CR".",NombreJugador(id),id);
	                        Mensaje(playerid,-1,string);
	                        format(string,sizeof(string),"Te quitaron tu acceso, ya no tendras los beneficios de la tarjeta.");
							Mensaje(id,-1,string);
							return 1;
	                    }
	                    else Mensaje(playerid,-1,"Ese jugador no tiene acceso al sal�n.");
	                }
	                else Mensaje(playerid,-1,"El jugador debe estar dentro del sal�n.");
	            }
	            else Mensaje(playerid,-1,"Ese jugador est� desconectado.");
	    	}
	    	else Mensaje(playerid,-1,"No tienes permiso para quitar acceso.");
	    }
	}
	if(!sscanf(params, "s[32]u", seleccion, jugadorid))
	{
		if(strcmp(seleccion,"microfono",true) == 0)
		{
			if(Emisoras[playerid][TieneEmisora] == 0) return Mensaje(playerid, COLOR_BLANCO, "No tienes una emisora, ve y consigue una en la entrada.");
			if(Emisoras[playerid][TransEmisora] == 0) return Mensaje(playerid, COLOR_BLANCO, "No estas transmitiendo en ninguna cabina de radio.");
			if(IsPlayerConnected(jugadorid))
			{
				if(ProxDetectorS(5.0, playerid, jugadorid))
				{
					if(TieneMicrofono[jugadorid] == -1) return Mensaje(playerid, COLOR_BLANCO, "Ese jugador no tiene micr�fono.");
					format(string, sizeof(string), "%s le quito el micr�fono a %s.", NombreJugador(playerid), NombreJugador(jugadorid));
					ProxDetector(30.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
					RemovePlayerAttachedObject(jugadorid,4);
					TieneMicrofono[jugadorid] = -1;
				}
				else Mensaje(playerid, COLOR_BLANCO, "Ese jugador esta lejos.");
			}
			else Mensaje(playerid, COLOR_BLANCO, "Ese jugador esta desconectado.");
		}
	}
	return true;
}

CMD:operaciones(playerid,params[])
{
	if(EnCajero(playerid))
	{
		new string[256];
		format(string,200,"Retirar\nDepositar\nConsultar saldo\nTransferir dinero");
		MostrarDialog(playerid, BANCO, DIALOG_STYLE_LIST, "Selecciona la operaci�n que desees realizar", string, "Aceptar","Cancelar");
	}
	return 1;
}

CMD:cons(playerid)
{
	if(PlayerInfo[playerid][VIP] >= 3) MostrarDialog(playerid, DIALOG_CONSUMIR, DIALOG_STYLE_LIST, "Elige con que te quieres drogar", "Medicamentos [{00AD09}+20 vida{FFFFFF}]\nHongos [{00AD09}+60 vida{FFFFFF}]\nCrack [{00AD09}+20 chaleco{FFFFFF}]\nCocaina [{00AD09}+60 chaleco{FFFFFF}]", "Consumir", "Salir");
	else MostrarDialog(playerid, DIALOG_CONSUMIR, DIALOG_STYLE_LIST, "Elige con que te quieres drogar", "Medicamentos [{00AD09}+10 vida{FFFFFF}]\nHongos [{00AD09}+50 vida{FFFFFF}]\nCrack [{00AD09}+10 chaleco{FFFFFF}]\nCocaina [{00AD09}+50 chaleco{FFFFFF}]", "Consumir", "Salir");
	return 1;
}


static DarConsChaleco(playerid, cantidad, tiempo, tipo = 0)
{
	new Float:resta,Float:Chaleco, string[100];
	GetPlayerArmour(playerid, Chaleco);
	resta = 100-Chaleco;
	if(PlayerInfo[playerid][VIP] == 3){ cantidad = cantidad+10; tiempo = tiempo-15;}
	if(resta >= cantidad) EstablecerChaleco(playerid, Chaleco+cantidad);
	else if(resta < cantidad) EstablecerChaleco(playerid, Chaleco+resta);
	if(tipo == 0) {
		format(string,sizeof string,"%s saca una bolsilla de su pantal�n y fuma un poco de crack.", NombreJugador(playerid));
		PlayerInfo[playerid][pCrack]--;
		TiempoCrack[playerid] = gettimeVariable + tiempo;
	}
	else {
		format(string,sizeof string,"%s saca un polvo blanco de su pantal�n y lo inhala.", NombreJugador(playerid)); 
		PlayerInfo[playerid][pCocaina]--;
		TiempoCocaina[playerid] = gettimeVariable + tiempo;
	}
	if(!IsPlayerInAnyVehicle(playerid)) ClearAnimations(playerid);
	LoopingAnim(playerid, "FOOD", "EAT_Burger", 3.00, 0, 0, 0, 0, 0);
	ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
	RevisarLogro(playerid,3);
}

static DarConsVida(playerid, cantidad, tiempo, tipo = 0)
{
	new Float:resta,Float:Chaleco, string[100];
	GetPlayerHealth(playerid, Chaleco);
	resta = 100-Chaleco;
	if(PlayerInfo[playerid][VIP] == 3){ cantidad = cantidad+10; tiempo = tiempo-15;}
	if(resta >= cantidad) EstablecerVida(playerid, Chaleco+cantidad);
	else if(resta < cantidad) EstablecerVida(playerid, Chaleco+resta);
	if(tipo == 0) {
		format(string,sizeof string,"%s saca una bolsa con hongos psilocibios y consume uno.", NombreJugador(playerid));
		PlayerInfo[playerid][pHongos]--;
		TiempoHongos[playerid] = gettimeVariable + tiempo;
	}
	else {
		format(string,sizeof string,"%s saca unos medicamentos de su bolsillo y los consume.", NombreJugador(playerid));
		PlayerInfo[playerid][pMedicamentos]--;
		TiempoMedicamentos[playerid] = gettimeVariable + tiempo;
	}
	if(!IsPlayerInAnyVehicle(playerid)) ClearAnimations(playerid);
	LoopingAnim(playerid, "FOOD", "EAT_Burger", 3.00, 0, 0, 0, 0, 0);
	ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
	RevisarLogro(playerid,2);
}

static Consumible(playerid, id)
{
	if(id == 1)
	{
		if(PlayerInfo[playerid][pCrack] <= 0) return Mensaje(playerid, -1, "No tienes gramos de crack.");
		if(EnCombate[playerid] == 1) return Mensaje(playerid,-1,"No puedes hacer esto en combate, espera unos segundos y reintenta.");
		if(gettimeVariable > TiempoCrack[playerid]) DarConsChaleco(playerid, 10, 30);
		else va_SendClientMessage(playerid,-1,"Por favor espera {FF3300}%d"CB" segundos para volver a consumir crack.", TiempoCrack[playerid] - gettimeVariable);
		return 1;
	}
	else if(id == 2)
	{
		if(PlayerInfo[playerid][pCocaina] <= 0) return Mensaje(playerid, -1, "No tienes coca�na para consumir.");
		if(EnCombate[playerid] == 1) return Mensaje(playerid,-1,"No puedes hacer esto en combate, espera unos segundos y reintenta.");
		if(gettimeVariable > TiempoCocaina[playerid]) DarConsChaleco(playerid, 50, 115,1);
		else va_SendClientMessage(playerid, -1,"Por favor espera {FF3300}%d"CB" segundos para volver a consumir coca�na.", TiempoCocaina[playerid] - gettimeVariable);
		return 1;
	}
	else if(id == 3)
	{
		if(PlayerInfo[playerid][pHongos] <= 0) return Mensaje(playerid, -1, "No tienes hongos para consumir.");
		if(EnCombate[playerid] == 1) return Mensaje(playerid,-1,"No puedes hacer esto en combate, espera unos segundos y reintenta.");
		if(gettimeVariable > TiempoHongos[playerid]) DarConsVida(playerid,50,115);
		else va_SendClientMessage(playerid, -1,"Por favor espera {FF3300}%d"CB" segundos para volver a consumir hongos.", TiempoHongos[playerid] - gettimeVariable);
		return 1;
	}
	else if(id == 4)
	{
		if(PlayerInfo[playerid][pMedicamentos] <= 0) return Mensaje(playerid, -1, "No tienes medicamentos.");
		if(EnCombate[playerid] == 1) return Mensaje(playerid,-1,"No puedes hacer esto en combate, espera unos segundos y reintenta.");
		if(gettimeVariable > TiempoMedicamentos[playerid]) DarConsVida(playerid,10,30,1);
		else va_SendClientMessage(playerid, -1, "Por favor espera {FF3300}%d"CB" segundos para volver a consumir un medicamento.", TiempoMedicamentos[playerid] - gettimeVariable);
		return 1;
	}
	return 1;
}

CMD:consumir(playerid,params[])
{
    if(PlayerInfo[playerid][Agonizando] > 0 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || EnPatrulla[playerid] == 1 || EstaEnEvento[playerid] == 1) return Mensaje(playerid,-1,"No puedes hacer esto en este momento.");
	new item[32];
	if(!sscanf(params, "s[32]", item))
	{
		if(strcmp(item, "crack", true) == 0)
		{
			return Consumible(playerid, 1);
		}
		if(strcmp(item, "cocaina", true) == 0)
		{
			return Consumible(playerid, 2);
		}
		if(strcmp(item, "hongos", true) == 0 || strcmp(item, "hongo", true) == 0)
		{
			return Consumible(playerid, 3);
		}
		else if(strcmp(item, "caramelo", true) == 0 || strcmp(item, "caramelos", true) == 0 || strcmp(item, "dulces", true) == 0)
		{
			if(PlayerInfo[playerid][pCaramelos] <= 0) return Mensaje(playerid, -1, "No tienes caramelos para consumir.");
			if(EnCombate[playerid] == 1) return Mensaje(playerid,-1,"No puedes hacer esto en combate, espera unos segundos y reintenta.");
			if(gettimeVariable > TiempoCaramelos[playerid])
			{
				if(!IsPlayerInAnyVehicle(playerid)) ClearAnimations(playerid);
				PlayerInfo[playerid][pHambre] -= 10;
				if(SedOculta[playerid] == 1) BarraHambre(playerid, 1);
				PlayerInfo[playerid][pCaramelos]--;
				TiempoCaramelos[playerid] = gettimeVariable + 30;
				LoopingAnim(playerid, "FOOD", "EAT_Burger", 3.00, 0, 0, 0, 0, 0);
				new string[53+MAX_PLAYER_NAME+1];
				format(string,sizeof string,"%s saca unos caramelos de su bolsillo y se los come.", NombreJugador(playerid));
				ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
			}
			else va_SendClientMessage(playerid, -1, "Por favor espera {FF3300}%d"CB" segundos para volver a consumir un caramelo.", TiempoCaramelos[playerid] - gettimeVariable);
		}
		else if(strcmp(item, "medicamento", true) == 0 || strcmp(item, "medicamentos", true) == 0 || strcmp(item, "remedio", true) == 0)
		{
			return Consumible(playerid, 4);
		}

	}
	return 1;
}
CMD:abandonar(playerid,params[])
{
	new item[15];
	if(!sscanf(params, "s[15]", item))
	{
		if(strcmp(item, "carga", true) == 0)
		{
			new autoid = GetPlayerVehicleID(playerid);
			if(!TieneTrabajo(playerid, CAMIONERO)) return Mensaje(playerid, -1, "No eres camionero.");
			if(!IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid, -1, "No estas en un cami�n.");
			if(!CAMION(autoid) && !CAMIONVIP(autoid)) return Mensaje(playerid, -1, "No estas en un cami�n.");
			if(CamionCargado[autoid] < 1) return Mensaje(playerid, -1, "Este cami�n no esta cargado.");
			{
				Chofer[autoid] = INVALID_PLAYER_ID;
				CamionCargado[autoid]= 0;
				BorrarCheckpoint(playerid);
				TimerCamionero[playerid] = 0;
				Mensaje(playerid, -1, "Has abandonado la carga de este camion.");
				return 1;
			}
		}
		if(strcmp(item, "recorrido", true) == 0)
		{
		    if(!TieneTrabajo(playerid, BASURERO)) return Mensaje(playerid, -1, "No eres basurero.");
			if(Companero[playerid] != -1)
			{
				RecorridoBasu[Companero[playerid]] = 0;
				PBasura[Companero[playerid]] = 0;
				Companero[Companero[playerid]] = -1;
				BorrarCheckpoint(Companero[playerid]);
				TimerBasurero[Companero[playerid]] = 0;
				Mensaje(Companero[playerid], -1, "Tu compa�ero ha cancelado el recorrido.");
				if(BASU(GetPlayerVehicleID(Companero[playerid])) && GetPlayerVehicleSeat(Companero[playerid]) == 0)
				{
					PBasura[Companero[playerid]] = 1;
					Mensaje(Companero[playerid],-1,"{999966}Consigue a un compa�ero basurero y comienza a trabajar.");
     				CrearCheckpoint(Companero[playerid],-1711.7150,62.1237,3.5495, 20.0);
					PuntoBaX[Companero[playerid]] = -178.6163; PuntoBaY[Companero[playerid]] = -1618.1124; PuntoBaZ[Companero[playerid]] = 3.4908; PuntoBaA[Companero[playerid]] = 5.0;
				}
			    RecorridoBasu[playerid] = 0;
				PBasura[playerid] = 0;
				Companero[playerid] = -1;
				BorrarCheckpoint(playerid);
				TimerBasurero[playerid] = 0;
				Mensaje(playerid, -1, "Cancelaste el recorrido.");
				if(BASU(GetPlayerVehicleID(playerid)) && GetPlayerVehicleSeat(playerid) == 0)
				{
					PBasura[playerid] = 1;
					Mensaje(playerid,-1,"{999966}Consigue a un compa�ero basurero y comienza a trabajar.");
			        CrearCheckpoint(playerid,-178.6163, -1618.1124, 3.4908, 5.0);
					PuntoBaX[playerid] = -178.6163; PuntoBaY[playerid] = -1618.1124; PuntoBaZ[playerid] = 3.4908; PuntoBaA[playerid] = 5.0;
				}
				return 1;
			}
			else return Mensaje(playerid, -1, "Actualmente no estas trabajando en ningun recorrido de basurero.");
		}
		if(strcmp(item, "transportista", true) == 0)
		{
		    if(tviaje[playerid] != 0)
		    {
    			for(new bl = 0; bl < 5; bl++) DestroyDynamicObjectEx(objetost[bl][playerid]);
				Viaje[playerid] = 0;
				tviaje[playerid] = 0;
				BorrarCheckpoint(playerid);
				Mensaje(playerid, -1, "Abandonaste tu ruta de transportista.");
				return 1;
			}
			else return Mensaje(playerid, -1, "Actualmente no estas trabajando en ningun recorrido de transportista.");
		}
		if(strcmp(item, "banda", true) == 0)
		{
			if(PlayerInfo[playerid][jMiembro] > 0)
			{
				AbandonarBanda(playerid);
				return 1;
			}
			else return Mensaje(playerid,-1,"No est�s en ninguna banda.");
		}
	}
	return 1;
}

CMD:chaleco(playerid,params[])
{
	if(!FaccLegal(playerid)) return 1;
	if(EstaEn(playerid, 5.0, 249.1478,74.3152,1003.6406) || EstaEn(playerid, 1.0, 219.1590,67.0800,1005.0466)) EstablecerChaleco(playerid, 100);
	return 1;
}

CMD:armas(playerid,params[])
{
	if(!FaccLegal(playerid)) return 1;
	if(EstaEn(playerid, 1.0, 250.4184,73.3132,1003.6406) || EstaEn(playerid, 1.0, 219.1590,67.0800,1005.0466))
	{
		if(PlayerInfo[playerid][pDuty] == 1) DarArma(playerid, 3);
		DarArma(playerid, 24);
		DarArma(playerid, 29);
		DarArma(playerid, 31);
		if(PlayerInfo[playerid][pRango] == 1) DarArma(playerid, 25);
		else DarArma(playerid, 27);
	}
	return 1;
}

CMD:usar(playerid,params[])
{
	new item[32];
	if(!sscanf(params,"s[32]",item))
	{
		if(strcmp(item, "bidon", true)==0)
		{
			if(Bidon[playerid] == 0) return Mensaje(playerid, -1, "Tu no tienes un bidon de gasolina.");
			if(!IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid,-1,"Debes estar en un veh�culo para utilizar este comando");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Mensaje(playerid,-1,"Debes estar manejando el veh�culo para usar el bidon");
			{
				new autoid = GetPlayerVehicleID(playerid);
				new resta = CombustibleCoche(autoid)-VehicleFuel[autoid];
				if(resta > 5)
				{
					VehicleFuel[autoid] += 5;
					Bidon[playerid] = 0;
					Mensaje(playerid, -1,""CR"El tanque de combustible fue cargado con el bid�n de 5 litros.");
					RemovePlayerAttachedObject(playerid, 5);
				}
				else if(resta < 5)
				{
					VehicleFuel[autoid] += resta;
					Bidon[playerid] = 0;
					Mensaje(playerid, -1,""CR"El tanque de combustible fue cargado con el bid�n de 5 litros.");
					RemovePlayerAttachedObject(playerid, 5);
				}
			}
		}
		if(strcmp(item, "prenda", true)==0 || strcmp(item, "prendas", true)==0) return MostrarMenu(playerid,2);
	}
	return 1;
}


CMD:color(playerid,params[])
{
	new opcion[15];
	if(!sscanf(params,"s[15]",opcion))
	{
		if(strcmp(opcion,"prenda",true) == 0) return MostrarMenu(playerid,8);
	}
	return 1;
}

CMD:eliminar(playerid,params[])
{
	new opcion[15];
	if(!sscanf(params,"s[15]",opcion))
	{
		if(strcmp(opcion,"prenda",true) == 0) return MostrarMenu(playerid,9);
	}
	return 1;
}



CMD:cargar(playerid,params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid,-1,"Debes estar en un veh�culo para utilizar este comando");
	new item[32];
	if(!sscanf(params,"s[32]", item))
	{
		if(strcmp(item, "camion", true) == 0)
		{
			new autoid = GetPlayerVehicleID(playerid);
			if(!TieneTrabajo(playerid, CAMIONERO)) return Mensaje(playerid,-1,"No eres camionero.");
			{
				if(!CAMION(autoid) && !CAMIONVIP(autoid)) return Mensaje(playerid, -1, "Necesitas estar en un cami�n.");
				{
					if(CamionCargado[autoid] == 0)
					{
						if(CargandoC[playerid] == 0)
						{
							PlayerTemp[playerid][pt_Camionero] = true;
							Mensaje(playerid, -1, "Se ha marcado en el mapa la ubicaci�n donde van a cargar el cami�n.");
					        CrearCheckpoint(playerid,-1711.7150,62.1237,3.5495, 20.0);
							PlayerTemp[playerid][PuntoCX] = -1711.7150,PlayerTemp[playerid][PuntoCY] = 62.1237,PlayerTemp[playerid][PuntoCZ] = 3.5495;
							CamionID[playerid] = autoid;
						}
						else return Mensaje(playerid,-1,"Ya estas cargando tu camion.");
						foreach(new i: Vehicle)
						{
							if(Chofer[i] == playerid && Chofer[i] != INVALID_PLAYER_ID) return Mensaje(playerid,-1,"Ya tienes un camion cargado.");
						}
					}
					else return Mensaje(playerid,-1,"Este cami�n ya esta cargado.");
				}
			}
		}
		if(strcmp(item, "tanque", true)==0)
		{
			if(Bidon[playerid] == 0) return Mensaje(playerid, -1, "Tu no tienes un bidon de gasolina.");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Mensaje(playerid,-1,"Debes estar manejando el veh�culo para usar el bidon");
			{
				new autoid = GetPlayerVehicleID(playerid);
				new resta = CombustibleCoche(autoid)-VehicleFuel[autoid];
				if(resta > 5)
				{
					VehicleFuel[autoid] += 5;
					Bidon[playerid] = 0;
					Mensaje(playerid, -1,""CR"El tanque de combustible fue cargado con el bid�n de 5 litros.");
					RemovePlayerAttachedObject(playerid, 5);
				}
				else if(resta < 5)
				{
					VehicleFuel[autoid] += resta;
					Bidon[playerid] = 0;
					Mensaje(playerid, -1,""CR"El tanque de combustible fue cargado con el bid�n de 5 litros.");
					RemovePlayerAttachedObject(playerid, 5);
				}
			}
		}
	}
	return 1;
}

static VenderPropiedad(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 7.0,1809.5894,-1299.8063,65.8125) || EstaEn(playerid, 10.0,1802.0935,-1287.3749,13.6365))
	{
		MostrarDialog(playerid, DIALOG_AQUIENC, DIALOG_STYLE_MSGBOX, "Venta de propiedades", "{FFFFFF}�A qui�n le deseas vender tu propiedad?", "Gobierno", "Jugador");
		
	}
	else Mensaje(playerid, -1, "Para vender tu propiedad, necesitas estar en el Edificio Municipal General de LS."),Mensaje(playerid, -1, "La oficina se encuentra en el piso n�mero 9.");
	return 1;
}

static VenderVehiculo(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 8.0,1802.7854,-1303.8938,93.0391) || EstaEn(playerid, 10.0,1802.0935,-1287.3749,13.6365))
	{
		new bool:pvehicle = false;
		for(new a = 0; a < MAX_PAUTOS; a++) 
		{
			if(autos[a][playerid] > 0)
			{
				pvehicle = true;
				break;
			} 
		}
		if(pvehicle)
		{
			MostrarDialog(playerid, DIALOG_AQUIEN, DIALOG_STYLE_MSGBOX, "Venta de veh�culos", "{FFFFFF}�A qui�n le deseas vender tu veh�culo?", "Gobierno", "Jugador");
		}
		else return Mensaje(playerid, -1, "No tienes veh�culos.");
	}
	else Mensaje(playerid, -1, "Para vender tu veh�culo, necesitas estar en el Edificio Municipal General de LS."),Mensaje(playerid, -1, "La oficina se encuentra en el piso n�mero 14.");
	return 1;
}

CMD:cubrir(playerid,params[])
{
	new id,precio,Float:x,Float:y,Float:z;
	if(!TieneTrabajo(playerid, GUARDAESPALDAS)) return Mensaje(playerid,-1,"Necesitas ser guardaespaldas para utilizar este comando.");
	if(PlayerInfo[playerid][pTiempoCarcel] > 0 || PlayerInfo[playerid][pTiempoJail] > 0 || VariableCaido[playerid] == 1) return Mensaje(playerid,-1,"No puedes usar este comando en este momento.");
	if(EnCombate[playerid] == 1) return Mensaje(playerid,-1,"No puedes hacer esto en combate, espera unos segundos y reintenta.");
	if(!sscanf(params, "dd", id,precio))
	{
		if(IsPlayerConnected(id))
		GetPlayerPos(id, x,y,z);
		if(id == playerid) return 1;
		if(!EstaEn(playerid, 5.0, x,y,z) || PlayerTemp[id][Specteando] == 1) return Mensaje(playerid, -1, "No estas cerca de este jugador.");
		if(EnCombate[id] == 1) return Mensaje(playerid,-1,"No puedes ofrecer chaleco a un jugador que esta en combate.");
		if(precio >= 400 && precio <= 5000)
		{
		    if(gettimeVariable < TiempoCubrir[playerid])
		    {
		        Mensaje(playerid,-1,"Solamente puedes cubrir a alguien una vez por minuto.");
		        va_SendClientMessage(playerid,-1,"Por favor espera {FF0000}%d"CB" segundos.",TiempoCubrir[playerid]-gettimeVariable);
		        return 1;
		    }
			GuardaEspalda[id] = playerid;
   			CubrirPrecio[id] = precio;
			va_SendClientMessage(id,0x00CCFFFF,"%s"CB" te ofrece un chaleco de protecci�n por "CR"$%s"CB", para aceptarlo utiliza "CR"/aceptar proteccion", NombreJugador(playerid), ConvertirNumero(precio));
			va_SendClientMessage(playerid,-1,"Le ofreciste un chaleco antibalas a "CR"%s"CB" por "CR"$%s"CB".", NombreJugador(id), ConvertirNumero(precio));
			TiempoCubrir[playerid] = gettimeVariable + 60;
			SetTimerEx("ProtePerdida",60000,false,"d",id);
		}
		else Mensaje(playerid, -1, "El precio no puede ser menor a "CR"$400"CB" ni mayor a "CR"$5.000"CB".");
	}
	else return Mensaje(playerid, -1, "Modo de uso: /cubrir id precio");
	return 1;
}

CMD:vender(playerid,params[])
{
    new item[32],ID,precio,cantidad,Float:x,Float:y,Float:z;
	if(gettimeVariable < TiempoMoney[playerid] && PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2)
	{
		new time = TiempoMoney[playerid]-gettimeVariable;
		if(time > 60) va_SendClientMessage(playerid,-1,"Por favor espera {FF0000}%d:%d "CB"(m:s)"CB".",time/60,time%(60));
		else if(time < 60) va_SendClientMessage(playerid,-1,"Por favor espera {FF0000}%d segundos"CB".",time);
		return 1;
	}
	if(gettimeVariable < TiempoVenta[playerid]) return va_SendClientMessage(playerid,-1,"Por favor espera {FF3300}%d"CB" segundos para volver a hacer una venta.",TiempoVenta[playerid]-gettimeVariable);
	if(!sscanf(params, "s[32]dd", item,ID,precio))
	{
	    if(strcmp(item, ""Moneda4"", true) == 0)
		{
			if(!PuedeHoras(playerid)) return 1;
			GetPlayerPos(ID,x,y,z);
		    if(!sscanf(params, "s[29]ddd", item,ID,cantidad,precio))
		    if(precio < 0) return Mensaje(playerid,0xFF0000FF,"Valor inv�lido.");
		    if(ID == playerid) return Mensaje(playerid,0xFF0000FF,"No puedes venderte tu mismo.");
		    if(!IsPlayerConnected(ID)) return Mensaje(playerid,0xFF0000FF,"Persona no encontrada.");
		    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return Mensaje(playerid,0xEB0000FF,"Esa persona est� muy lejos.");
		    if(cantidad == 0) return Mensaje(playerid,0xEB0000FF,"Ingresa la cantidad que quieres vender.");
		    if(PlayerInfo[playerid][Credits] < cantidad) return Mensaje(playerid, -1,"{FF0000}No tienes"CB" la cantidad de "Moneda4" que quieres vender.");
			
			if(IsPlayerConnected(ID))
			{
				CROfrecidos[ID] = cantidad;
				dineropedido[ID] = precio;
				ofertador[ID] = playerid;
				LeOfreci[playerid] = ID;
				new string1[512];
				format(string1,sizeof(string1),""CB"Est�s por ofrecerle {D1A231}%d monedas tipo "Moneda4""CB" a "CR"%s"CB" por "CR"$%d"CB".\n\nCada coin lo estar�as cobrando a "CR"$%d"CB"\n\n�Est�s seguro de realizar esta transacci�n?",CROfrecidos[ID],NombreJugador(ID),dineropedido[ID],dineropedido[ID]/CROfrecidos[ID]);
				MostrarDialog(playerid, VENDERCR, DIALOG_STYLE_MSGBOX, ""CR"!ATENCI�N!", string1, "Si","No");
				DarOferta(playerid,ID);
				return 1;
			}
		}
	    else if(strcmp(item, ""Moneda2"", true) == 0)
		{
			if(!PuedeHoras(playerid)) return 1;
			GetPlayerPos(ID,x,y,z);
		    if(!sscanf(params, "s[29]ddd", item,ID,cantidad,precio))
		    if(precio < 0) return Mensaje(playerid,0xFF0000FF,"Valor inv�lido.");
		    if(ID == playerid) return Mensaje(playerid,0xFF0000FF,"No puedes venderte tu mismo.");
		    if(!IsPlayerConnected(ID)) return Mensaje(playerid,0xFF0000FF,"Persona no encontrada.");
		    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return Mensaje(playerid,0xEB0000FF,"Esa persona est� muy lejos.");
		    if(cantidad == 0) return Mensaje(playerid,0xEB0000FF,"Ingresa la cantidad que quieres vender.");
		    if(PlayerInfo[playerid][Moneda] < cantidad) return Mensaje(playerid, -1,"{FF0000}No tienes"CB" la cantidad de "Moneda1" que quieres vender.");
		    if(precio > cantidad*90000) return Mensaje(playerid,-1,"No puedes vender a m�s de $90.000 cada "Moneda1".");
			if(IsPlayerConnected(ID))
			{
				EVOfrecidos[ID] = cantidad;
				dineropedido[ID] = precio;
				ofertador[ID] = playerid;
				LeOfreci[playerid] = ID;
				new string1[512];
				format(string1,sizeof(string1),""CB"Est�s por ofrecerle {89746A}%d"Moneda1""CB" a "CR"%s"CB" por "CR"$%d"CB".\n\nCada "Moneda1" lo estar�as cobrando a "CR"$%d"CB"\n\n�Est�s seguro de realizar esta transacci�n?",EVOfrecidos[ID],NombreJugador(ID),dineropedido[ID],dineropedido[ID]/EVOfrecidos[ID]);
				MostrarDialog(playerid, VENDERWZ, DIALOG_STYLE_MSGBOX, ""CR"!ATENCI�N!", string1, "Si","No");
				DarOferta(playerid,ID);
				return 1;
			}
		}
		else if(strcmp(item, "piezas", true) == 0)
		{
			if(!PuedeHoras(playerid)) return 1;
			if(!sscanf(params, "s[32]ddd", item,ID,cantidad,precio))
   			GetPlayerPos(ID,x,y,z);
	    	if(precio < 0) return Mensaje(playerid,0xFF0000FF,"Valor inv�lido.");
	    	if(ID == playerid) return Mensaje(playerid,0xFF0000FF,"No puedes venderte tu mismo.");
		    if(!IsPlayerConnected(ID)) return Mensaje(playerid,0xFF0000FF,"Esa persona est� muy lejos.");
		    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return Mensaje(playerid,0xEB0000FF,"Esa persona est� muy lejos.");
		    if(cantidad == 0) return Mensaje(playerid,0xEB0000FF,"Ingresa la cantidad que quieres vender.");
		    if(PlayerInfo[playerid][pMateriales] < cantidad) return Mensaje(playerid, -1, "{FF0000}No tienes"CB" la cantidad de piezas que quieres vender.");
   			if(precio > cantidad*400) return Mensaje(playerid,-1,"No puedes vender a m�s de $400 cada pieza.");
			if(IsPlayerConnected(ID))
			{
				PiezasOfrecidas[ID] = cantidad;
				dineropedido[ID] = precio;
				ofertador[ID] = playerid;
			    va_SendClientMessage(playerid,-1,"Le ofreciste %d piezas de armas a "CR"%s"CB" por "CR"$%d"CB".",cantidad,NombreJugador(ID),precio);
			    va_SendClientMessage(ID,-1,""CR"%s"CB" te ofrece %d piezas de armas por "CR"$%d"CB", para aceptar escribe "CR"/aceptar piezas", NombreJugador(playerid),cantidad,precio);
				DarOferta(playerid,ID);
				AvisoVenta(playerid,ID,5,cantidad,precio);
				return 1;
			}
		}
		else if(strcmp(item, "crack", true) == 0 || strcmp(item, "medicamentos", true) == 0 || strcmp(item, "marihuana", true) == 0 || strcmp(item, "hongos", true) == 0 || strcmp(item, "hongo", true) == 0 || strcmp(item, "cocaina", true) == 0)
		{
			if(!sscanf(params, "s[32]ddd", item,ID,cantidad,precio))
			{
				if(!PuedeHoras(playerid)) return 1;
			    GetPlayerPos(ID,x,y,z);
			    if(precio < 0) return Mensaje(playerid,0xFF0000FF,"Valor inv�lido.");
			    if(ID == playerid) return Mensaje(playerid,0xFF0000FF,"No puedes venderte tu mismo.");
			    if(!IsPlayerConnected(ID)) return Mensaje(playerid,0xFF0000FF,"Esa persona est� muy lejos.");
			    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return Mensaje(playerid,0xEB0000FF,"Esa persona est� muy lejos.");
			    if(cantidad == 0) return Mensaje(playerid,0xEB0000FF,"Ingresa la cantidad que quieres vender.");
				if(strcmp(item, "crack", true) == 0)
				{
				    if(PlayerInfo[playerid][pCrack] < cantidad) return Mensaje(playerid, -1, "{FF0000}No tienes"CB" la cantidad de crack que quieres vender.");
				    if(precio > cantidad*400) return Mensaje(playerid,-1,"No puedes vender a m�s de $400 cada gramo de crack.");
					TipoOferta[ID] = 1;
					CrackOfrecidos[ID] = cantidad;
				}
				else if(strcmp(item, "medicamentos", true) == 0)
				{
				    if(PlayerInfo[playerid][pMedicamentos] < cantidad) return Mensaje(playerid, -1, "{FF0000}No tienes"CB" la cantidad de medicamentos que quieres vender.");
				    if(precio > cantidad*400) return Mensaje(playerid,-1,"No puedes vender a m�s de $400 cada medicamento.");
					TipoOferta[ID] = 2;
					MedicamentosOfrecidos[ID] = cantidad;
				}
				else if(strcmp(item, "marihuana", true) == 0)
				{
			    	if(PlayerInfo[playerid][pMarihuana] < cantidad) return Mensaje(playerid, -1, "{FF0000}No tienes"CB" la cantidad de marihuana que quieres vender.");
			    	if(precio > cantidad*500) return Mensaje(playerid,-1,"No puedes vender a m�s de $500 cada gramo de marihuana.");
					TipoOferta[ID] = 3;
					MarihuanaOfrecida[ID] = cantidad;
				}
				else if(strcmp(item, "cocaina", true) == 0)
				{
			    	if(PlayerInfo[playerid][pCocaina] < cantidad) return Mensaje(playerid, -1, "{FF0000}No tienes"CB" la cantidad de coca�na que quieres vender.");
			    	if(precio > cantidad*3500) return Mensaje(playerid,-1,"No puedes vender a m�s de $3500 cada gramo de coca�na.");
					TipoOferta[ID] = 8;
					CocainaOfrecida[ID] = cantidad;
				}
				else if(strcmp(item, "hongos", true) == 0 || strcmp(item, "hongo", true) == 0)
				{
			    	if(PlayerInfo[playerid][pHongos] < cantidad) return Mensaje(playerid, -1, "{FF0000}No tienes"CB" la cantidad de hongos que quieres vender.");
			    	if(precio > cantidad*4000) return Mensaje(playerid,-1,"No puedes vender a m�s de $4000 cada hongo.");
					TipoOferta[ID] = 7;
					HongosOfrecidos[ID] = cantidad;
				}
				else return 1;
				if(IsPlayerConnected(ID))
				{
					new tipo[13];
					switch(TipoOferta[ID])
					{
					    case 1: tipo = "crack";
					    case 2: tipo = "medicamentos";
					    case 3: tipo = "marihuana";
					    case 8: tipo = "cocaina";
					    case 7: tipo = "hongos";
					}
					dineropedido[ID] = precio;
					ofertador[ID] = playerid;
					va_SendClientMessage(playerid,-1,"Le ofreciste %dg de %s a "CR"%s"CB" por "CR"$%d"CB".",cantidad,tipo,NombreJugador(ID),precio);
	    			va_SendClientMessage(ID,-1, ""CR"%s"CB" te ofrece %dg de %s por "CR"$%d"CB", para aceptar escribe "CR"/aceptar consumible",NombreJugador(playerid),cantidad,tipo,precio);
					DarOferta(playerid,ID);
					AvisoVenta(playerid,ID,TipoOferta[ID],cantidad,precio);
					return 1;
				}
			}
			else Mensaje(playerid,-1,"Usa /vender [crack/medicamentos/cocaina/hongos] [id/nombre] [cantidad] [precio].");
		}
		else
		{
		    new arma;
			if(strcmp(item, "manopla", true) == 0) arma = 1;
			else if(strcmp(item, "palo-de-golf", true) == 0) arma = 2;
			else if(strcmp(item, "cuchillo", true) == 0) arma = 4;
			else if(strcmp(item, "bate-de-beisbol", true) == 0) arma = 5;
			else if(strcmp(item, "pala", true) == 0) arma = 6;
			else if(strcmp(item, "palo-de-billar", true) == 0) arma = 7;
			else if(strcmp(item, "katana", true) == 0) arma = 8;
		    else if(strcmp(item, "ramo-de-flores",true) == 0) arma = 14;
			else if(strcmp(item, "9mm", true) == 0) arma = 22;
			else if(strcmp(item, "9mm-silenciada", true) == 0) arma = 23;
			else if(strcmp(item, "desert-eagle", true) == 0) arma = 24;
			else if(strcmp(item, "dk", true) == 0) arma = 24;
			else if(strcmp(item, "escopeta", true) == 0) arma = 25;
			else if(strcmp(item, "Escopeta-de-combate", true) == 0) arma = 27;
			else if(strcmp(item, "edc", true) == 0) arma = 27;
			else if(strcmp(item, "mp5", true) == 0) arma = 29;
			else if(strcmp(item, "granada", true) == 0) arma = 16;
			else if(strcmp(item, "ak-47", true) == 0) arma = 30;
			else if(strcmp(item, "M4", true) == 0) arma = 31;
			else if(strcmp(item, "rifle", true) == 0) arma = 33;
			else if(strcmp(item, "sniper", true) == 0) arma = 34;
			else if(strcmp(item, "camara", true) == 0) arma = 43;
			else if(strcmp(item, "arma", true) == 0)
			{
				new temp = GetPlayerWeapon(playerid);
				switch(temp)
				{
					case 1,2,4..8,14,22..25,27,29,16,30,31,33,34,43:
					{
						arma = temp;
					}
					default: return Mensaje(playerid, -1, "Debes tener el arma en tu mano.");
				}
				
			} 
			else return Mensaje(playerid,-1,"SERVER: Unknown Command");
			if(!SiTieneArma(playerid,arma)) return Mensaje(playerid, -1, "No puedes vender un arma que no tienes.");
			GetPlayerPos(ID,x,y,z);
			if(precio < 0) return Mensaje(playerid,0xFF0000FF,"Valor inv�lido.");
			if(precio > 60000) return Mensaje(playerid,0xFF0000FF,"No puedes vender a m�s de $60.000 cada arma.");
			if(!IsPlayerConnected(ID)) return Mensaje(playerid,0xFF0000FF,"No estas cerca de este jugador");
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return Mensaje(playerid,0xFF0000FF,"Esa persona est� muy lejos.");
			if(ID == playerid) return Mensaje(playerid,0xFF0000FF,"No puedes venderte un arma tu mismo.");
			armaofertada[ID] = arma;
			dineropedido[ID] = precio;
			ofertador[ID] = playerid;
			va_SendClientMessage(playerid,-1,"Le ofrecistes a "CR"%s"CB" una %s por "CR"$%d"CB".",NombreJugador(ID),GetWeaponNameEx(arma),precio);
			va_SendClientMessage(ID,-1,""CR"%s"CB" te ofrece una %s por "CR"$%d"CB", para aceptar escribe "CR"/aceptar arma"CB".", NombreJugador(playerid),GetWeaponNameEx(arma),precio);
			DarOferta(playerid,ID);
			AvisoVenta(playerid,ID,6,1,precio);
			return 1;
		}
	}
	else
	{
		if(!sscanf(params,"s[32]",item))
		{
			if(strcmp(item,"vehiculo",true)==0)
			{
				return VenderVehiculo(playerid);
			}
			else if(strcmp(item,"objeto",true)==0 || strcmp(item,"objetos",true)==0)
			{
				if(PlayerInfo[playerid][jNivel] < 5) return Mensaje(playerid,-1,"Tendr�s que llegar a nivel 5 para vender objetos.");
				if(!IsPlayerInRangeOfPoint(playerid, 5.0,196.3872,-231.1294,1.7786) && !IsPlayerInRangeOfPoint(playerid, 5.0,216.8291,-232.7234,1.7786)) return Mensaje(playerid,-1,"No estas en la tienda de objetos");
				{
					if(Objeto[playerid] == 0) return Mensaje(playerid,-1,"No tienes ningun objeto para vender");
					new price;
					switch(Objeto[playerid])
					{
						case 1429:  price = 3500*2;
						case 1518:  price = 4000*2;
						case 2912:  price = 5300*2;
						case 2190:  price = 4000*2;
						case 1788:  price = 4100*2;
						case 1790:  price = 6200*2;
						case 2028:  price = 4750*2;
						case 2226:  price = 3500*2;
						case 19317: price = 5000*2;
						case 2404:  price = 5500*2;
						case 2405:  price = 3500*2;
						case 2406:  price = 3500*2;
						case 19318: price = 5000*2;
						case 1210:  price = 4500*2;
					}
					if(price == 0) return 1;
					va_SendClientMessage(playerid,-1,"Vendiste un objeto a"CR" $%d",price);
					DarDinero(playerid, price);
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
					RemovePlayerAttachedObject(playerid,4);
					Objeto[playerid] = 0;
					return 1;
				}
			}
			else if(strcmp(item, "propiedad", true) == 0)
			{
				return VenderPropiedad(playerid);
     		}
		}
	}
	if(sscanf(params, "s[30]", item)) Mensaje(playerid,-1,"VENTAS: "CR"/vender vehiculo "CB"- "CR"/vender propiedad "CB"- "CR"/vender [medicamentos/crack/"Moneda1"/nombre-de-arma/piezas]");
	return 1;
}

static AceptarMuerte(playerid)
{
	if(PlayerInfo[playerid][Agonizando] == 1 && Muriendo[playerid] == 1)
	{
		new estado = GetPlayerState(playerid);
		if(estado == 2 || estado == 3) return Mensaje(playerid, -1, "No puedes hacer esto dentro de un veh�culo.");
		ApareceHospital(playerid);
		suicidio[playerid] = 0;
	}
	return 1;
}

CMD:aceptar(playerid, params[])
{
	new item[128],Float:X,Float:Y,Float:Z;
	if(!IsPlayerConnected(playerid)) return 1;
	if(!sscanf(params, "s[128]", item))
	{
		if(strcmp(item, "arma", true) == 0)
		{
			if(PlayerInfo[playerid][pTiempoJail] > 0 || PlayerInfo[playerid][pTiempoCarcel] > 0) return Mensaje(playerid,-1,"No puedes recibir un arma si est�s en prisi�n.");
			if(!PuedeHoras(playerid)) return 1;
			if(IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid,-1,"No puedes recibir un arma si est�s en un veh�culo.");
			if(ofertador[playerid] == INVALID_PLAYER_ID) return Mensaje(playerid,-1,"Nadie te ofreci� un arma.");
			if(IsPlayerInAnyVehicle(ofertador[playerid])) return Mensaje(playerid,-1,"La persona que te ha ofrecido el arma se encuentra en un veh�culo");
			//if(PlayerInfo[playerid][jNivel] < 6) return Mensaje(playerid,-1,"Necesitas ser nivel 6 para recibir un arma.");
			if(!VerificarAccion(playerid)) return 1;
			if(PlayerInfo[playerid][jDinero] >= dineropedido[playerid])
			{
				GetPlayerPos(ofertador[playerid], X,Y,Z);
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, X,Y,Z)) return Mensaje(playerid,-1,"No estas cerca del vendedor");
				{
					if(!SiTieneArma(ofertador[playerid],armaofertada[playerid])) return Mensaje(playerid,-1,"El jugador ya no tiene el arma que te ha ofrecido");
					new string[256];
					QuitarDinero(playerid, dineropedido[playerid]);
					DarArma(playerid,armaofertada[playerid]);
					QuitarArma(ofertador[playerid],armaofertada[playerid]);
					DarDinero(ofertador[playerid],dineropedido[playerid]);
					format(string, 256, " %s recibe el arma de %s",NombreJugador(playerid),NombreJugador(ofertador[playerid]));
					ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
					TerminarOferta(playerid);
					return 1;
				}
			}
			else return Mensaje(playerid,-1,"No tienes suficiente dinero");
		}
		if(strcmp(item,"consumible", true) == 0)
		{
			if(ofertador[playerid] == INVALID_PLAYER_ID) return Mensaje(playerid,-1,"Nadie te ofreci� un consumible.");
			new string[256];
			GetPlayerPos(ofertador[playerid], X,Y,Z);
			if(PlayerInfo[playerid][jDinero] < dineropedido[playerid]) return Mensaje(playerid,-1,"No tienes suficiente dinero");
			if(!IsPlayerInRangeOfPoint(playerid, 4.0, X,Y,Z)) return Mensaje(playerid,-1,"No estas cerca del vendedor");
			if(!PuedeHoras(playerid)) return 1;
			if(TipoOferta[playerid] > 0)
			{
				if(TipoOferta[playerid] == 1)
				{
					if(PlayerInfo[ofertador[playerid]][pCrack] < CrackOfrecidos[playerid]) return Mensaje(playerid,-1,"El vendedor ya no tiene la cantidad de crack que te ha ofrecido");
					if(CrackOfrecidos[playerid] < 0) return 1;
					PlayerInfo[playerid][pCrack] += CrackOfrecidos[playerid];
					PlayerInfo[ofertador[playerid]][pCrack] -= CrackOfrecidos[playerid];
	            }
	            else if(TipoOferta[playerid] == 2)
				{
					if(PlayerInfo[ofertador[playerid]][pMedicamentos] < MedicamentosOfrecidos[playerid]) return Mensaje(playerid,-1,"El vendedor ya no tiene la cantidad de medicamentos que te ha ofrecido");
					if(MedicamentosOfrecidos[playerid] < 0) return 1;
					PlayerInfo[playerid][pMedicamentos] += MedicamentosOfrecidos[playerid];
					PlayerInfo[ofertador[playerid]][pMedicamentos] -= MedicamentosOfrecidos[playerid];
				}
				else if(TipoOferta[playerid] == 3)
				{
					if(PlayerInfo[ofertador[playerid]][pMarihuana] < MarihuanaOfrecida[playerid]) return Mensaje(playerid,-1,"El vendedor ya no tiene la cantidad de marihuana que te ha ofrecido");
					if(MarihuanaOfrecida[playerid] < 0) return 1;
					PlayerInfo[playerid][pMarihuana] += MarihuanaOfrecida[playerid];
					PlayerInfo[ofertador[playerid]][pMarihuana] -= MarihuanaOfrecida[playerid];
				}
				else if(TipoOferta[playerid] == 8)
				{
					if(PlayerInfo[ofertador[playerid]][pCocaina] < CocainaOfrecida[playerid]) return Mensaje(playerid,-1,"El vendedor ya no tiene la cantidad de coca�na que te ha ofrecido");
					if(CocainaOfrecida[playerid] < 0) return 1;
					PlayerInfo[playerid][pCocaina] += CocainaOfrecida[playerid];
					PlayerInfo[ofertador[playerid]][pCocaina] -= CocainaOfrecida[playerid];
				}
				else if(TipoOferta[playerid] == 7)
				{
					if(PlayerInfo[ofertador[playerid]][pHongos] < HongosOfrecidos[playerid]) return Mensaje(playerid,-1,"El vendedor ya no tiene la cantidad de hongos que te ha ofrecido");
					if(HongosOfrecidos[playerid] < 0) return 1;
					PlayerInfo[playerid][pHongos] += HongosOfrecidos[playerid];
					PlayerInfo[ofertador[playerid]][pHongos] -= HongosOfrecidos[playerid];
				}
				else return 1;
				LogVenta(playerid,TipoOferta[playerid]);
				QuitarDinero(playerid,dineropedido[playerid]);
				DarDinero(ofertador[playerid],dineropedido[playerid]);
				format(string, 256, " %s recibi� algo de %s",NombreJugador(playerid),NombreJugador(ofertador[playerid]));
				ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
				TerminarOferta(playerid);
   			}
			return 1;
        }
		if(strcmp(item,"piezas", true) == 0)
		{
			GetPlayerPos(ofertador[playerid], X,Y,Z);
			if(ofertador[playerid] == INVALID_PLAYER_ID) return Mensaje(playerid,-1,"Nadie te ofreci� piezas de armas");
			if(PlayerInfo[playerid][jDinero] < dineropedido[playerid]) return Mensaje(playerid,-1,"No tienes suficiente dinero");
			if(!IsPlayerInRangeOfPoint(playerid, 4.0, X,Y,Z)) return Mensaje(playerid,-1,"No estas cerca del vendedor");
			if(PlayerInfo[ofertador[playerid]][pMateriales] < PiezasOfrecidas[playerid]) return Mensaje(playerid,-1,"El vendedor ya no tiene la cantidad de piezas de armas que te ha ofrecido");
			if(!PuedeHoras(playerid)) return 1;
			if(PiezasOfrecidas[playerid] > 0)
			{
				new string[256];
				LogVenta(playerid,5);
				QuitarDinero(playerid,dineropedido[playerid]);
				DarDinero(ofertador[playerid],dineropedido[playerid]);
				PlayerInfo[playerid][pMateriales] += PiezasOfrecidas[playerid];
				PlayerInfo[ofertador[playerid]][pMateriales] -= PiezasOfrecidas[playerid];
				format(string, 256, "%s recibi� algo de %s",NombreJugador(playerid),NombreJugador(ofertador[playerid]));
				ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
				TerminarOferta(playerid);
				return 1;
			}
		}
		if(strcmp(item,""Moneda4"", true) == 0)
		{
			GetPlayerPos(ofertador[playerid], X,Y,Z);
			if(ofertador[playerid] == INVALID_PLAYER_ID) return Mensaje(playerid,-1,"Nadie te ha ofrecido "Moneda4"");
			if(LeOfreci[ofertador[playerid]] == INVALID_PLAYER_ID) return Mensaje(playerid,-1, "Esta oferta ya ha caducado.");
			if(PlayerInfo[playerid][jDinero] < dineropedido[playerid]) return Mensaje(playerid,-1,"No tienes suficiente dinero");
			if(!IsPlayerInRangeOfPoint(playerid, 4.0, X,Y,Z)) return Mensaje(playerid,-1,"No estas cerca del vendedor");
			if(PlayerInfo[ofertador[playerid]][Credits] < CROfrecidos[playerid]) return Mensaje(playerid,-1,"El vendedor ya no tiene la cantidad de "Moneda4" que te ha ofrecido");
			if(!PuedeHoras(playerid)) return 1;
			if(CROfrecidos[playerid] > 0)
			{
				new string[256];
				LogVenta(playerid,0);
				QuitarDinero(playerid,dineropedido[playerid]);
				DarDinero(ofertador[playerid],dineropedido[playerid]);
				PlayerInfo[playerid][Credits] += CROfrecidos[playerid];
				PlayerInfo[ofertador[playerid]][Credits] -= CROfrecidos[playerid];
				format(string, 256, "%s recibi� algo de %s",NombreJugador(playerid),NombreJugador(ofertador[playerid]));
				ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
				TerminarOferta(playerid);
				return 1;
			}
		}
		if(strcmp(item,""Moneda2"", true) == 0)
		{
			GetPlayerPos(ofertador[playerid], X,Y,Z);
			if(ofertador[playerid] == INVALID_PLAYER_ID) return Mensaje(playerid,-1,"Nadie te ha ofrecido "Moneda1"");
			if(LeOfreci[ofertador[playerid]] == INVALID_PLAYER_ID) return Mensaje(playerid,-1, "Esta oferta ya ha caducado.");
			if(PlayerInfo[playerid][jDinero] < dineropedido[playerid]) return Mensaje(playerid,-1,"No tienes suficiente dinero");
			if(!IsPlayerInRangeOfPoint(playerid, 4.0, X,Y,Z)) return Mensaje(playerid,-1,"No estas cerca del vendedor");
			if(PlayerInfo[ofertador[playerid]][Moneda] < EVOfrecidos[playerid]) return Mensaje(playerid,-1,"El vendedor ya no tiene la cantidad de "Moneda1" que te ha ofrecido");
			if(!PuedeHoras(playerid)) return 1;
			if(EVOfrecidos[playerid] > 0)
			{
				LogVenta(playerid,4);
				new string[256];
				QuitarDinero(playerid,dineropedido[playerid]);
				DarDinero(ofertador[playerid],dineropedido[playerid]);
				PlayerInfo[playerid][Moneda] += EVOfrecidos[playerid];
				PlayerInfo[ofertador[playerid]][Moneda] -= EVOfrecidos[playerid];
				format(string, 256, "%s recibi� algo de %s",NombreJugador(playerid),NombreJugador(ofertador[playerid]));
				ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
				TerminarOferta(playerid);
				return 1;
			}
		}
		if(strcmp(item,"Muerte", true) == 0)
		{
			AceptarMuerte(playerid);
		}
		if(strcmp(item,"reparacion", true) == 0)
		{
			if(AceptoRepara[playerid] == 1) return Mensaje(playerid,-1,"Ya aceptaste una reparaci�n.");
			if(Mecanico[playerid] == INVALID_PLAYER_ID) return Mensaje(playerid,-1,"Nadie te ofreci� una reparaci�n.");
			if(!IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Mensaje(playerid,-1,"Debes estar conduciendo tu veh�culo para utilizar este comando.");
			if(PlayerInfo[playerid][jDinero] < MConductor[playerid]) return Mensaje(playerid,-1,"No tienes suficiente dinero.");
			GetPlayerPos(Mecanico[playerid], X,Y,Z);
			if(EstaEn(playerid, 4.0, X,Y,Z))
			{
				new Float:angle,autoid = GetPlayerVehicleID(playerid);
				GetPlayerFacingAngle(Mecanico[playerid],angle);
				SetPlayerFacingAngle(Mecanico[playerid],angle+180);
				switch(PlayerInfo[Mecanico[playerid]][pNivelMecanico])
				{
					case 1: PlayerTemp[Mecanico[playerid]][TimerReparar] = 15;
					case 2: PlayerTemp[Mecanico[playerid]][TimerReparar] = 13;
					case 3: PlayerTemp[Mecanico[playerid]][TimerReparar] = 9;
					case 4: PlayerTemp[Mecanico[playerid]][TimerReparar] = 6;
					default: PlayerTemp[Mecanico[playerid]][TimerReparar] = 3;
				}
				BarraProgreso[Mecanico[playerid]][1] = PlayerTemp[Mecanico[playerid]][TimerReparar];
				BarraJob(Mecanico[playerid],1);
				ActBarraJob(Mecanico[playerid]);
				LoopingAnim(Mecanico[playerid],"CAR","Fixn_Car_Loop",4.1,0,0,0,1,PlayerTemp[Mecanico[playerid]][TimerReparar]*1000);
				SetTimerEx("Reparando",PlayerTemp[Mecanico[playerid]][TimerReparar]*1000,false,"ddd",Mecanico[playerid],playerid,autoid);
				new msjadm[144];
				format(msjadm, sizeof(msjadm), "Notificaci�n: %s (ID:%d) recibe $%s por reparar el veh�culo de %s (ID: %d - Nivel: %d - %dhs).", NombreJugador(Mecanico[playerid]), Mecanico[playerid], ConvertirNumero(MConductor[playerid]), NombreJugador(playerid), playerid, PlayerInfo[playerid][jNivel], PlayerInfo[playerid][horasjugadas]);
				MensajeAdmin(COLOR_CHEAT, msjadm, 3);
				format(msjadm, sizeof(msjadm), "%s comienz� a reparar el veh�culo.", NombreJugador(Mecanico[playerid]));
				ProxDetector(30.0, playerid, msjadm, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
				LlamadaMeca[playerid] = 0;
				SetPlayerColor(playerid, COLORCARGO0);
				QuitarDinero(playerid, MConductor[playerid]);
				DarDinero(Mecanico[playerid], MConductor[playerid]);
				PlayerInfo[Mecanico[playerid]][Repuestos] -= MRepuestos[Mecanico[playerid]];
				Mecanico[playerid] = INVALID_PLAYER_ID;
				AceptoRepara[playerid] = 1;
			}
			else return Mensaje(playerid,-1,"Debes estar cerca del mec�nico para aceptar la reparaci�n.");
		}
		if(strcmp(item,"proteccion", true) == 0)
		{
			if(EnCombate[playerid] == 1) return Mensaje(playerid,-1,"No puedes hacer esto en combate, espera unos segundos y reintenta.");
			if(GuardaEspalda[playerid] == INVALID_PLAYER_ID) return Mensaje(playerid,-1,"No te han ofrecido ninguna protecci�n.");
			if(PlayerInfo[playerid][jDinero] < CubrirPrecio[playerid]) return Mensaje(playerid,-1,"No tienes suficiente dinero.");
			GetPlayerPos(GuardaEspalda[playerid], X,Y,Z);
			if(!EstaEn(playerid, 4.0, X,Y,Z)) return Mensaje(playerid,-1,"No estas cerca del vendedor.");
			{
				new string[256];
				QuitarDinero(playerid,CubrirPrecio[playerid]);
				DarDinero(GuardaEspalda[playerid],CubrirPrecio[playerid]);
				if(strcmp(PlayerInfo[GuardaEspalda[playerid]][Totem], NombreJugador(playerid), true) == 0 || strcmp(PlayerInfo[playerid][Totem], NombreJugador(GuardaEspalda[playerid]), true) == 0)  EstablecerChaleco(playerid, 70);
				else EstablecerChaleco(playerid, 50);
				format(string, 256, "%s acepta la protecci�n de %s.",NombreJugador(playerid),NombreJugador(GuardaEspalda[playerid]));
				ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
				GuardaEspalda[playerid] = INVALID_PLAYER_ID;
			}
		}
	}
	return 1;
}

CMD:cp(playerid, params[])
{
	new item[128];
	if(!sscanf(params,"s[128]", item))
	{
		if(strcmp(item, "armero", true) == 0) if(PlayerInfo[playerid][piezas] > 0) CrearCheckpoint(playerid,2160.7837,-2280.9233,13.3838, 5.0),Mensaje(playerid, -1,"Se ha marcado en el mapa la posicion.");
		if(strcmp(item, "camionero", true) == 0) if(PlayerTemp[playerid][pt_Camionero]) CrearCheckpoint(playerid,PlayerTemp[playerid][PuntoCX],PlayerTemp[playerid][PuntoCY],PlayerTemp[playerid][PuntoCZ], 7.0);
		if(strcmp(item, "transportista", true) == 0) if(PlayerTemp[playerid][pt_Transportista]) CrearCheckpoint(playerid,PuntoTraX[playerid],PuntoTraY[playerid],PuntoTraZ[playerid], 7.0);
		if(strcmp(item, "basurero", true) == 0) if(PBasura[playerid] > 0 && PuntoBaX[playerid] != 0) CrearCheckpoint(playerid,PuntoBaX[playerid],PuntoBaY[playerid],PuntoBaZ[playerid],PuntoBaA[playerid]);
		if(strcmp(item, "medico", true) == 0) if(MedicoCP2[playerid] == 1) HospitalCercano(playerid),Mensaje(playerid, -1,"Se ha marcado en el mapa la posicion.");
		if(strcmp(item, "pescador", true) == 0)
		{
			if(RecorridoPescador[playerid] == 1) CrearCheckpoint(playerid,2786.7866,-2594.8406,-1.0248, 7.0);
			else Mensaje(playerid, -1,"No tienes un recorrido de pescador activo.");
		}
		if(strcmp(item, "borrar", true) == 0) BorrarCheckpoint(playerid);
	}
	return 1;
}

CMD:crear(playerid,params[])
{
    if(PlayerInfo[playerid][pTiempoJail] == 0 && PlayerInfo[playerid][pTiempoCarcel] == 0)
	{
		new item[32],virtualw = GetPlayerVirtualWorld(playerid), interi = GetPlayerInterior(playerid);
		if(!sscanf(params, "s[32]", item))
		{
		    if(strcmp(item, "radio", true) == 0)
			{
				if(EstaEn(playerid,5, 393.7036, 185.4025, 1040.1156))
				{
					if(PlayerInfo[playerid][VIP] == 0) return Mensaje(playerid, COLOR_BLANCO, "Necesitas ser VIP para crear una estaci�n de radio.");
					if(PlayerInfo[playerid][jDinero] < 15000) return Mensaje(playerid, COLOR_BLANCO, "Necesitas "CR"$15.000"CB" para crear una estaci�n de radio.");
					MostrarDialog(playerid, COMPRARRADIO, DIALOG_STYLE_INPUT,"Crear estaci�n de radio","Ingresa el nombre de tu nueva estaci�n de radio:","Crear","Cancelar");
					return 1;
				}
				else return Mensaje(playerid, COLOR_BLANCO, "No estas donde se compras las radios.");
			}
			if(EstaEnEvento[playerid] == 1) return Mensaje(playerid,-1,"No puedes crear un arma en este momento.");
			if(PlayerDuelo[playerid][Estaenduelo] == 1) return Mensaje(playerid,-1,"No puedes crear armas en este momento.");
			if(ArmasEstado == 0 || VariableCaido[playerid] == 1 || PlayerInfo[playerid][Agonizando] == 1) return Mensaje(playerid,-1,"No puedes crear armas en este momento.");
			if(!TieneTrabajo(playerid, ARMERO)) return Mensaje(playerid, -1, "Tu no eres fabricante de armas.");
			if(GetPlayerState(playerid) == 2 || GetPlayerState(playerid) == 3) return Mensaje(playerid, -1, "No puedes crear un arma si estas en un veh�culo.");
			if(interi == 6 && virtualw == 6 || virtualw == 7 || virtualw == 8 ||  virtualw == 9) return Mensaje(playerid,-1,"No puedes crear un arma en este momento."); // Hospitales
			if(interi == 13 && virtualw == 1) return Mensaje(playerid,-1,"No puedes crear un arma en este momento."); // Salon de eventos
    		if(interi == 7 && virtualw == 7) return Mensaje(playerid,-1,"No puedes crear un arma en este momento."); // Estadio
    		if(interi == 5 && virtualw == 5) return Mensaje(playerid,-1,"No puedes crear un arma en este momento."); // Emisoras
			if(PlayerInfo[playerid][pTiempoCarcel] > 0 || PlayerInfo[playerid][pTiempoJail] > 0) return Mensaje(playerid,-1,"No puedes crear un arma en este momento.");
			if(gettimeVariable < EntrandoVehicle[playerid]) return 1;
			new nombre_arma[64],string[128],Piezas,armaid,lvlid;
			if(strcmp(item, "9mm",true) == 0) { armaid = 22; lvlid = 1; format(nombre_arma,sizeof(nombre_arma),"9mm"); Piezas = 10;}
			else if(strcmp(item, "9mm-silenciada",true) == 0) { armaid = 23; lvlid = 2; format(nombre_arma,sizeof(nombre_arma),"9mm silenciada"); Piezas = 12; }
			else if(strcmp(item, "escopeta",true) == 0) { armaid = 25; lvlid = 2; format(nombre_arma,sizeof(nombre_arma),"Escopeta"); Piezas = 20;}
			else if(strcmp(item, "desert-eagle",true) == 0 || strcmp(item, "dk",true) == 0) { armaid = 24; lvlid = 3; format(nombre_arma,sizeof(nombre_arma),"Desert Eagle"); Piezas = 36;}
			else if(strcmp(item, "mp5",true) == 0) { armaid = 29; lvlid = 4; format(nombre_arma,sizeof(nombre_arma),"Mp5"); Piezas = 58;}
			else if(strcmp(item, "ak-47",true) == 0 || strcmp(item, "ak47",true) == 0) { armaid = 30; lvlid = 5; format(nombre_arma,sizeof(nombre_arma),"AK-47"); Piezas = 82;}
			else if(strcmp(item, "m4",true) == 0) { armaid = 31; lvlid = 5; format(nombre_arma,sizeof(nombre_arma),"M4"); Piezas = 96; }
			else if(strcmp(item, "rifle",true) == 0) { armaid = 33; lvlid = 5; format(nombre_arma,sizeof(nombre_arma),"Rifle"); Piezas = 52;}
			else if(strcmp(item, "escopeta-de-combate",true) == 0 || strcmp(item, "edc",true) == 0) { armaid = 27; lvlid = 6; format(nombre_arma,sizeof(nombre_arma),"Escopeta de combate"); Piezas = 136;}
			else if(strcmp(item, "sniper",true) == 0 || strcmp(item, "francotirador",true) == 0) { if(PlayerInfo[playerid][VIP] < 3) return Mensaje(playerid,-1,"Solo jugadores VIP3."); armaid = 34; lvlid = 6; format(nombre_arma,sizeof(nombre_arma),"Rifle francotirador"); Piezas = 250;}
			else if(strcmp(item, "arma",	true) == 0 || strcmp(item, "armas",	true) == 0)
			{
				new stringa[1000];
				if(PlayerInfo[playerid][pNivelArmero] > 0){ format(stringa, sizeof(stringa),"Tipo de arma\tPiezas necesarias\tNivel de Armero\n9mm\t{FF0000}10{FFFFFF} Piezas\tNivel {199F0C}1\n"); }
				if(PlayerInfo[playerid][pNivelArmero] > 0){ format(stringa, sizeof(stringa),"%s9mm Silenciada\t{FF0000}12{FFFFFF} Piezas\tNivel {199F0C}1\n",stringa); }
				if(PlayerInfo[playerid][pNivelArmero] > 1){ format(stringa, sizeof(stringa),"%sEscopeta\t{FF0000}20{FFFFFF} Piezas\tNivel {199F0C}2\n",stringa); }
				if(PlayerInfo[playerid][pNivelArmero] > 2){ format(stringa, sizeof(stringa),"%sDesert Eagle\t{FF0000}36{FFFFFF} Piezas\tNivel {199F0C}3\n",stringa); }
				if(PlayerInfo[playerid][pNivelArmero] > 3){ format(stringa, sizeof(stringa),"%sMP5\t{FF0000}58{FFFFFF} Piezas\tNivel {199F0C}4\n",stringa); }
				if(PlayerInfo[playerid][pNivelArmero] > 4){ format(stringa, sizeof(stringa),"%sAK-47\t{FF0000}82{FFFFFF} Piezas\tNivel {199F0C}5\n",stringa); }
				if(PlayerInfo[playerid][pNivelArmero] > 4){ format(stringa, sizeof(stringa),"%sM4\t{FF0000}96{FFFFFF} Piezas\tNivel {199F0C}5\n",stringa); }
				if(PlayerInfo[playerid][pNivelArmero] > 5){ format(stringa, sizeof(stringa),"%sRifle\t{FF0000}52{FFFFFF} Piezas\tNivel {199F0C}6\n",stringa); }
				if(PlayerInfo[playerid][pNivelArmero] > 6){ format(stringa, sizeof(stringa),"%sEscopeta de combate\t{FF0000}136{FFFFFF} Piezas\tNivel {199F0C}7\n",stringa); }
				if(PlayerInfo[playerid][VIP] == 3) {format(stringa, sizeof(stringa),"%sSniper\t{FF0000}250{FFFFFF} Piezas\tNivel {199F0C}6\n",stringa); }
				MostrarDialog(playerid, DIALOG_CREARARMA, DIALOG_STYLE_TABLIST_HEADERS, "Trabajo armero: Creaci�n de armas", stringa,"Aceptar", "Cancelar");
				return 1;
			}
			else return 1;
			if(UsandoVPN[playerid] && strcmp(User_Temp[playerid][DiscordID], "0", true) == 0)
			{
				return MostrarDialog(playerid, DIALOG_AYUDA, DIALOG_STYLE_MSGBOX, "Proxy/VPN {AD2A2A}detectado", "{FFFFFF}Hola, hemos detectado que usas VPN, para crear armas tendr�s que vincular tu {AD46D1}/discord{FFFFFF} en {AD46D1}/est > Vincular discord{FFFFFF}.\n\nDespu�s de vincular tu discord podr�s crear armas. Si no puedes vincular discord conectate al servidor sin VPN.\n\nSi tienes alg�n problema abre ticket en nuestro servidor de {AD46D1}/discord{FFFFFF}.", "Aceptar", "");
			}
			
			if(PlayerInfo[playerid][pNivelArmero] < lvlid) return Mensaje(playerid, -1, "No tienes el nivel necesario para crear esta arma");
			if(PlayerInfo[playerid][pMateriales] >= Piezas)
			{
				PlayerInfo[playerid][pMateriales] -= Piezas;
				DarArma(playerid, armaid);
				format(string,sizeof(string),"%s saca piezas de su mochila y crea una %s.",NombreJugador(playerid), nombre_arma);
				ProxDetector(20, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
				if(PlayerInfo[playerid][pNivelArmero] == lvlid) DarHabilidadArma(playerid, PlayerInfo[playerid][pNivelArmero]);
			}
			else return Mensaje(playerid, -1, "No tienes los materiales necesarios");
		}
    }
    else Mensaje(playerid, -1, "No puedes hacer esto si estas en prisi�n.");
    return 1;
}

static VerificarAccion(playerid)
{
	if(PlayerInfo[playerid][jNivel] < 6)
	{
		if(PlayerInfo[playerid][CorreoVerificado] == 0)
		{
			MostrarDialog(playerid, DIALOG_AYUDA, DIALOG_STYLE_MSGBOX, "Necesitas verificar tu correo", "{FFFFFF}Hola, para realizar esto siendo nivel 5 tendr�s que verificar tu {AD46D1}Correo{FFFFFF} en nuestro {AD46D1}/PCU{FFFFFF}.\n\nSi no puedes verificar tu correo tendr�s que esperar a ser nivel 6.\n\nSi tienes alg�n problema abre ticket en nuestro servidor de {AD46D1}/discord{FFFFFF}.", "Aceptar", "");
			return 0;
		}
		if(strcmp(User_Temp[playerid][DiscordID], "0", true) == 0)
		{
			MostrarDialog(playerid, DIALOG_AYUDA, DIALOG_STYLE_MSGBOX, "Necesitas vincular tu discord", "{FFFFFF}Hola, para realizar esto siendo nivel 5 tendr�s que vincular tu {AD46D1}/discord{FFFFFF} en {AD46D1}/est > Vincular discord{FFFFFF}.\n\nSi no puedes vincular discord tendr�s que esperar a ser nivel 6.\n\nSi tienes alg�n problema abre ticket en nuestro servidor de {AD46D1}/discord{FFFFFF}.", "Aceptar", "");
			return 0;
		}
	}
	return 1;
}

CMD:minumero(playerid,params[])
{
	new string[256];
	if(PlayerInfo[playerid][pNumero] == 0) return Mensaje(playerid,-1,"Tu no tienes un telefono para mirar tu numero.");
	format(string, 256,"Tu n�mero de tel�fono es: "CR"%d",PlayerInfo[playerid][pNumero]);
	Mensaje(playerid, -1, string);
	return 1;
}

CMD:numero(playerid,params[])
{
	new ID,string[256];
	if(PlayerInfo[playerid][pAgenda] != 1) return Mensaje(playerid, -1, "Tu no tienes una agenda telefonica.");
	if(sscanf(params,"r", ID)) return Mensaje(playerid, -1, "Utiliza "CR"/numero [ID]");
	if(!IsPlayerConnected(ID)) return Mensaje(playerid,COLORCARGO0,"Jugador no conectado.");
	if(PlayerInfo[ID][pNumero] == 0) return Mensaje(playerid, -1, "Esa persona no aparece en la gu�a telef�nica, probablemente no tenga tel�fono.");
	if(ShowGuia[ID] == 0) return Mensaje(playerid, -1, "El n�mero de tel�fono de esa persona no est� registrado en la gu�a.");
	format(string, 256, ""CR"Gu�a telef�nica: "CB"El n�mero de tel�fono de "CR"%s"CB" es "CR"%d", NombreJugador(ID),PlayerInfo[ID][pNumero]);
	Mensaje(playerid, -1, string);
	return 1;
}

CMD:llamar(playerid, const params[])
{
	new phonenumb;
	if(sscanf(params, "d", phonenumb)) return Mensaje(playerid, COLORCARGO0, "Por favor usa "CR"/llamar numero"CB".");
	if(PlayerInfo[playerid][pTiempoCarcel] > 0 || PlayerInfo[playerid][pTiempoJail] > 0) return Mensaje(playerid,-1,"No puedes usar tu telefono en este momento.");
	if(PlayerDuelo[playerid][Estaenduelo] == 1) return SendClientMessage(playerid,-1,"�Est�s en {7401DF}duelo!");
	if(phonenumb == 911 && FaccLegal(playerid)) return Mensaje(playerid, -1, "No puedes llamar al 911 si eres un polic�a en actividad, usa tu radio.");
	if(PlayerInfo[playerid][pNumero] == 0) return Mensaje(playerid, COLOR_GRAD2, "No tienes un tel�fono.");
	if(PlayerInfo[playerid][pNumero] == phonenumb) return Mensaje(playerid,-1,"No puedes llamar a tu mismo tel�fono.");
	if(EnLlamada[playerid] == 1) return Mensaje(playerid,-1,"Ya estas en una llamada, usa "CR"/colgar"CB" para terminarla.");
	foreach(new i : Player)
	{
		if(phonenumb == 911)
		{
			PlayerInfo[playerid][MobileSub] = 911;
   			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
			SetTimerEx("LlamadaCops",2000,false,"d",playerid);
			Mensaje(playerid, -1, "Llamando a la polic�a... usa "CR"/colgar"CB" para cancelar la llamada.");
			PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
			return 1;
		}
		if(phonenumb == 815)
		{
			PlayerInfo[playerid][MobileSub] = 815;
			EnLlamada[playerid] = 1;
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
			SetTimerEx("LlamadaGrua",2000,false,"d",playerid);
			Mensaje(playerid, -1, "Llamando al servicio de gr�a... usa "CR"/colgar"CB" para cancelar la llamada.");
			PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
			return 1;
		}
		if(PlayerInfo[i][pNumero] == phonenumb && phonenumb != 0)
		{
		    if(PlayerInfo[i][pTiempoCarcel] > 0 || PlayerInfo[i][pTiempoJail] > 0) return Mensaje(playerid,-1,"El numero que usted marco no esta disponible en este momento.");
			if(EnLlamada[i] == 1) return Mensaje(playerid,-1,"El numero que usted marco se encuentra ocupado.");
			if(TelefonoEstado[i] == 1) return Mensaje(playerid,-1,"El numero que marco esta fuera de linea.");
			{
				if(IsPlayerConnected(i))
				{
					
					if(PlayerInfo[i][MobileSub] == -1)
					{
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
						PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
						if(PlayerTemp[i][Specteando] == 0)
						{
							new string[35+MAX_PLAYER_NAME];
							format(string, sizeof(string), "El tel�fono de %s est� sonando.", NombreJugador(i));
							ProxDetector(30.0, i, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
						}
						CLlamada[playerid] = SetTimerEx("finllamadax", 30000, false, "i", playerid);
						va_SendClientMessage(i, -1, "Te est�n llamando por tel�fono desde el n�mero: "CR"%d"CB", usa "CR"/atender"CB" o "CR"/colgar", PlayerInfo[playerid][pNumero]);
						PlayerInfo[playerid][MobileSub] = i;
						PlayerInfo[i][MobileSub] = playerid;
						llamada(i);
						return 1;
					}
				}
			}
		}
	}
	Mensaje(playerid, -1, "El tel�fono al que intentas llamar, est� apagado o fuera del �rea de cobertura.");
	SetTimerEx("StopCell",3000,false,"d",playerid);
	return 1;
}

CMD:sms(playerid, params[])
{
	if(PlayerInfo[playerid][pNumero] > 0)
	{
		if(PlayerInfo[playerid][jDinero] >= 15)
		{
			new numero, mensaje[100], mensaje2[101];
			if(!sscanf(params, "ds[100]", numero, mensaje))
			{
				if(Jail[playerid] > 0 || PlayerInfo[playerid][pTiempoJail] > 0) return Mensaje(playerid, COLORCARGO0, "Te quitaron el tel�fono antes de entrar a la celda.");
				EnviarSMS(playerid, numero, mensaje);
				return 1;
			}
			else if(!sscanf(params, "s[100]", mensaje2))
			{
				if(PlayerTemp[playerid][pt_NumeroSMS] > 0)
				{
					if(Jail[playerid]  > 0 || PlayerInfo[playerid][pTiempoJail] > 0) return Mensaje(playerid, COLORCARGO0, "Te quitaron el tel�fono antes de entrar a la celda.");
					EnviarSMS(playerid, PlayerTemp[playerid][pt_NumeroSMS], mensaje2);
					return 1;
				}
				else if(PlayerTemp[playerid][pt_NumeroSMS] == 0)
				{
					if(PlayerInfo[playerid][pTiempoCarcel] > 0 || PlayerInfo[playerid][pTiempoJail] > 0) return Mensaje(playerid, COLORCARGO0, "Te quitaron el tel�fono antes de entrar a la celda.");
					Mensaje(playerid, COLORCARGO0, "El mensaje {FF4202}no se pudo entregar"CB", comprueba que el n�mero sea el correcto.");
					Mensaje(playerid, COLORCARGO0, "Si el n�mero est� bien, probablemente el tel�fono est� apagado.");
					return 1;
				}
			}
			Mensaje(playerid, COLORCARGO0, "Por favor usa "CR"/sms numero mensaje"CB". Ej: "CR"/sms 5009999 Hola.");
		}
		else return Mensaje(playerid, COLORCARGO0, "No tienes suficiente dinero para enviar un SMS, necesitas {FF4202}$15"CB".");
	}
	else Mensaje(playerid, COLORCARGO0, "Necesitas un tel�fono m�vil para poder enviar un sms.");
	return 1;
}

CMD:atender(playerid, params[])
{
	new string[144],texto[10],id,Float:Pos[3];
	if(!sscanf(params,"s[10]d",texto,id))
	{
		if(strcmp(texto, "paciente", true)==0)
		{
			new Float:Vida;
			if(!TieneTrabajo(playerid, MEDICO)) return Mensaje(playerid,-1,"Necesitas el trabajo de m�dico para utilizar este comando.");
			if(RopaMedi[playerid] > 0)
			{
				if(PlayerInfo[playerid][pMedicina] == 0) return Mensaje(playerid,-1,"No tienes ninguna medicina para aplicar.");
				GetPlayerPos(id,Pos[0],Pos[1],Pos[2]);
				if(!EstaEn(playerid, 2.0,Pos[0],Pos[1],Pos[2])) return Mensaje(playerid,-1,"Tu no estas cerca de este paciente.");
				if(PlayerInfo[id][pAtendido] == 1) return Mensaje(playerid,-1,"Este paciente ya fue atendido por otro m�dico.");
				GetPlayerHealth(id,Vida);
				if(PlayerInfo[id][pEnfermedad] == PlayerInfo[playerid][pMedicina])
				{
					PlayerInfo[id][pAtendido] = 1;
					PlayerInfo[playerid][pMedicina] = 0;
					format(string,sizeof(string),"%s aplica el tratamiento necesario con el paciente.", NombreJugador(playerid));
					ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
					format(string,sizeof(string),"%s comienza a curar las heridas de %s.",NombreJugador(playerid), NombreJugador(id));
					ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
					format(string,sizeof(string),"El tratamiento parece ir correctamente.");
					ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
					PlayerInfo[id][pEnfermedad] = 0;
					if(PlayerInfo[id][jDinero] >= 600)
					{
						QuitarDinero(id,600);
						DarDinero(playerid,600);
						Mensaje(playerid,-1,"El paciente te ha pagado "CR"$600"CB" por tu gran trabajo.");
						Mensaje(id,-1,"Has pagado "CR"$600"CB" de tu billetera al m�dico por su trabajo.");
					}
					else if(PlayerInfo[id][pBanco] >= 600)
					{
						PlayerInfo[id][pBanco] -= 600;
						DarDinero(playerid,600);
						Mensaje(playerid,-1,"El paciente te ha pagado "CR"$600"CB" por tu gran trabajo.");
						Mensaje(id,-1,"Has pagado "CR"$600"CB" del banco al m�dico por su trabajo.");
					}
					else
					{
						DarDinero(playerid,250);
						Mensaje(playerid,-1,"El paciente no tiene suficiente dinero para pagar los servicios, el hospital te ha pagado $250.");
						Mensaje(id,-1,"No has tenido dinero para pagarle al m�dico, el hospital cubrio tu cuota.");
					}
					if(Vida < 90) EstablecerVida(id, 90);
				}
				else
				{
					format(string,sizeof(string),"%s aplica el tratamiento erroneo con el paciente.",NombreJugador(playerid));
					ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
   					Mensaje(playerid,COLOR_ROJO,"Haz aplicado un tratamiento erroneo con el paciente, tu reputacion como medico ha disminuido.");
					if(Vida > 10) EstablecerVida(id, 10);
				}
			}
			else return Mensaje(playerid,-1,"Necesitas tener la ropa de m�dico para utilizar este comando.");
		}
		return 1;
	}
	if(sscanf(params, "s[30]", texto))
	{
	    if(Esposando[playerid] == 1 || Esposando[playerid] == 2) return Mensaje(playerid,-1,"No puedes atender una llamada si estas esposado.");
	    if(Objeto[playerid] > 1100) return Mensaje(playerid,-1,"No puedes atender una llamada con un objeto en la mano, usa "CR"/tirar objeto"CB" o "CR"/colgar"CB".");
		foreach(new i : Player)
		{
			if(PlayerInfo[i][MobileSub] == 911)
			{
				if(PlayerInfo[playerid][pDuty] == 1)
				{
					EnLlamada[i] = 1;
					EnLlamada[playerid] = 1;
					PlayerInfo[i][MobileSub] = playerid;
					PlayerInfo[playerid][MobileSub] = i;
					EnLlamada911[i] = 911;
					EnLlamada911[playerid] = 911;
					Mensaje(i, -1, "Contestan la llamada.");
					Mensaje(playerid,-1,"Atiendes la llamada...");
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
					format(string,sizeof(string),"{3399FF}[Central de polic�a]"CB": "CR"%s"CB" (%d) atendi� la llamada de %s (%d)",NombreJugador(playerid), playerid, NombreJugador(i), i);
					SendRadioMessage(1,-1,string,INVALID_PLAYER_ID, 1);
					return 1;
				}
			}
		}
		if(PlayerInfo[playerid][MobileSub] == 2540)
		{
			finllamada(playerid);
			EnLlamada[playerid] = 1;
			PlayerInfo[playerid][MobileSub] = 2540;
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
			switch(PlayerInfo[playerid][pNivelTransportista])
			{
				case 1:
				{
					new punto = random(2);
					switch(punto)
					{
						case 0: EnviarRuta(playerid, 1, "la cantera de Hunter Quarry");
						case 1: EnviarRuta(playerid, 2, "la f�brica de sprunk de Montgomery");
					}
					return 1;
				}
				case 2:
				{
					new punto = random(4);
					switch(punto)
					{
						case 0: EnviarRuta(playerid, 1, "la cantera de Hunter Quarry");
						case 1: EnviarRuta(playerid, 2, "la f�brica de sprunk de Montgomery");
						case 2: EnviarRuta(playerid, 3, "la maderera en Angel Pine");
						case 3: EnviarRuta(playerid, 4, "la cantera de Hunter Quarry");
					}
					return 1;
				}
				case 3:
				{
					new punto = random(6);
					switch(punto)
					{
						case 0: EnviarRuta(playerid, 1, "la cantera de Hunter Quarry");
						case 1: EnviarRuta(playerid, 2, "la f�brica de sprunk de Montgomery");
						case 2: EnviarRuta(playerid, 3, "la maderera en Angel Pine");
						case 3: EnviarRuta(playerid, 4, "la cantera de Hunter Quarry");
						case 4: EnviarRuta(playerid, 5, "la distribuidora de Whitewood Estates");
						case 5: EnviarRuta(playerid, 6, "Esplanade North");
					}
					return 1;
				}
				case 4:
				{
					new punto = random(8);
					switch(punto)
					{
						case 0: EnviarRuta(playerid, 1, "la cantera de Hunter Quarry");
						case 1: EnviarRuta(playerid, 2, "la f�brica de sprunk de Montgomery");
						case 2: EnviarRuta(playerid, 3, "la maderera en Angel Pine");
						case 3: EnviarRuta(playerid, 4, "la cantera de Hunter Quarry");
						case 4: EnviarRuta(playerid, 5, "la distribuidora de Whitewood Estates");
						case 5: EnviarRuta(playerid, 6, "Esplanade North");
						case 6: EnviarRuta(playerid, 7, "la Cantera de Bone Country");
						case 7: EnviarRuta(playerid, 8, "la F�brica de transformadores de Bayside");
					}
					return 1;
				}
				case 5:
				{
					new punto = random(10);
					switch(punto)
					{
						case 0: EnviarRuta(playerid, 1, "la cantera de Hunter Quarry");
						case 1: EnviarRuta(playerid, 2, "la f�brica de sprunk de Montgomery");
						case 2: EnviarRuta(playerid, 3, "la maderera en Angel Pine");
						case 3: EnviarRuta(playerid, 4, "la cantera de Hunter Quarry");
						case 4: EnviarRuta(playerid, 5, "la distribuidora de Whitewood Estates");
						case 5: EnviarRuta(playerid, 6, "Esplanade North");
						case 6: EnviarRuta(playerid, 7, "la Cantera de Bone Country");
						case 7: EnviarRuta(playerid, 8, "la F�brica de transformadores de Bayside");
						case 8: EnviarRuta(playerid, 9, "la Fabrica de Bayside");
						case 9: EnviarRuta(playerid, 10, "la Fabrica de Bayside");
					}
					return 1;
				}
				default:
				{
					new punto = random(12);
					switch(punto)
					{
						case 0:  EnviarRuta(playerid, 1,  "la cantera de Hunter Quarry");
						case 1:  EnviarRuta(playerid, 2,  "la f�brica de sprunk de Montgomery");
						case 2:  EnviarRuta(playerid, 3,  "la maderera en Angel Pine");
						case 3:  EnviarRuta(playerid, 4,  "la cantera de Hunter Quarry");
						case 4:  EnviarRuta(playerid, 5,  "la distribuidora de Whitewood Estates");
						case 5:  EnviarRuta(playerid, 6,  "Esplanade North");
						case 6:  EnviarRuta(playerid, 7,  "la Cantera de Bone Country");
						case 7:  EnviarRuta(playerid, 8,  "la F�brica de transformadores de Bayside");
						case 8:  EnviarRuta(playerid, 9,  "la Fabrica de Bayside");
						case 9:  EnviarRuta(playerid, 10, "la Fabrica de Bayside");
						case 10: EnviarRuta(playerid, 11, "la Ferroviaria de Sobell Rail Yards");
						case 11: EnviarRuta(playerid, 12, "la Fabrica de bidones de Blueberry");
					}
					return 1;
				}
			}
		}
		else if(PlayerInfo[playerid][MobileSub] != -1)
		{
			foreach(new u : Player)
			{
				if(PlayerInfo[u][MobileSub] == playerid)
				{
					finllamada(playerid);
                    KillTimer(CLlamada[playerid]);
                    KillTimer(CLlamada[u]);
					EnLlamada[playerid] = 1;
					EnLlamada[u] = 1;
					PlayerInfo[playerid][MobileSub] = u;
					PlayerInfo[u][MobileSub] = playerid;
					Mensaje(u,  -1, "Contestaron la llamada.");
					Mensaje(playerid,-1,"Atiendes la llamada...");
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
					return 1;
				}
			}
		}
		else return Mensaje(playerid,-1,"No hay ninguna llamada para atender.");
	}
	return 1;
}

CMD:colgar(playerid,params[])
{
	PlayerPlaySound(playerid, 3402, 0.0, 0.0, 0.0);
	if(PlayerInfo[playerid][MobileSub] == 911 || PlayerInfo[playerid][MobileSub] == 815 || PlayerInfo[playerid][MobileSub] == 2540) return ColgarLaLlamada(playerid);
	else if(PlayerInfo[playerid][MobileSub] != -1)
	{
		Mensaje(PlayerInfo[playerid][MobileSub],  -1, "Cortaron la comunicaci�n.");
		Mensaje(playerid,  -1, "Cortaste la comunicaci�n.");
		finllamada(PlayerInfo[playerid][MobileSub]);
		finllamada(playerid);
		EnLlamada911[PlayerInfo[playerid][MobileSub]] = 0;
		EnLlamada911[playerid] = 0;
		SetPlayerSpecialAction(PlayerInfo[playerid][MobileSub], SPECIAL_ACTION_STOPUSECELLPHONE);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		EnLlamada[PlayerInfo[playerid][MobileSub]] = 0;
		EnLlamada[playerid] = 0;
		PlayerInfo[PlayerInfo[playerid][MobileSub]][MobileSub] = -1;
		PlayerInfo[playerid][MobileSub] = -1;
		return 1;
	}
	else return Mensaje(playerid,  -1, "No puedes colgar el tel�fono si no lo est�s usando.");
}

CMD:reanimar(playerid,params[])
{
	new ID;
	if(IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid, COLOR_BLANCO, "No puedes hacer esto en un veh�culo.");
	if(!TieneTrabajo(playerid, MEDICO)) return 1;
	if(RopaMedi[playerid] > 0)
	{
		if(sscanf(params,"d",ID)) return Mensaje(playerid, -1,"Utiliza "CR"/reanimar [ID]");
		if(ID == playerid) return 1;
		if(!IsPlayerConnected(ID)) return Mensaje(playerid, -1,"Jugador desconectado.");
		if(MarcadoMedicos[ID] != 1) return Mensaje(playerid, -1,"Este jugador no ha solicitado un m�dico.");
  		new Float:pos[3];
	    GetPlayerPos(ID,pos[0],pos[1],pos[2]);
		if(!EstaEn(playerid,5.0,pos[0],pos[1],pos[2])) return Mensaje(playerid, -1,"Debes estar cerca de un paciente para reanimarlo.");
		{
			if(PlayerTemp[playerid][reanimamedico] == 0)
			{
				Mensaje(playerid, COLOR_DORADO,"Reanimando...");
				LoopingAnim(playerid, "MEDIC", "CPR", 4.0, 0, 0, 0, 0, 0);
				SetTimerEx("ReanimarMedico",8000,false,"dd",playerid,ID);
				PlayerTemp[playerid][reanimamedico] = 1;
				return 1;
			}
		}
		return 1;
	}
	return 1;
}

CMD:subir(playerid,params[])
{
    new Float:X,Float:Y,Float:Z,carid,item[10];
	if(!sscanf(params, "s[10]", item))
	{
		carid = GetPlayerVehicleID(playerid);
		if(!TieneTrabajo(playerid, MEDICO)) return 1;
		if(strcmp(item, "paciente", true) ==0)
		{
			if(Paciente[playerid] == INVALID_PLAYER_ID) return Mensaje(playerid, -1,"No has reanimado a ningun paciente para subirlo.");
			if(!IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid, -1,"Debes estar en una ambulancia.");
			if(!AMBU(carid)) return Mensaje(playerid, -1,"Debes estar en una ambulancia.");
			GetPlayerPos(Paciente[playerid], X,Y,Z);
			if(EstaEn(playerid, 10.0, X,Y,Z))
			{
				if(!IsVehicleSeatInUse(carid,2))
				{
					EnAuto[Paciente[playerid]] = carid;
					MarcadoMedicos[Paciente[playerid]] = 0;
					SetPlayerColor(Paciente[playerid], COLORCARGO0);
					PutPlayerInVehicleAC(Paciente[playerid], carid, 2);
					HospitalCercano(playerid);
					Mensaje(playerid, -1, "Has subido al paciente, llevalo al hospital antes que sea tarde.");
					CongelarEx(Paciente[playerid]);
					Reanimado[Paciente[playerid]] = 0;
					PacienteAmbu[Paciente[playerid]] = 1;
					return 1;
				}
				if(!IsVehicleSeatInUse(carid,3))
				{
					EnAuto[Paciente[playerid]] = carid;
					MarcadoMedicos[Paciente[playerid]] = 0;
					SetPlayerColor(Paciente[playerid], COLORCARGO0);
					PutPlayerInVehicleAC(Paciente[playerid], carid, 3);
					Mensaje(playerid, -1, "Has subido al paciente, llevalo al hospital antes que sea tarde.");
					HospitalCercano(playerid);
					CongelarEx(Paciente[playerid]);
					Reanimado[Paciente[playerid]] = 0;
					PacienteAmbu[Paciente[playerid]] = 1;
					return 1;
				}
				else return Mensaje(playerid, -1,"Ya no puede subir a nadie mas a tu ambulancia.");
			}
		}
	}
	else
	{
		if(EstaEn(playerid, 5.0, 154.3395,-1946.6226,5.3902)) return SetPosEx(playerid,152.5124,-1952.7639,47.8750,304.7068,0,0);
		else if(EstaEn(playerid, 5.0, 905.5018,-3022.0146,7.5141))  return SetPosEx(playerid,909.9585,-3016.6672,49.9987,185.8331,0,0);
		else if(EstaEn(playerid, 5.0, -1182.6328,60.4289,1.9609))   return SetPosEx(playerid,-1183.2729,59.7690,14.1484,0,0,0);
		else if(EstaEn(playerid, 5.0, -1115.7904,335.3422,1.9609))  return SetPosEx(playerid,-1116.5095,336.0152,14.1442,0,0,0);
		else if(EstaEn(playerid, 5.0, -1081.8900,-207.9342,1.9609)) return SetPosEx(playerid,-1082.6582,-208.3099,14.1440,0,0,0);
		else if(EstaEn(playerid, 5.0, -1154.2579,-476.7021,1.9609)) return SetPosEx(playerid,-1155.1638,-476.1771,14.1484,0,0,0);
		else if(EstaEn(playerid, 5.0, -1361.0671,-696.6432,1.9609)) return SetPosEx(playerid,-1361.0728,-695.5795,14.1484,0,0,0);
		else if(EstaEn(playerid, 5.0, -1603.3958,-696.6434,1.9609)) return SetPosEx(playerid,-1603.4130,-695.7511,14.1440,0,0,0);
		else if(EstaEn(playerid, 5.0, -1736.4478,-445.9445,1.9609)) return SetPosEx(playerid,-1735.5591,-445.9360,14.1484,0,0,0);
		else if(EstaEn(playerid, 5.0, -1618.7266,-83.9973,1.9609))  return SetPosEx(playerid,-1618.0411,-84.6595,14.1484,0,0,0);
		else if(EstaEn(playerid, 5.0, -1444.4602,90.2323,1.9609))   return SetPosEx(playerid,-1443.7330,89.5017,14.1466,0,0,0);
		else if(EstaEn(playerid, 5.0, -1164.6530,369.9854,1.9609))  return SetPosEx(playerid,-1164.0070,369.3972,14.1484,0,0,0);
	}
	return 1;
}

CMD:estacionar(playerid, params[])
{
	new autoid = GetPlayerVehicleID(playerid);
	if(autoid > 0)
	{
	    if(ZonaSegura[playerid] == 1) return Mensaje(playerid, -1,"No puedes estacionar ac�, busca otra zona.");
		new Float:Health,asd;
		asd = GetPlayerVehicle(playerid, autoid);
		GetVehicleHealth(autoid, Health);
		if(asd != -1)
		{
			if(Health < 500.0) return Mensaje(playerid,-1,"El veh�culo esta muy da�ado, arreglalo primero.");
			else
			{
				AccionesRol(playerid,"est� apagando el motor de su veh�culo.", 20);
				SetTimerEx("EstacionarCoche",1700, false, "dd",playerid,1);
			}
		}
	}
	return 1;
}

CMD:ocultar(playerid, params[])
{
	if(strcmp(params,"sed",true) == 0)
	{
		if(SedOculta[playerid] == 0) return Mensaje(playerid,-1,"Ya tienes oculta la barra indicadora de sed.");
		SedOculta[playerid] = 0;
		BarraHambre(playerid, 2);
		BarraSed(playerid, 2);
		Mensaje(playerid,-1,"Ocultaste la barra de sed, para volver a mostrarla usa "CR"/mostrar sed"CB".");
		return 1;
	}
	if(strcmp(params,"gps",true) == 0) CerrarGPS(playerid);
	if(strcmp(params,"nombres",true) == 0)
	{
		foreach(new i : Player) ShowPlayerNameTagForPlayer(playerid, i, 0);
		GameTextForPlayer(playerid, "~r~ OCULTAR ~w~NOMBRES", 5000, 5);
		return 1;
	}
	if(strcmp(params,"pantalla",true) == 0)
	{
	    if(ViendoPantalla[playerid] == 0) return Mensaje(playerid, -1, "Actualmente no estas viendo ninguna pantalla.");
	    ViendoPantalla[playerid] = 0;
		TextDrawHideForPlayer(playerid, MapaLateral[0]);
		TextDrawHideForPlayer(playerid, MapaLateral[1]);
		TextDrawHideForPlayer(playerid, MapaLateral[4]);
		TextDrawHideForPlayer(playerid, MapaLateral[5]);
		foreach(new i : Player)
		{
			if(IsPlayerNPC(i))
		   	{
				if(i == TrenUno || i == TrenDos || i == TrenTres || i == TrenCuatro) PlayerTextDrawDestroy(playerid, tren[playerid][i]);
			}
		}
		if(SedOculta[playerid] == 1) BarraHambre(playerid, 1),BarraSed(playerid, 1);
		//DescongelarEx(playerid);
		return 1;
	}
	return 1;
}

CMD:gps(playerid, params[])
{
	if(PlayerInfo[playerid][pGPS] != 1) return Mensaje(playerid, -1, "Tu no posees un GPS. Puedes comprar uno en cualquier "CR"24/7");
	MostrarDialog(playerid, GPS, DIALOG_STYLE_LIST, "GPS: Puntos de inter�s", "Concesionarias\nBancos\n24/7\nTrabajos\nEdificios del gobierno\nTiendas de ropa\nLugares de inter�s\nTienda "CR""Moneda1""CB"\nPay 'N' Spray cercano\nVer Mapa", "Siguiente", "Cerrar");
	AccionesRol(playerid,"mira su GPS.", 20);
	return 1;
}

CMD:esposar(playerid, params[])
{
	new data[144], Float:pos[3], id;
	if(sscanf(params, "r", id))return Mensaje(playerid,COLORCARGO0,"Usa: {F4FA58}/esposar [id/nombre]");
	if(IsPlayerNPC(id)) return 1;
	if(!FaccLegal2(playerid)) return 1;
	if(!IsPlayerConnected(id)) return Mensaje(playerid,COLORCARGO0,"Jugador desconectado o id incorrecta.");
	if(PlayerInfo[id][pCargos] == 0) return Mensaje(playerid,-1,"Este jugador no tiene nivel de busqueda.");
	GetPlayerPos(id, pos[0], pos[1], pos[2]);
	if(!EstaEn(playerid, 5.0, pos[0], pos[1], pos[2])) return Mensaje(playerid,-1,"Debes estar cerca de esta persona para esposarla.");
	{
		Esposando[id] = 1;
		Oficial[id] = playerid;
		CongelarEx(id);
		TimerEsposar[id] = SetTimerEx("TiempoArresto", 10000, false, "d", id);
		EnPatrulla[id] = 0;
		SetPlayerSpecialAction(id,SPECIAL_ACTION_HANDSUP);
		Mensaje(id,-1,"El polic�a intenta esposarte, tiene 10 segundos para "CR"/resistirse"CB".");
		format(data, sizeof(data), "%s %s intenta esposar a %s", RangoPolicia(playerid),NombreJugador(playerid), NombreJugador(id));
		ProxDetector(30.0, playerid, data, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
	}
	return true;
}

CMD:resistirse(playerid, params[])
{
	new string[126];
	if(Esposando[playerid] == 1)
	{
		if(PlayerInfo[playerid][pCargos] == 1)
		{
			DarEstrella(playerid, 2);
			MarcarJugador(playerid,COLORCARGO2,1);
		}
		DescongelarEx(playerid);
		Esposando[playerid] = 0;
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		KillTimer(TimerEsposar[playerid]);
		format(string, sizeof(string), "%s se resisti� al arresto.",NombreJugador(playerid));
		ProxDetector(30.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
		format(string,sizeof(string),"[Radio de polic�a] (%s %s) dice: %s se resisti� al arresto, inicio persecuci�n.",RangoPolicia(Oficial[playerid]),NombreJugador(Oficial[playerid]), NombreJugador(playerid));
		ProxDetector(15.0, playerid, string,-1, ColorChatNormal1,ColorChatNormal2,ColorChatNormal3,ColorChatNormal4);
		format(string, sizeof(string), "[Radio de polic�a]"CB" (%s %s): %s se resisti� al arresto, inicio persecuci�n.", RangoPolicia(Oficial[playerid]),NombreJugador(Oficial[playerid]),NombreJugador(playerid));
        SendRadioMessage(1, TEAM_BLUE_COLOR, string,Oficial[playerid], 1);
		SendRadioMessage(2, TEAM_BLUE_COLOR, string,Oficial[playerid], 1);
	}
	else Mensaje(playerid, -1,"No estas siendo esposado para resistirte.");
	return 1;
}

CMD:entregar(playerid,params[])
{
	new string[120],patrulla;
	patrulla = GetPlayerVehicleID(playerid);
	if(IsPlayerInAnyVehicle(playerid))
	if(!FaccLegal(playerid)) return Mensaje(playerid, COLORCARGO0, "No est�s autorizado para usar este comando.");
	if(!EnComisaria(playerid)) return Mensaje(playerid,-1,"No est�s en el �rea de entrega de ninguna comisaria.");
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2)
	{
		if(!SAPD(patrulla) && !HELISAPD(patrulla) && !EDSA(patrulla)) return Mensaje(playerid,-1,"Debes estar en una patrulla o helicoptero policial");
	}
	foreach(new i : StreamedPlayer[playerid])
	{
 		if(PlayerInfo[i][pCargos] > 0 && IsPlayerInVehicle(i,patrulla))
		{
			PlayerTemp[i][ArrestadoTienda] = 0;
			//SetTimerEx("Encerrando",1500,false,"dd",i,playerid);
			format(string, sizeof(string), "%s baja a %s de su veh�culo.", NombreJugador(playerid),NombreJugador(i));
			ProxDetector(30.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
			va_SendClientMessage(playerid,-1,"Recibes un bono de "CR"$3500"CB" por el arresto.");
			DarDinero(playerid, 3500);
			RemovePlayerFromVehicle(i);
			Encerrando(i,playerid);
			foreach(new p : StreamedPlayer[playerid])
    		{
				if(FaccLegal(p) && IsPlayerInVehicle(p,patrulla))
				{
					va_SendClientMessage(p,-1,"Recibes un bono de "CR"$3500"CB" por el arresto.");
					DarDinero(p, 3500);
				}
			}
		}
	}
	
	return 1;
}

CMD:liberar(playerid,params[])
{
	new id,Float:x,Float:y,Float:z,string[128];
	if(!sscanf(params,"d",id))
	{
		if(FaccLegal(playerid) && FaccLegal2(playerid))
		{
			GetPlayerPos(id, x,y,z);
			if(!EstaEn(playerid, 5.0, x,y,z)) return Mensaje(playerid, -1, "No estas cerca de este jugador");
			if((VariableCaido[id] == 1 || Esposando[id] == 2 || EnPatrulla[id] == 1) && PlayerInfo[id][pCargos] > 0)
			{
				VariableCaido[id] = 0;
				Esposando[id] = 0;
				SetPlayerSpecialAction(id, SPECIAL_ACTION_NONE);
				DarEstrella(id,0);
				DescongelarEx(id);
				format(string, 128, "%s %s libera al sospechoso",RangoPolicia(playerid),NombreJugador(playerid));
				ProxDetector(15.0,playerid,string,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
				if(IsPlayerInAnyVehicle(id)) RemovePlayerFromVehicle(id);
			}
			else return Mensaje(playerid, -1, "El jugador debe estar abatido o esposado.");
		}
	}
	else return Mensaje(playerid, -1, "Modo de uso /liberar id");
	return 1;
}
CMD:1(playerid, params[])
{
	if(!FaccLegal(playerid) ) return Mensaje(playerid, -1, "Necesitas ser polic�a y estar de servicio.");
	AccionesRol(playerid,"saca sus esposas del cintur�n de su cintur�n t�ctico.", 20);
	AccionesRol(playerid,"toma dichas esposas y se las pone al s�jeto.", 20);
	return 1;
}
CMD:2(playerid, params[])
{
	if(!FaccLegal(playerid) ) return Mensaje(playerid, -1, "Necesitas ser polic�a y estar de servicio.");
	AccionesRol(playerid,"se pone sus guantes de latex.", 20);
	AccionesRol(playerid,"procede a revisar al sujeto.", 20);
	return 1;
}
CMD:3(playerid, params[])
{
	new patrulla = GetPlayerVehicleID(playerid);
	if(!FaccLegal(playerid) ) return Mensaje(playerid, -1, "Necesitas ser polic�a y estar de servicio.");
	if(IsPlayerInAnyVehicle(playerid))
	{
		if(SAPD(patrulla))
		{
			AccionesRol(playerid,"saca un meg�fono de su guantera y proceder hablar por el mismo.", 20);
			new string[128];
			format(string, sizeof(string), "(Meg�fono) %s: {3399FF}�� "CB"Le habla la polic�a de San Andreas, detengase ahora mismo{3399FF} !!",NombreJugador(playerid));
			ProxDetector(60.0, playerid, string,TEAM_BLUE_COLOR,TEAM_BLUE_COLOR,TEAM_BLUE_COLOR,TEAM_BLUE_COLOR,TEAM_BLUE_COLOR);
			return 1;
		}
 		
		if(VehiculosInfo[patrulla][vfaccion] == 2)
		{
			AccionesRol(playerid,"saca un meg�fono de su guantera y proceder hablar por el mismo.", 20);
			new string[128];
			format(string, sizeof(string), "(Meg�fono) "CB"%s: {FF0000}�� "CB"Le habla E.D.S.A, detengase ahora mismo{FF0000} !!",NombreJugador(playerid));
			ProxDetector(60.0, playerid, string,0xDAA979FF,0xDAA979FF,0xDAA979FF,0xDAA979FF,0xDAA979FF);
			return 1;
		}
		
	}
	return 1;
}
CMD:4(playerid, params[])
{
	if(!FaccLegal(playerid) ) return Mensaje(playerid, -1, "Necesitas ser polic�a y estar de servicio.");
	new string[128];
	if(PlayerInfo[playerid][pDuty] == 1)
	{
		format(string, sizeof(string), "%s grita: ��Alto, le habla polic�a de San Andreas, detengase o procedere a abrir fuego!!", NombreJugador(playerid));
		ProxDetector(30.0, playerid, string,-1,-1,-1,CHAT,CHAT2);
		format(string, sizeof(string), "��Alto, le habla polic�a de San Andreas, detengase o procedere a abrir fuego!!");
		SetPlayerChatBubble(playerid,string,-1,60.0,5000);
	}
	else if(PlayerInfo[playerid][pDutyM] == 1)
	{
		format(string, sizeof(string), "%s grita: ��Alto, le habla E.D.S.A, detengase o procedere a abrir fuego!!", NombreJugador(playerid));
		ProxDetector(30.0, playerid, string,-1,-1,-1,CHAT,CHAT2);
		format(string, sizeof(string), "��Alto, le habla E.D.S.A, detengase o procedere a abrir fuego!!");
		SetPlayerChatBubble(playerid,string,-1,60.0,5000);
	}
	return 1;
}
CMD:5(playerid, params[])
{
	if(!FaccLegal(playerid)) return Mensaje(playerid, -1, "Necesitas ser polic�a y estar de servicio.");
	AccionesRol(playerid,"toma su radio de su cintur�n t�ctico y procede hablar por el mismo.", 20);
	return 1;
}
CMD:6(playerid, params[])
{
	if(!FaccLegal(playerid))  return Mensaje(playerid, -1, "Necesitas ser polic�a y estar de servicio.");
	AccionesRol(playerid,"toma al s�jeto del brazo, seguidamente lo lleva hacia la patrulla", 20);
	AccionesRol(playerid,"abre la puerta de la patrulla y lo mete dentro, acto seguido cierra la puerta.", 20);
	return 1;
}
CMD:macros(playerid, params[])
{
	if(!FaccLegal2(playerid)) return Mensaje(playerid, -1, "Necesitas ser polic�a y estar de servicio.");
	MostrarDialog(playerid, DIALOG_INFO, DIALOG_STYLE_MSGBOX, "Macros para facciones legales",""CB"�Hola Agente de {3399FF} legal!\n "CB"Estos son los {3399FF}macros"CB" puedes utilizar para llevar acabo tus roles:\n{3399FF}(/1):"CB" Rol para esposar s�jeto, {3399FF}(/2):"CB" Rol para revisar s�jeto, {3399FF}(/3):"CB" Rol para hablar meg�fono.\n {3399FF}(/4):"CB" Rol para advertir mientras corres, {3399FF}(/5):"CB" Rol para hablar por la radio de polic�a, {3399FF}(/6):"CB" Rol para subir al s�jeto a la patrulla.","Cerrar","");
	return 1;
}
CMD:arrestar(playerid, params[])
{
	new string[126];
	new ID, patrulla, Float:x, Float:y, Float:z;
	patrulla = GetPlayerVehicleID(playerid);
	if(sscanf(params, "d", ID))return Mensaje(playerid,COLORCARGO0,"Uso: /arrestar [ID]");
	if(!IsPlayerConnected(ID)) return Mensaje(playerid,COLORCARGO0,"Jugador desconectado o id incorrecta.");
	if(!FaccLegal(playerid)) return Mensaje(playerid, COLORCARGO0, "No est�s autorizado para usar este comando.");
	if(VariableCaido[ID] != 1 && Esposando[ID] != 2) return Mensaje(playerid,COLORCARGO0,"El sospechoso no esta esposado o abatido.");
	if(PlayerInfo[ID][pCargos] == 0) return Mensaje(playerid,-1,"Este jugador no tiene nivel de busqueda.");
	if(!IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid,-1,"Debes estar en una patrulla o helicoptero policial.");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Mensaje(playerid,-1,"Debes estar conduciendo la patrulla.");
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2 && !SAPD(patrulla) && !EDSA(patrulla)) return Mensaje(playerid,-1,"Debes estar en una patrulla o helicoptero policial.");
	GetPlayerPos(ID, x,y,z);
	if(EstaEn(playerid, 40.0,  x, y,z))
	{
		if(!IsVehicleSeatInUse(patrulla,2))
		{
			PutPlayerInVehicleAC(ID, patrulla, 2);
			SetPlayerArmedWeapon(ID, 0);
			BajandoV[ID] = 0;
			EnAuto[ID] = patrulla;
			EnPatrulla[ID] = 1;
			VariableCaido[ID] = 0;
			CongelarEx(ID);
			format(string, sizeof(string), "%s %s sube al detenido a su patrullero.", RangoPolicia(playerid),NombreJugador(playerid));
			ProxDetector(30.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
			MarcarJugador(playerid,COLORCARGO7,1);
			KillTimer(TimerEncerrar[ID]);
			return 1;
		}
		if(!IsVehicleSeatInUse(patrulla,3))
		{
			PutPlayerInVehicleAC(ID, patrulla, 3);
			SetPlayerArmedWeapon(ID, 0);
			BajandoV[ID] = 0;
			EnAuto[ID] = patrulla;
			EnPatrulla[ID] = 1;
			VariableCaido[ID] = 0;
			CongelarEx(ID);
			format(string, sizeof(string), "%s %s sube al detenido a su patrullero.", RangoPolicia(playerid),NombreJugador(playerid));
			ProxDetector(30.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
			MarcarJugador(playerid,COLORCARGO7,1);
			KillTimer(TimerEncerrar[ID]);
			return 1;
		}
		else return Mensaje(playerid, -1,"Ya no puede subir a nadie mas a tu patrulla.");
	}
	else Mensaje(playerid, -1, "No estas cerca de ese jugador.");
	return 1;
}

CMD:entrar(playerid, params[])
{
    if(PlayerInfo[playerid][pTiempoJail] == 0 && PlayerInfo[playerid][pTiempoCarcel] == 0)
    {
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return VehicleKey(playerid);
		EntrarF(playerid);
		if(EstaEn(playerid, 2.0, 1204.8096,12.6643,1000.9219) && GetPlayerVirtualWorld(playerid) == 5) return MenuBailarinas(playerid);
  	}
	else Mensaje(playerid, -1, "No puedes hacer esto si estas en prisi�n.");
	return 1;
}

CMD:salir(playerid, params[])
{
    if(PlayerInfo[playerid][pTiempoJail] == 0 && PlayerInfo[playerid][pTiempoCarcel] == 0)
	{
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return VehicleKey(playerid);
		SalirF(playerid);
	}
	else Mensaje(playerid, -1, "No puedes hacer esto si estas en prisi�n.");
	return 1;
}



CMD:trabajo(playerid, params[])
{
	new item[21];
	if(IsPlayerInAnyVehicle(playerid)) return 1;
	if(FaccLegal(playerid)) return Mensaje(playerid,-1, "No puedes obtener un trabajo estando de servicio.");
	if(!sscanf(params, "s[20]", item))
	{
		if(strcmp(item, "Medico", true) == 0) DarTrabajo(playerid, MEDICO);
		else if(strcmp(item, "Pescador", true) == 0) DarTrabajo(playerid, PESCADOR);
		else if(strcmp(item, "Minero", true) == 0) DarTrabajo(playerid, MINERO);		
		else if(strcmp(item, "Armero", true) == 0 || strcmp(item, "fabricante-de-armas", true) == 0) DarTrabajo(playerid, ARMERO);
		else if(strcmp(item, "Camionero", true) == 0) DarTrabajo(playerid, CAMIONERO);
		else if(strcmp(item, "guardaespaldas", true) == 0 || strcmp(item, "guardaespalda", true) == 0) DarTrabajo(playerid, GUARDAESPALDAS);
		else if(strcmp(item, "transportista", true) == 0) DarTrabajo(playerid, TRANSPORTISTA);
		else if(strcmp(item, "basurero", true) == 0) DarTrabajo(playerid, BASURERO);
		else if(strcmp(item, "mecanico", true) == 0) DarTrabajo(playerid, MECANICO);
		else if(strcmp(item, "taxi", true) == 0 || strcmp(item, "taxista", true) == 0) DarTrabajo(playerid, TAXISTA);
		else if(strcmp(item, "criminal", true) == 0) DarTrabajo(playerid, CRIMINAL);
		else if(strcmp(item, "prostitucion", true) == 0) DarTrabajo(playerid, PROSTITUTA);
	}
	else Mensaje(playerid, COLORCARGO0, "Modo de uso "CR"/trabajo [nombre]");
	return 1;
}

CMD:uniforme(playerid, params[])
{
	new texto[10];
	if(!sscanf(params,"s[10]",texto))
	{
		if(strcmp(texto, "medico", true) == 0)
		{
			if(TieneTrabajo(playerid, MEDICO))
			{
				if(EstaEn(playerid,1.0,1159.4829,-1356.8820,-10.7922) || EstaEn(playerid,1.0,-2730.0010,614.3734,1385.6547) || EstaEn(playerid,1.0,1234.7531,-830.0230,1164.2759))
				{
					if(RopaMedi[playerid] == 0)
					{
						new uni;
					    switch(PlayerInfo[playerid][jSexo])
						{
							case 2: SetPlayerSkin(playerid,308),uni = 1;
							default:
							{
								if(EstaEn(playerid,1.0,1159.4829,-1356.8820,-10.7922)) SetPlayerSkin(playerid,276),uni = 1;
								else if(EstaEn(playerid,1.0,-2730.0010,614.3734,1385.6547)) SetPlayerSkin(playerid,275),uni = 2;
								else if(EstaEn(playerid,1.0,1234.7531,-830.0230,1164.2759)) SetPlayerSkin(playerid,274),uni = 3;
							}
						}
						RopaMedi[playerid] = uni;
						Mensaje(playerid,-1,"Te has colocado el uniforme correctamente.");
					}
					else if(RopaMedi[playerid] > 0)
					{
						RopaMedi[playerid] = 0;
						SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]);
						Mensaje(playerid,-1,"Te has quitado el uniforme correctamente.");
						LimpiarMarker(playerid);
					}
				}
			}
			else return Mensaje(playerid,-1,"Necesitas el trabajo de m�dico para utilizar este comando.");
		}
		if(strcmp(texto, "minero", true) == 0)
		{
			if(TieneTrabajo(playerid, MINERO))
			{
				if(EstaEn(playerid,1.0,269.1445,295.4604,999.8400))
				{
					if(RopaMine[playerid] == 0)
					{
					    RopaMine[playerid] = 1;
						Mensaje(playerid,-1,"Te has colocado el uniforme correctamente.");
           			    switch(PlayerInfo[playerid][jSexo])
						{
						    case 2: SetPlayerSkin(playerid, 131);
							default: SetPlayerSkin(playerid, 27);
						}
					}
					else if(RopaMine[playerid] == 1)
					{
						RopaMine[playerid] = 0;
						SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]);
						Mensaje(playerid,-1,"Te has quitado el uniforme correctamente.");
					}
				}
			}
			else return Mensaje(playerid,-1,"Necesitas el trabajo de minero para utilizar este comando.");
		}
	}
	if(strcmp(texto, "militar",	true) == 0)
	{
		if(PlayerInfo[playerid][jMiembro] != 2) return 1;
		if(!EstaEn(playerid,2.0,219.2500,69.6230,1005.0391)) return Mensaje(playerid, COLORCARGO0, "No est�s en el lugar adecuado.");
		if(PlayerInfo[playerid][suspendido] == 0)
		{
			if(PlayerInfo[playerid][pDutyM] == 0)
			{
				switch(PlayerInfo[playerid][jSexo])
				{
					case 1:{ UniformeM[playerid][0] = 179; UniformeM[playerid][1] = 287; UniformeM[playerid][2] = 311; UniformeM[playerid][3] = 309; }
					case 2:{ UniformeM[playerid][0] = 179; UniformeM[playerid][1] = 287; UniformeM[playerid][2] = 311; UniformeM[playerid][3] = 309; }
				}
				MostrarMenu(playerid,7);
			}
			else
			{
				PlayerInfo[playerid][pDutyM] = 0;
				Mensaje(playerid, COLORCARGO0, "Te sacaste el uniforme de militar.");
				SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]);
				TimerWeapons[playerid] = gettimeVariable + 3;
				ResetPlayerWeapons(playerid);
				DarArmas(playerid);
				SetPlayerColor(playerid,COLORCARGO0);
				LimpiarMarker(playerid);
				
			}
		}
		else return Mensaje(playerid, COLORCARGO0, "No puedes usar tu uniforme de polic�a mientras te encuentres suspendido.");
 	}
	if(strcmp(texto, "policia",	true) == 0)
	{
		if(PlayerInfo[playerid][jMiembro] != 1) return 1;
		if(!EstaEn(playerid,2.0,254.0884,73.6973,1003.6406)) return Mensaje(playerid, COLORCARGO0, "No est�s en el lugar adecuado.");
		if(PlayerInfo[playerid][suspendido] == 0)
		{
			if(PlayerInfo[playerid][pDuty] == 0)
			{
				switch(PlayerInfo[playerid][jSexo])
				{
					case 1:
					{
					    if(PlayerInfo[playerid][pRango] == 1) { UniformeM[playerid][0] = 71; UniformeM[playerid][1] = 280; UniformeM[playerid][2] = 266; UniformeM[playerid][3] = 265; }
						if(PlayerInfo[playerid][pRango] == 2) { UniformeM[playerid][0] = 267; UniformeM[playerid][1] = 300; UniformeM[playerid][2] = 265; UniformeM[playerid][3] = 281; }
						if(PlayerInfo[playerid][pRango] == 3) { UniformeM[playerid][0] = 282; UniformeM[playerid][1] = 284; UniformeM[playerid][2] = 266; UniformeM[playerid][3] = 300; }
						if(PlayerInfo[playerid][pRango] > 3 && PlayerInfo[playerid][pRango] < 8) { UniformeM[playerid][0] = 310; UniformeM[playerid][1] = 311; UniformeM[playerid][2] = 288; UniformeM[playerid][3] = 282; }
						if(PlayerInfo[playerid][pRango] == 8) { UniformeM[playerid][0] = 283; UniformeM[playerid][1] = 285; UniformeM[playerid][2] = 302; UniformeM[playerid][3] = 305; }
					}
					case 2: { UniformeM[playerid][0] = 211; UniformeM[playerid][1] = 306; UniformeM[playerid][2] = 307; UniformeM[playerid][3] = 309; }
				}
				MostrarMenu(playerid,7);
			}
			else
			{
				MensajeDiscord(NombreJugador(playerid), "Sale en 10-07 desde la comisaria mas cercana", WEBHOOK_ACTIVIDAD_SAPD);
				frecuencias[Frecuencia[playerid]]--;
			    Frecuencia[playerid] = 0;
				PlayerInfo[playerid][pDuty] = 0;
				Mensaje(playerid, COLORCARGO0, "Te sacaste el uniforme de polic�a.");
				SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]);
				if(PlayerInfo[playerid][pWP1] == 3) QuitarArma(playerid, 3);
				TimerWeapons[playerid] = gettimeVariable + 3;
				ResetPlayerWeapons(playerid);
				DarArmas(playerid);
				SetPlayerColor(playerid,COLORCARGO0);
				LimpiarMarker(playerid);
			}
		}
		else return Mensaje(playerid, COLORCARGO0, "No puedes usar tu uniforme de polic�a mientras te encuentres suspendido.");
 	}
	return 1;
}

static FuncDejarRoca(playerid)
{
	if(!EstaEn(playerid, 10.0, -548.2949,2336.7649,83.4777)) return Mensaje(playerid, -1, "No estas en el lugar adecuado.");
	{
		new rocasxd = random(4);
		switch(rocasxd)
		{
			case 0: { RocasM[playerid][0] = rocajugador[playerid];  RocasM[playerid][1] = 11392; RocasM[playerid][2] = 11392; RocasM[playerid][3] = 11392; }
			case 1: { RocasM[playerid][0] = 11392; RocasM[playerid][1] = rocajugador[playerid];  RocasM[playerid][2] = 11392; RocasM[playerid][3] = 11392; }
			case 2: { RocasM[playerid][0] = 11392; RocasM[playerid][1] = 11392; RocasM[playerid][2] = rocajugador[playerid];  RocasM[playerid][3] = 11392; }
			case 3: { RocasM[playerid][0] = 11392; RocasM[playerid][1] = 11392; RocasM[playerid][2] = 11392; RocasM[playerid][3] = rocajugador[playerid];  }
		}
		return MostrarMenu(playerid,6);
	}
}

CMD:dejar(playerid,params[])
{
	new item[32],ID,string[128];
	if(!sscanf(params,"s[32]", item))
	{
		if(strcmp(item, "roca",true)==0)
		{
            FuncDejarRoca(playerid);
		}
		if(strcmp(item, "trabajo",true)==0)
		{
			for(new i; i < MAX_TRABAJOS_VIP3; i++)
			{
				if(PlayerInfo[playerid][Trabajo][i] > 0)
				{
					format(string,128,"Utiliza "CR"/dejar trabajo %d"CB" para dejar el trabajo de %s", PlayerInfo[playerid][Trabajo][i], NombreTrabajo(PlayerInfo[playerid][Trabajo][i]));
					Mensaje(playerid,-1,string);
				}
			}
		}
	}
	if(!sscanf(params,"s[32]d", item, ID))
	{
		if(strcmp(item, "trabajo",true) == 0)
		{
			if(ID > 0)
			{
				for(new i; i < MAX_TRABAJOS_VIP3; i++)
				{
					if(PlayerInfo[playerid][Trabajo][i] == ID)
					{
						format(string,128,"Has abandonado el trabajo de "CR"%s", NombreTrabajo(PlayerInfo[playerid][Trabajo][i]));
						Mensaje(playerid, -1, string);
						if(PlayerInfo[playerid][Trabajo][i] == MEDICO) 	{ RopaMedi[playerid] = 0; }
						if(PlayerInfo[playerid][Trabajo][i] == BASURERO)  { RopaBasu[playerid] = 0; }
						if(PlayerInfo[playerid][Trabajo][i] == MECANICO)  { RopaMeca[playerid] = 0; }
						if(PlayerInfo[playerid][Trabajo][i] == MINERO)	{ RopaMine[playerid] = 0; }
						PlayerInfo[playerid][Trabajo][i] = 0;
						SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]);
						LimpiarMarker(playerid);
					}
				}
			}
			
		}
	}
	return 1;
}

CMD:forzar(playerid, params[])
{
	new item[10];
	if(!sscanf(params,"s[10]",item))
	{
		if(strcmp(item, "cerradura", true) == 0)
		{
			if(PlayerInfo[playerid][jNivel] < 5 && PlayerInfo[playerid][VIP] == 0) return Mensaje(playerid,-1,"Necesitas ser nivel 5 o VIP para forzar una cerradura.");
			if(IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid,-1,"No puedes hacer esto en un veh�culo.");
			if(PlayerInfo[playerid][pNivelLadron] == 1 && PlayerInfo[playerid][jMartillo] == 0) Mensaje(playerid,-1,"Necesitas un martillo.");
	      	else if(PlayerInfo[playerid][pNivelLadron] == 2 && PlayerInfo[playerid][jBarreta] == 0) return Mensaje(playerid,-1,"Necesitas una Barreta.");
			else if(PlayerInfo[playerid][pNivelLadron] >= 3 && PlayerInfo[playerid][jDestornillador] == 0) return Mensaje(playerid,-1,"Necesitas un Destornillador.");
           	if(EstaEn(playerid, 2.0,-2277.1763,-9.9763,38.2523) || EstaEn(playerid, 2.0,932.2239,1973.6547,11.6083) || EstaEn(playerid, 2.0,-2393.9712,-13.1641,35.3125) || EstaEn(playerid, 2.0,2373.8467,-1139.5442,30.0510) || EstaEn(playerid, 2.0,-2727.5435,-50.9449,7.0301) || EstaEn(playerid, 2.0,-2727.5054,-155.6168,7.2009) || EstaEn(playerid, 2.0,1762.8772,-2101.1462,13.9916) || EstaEn(playerid, 2.0,2485.1733,-1997.1724,13.9166) || EstaEn(playerid, 2.0,1844.5101,770.9579,11.4838) || EstaEn(playerid, 2.0,-1448.9193,2647.9514,56.4912) || EstaEn(playerid, 2.0,1344.6938,2610.3264,11.5494) || EstaEn(playerid, 2.0,1666.2400, 2610.7400, 10.4000))
 			{
				new puertas = random(4);
				switch(puertas)
				{
					case 0: CasaRobo[playerid][0] = 1506,CasaRobo[playerid][1] = 11392,CasaRobo[playerid][2] = 11392,CasaRobo[playerid][3] = 11392;
					case 1: CasaRobo[playerid][0] = 11392,CasaRobo[playerid][1] = 1506,CasaRobo[playerid][2] = 11392,CasaRobo[playerid][3] = 11392;
					case 2: CasaRobo[playerid][0] = 11392,CasaRobo[playerid][1] = 11392,CasaRobo[playerid][2] = 1506,CasaRobo[playerid][3] = 11392;
					case 3: CasaRobo[playerid][0] = 11392,CasaRobo[playerid][1] = 11392,CasaRobo[playerid][2] = 11392,CasaRobo[playerid][3] = 1506;
				}
				return MostrarMenu(playerid,1);
			}
		}
	}
	return 1;
}

static ComprarMotor(playerid)
{
	if(EstaEn(playerid,3.0,1105.0314,1311.0266,10.5623) || EstaEn(playerid,3.0,1106.4525,1302.7540,10.5623) || EstaEn(playerid,3.0,1105.1276,1293.6375,10.5623) || EstaEn(playerid,3.0,1108.9133,1277.0665,10.5623))
	{
		if(PlayerInfo[playerid][Credits] < 15) return Mensaje(playerid,-1,"No tienes 15 "Moneda3".");
		if(EnCombate[playerid] == 1) return Mensaje(playerid,-1,"No puedes hacer esto estando en combate.");
		if(PlayerInfo[playerid][pCargos] > 0) return Mensaje(playerid,-1,"No puedes hacer esto si la polic�a te esta buscando.");
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Mensaje(playerid, -1, "No est�s en un veh�culo.");
		new v = GetPlayerVehicleID(playerid);
		if(GetPlayerVehicle(playerid,v) == -1) return Mensaje(playerid, -1, "No puedes modificar �ste veh�culo.");
		new string[260];
		format (string, sizeof string, ""CB"Mejorar el motor al veh�culo "CR"%s"CB".\nEsta mejora tiene un costo de 15 {FCFF2B}Coins{FFFFFF}.\n\nObtendr�s mas aceleraci�n y velocidad en tu veh�culo.",GetVehicleName(v));
		MostrarDialog(playerid, MEJORA_MOTOR, DIALOG_STYLE_MSGBOX, "Mejora de motor", string, "Mejorar", "Salir");

		return 1;
	}
	return 1;
}

CMD:comprar(playerid, params[])
{
	new item[17]/*,idjugador*/;
	if(IsPlayerConnected(playerid))
	if(!sscanf(params, "s[17]", item))
	{
		if(strcmp(item,"estacionamiento",true) == 0)
	 	{
 	    	for(new e = 0; e < sizeof(InfoEst); e++)
    		{
				if(EstaEn(playerid,2.0,InfoEst[e][estX], InfoEst[e][estY], InfoEst[e][estZ]))
				{
				    if(InfoEst[e][estDuenoID] == PlayerInfo[playerid][p_DBID]) return Mensaje(playerid, COLOR_BLANCO, "No puedes comprar un estacionamiento que ya es tuyo.");
				    if(CuantoEstacio(playerid) >= 2) return Mensaje(playerid, COLOR_BLANCO, "Ya no puedes comprar mas estacionamientos.");
			    	if(InfoEst[e][estNivel] > PlayerInfo[playerid][jNivel]) return Mensaje(playerid, COLOR_BLANCO, "No tienes el nivel necesario para comprar el estacionamiento.");
        	        if(InfoEst[e][estValor] > PlayerInfo[playerid][jDinero]) return Mensaje(playerid, COLOR_BLANCO, "No tienes el dinero necesario para comprar el estacionamiento.");
					new string[100];
					format(string, sizeof(string), "�Felicitaciones! Compraste el estacionamiento, para mas informaci�n visita nuestro discord.", InfoEst[e][estValor]);
					Mensaje(playerid, -1, string);
					if(strcmp(InfoEst[e][estDuenoN], "Nadie", true))
		            {
		                new paga = InfoEst[e][estValor]/2;
		                new newpaga = paga*90/100;
		                new iddueno = GetPlayerID(InfoEst[e][estDuenoN]);
	  					if(iddueno == -1)
						{
							mysql_format(Conecction, string, sizeof(string), "UPDATE `usuarios` SET `Banco`=Banco+'%d' WHERE `ID`='%d'", newpaga, InfoEst[e][estDuenoID]);
							mysql_tquery(Conecction, string);
						}
						else
						{
							PlayerInfo[iddueno][pBanco] = PlayerInfo[iddueno][pBanco]+newpaga;
							Mensaje(iddueno, -1, "Acaban de comprar tu estacionamiento, se ha hecho una transferencia a tu cuenta bancaria.");
							Mensaje(iddueno, -1, "El banco cobr� el 10 porciento de la venta por la transacci�n ");
						}
		            }
					InfoEst[e][estDuenoID] = PlayerInfo[playerid][p_DBID];
					strmid(InfoEst[e][estDuenoN],  NombreJugador(playerid), 0, strlen(NombreJugador(playerid)), 24);
					QuitarDinero(playerid, InfoEst[e][estValor]);
					InfoEst[e][estValor] = InfoEst[e][estValor]*2;
					InfoEst[e][estNivel] += 1;
					BorrarLabelEstaciona(e);
					GuardarEstaciona(e);
					CargarEstaciona(e);
				}
			}
	 	}
		else if(strcmp(item,"entrada",true) == 0)
		{
	    	if(EstaEn(playerid,4.5,-1253.2917,2116.7095,1246.5457))
	    	{
	        	if(Alquilado == true)
	        	{
	            	if(PlayerInfo[playerid][jNivel] >= NivelSalon)
	            	{
	            		if(Boleto[playerid] == false)
            			{
	            	    	if(PlayerInfo[playerid][jDinero] < PrecioSalon) return Mensaje(playerid,-1,"No tienes suficiente dinero para comprar una entrada."); //Cambiar GetPlayerMoney
	                    	Boleto[playerid] = true;
	                    	Mensaje(playerid,-1,"Compraste una entrada.");
	                    	QuitarDinero(playerid,PrecioSalon);
	                    	Personas ++;
	            		}
	            		else Mensaje(playerid,-1,"Ya tienes una entrada.");
	            	}
	            	else Mensaje(playerid,-1,"No tienes el nivel necesario para entrar al sal�n.");
	        	}
	        	else Mensaje(playerid,-1,"No hay un evento en este momento.");
	    	}
	    	else if(EstaEn(playerid,2.5,1101.2697,1613.1414,12.5469))
	    	{
	    	    if(HabilitarCarreras == 0) return Mensaje(playerid,-1,"La boleter�a est� cerrada.");
	    	    if(EntradaCarrera[playerid] == true) return Mensaje(playerid,-1,"Ya tienes una entrada.");
	    	    if(PlayerInfo[playerid][jDinero] < 600) return Mensaje(playerid,-1,"Necesitas "CR"$600"CB" parar comprar una entrada.");
	    	    QuitarDinero(playerid,600);
	    	    EntradaCarrera[playerid] = true;
	    	    Mensaje(playerid,-1,""CR"Compraste una entrada"CB", ya puedes ingresar al estadio.");
				return 1;
	    	}
		}
		else if(strcmp(item,"semillas",true) == 0)
		{
	    	if(EstaEn(playerid,3.0,-1072.1710,-1202.1224,129.2188) || EstaEn(playerid,3.0,-1103.5033,-1620.6311,76.3672))
	    	{
                if(PlayerInfo[playerid][jDinero] < 1500) return Mensaje(playerid,-1,"Necesitas "CR"$1.500"CB" para poder comprar 50 semillas de marihuana.");
                PlayerInfo[playerid][pSemillas] += 50;
				QuitarDinero(playerid, 1500);
				Mensaje(playerid, -1, "Compraste 50 semillas de marihuana, ahora puedes "CR"/sembrar"CB".");
				return 1;
	    	}
		}
		else if(strcmp(item,"motor",true) == 0) //comprar motor
		{
	    	ComprarMotor(playerid);
		}
		
		else if(strcmp(item,"caja",true) == 0)
		{
	    	if(EstaEn(playerid,3.0,93.7855,-305.2337,1.5781))
	    	{
	    	    if(Objeto[playerid] > 0) return Mensaje(playerid,-1,"Ya tienes un objeto en tu inventario.");
                if(PlayerInfo[playerid][jDinero] < 1560) return Mensaje(playerid,-1,"Necesitas "CR"$1.560"CB" para poder comprar una caja de aquarius de 12 unidades.");
	            SetPlayerAttachedObject(playerid, 4, 2969, 6, 0.137999,0.039999,-0.168998,66.699996,-162.999877,-95.900085,0.533998,0.622999,0.756998);
				Objeto[playerid] = 10000;
				QuitarDinero(playerid, 1560);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
				Mensaje(playerid, -1, "Compraste una caja de aquarius de 12 unidades por "CR"$1.560"CB".");
				Mensaje(playerid, -1, "Puedes guardarla usando "CR"/baul guardar objeto"CB" o tirarla con "CR"/tirar objeto"CB".");
				return 1;
	    	}
	    	else if(EstaEn(playerid,3.0,93.7853,-309.5841,1.5781))
	    	{
	    	    if(Objeto[playerid] > 0) return Mensaje(playerid,-1,"Ya tienes un objeto en tu inventario.");
                if(PlayerInfo[playerid][jDinero] < 600) return Mensaje(playerid,-1,"Necesitas "CR"$600"CB" para poder comprar una caja de vino de 12 unidades.");
	            SetPlayerAttachedObject(playerid, 4, 2969, 6, 0.137999,0.039999,-0.168998,66.699996,-162.999877,-95.900085,0.533998,0.622999,0.756998);
				Objeto[playerid] = 10001;
				QuitarDinero(playerid, 600);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
				Mensaje(playerid, -1, "Compraste una caja de vino de 12 unidades por "CR"$600"CB".");
				Mensaje(playerid, -1, "Puedes guardarla usando "CR"/baul guardar objeto"CB" o tirarla con "CR"/tirar objeto"CB".");
				return 1;
	    	}
	    	else if(EstaEn(playerid,3.0,93.7853,-313.7030,1.5781))
	    	{
	    	    if(Objeto[playerid] > 0) return Mensaje(playerid,-1,"Ya tienes un objeto en tu inventario.");
                if(PlayerInfo[playerid][jDinero] < 480) return Mensaje(playerid,-1,"Necesitas "CR"$480"CB" para poder comprar una caja de cerveza de 12 unidades.");
	            SetPlayerAttachedObject(playerid, 4, 2969, 6, 0.137999,0.039999,-0.168998,66.699996,-162.999877,-95.900085,0.533998,0.622999,0.756998);
				Objeto[playerid] = 10002;
				QuitarDinero(playerid, 480);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
				Mensaje(playerid, -1, "Compraste una caja de cerveza de 12 unidades por "CR"$480"CB".");
				Mensaje(playerid, -1, "Puedes guardarla usando "CR"/baul guardar objeto"CB" o tirarla con "CR"/tirar objeto"CB".");
				return 1;
	    	}
	    	else if(EstaEn(playerid,3.0,86.0509,-315.2853,1.8494))
	    	{
	    	    if(Objeto[playerid] > 0) return Mensaje(playerid,-1,"Ya tienes un objeto en tu inventario.");
                if(PlayerInfo[playerid][jDinero] < 480) return Mensaje(playerid,-1,"Necesitas "CR"$480"CB" para poder comprar una caja de sprunk de 12 unidades.");
	            SetPlayerAttachedObject(playerid, 4, 2969, 6, 0.137999,0.039999,-0.168998,66.699996,-162.999877,-95.900085,0.533998,0.622999,0.756998);
				Objeto[playerid] = 10003;
				QuitarDinero(playerid, 480);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
				Mensaje(playerid, -1, "Compraste una caja de sprunk de 12 unidades por "CR"$480"CB".");
				Mensaje(playerid, -1, "Puedes guardarla usando "CR"/baul guardar objeto"CB" o tirarla con "CR"/tirar objeto"CB".");
				return 1;
	    	}
		}
		else if(strcmp(item,"nivel",true)==0)
		{
			if(PlayerInfo[playerid][jNivel] >= 1)
			{
				new infostring[128];
				if(PlayerInfo[playerid][jExperiencia] < PlayerInfo[playerid][NivelExp])
				{
					format(infostring, 128, "Necesitas {F4FA58}%d"CB" puntos de respeto para subir de nivel, actualmente tienes %d",PlayerInfo[playerid][NivelExp],PlayerInfo[playerid][jExperiencia]);
					Mensaje(playerid, COLOR_BLANCO, infostring);
					return 1;
				}
				else
				{
					if(PlayerInfo[playerid][jDinero] < PlayerInfo[playerid][PrecioNivel])
					{
						format(infostring,128,"Necesitas "CR"$%s"CB" para comprar este nivel",ConvertirNumero(PlayerInfo[playerid][PrecioNivel]));
						return Mensaje(playerid,-1,infostring);
					}
					ShowTDN(playerid, "~p~Felicidades~w~, aumentaste un nivel. Ahora tu pago diario ser� mayor.");
					PlayerInfo[playerid][jNivel]++;
					if(PlayerInfo[playerid][jNivel] == 7)
					{
						new Queri[200];
						mysql_format(Conecction, Queri, sizeof(Queri), "SELECT referidos.JugadorRefiriendo, usuarios.Username FROM referidos INNER JOIN usuarios ON referidos.JugadorRefiriendo = usuarios.ID WHERE JugadorReferido = '%d' LIMIT 1", PlayerInfo[playerid][p_DBID]);
						mysql_tquery(Conecction, Queri, "NivelReferido", "d", playerid);

					}
					SetPlayerScore(playerid, PlayerInfo[playerid][jNivel]);
					PlayerInfo[playerid][jExperiencia] = 0;
					QuitarDinero(playerid, PlayerInfo[playerid][PrecioNivel]);
					Actualizar(playerid);
                    RevisarLogro(playerid,0);
					return 1;
				}
			}
			return 1;
		}
		else if(strcmp(item, "objetos",true)==0)
		{
			if(EstaEn(playerid,5.0,196.3872,-231.1294,1.7786)) MostrarDialog(playerid,OBJETOS1, DIALOG_STYLE_LIST,"Listado de Objetos En Venta",""CB"Guitarra - "CR"$5.600"CB"\n"CB"Tabla de Surf T1 - "CR"$5.500"CB"\n"CB"Maletin - "CR"$4.500"CB"\n"CB"Tabla de Surf T2 - "CR"$5.000"CB"\n"CB"Bajo (Instrumento Musical) - "CR"$4.200","Comprar","Cancelar");
		}
		else if(strcmp(item, "herramientas",true)==0 || strcmp(item, "ferramentas",true)==0 || strcmp(item, "ferramenta",true)==0)
		{
			if(EstaEn(playerid,5.0,-1072.1169,354.2132,1180.5259) || EstaEn(playerid,5.0,2431.6504,-1777.9565,13.5516)) return MostrarDialog(playerid,HERRAMIENTAS, DIALOG_STYLE_LIST,"Herramientas",""CB"Martillo - "CR"$20"CB"\n"CB"Destornillador - "CR"$25"CB"\n"CB"Barreta - "CR"$60"CB"\n"CB"Balde - "CR"$120","Comprar","Cancelar");
		}
		else if(strcmp(item, "licencia",true)==0)
		{
			if(EstaEn(playerid,5.0,1162.5385,-2.6774,1020.6459)) return MostrarDialog(playerid, COMPRARLICENCIA, DIALOG_STYLE_MSGBOX, "Licencia de piloto", "El costo de la licencia de piloto es de 10 "Moneda1" y no tiene vigencia.\n(( Si usan los helicopteros de forma indebida, se les quitar� la licencia y no se les regresar� el dinero invertido))", "Comprar","Cancelar");
		}
		else if(strcmp(item, "boleto",true)==0 || strcmp(item, "passagem",true)==0)
		{
			if(!EnEstacionTren(playerid)) return Mensaje(playerid, -1, "No puedes comprar boletos en este lugar.");
			if(PlayerInfo[playerid][jDinero] < 100) return Mensaje(playerid, -1, "No tienes el dinero para comprar un boleto ("CR"100$"CB").");
			Mensaje(playerid, -1, "Gracias por comprar un boleto de tren, solo es valido para un viaje.");
			QuitarDinero(playerid,100);
			Boletos[playerid] = 1;
			return 1;
		}
		else if(strcmp(item, "pizza",true)==0)
		{
			if(EstaEn(playerid,5.0,173.1344,1427.7749,10.5912))
			{
				if(PlayerInfo[playerid][jDinero] < 100) return Mensaje(playerid,-1,"Necesitas "CR"$100"CB" para poder comprar una porci�n de pizza.");
	            DarPizza(playerid);
				QuitarDinero(playerid, 100);
				AccionesRol(playerid,"compr� una porci�n de pizza.", 20);
				Mensaje(playerid, -1, "Presiona "CR"'Y'"CB" para comer.");
				return 1;
			}
		}
		else if(strcmp(item, "sprunk",true)==0)
		{
			if(EstaEn(playerid,5.0,498.6868,-76.0385,998.7578) || EstaEn(playerid,5.0,-225.1540,1404.1327,27.7734) || EstaEn(playerid,5.0,499.8982,-20.6732,1000.6797))
			{
				if(PlayerInfo[playerid][jDinero] < 70) return Mensaje(playerid,-1,"Necesitas "CR"$70"CB" para poder comprar una sprunk.");
				DarSprunk(playerid);
				QuitarDinero(playerid, 70);
				Mensaje(playerid, -1, "Compraste un vaso de sprunk por "CR"70$"CB". Presiona "CR"'Y'"CB" para beber.");
				return 1;
			}
			if(EstaEn(playerid,5.0,1161.3102,-7.5683,1020.6459) || EstaEn(playerid,5.0,-19.4871,-180.4452,1007.7656) || EstaEn(playerid,5.0,-2706.5872,642.0862,1385.6547) || EstaEn(playerid,5.0,1238.7804,-807.9684,1167.9960) || EstaEn(playerid,5.0,-404.43790, -1433.28833, 25.81980) || EstaEn(playerid,5.0,-392.41141, 2244.42090, 42.52640) || EstaEn(playerid,5.0,365.3715,165.4839,1040.1156) || EstaEn(playerid,5.0,164.9628,1250.7468,23.1031) || EstaEn(playerid,5.0,1155.5963,-1357.5933,-10.7922) || EstaEn(playerid,5.0,172.1788,1431.5389,10.5912) || EstaEn(playerid,5.0,229.6400,141.6814,1003.0234) || EstaEn(playerid,5.0,251.6611,111.4811,1003.2188) || EstaEn(playerid,5.0,1349.7432,2214.1816,12.0156))
			{
				if(PlayerInfo[playerid][jDinero] < 65) return Mensaje(playerid,-1,"Necesitas "CR"$65"CB" para poder comprar una sprunk.");
				DarSprunk(playerid);
				QuitarDinero(playerid, 65);
				Mensaje(playerid, -1, "Compraste un vaso de sprunk por "CR"65$"CB". Presiona "CR"'Y'"CB" para beber.");
				return 1;
			}
		}
		else if(strcmp(item, "vino",true)==0 || strcmp(item, "vinho",true)==0)
		{
			if(EstaEn(playerid,5.0,498.6868,-76.0385,998.7578) || EstaEn(playerid,5.0,-225.1540,1404.1327,27.7734) || EstaEn(playerid,5.0,499.8982,-20.6732,1000.6797))
			{
				if(PlayerInfo[playerid][jDinero] < 60) return Mensaje(playerid,-1,"Necesitas "CR"$60"CB" para poder comprar un vino.");
				DarVino(playerid);
				QuitarDinero(playerid, 60);
				Mensaje(playerid, -1, "Compraste un vino por "CR"60$");
				Mensaje(playerid, -1, "Presiona "CR"''Y'"CB" para beber.");
				return 1;
			}
		}
		else if(strcmp(item, "cerveza",true)==0 || strcmp(item, "cerveja",true)==0)
		{
			if(EstaEn(playerid,5.0,498.6868,-76.0385,998.7578) || EstaEn(playerid,5.0,-225.1540,1404.1327,27.7734) || EstaEn(playerid,5.0,499.8982,-20.6732,1000.6797))
			{
				if(PlayerInfo[playerid][jDinero] < 40) return Mensaje(playerid,-1,"Necesitas "CR"$40"CB" para poder comprar una cerveza.");
				DarCerveza(playerid);
				QuitarDinero(playerid, 40);
				Mensaje(playerid, -1, "Compraste una cerveza por "CR"40$");
				Mensaje(playerid, -1, "Presiona "CR"''Y'"CB" para beber.");
				return 1;
			}
		}
		else if(strcmp(item, "prenda",true)==0 || strcmp(item, "prendas",true)==0 || strcmp(item, "acessorio",true)==0 || strcmp(item, "acessorios",true)==0)
		{
			if(EstaEn(playerid,5.0,175.4841,-92.5689,1002.1417))
			{
				new prendas[17] =
				{18897,
				18899,
				18913,
				18917,
				18918,
				18939,
				18942,
				18943,
				18961,
				18962,
				18964,
				18974,
				18971,
				18972,
				18979,
				18976,
				19033};
				ShowModelSelectionMenuEx(playerid, prendas, 17, "Prendas", COMPRAPRENDAS, 16.0, 0.0, -55.0);
				PrendaMarcada[playerid] = 0;
				TipoPrenda[playerid] = 1;
				return 1;
			}
		}
		else if(strcmp(item, "Bidon",true)==0 || strcmp(item, "galao",true)==0 || strcmp(item, "gal�o",true)==0)
		{
			if(!EnGasolinera(playerid)) return Mensaje(playerid, -1, "El bid�n de combustible se vende en las estaciones de servicio.");
			if(Bidon[playerid] == 1) return Mensaje(playerid, -1, "Tu ya tienes un bidon de gasolina.");
			if(PlayerInfo[playerid][jDinero] < 65) return Mensaje(playerid, -1, "Necesitas "CR"$65"CB" para poder comprar un bid�n de 5 litros.");
			{
				QuitarDinero(playerid, 65);
				SetPlayerAttachedObject(playerid,4,1650,5,0.125999,0.011999,0.000000,-4.999999,-98.099983,16.600004,1.000000,1.000000,1.000000);
				Bidon[playerid] = 1;
				Mensaje(playerid, -1,"Compraste un bid�n con 5 litros de combustible por "CR"$65"CB". Para usarlo ingresa "CR"/cargar tanque");
				return 1;
			}
		}
		else if(strcmp(item,	"vehiculo", true) == 0 || strcmp(item,	"Veiculo", true) == 0) return ComproVehiculo(playerid);
		else if(strcmp(item,	"propiedad", true) == 0 || strcmp(item,	"propiedade", true) == 0)
		{
	        foreach(new c : Propiedades)
    	    {
       			if(EstaEn(playerid,1.5,PropInfo[c][pPosX],PropInfo[c][pPosY],PropInfo[c][pPosZ]))
       			{
       		    	if(PropInfo[c][pEnVenta] == 1)
        		    {
       	 		        if(PropInfo[c][pEnVentaPor] == 0 && PropInfo[c][pPrecio] > PlayerInfo[playerid][jDinero]) return Mensaje(playerid,-1,"No tienes suficiente dinero para comprar esta propiedad.");
         			    else if(PropInfo[c][pEnVentaPor] == 1 && PropInfo[c][pPrecio] > PlayerInfo[playerid][Moneda]) return Mensaje(playerid,-1,"No tienes suficientes "Moneda1" para comprar esta propiedad.");
         			    else if(PropInfo[c][pEnVentaPor] == 2 && PropInfo[c][pPrecio] > PlayerInfo[playerid][Credits]) return Mensaje(playerid,-1,"No tienes suficiente "Moneda4" para comprar esta propiedad.");
						if(PlayerInfo[playerid][jNivel] < PropInfo[c][pNivel]) return Mensaje(playerid,-1,"No tienes el nivel necesario para comprar esta propiedad.");
						if(ObtenerCasas(playerid) > PlayerInfo[playerid][VIP]) return va_SendClientMessage(playerid,-1,"S�lo puedes tener hasta %d propiedades con tu membres�a VIP actual.",PlayerInfo[playerid][VIP]+1);
						new hslot = SlotPropiedad(playerid),query[260];
						if(hslot != -1)
						{
							PlayerInfo[playerid][CasaID][hslot] = PropInfo[c][propiedad_ID];
							mysql_format(Conecction, query, sizeof(query),"UPDATE `usuarios` SET `CasaID%d`='%d' WHERE `ID`='%d'",hslot+1,PropInfo[c][propiedad_ID],PlayerInfo[playerid][p_DBID]);
							mysql_tquery(Conecction, query);
							switch(PropInfo[c][pEnVentaPor])
							{
							    case 0: QuitarDinero(playerid,PropInfo[c][pPrecio]);
							    case 1: PlayerInfo[playerid][Moneda] -= PropInfo[c][pPrecio];
							    case 2: PlayerInfo[playerid][Credits] -= PropInfo[c][pPrecio];
							}
							PropInfo[c][pEnVenta] = 0;
							format(PropInfo[c][pPropietario],40,"%s",NombreJugador(playerid));
							mysql_format(Conecction, query, sizeof(query),"UPDATE `propiedades` SET `EnVenta`='0', `Propietario`='%e',`IDPropietario`='%d' WHERE `ID`='%d'", PropInfo[c][pPropietario], PlayerInfo[playerid][p_DBID], PropInfo[c][propiedad_ID]);
							mysql_tquery(Conecction, query);
							CargarPropiedad(c,1);
							Mensaje(playerid,-1,""CR"Acabas de comprar la propiedad.");
							PropInfo[c][pIDPropietario] = PlayerInfo[playerid][p_DBID];
							RevisarLogro(playerid, PropInfo[c][pTipo]+7);
						}
					}
					break;
         	    }
    		}
			foreach(new f : Fabricas)
		    {
	  			if(EstaEn(playerid,1.5,Fabricas[f][pEntradaX],Fabricas[f][pEntradaY],Fabricas[f][pEntradaZ]))
			    {
			        if(Fabricas[f][pEnUso] == 0)
			        {
			            if(PlayerInfo[playerid][jMiembro] == 0) return Mensaje(playerid,-1,"Necesitas ser {3399FF}Lider"CB" de una banda para adquirir "CR"f�bricas de metanfetamina"CB".");
			            if(PlayerInfo[playerid][jMiembro] == 1) return Mensaje(playerid,-1,"{3399FF}Bandas civiles"CB" no pueden adquirir "CR"f�bricas de metanfetamina"CB".");
						if(TieneFabrica(PlayerInfo[playerid][jMiembro])) return Mensaje(playerid,-1,"Tu banda ya controla una {3399FF}f�brica de metanfetaminas"CB".");
						if(PlayerInfo[playerid][pRango] == 8)
						{
							if(Fabricas[f][pEnVentaPor] == 0)
							{
		              			if(PlayerInfo[playerid][pBanco] >= Fabricas[f][pValor]) PlayerInfo[playerid][pBanco] -= Fabricas[f][pValor];
								else return va_SendClientMessage(playerid,-1,"Necesitas tener "CR"%s"CB" en tu cuenta bancaria.",Numeros(Fabricas[f][pValor]));
							}
							else if(Fabricas[f][pEnVentaPor] == 1)
							{
		              			if(PlayerInfo[playerid][Moneda] >= Fabricas[f][pValor]) PlayerInfo[playerid][Moneda] -= Fabricas[f][pValor];
								else return va_SendClientMessage(playerid,-1,"Necesitas tener "CR"%d"Moneda1""CB" para comprar esta f�brica.",Fabricas[f][pValor]);
							}
							else if(Fabricas[f][pEnVentaPor] == 2)
							{
		              			if(PlayerInfo[playerid][Credits] >= Fabricas[f][pValor]) PlayerInfo[playerid][Credits] -= Fabricas[f][pValor];
								else return va_SendClientMessage(playerid,-1,"Necesitas tener {D1A231}%d "Moneda3""CB" para comprar esta f�brica.",Fabricas[f][pValor]);
							}
     						new query[300];
							new banda = PlayerInfo[playerid][jMiembro];
							format(Fabricas[f][pPropietario],40,"%s",BandasInfo[banda][BNombre]);
							mysql_format(Conecction,query,sizeof(query),"UPDATE `fabricas` SET `BandaID`='%d', `NombreBanda`='%e', `EnVenta`='0', `EnUso`='1' WHERE `ID`='%d'",PlayerInfo[playerid][jMiembro],Fabricas[f][pPropietario],Fabricas[f][pID]);
							mysql_tquery(Conecction, query);
							Fabricas[f][pBanda] = PlayerInfo[playerid][jMiembro];
							Fabricas[f][TiempoSoborno] = gettimeVariable + 604800;
							Fabricas[f][pEnVenta] = 0;
							Fabricas[f][pEnUso] = 1;
							BorrarPuntosFabrica(f);
							CargarFabricass(f);
							Mensaje(playerid,-1,"Tu banda ahora controla una {3399FF}f�brica de metanfetamina"CB".");
							DarDineroFabrica(f,3000000);
							return 1;
			     		}
		     			return 1;
		     		}
         			else return 1;
			    }
		    }
 			return 1;
        }
		else if(strcmp(item,"repuestos", true) == 0 || strcmp(item,"reposicoes", true) == 0 || strcmp(item,"reposi�oes", true) == 0 || strcmp(item,"reposi��es", true) == 0)
		{
			if(!TieneTrabajo(playerid, MECANICO)) return Mensaje(playerid,-1,"Necesitas ser mecanico para comprar repuestos.");
			if(PlayerInfo[playerid][Repuestos] >= 100) return Mensaje(playerid,-1,"No puedes llevar mas de 100 repuestos encima.");
			if(!EstaEn(playerid, 5.0, 93.3250,-161.6600,2.5938)) return Mensaje(playerid,-1,"Para "CR"/comprar repuestos"CB" necesitas ir al taller donde te dieron el empleo.");
			{
				return MostrarDialog(playerid, CREPUESTOS, DIALOG_STYLE_INPUT, "Repuestos", "Ingresa la cantidad de repuestos que deseas comprar\nRecuerda que cada repuesto cuesta $100 y solo puedes llevar 100 encima.", "Comprar", "Cancelar");
			}
		}
		else if(strcmp(item,"productos", true) == 0 || strcmp(item,"produtos", true) == 0 || strcmp(item,"produto", true) == 0)
		{
			if(EstaEn(playerid, 7.0, -28.0060,-89.9514,1003.5469)) return MostrarDialog(playerid, PRODUCTOS, DIALOG_STYLE_LIST, ""CR"Productos y servicios (24/7).", "Tel�fono m�vil ($1500)\nGu�a telef�nica ($35)\nTraba de seguridad para veh�culos\nAlarma para veh�culos.\nRadio comunicador ($2000)\nGPS ($800)\nBebida para guardar en heladera: Cerveza x6 unidades ($470)\nBebida para guardar en heladera: Vino x6 unidades ($590)\nBebida para guardar en heladera: Sprunk x4 unidades ($200)\nBebida: Sprunk ($65)", "Comprar", "Salir");
			if(EstaEn(playerid, 7.0, -784.2098,500.1945,1371.7422)) return MostrarDialog(playerid, PRODUCTOS2, DIALOG_STYLE_TABLIST_HEADERS, ""CR"Lista de productos", "Producto\tPrecio\nCerveza\t"CR"$80"CB"\nVino\t"CR"$100"CB"\nVaso de sprunk\t"CR"$60"CB"\nAquarius\t"CR"$160"CB"\nPorci�n de pizza\t"CR"$70"CB"", "Comprar", "Salir");
			if(EstaEn(playerid, 7.0, 373.7276,-118.8039,1001.4922)) return MostrarDialog(playerid, DIALOG_PIZZA, DIALOG_STYLE_TABLIST_HEADERS, ""CR"Lista de productos", "Producto\tPrecio\nPorci�n de pizza\t"CR"$40"CB"\nPizza completa {232621}- (Para llevar)\t"CR"$300"CB"\nSprunk\t"CR"$70"CB"\nAquarius\t"CR"$170"CB"", "Comprar", "Salir");
			if(EstaEn(playerid, 7.0, -1262.6428,2119.9490,1246.5457) || EstaEn(playerid, 7.0, 618.8964,-556.0715,16.3050) || EstaEn(playerid, 7.0, -1396.3044,-320.4939,1052.0834)) return MostrarDialog(playerid, DIALOG_SALON, DIALOG_STYLE_TABLIST_HEADERS, ""CR"Lista de productos", "Producto\tPrecio\nVino\t"CR"$110"CB"\nCerveza\t"CR"$80"CB"\nVaso de sprunk\t"CR"$70"CB"\nAquarius\t"CR"$170"CB"\nPorci�n de pizza\t"CR"$100"CB"", "Comprar", "Salir");
			if(EstaEn(playerid, 3.0,1214.8663,-13.3527,1000.9219) && GetPlayerVirtualWorld(playerid) == 5) return MostrarDialog(playerid, DIALOG_SALON, DIALOG_STYLE_TABLIST_HEADERS, ""CR"Lista de productos", "Producto\tPrecio\nVino\t"CR"$110"CB"\nCerveza\t"CR"$80"CB"\nVaso de sprunk\t"CR"$70"CB"\nAquarius\t"CR"$170"CB"\nPorci�n de pizza\t"CR"$100"CB"", "Comprar", "Salir");
			if(IsPlayerInRangeOfPoint(playerid, 2.5,1148.0078,-1324.2789,-10.7849))
   			{
		        MostrarDialog(playerid, PRODUCTOS_FARMACIA, DIALOG_STYLE_TABLIST_HEADERS, "{00CA00}Farmacia"CB"",
				""CB"Productos disponibles\t"CB"Cantidad\t"CB"Precio\n\
				Medicamentos\t{00CA00}100\t{00CA00}$40.000"CB"\n\
				Kit m�dico\t{00CA00}1\t{00CA00}$7.250"CB"",
				"Comprar", "-");
				return 1;
	       }
		}
		else if(strcmp(item,"juguetes", true) == 0 || strcmp(item,"juguete", true) == 0 || strcmp(item,"brinquedos", true) == 0 || strcmp(item,"brinquedo", true) == 0)
		{
			if(!EnSexShop(playerid)) return 1;
			if(PlayerInfo[playerid][jNivel] < 2) return Mensaje(playerid, -1, "Debes ser nivel 2 para comprar juguetes ac�.");
			MostrarDialog(playerid, JUGUETES, DIALOG_STYLE_LIST, "Juguetes er�ticos", "Vibrador blanco ("CR"$1.000"CB")\nVibrador plateado ("CR"$1.200"CB")\nGran vibrador blanco ("CR"$1.600"CB")\nConsolador rosa ("CR"$2.500"CB")", "Comprar", "Cancelar");
			return 1;
		}
		else if(strcmp(item,"materiales", true) == 0 || strcmp(item,"materiais", true) == 0)
		{
			if(!TieneTrabajo(playerid, ARMERO)) return Mensaje(playerid,-1,"Necesitas ser armero para comprar materiales");
			if(EstaEn(playerid, 5.0,1422.6765,-1319.3438,13.5547) && Mats1[playerid] == 0)
			{
				if(PlayerInfo[playerid][jDinero] < 1250) return Mensaje(playerid,-1,"Necesitas "CR"$1.250"CB" para poder comprar los materiales de armas.");
				{
					PlayerInfo[playerid][piezas] += 150;
					QuitarDinero(playerid, 1250);
					Mensaje(playerid,-1,"Compraste "CR"150 materiales"CB" de armas por "CR"$1.250"CB".");
					Mensaje(playerid,-1,"Ahora dir�gete a la fabrica (marcado en el mapa) para preparar las piezas.");
					CrearCheckpoint(playerid,2160.7837,-2280.9233,13.3838, 5.0);
					Mats1[playerid] = 1;
					return 1;
				}
			}
			else if(EstaEn(playerid, 5.0,2823.3486,-1420.3571,16.2562) && Mats2[playerid] == 0)
			{
				if(PlayerInfo[playerid][jDinero] < 1250) return Mensaje(playerid,-1,"Necesitas "CR"$1.250"CB" para poder comprar los materiales de armas.");
				{
					PlayerInfo[playerid][piezas] += 150;
					QuitarDinero(playerid, 1250);
					Mensaje(playerid,-1,"Compraste "CR"150 materiales"CB" de armas por "CR"$1.250"CB".");
					Mensaje(playerid,-1,"Ahora dir�gete a la fabrica (marcado en el mapa) para preparar las piezas.");
					CrearCheckpoint(playerid,2160.7837,-2280.9233,13.3838, 5.0);
					Mats2[playerid] = 1;
					return 1;
				}
			}
			else if(EstaEn(playerid, 5.0,-1735.7610,1244.9299,7.5469) && Mats3[playerid] == 0)
			{
				if(PlayerInfo[playerid][jDinero] < 6250) return Mensaje(playerid,-1,"Necesitas "CR"$6.250"CB" para poder comprar los materiales de armas.");
				{
					PlayerInfo[playerid][piezas] += 750;
					QuitarDinero(playerid, 6250);
					Mensaje(playerid,-1,"Compraste "CR"750 materiales"CB" de armas por "CR"$6.250"CB".");
					Mensaje(playerid,-1,"Ahora dir�gete a la fabrica (marcado en el mapa) para preparar las piezas.");
					CrearCheckpoint(playerid,2160.7837,-2280.9233,13.3838, 5.0);
					Mats3[playerid] = 1;
					return 1;
				}
			}
		}
	}
	/*else if(!sscanf(params, "s[5]d", item, idjugador))
	{
	    new Query[256];
	    if(strlen(item) < 5)
	    {
	    	mysql_format(Conecction, Query, sizeof(Query), "SELECT * FROM `codigos_ropas` WHERE Codigo = '%e'", item);
			mysql_tquery(Conecction, Query, "CodigoRopa", "dd", playerid,idjugador);
		}
	}*/
	return 1;
}

CMD:cancelar(playerid, params[])
{
	new item[32];
	new vw = GetPlayerVirtualWorld(playerid);
	if(IsPlayerConnected(playerid))
	if(!sscanf(params, "s[32]", item))
	{
		if(strcmp(item,"mutual",true) ==0 || strcmp(item,"socio",true) ==0)
		{
		    if(EstaEn(playerid, 5.0, 1147.9966,-1322.4128,-10.7922) || EstaEn(playerid, 5.0, -2713.9946,636.8887,1385.6547) || EstaEn(playerid, 5.0, 1242.1232,-809.9145,1164.2759))
		    {
			    switch(PlayerInfo[playerid][pSocioHP])
				{
				    case 0: return Mensaje(playerid,-1,""CB"No eres socio de este hospital.");
				    case 1: if(vw != 6) return Mensaje(playerid, -1, ""CB"No eres socio de este hospital.");
				    case 2: if(vw != 9) return Mensaje(playerid, -1, ""CB"No eres socio de este hospital.");
				    case 3: if(vw != 7) return Mensaje(playerid, -1, ""CB"No eres socio de este hospital.");
				    case 4: if(vw != 8) return Mensaje(playerid, -1, ""CB"No eres socio de este hospital.");
				}
    			PlayerInfo[playerid][pSocioHP] = 0;
				Mensaje(playerid,-1,"{c04306}Dejaste de ser socio de este hospital.");
			}
			else Mensaje(playerid, -1, ""CB"Tienes que ir al hospital para cancelar la mutual.");
			return 1;
		}
		else if(strcmp(params,"vip",true) == 0)
		{
			if(PlayerInfo[playerid][VIP] == 0) return Mensaje(playerid,-1,"No tienes ninguna membres�a vip activa.");
			new Query[200];
			PlayerInfo[playerid][Trabajo][1] = 0;
			PlayerInfo[playerid][Trabajo][2] = 0;
			PlayerInfo[playerid][VIP] = 0;
			PlayerInfo[playerid][jTiempoVip] = 0;
			mysql_format(Conecction, Query, sizeof(Query), "UPDATE `usuarios` SET `TiempoVIP`='0' WHERE `ID`='%d' LIMIT 1",PlayerInfo[playerid][p_DBID]);
			mysql_tquery(Conecction, Query);
			Mensaje(playerid,-1,"Cancelaste correctamente tu membres�a vip.");
		}
	}
	return 1;
}

CMD:socio(playerid, params[])
{
	new item[32];
	if(IsPlayerConnected(playerid))
	if(!sscanf(params, "s[32]", item))
	{
		if(strcmp(item,"ayuda",true) ==0 || strcmp(item,"ajuda",true) ==0)
		{
			Mensaje(playerid,-1,""CB"Haciendote socio de este hospital, ser�s atendido a un menor costo.");
			Mensaje(playerid,-1,""CB"El precio de la atenci�n, pasar� de "CR"$450"CB" a "CR"$400"CB".");
			Mensaje(playerid,-1,""CB"Siempre que tengas un problema, ser�s atendido en este hospital.");
			Mensaje(playerid,-1,""CB"Puedes hacerte "CR"/socio"CB" por un �nico pago de "CR"$500"CB"");
			Mensaje(playerid,-1,""CB"Puedes usar en cualquier momento "CR"/cancelar mutual"CB" para dejar de ser socio.");
		}
	}
	if(sscanf(params, "s[30]", item))
	{
		if(EstaEn(playerid, 5.0, 1147.9966,-1322.4128,-10.7922) || EstaEn(playerid, 5.0, -2713.9946,636.8887,1385.6547) || EstaEn(playerid, 5.0, 1242.1232,-809.9145,1164.2759))
		{
  			if(PlayerInfo[playerid][jDinero] < 500) return Mensaje(playerid,-1,"Necesitas "CR"$500"CB" para poder asociarte a este hospital.");
			switch(GetPlayerVirtualWorld(playerid))
			{
				case 6: PlayerInfo[playerid][pSocioHP] = 1;
				case 9: PlayerInfo[playerid][pSocioHP] = 2;
				case 7: PlayerInfo[playerid][pSocioHP] = 3;
				case 8: PlayerInfo[playerid][pSocioHP] = 4;
			}
   			Mensaje(playerid,-1,""CB"Muchas gracias por hacerte socio de nuestro hospital.");
      		QuitarDinero(playerid,500);
		}
	}
	return 1;
}

CMD:ayuda(playerid, params[])
{
	new item[32];
	if(IsPlayerConnected(playerid))
	if(!sscanf(params, "s[32]", item))
	{
		if(strcmp(item,"propiedades",true) ==0 || strcmp(item,"casas",true) ==0 || strcmp(item,"casa",true) ==0) return MostrarDialog(playerid, DIALOG_INFO, DIALOG_STYLE_MSGBOX, "Ayuda sobre las casas, todo lo que necesitas saber:",""CR"Casas sin garaje\n\n"CB"Para comprar una casa es simple, acercace al icono de la casa verde, disponer del dinero para\ncomprarla y complir el requisito de nivel que tenga la casa a comprar.\nParar comprar la casa se usa: "CR"/comprar propiedad"CB" para en la puerta de la misma.\nLuego, dentro de la casa, tenemos un ropero, el cual se abre y cierra con "CR"/abrir ropero"CB" y "CR"/cerrar ropero"CB".\nDentro del ropero hay una estanteria, donde se pueden guardar objetos.\nPara ver la estanteria se usa "CR"/ver estanteria"CB",\nPara guardar y sacar armas se usa: "CR"/guardar [nombre-del-arma"CB"] y "CR"/sacar [nombre-del-arma"CB"] (Siempre usando guiones en lugar de espacios)\nPara guardar Crack y/o Medicamentos se usa el comando "CR"/guardar crack "CB"["CR"cantidad"CB"] o "CR"/guardar medicamentos "CB"["CR"cantidad"CB"]\nPara sacarlos se usa "CR"/sacar crack "CB"["CR"cantidad"CB"] y "CR"/sacar medicamentos "CB"["CR"cantidad"CB"]\nLas casas tambi�n se pueden cerrar para que nadie pueda ingresar,\nparar cerrarlas "CR"/cerrar puerta"CB" y para volverla a abrir "CR"/abrir puerta"CB" (Siempre estando adentro)\n\n"CR"Casas con garaje\n\n"CB"Las casas con garaje disponen de un garaje exclusivo, donde pueden guardar sus veh�culos.\nPara entrar al garaje con el auto, te acercas al port�n de la casas y pones "CR"/entrar"CB" (estando dentro del\nveh�culo), para sacar el auto se usa "CR"/salir"CB" (estando dentro del veh�culo).\nPara entrar al garaje, sin auto, solo se puede hacerlo desde dentro de la casa con "CR"/garaje"CB"\nPara salir del garaje sin auto, debemos volver a la casa poniendo "CR"/entrar"CB" en la puerta.\n\n"CR"Un auto que este en un garaje, no puede ser robado ni por un cheater.","Cerrar","");
		else if(strcmp(item,"sed",true) ==0 || strcmp(item,"sede",true) == 0)
		{
			MostrarDialog(playerid, DIALOG_AYUDA, DIALOG_STYLE_MSGBOX, "Sed:",""CB"La sed puede verse en la barra superario azul, mientras\nm�s llena est� la barra, m�s sed tendr�s.\n\nSi la barra se llena, comenzar�s a perder vida con el paso del tiempo\ny morir�s si no te hidratas.\n\nPara hidratarte necesitas ir a un supermercado 24/7 o restaurante\ny comprar un "CR"vaso de Sprunk"CB".\n\nPara ocultar la barra de sed, usa "CR"/ocultar sed"CB" y para mostrarla "CR"/mostrar sed","Cerrar","");
		}
		else if(strcmp(item,"nivel",true) ==0 || strcmp(item,"niveles",true) ==0)
		{
			MostrarDialog(playerid, DIALOG_INFO, DIALOG_STYLE_MSGBOX, "Nivel:",""CB"Para subir de nivel necesitas llenar la barra de reputaci�n\nque se ve en la parte inferior de la pantalla.\n\nPor cada hora de juego se gana 1 punto de reputaci�n\n(Necesitas estar activo en el servidor obligatoriamente mas de 30 minutos para recibir la reputaci�n)\n\nCon el comando /est se pueden ver esas estadisticas.\n\nAl llenar la barra de reputaci�n tienes que /comprar nivel","Cerrar","");
		}
		else if(strcmp(item,"hambre",true) ==0 || strcmp(item,"fome",true) ==0)
		{
			MostrarDialog(playerid, DIALOG_AYUDA, DIALOG_STYLE_MSGBOX, "Hambre:",""CB"La hambre puede verse en la barra superario naranja, mientras\nm�s llena est� la barra, m�s hambre tendr�s.\n\nSi la barra se llena, comenzar�s a perder vida con el paso del tiempo\ny morir�s si no comes.\n\nPara comer necesitas ir a una pizzeria\ny comprar un "CR"una porci�n de pizza"CB".\n\nPara ocultar la barra de hambre, usa "CR"/ocultar hambre"CB" y para mostrarla "CR"/mostrar hambre","Cerrar","");
		}
		else if(strcmp(item,"salon",true) ==0 || strcmp(item,"sal�o",true) ==0 || strcmp(item,"salao",true) ==0)
		{
			MostrarDialog(playerid, DIALOG_INFO, DIALOG_STYLE_MSGBOX, ""CB"Sal�n de eventos",""CB"El sal�n de eventos puede ser alquilado para realizar conciertos, presentaciones, fiestas y espect�culos.\nPara alquilar el sal�n necesitas nivel 6 y pagar "CR"$20.000"CB" por cada hora de alquiler.\nEl costo de la entrada lo decide el propietario(locatario) del sal�n.\n\nComandos para el propietario:\n"CR"/dar acceso [id-o-nombre]"CB" (Comando para dar permiso al control del escenario y expulsar personas del sal�n).\n"CR"/quitar acceso [id-o-nombre]"CB" (Comando para quitar permisos).\n"CR"/expulsar [id-o-nombre]"CB" (Le quita la entrada y lo expulsa del sal�n)\n"CR"/sincronizar"CB" (Reconecta a la radio a todos los jugadores en caso de bug)\n\nComandos para personas con tarjeta de acceso:\n"CR"/expulsar [id-o-nombre]"CB" (Le quita la entrada y lo expulsa del sal�n)\n"CR"/sincronizar\n/retirar vehiculo [id]"CB" (El ID se puede ver usando /dl)","Cerrar","");
		}
		else if(strcmp(item,"trabajos",true) ==0 || strcmp(item,"trabajo",true) ==0 || strcmp(item,"trabalhos",true) ==0 || strcmp(item,"trabalho",true) ==0)
		{
			MostrarDialog(playerid,TRABAJOS, DIALOG_STYLE_LIST,"Trabajos:",""CB"Informaci�n general\nM�dico\nTaxista\nGuardaespaldas\nCamionero\nPolic�a\nFabricante de armas\nMec�nico\nCosechador (Sin habilidad)\nBasurero (2 jugadores)\nTransportista\nLadr�n\nMinero\nPescador\nProstituci�n\nLocutor de Radio","Aceptar","Salir");
		}
		else if(strcmp(item,"vehiculo",true) ==0 || strcmp(item,"vehiculos",true) ==0 || strcmp(item,"veiculo",true) ==0 || strcmp(item,"veiculos",true) ==0)
		{
			MostrarDialog(playerid, DIALOG_INFO, DIALOG_STYLE_MSGBOX, "Ayuda sobre veh�culos, todo lo que necesitas saber:",""CB"Existen varios concesionarias, las cuales tienen una gran variedad de veh�culos a la venta.\nLos veh�culos m�s econ�micos se encuentran a la vuelta de Unity Station.\nCuando quieras cambiar de veh�culo, puedes vender el usado, solamente tienes que ir al Edificio Municipal General de LS e iniciar el tr�mite.\nLa oficina se encuentra en el piso n�mero 17.\n\nPara que no usen tu veh�culo te recomendamos "CR"/estacionar"CB" dentro de un estacionamiento. El costo es de "CR"$150"CB" por d�a.\nO sino tambi�n puedes comprar un sistema de traba en cualquier 24/7.\nSi tienes el sistema de traba, usa "CR"/cerrar"CB" para trabar las puertas del veh�culo.\nPara abrirlo "CR"/abrir"CB", tienes que estar cerca o dentro del veh�culo.\nSi no encuentrsa tu veh�culo usa "CR"/localizar"CB".\nSi tu veh�culo fue robado, llama a la polic�a, ellos te van a pedir la patente para poder localizarlo.\n\nPara enceender o apagar las luces, usa "CR"/luces"CB"\nPara detener el motor, usa "CR"/detener"CB"\nPara encender el motor, usa "CR"/arrancar"CB"\nPara activar o desactivar la alarma, usa "CR"/alarma"CB"\n\nPara guardar o sacar cosas del maletero de tu veh�culo necesitas abrirlo, acercate al maletero y usa "CR"/abrir maletero"CB"\nDespu�s de abrirlo, tienes que mirar el interior usando "CR"/maletero"CB" o en caso de que no sea tu veh�culo usa "CR"/maletero [id o nombre del due�o]"CB"\nPara sacar algo del maletero usa "CR"/maletero sacar [numero de lugar]."CB"\nPara guardar armas usa "CR"/maletero guardar nombre-de-arma"CB".\nRecuerda siempre "CR"/cerrar maletero"CB" para evitar robos.","Cerrar","");
		}
		else if(strcmp(item,"club",true) ==0)
		{
			MostrarDialog(playerid, DIALOG_INFO, DIALOG_STYLE_MSGBOX, "Ayuda relacionada al club de striptease:",""CB"Encontrar�s el {ef5bff}club de striptease"CB" en el mapa de tu "CR"GPS"CB" marcado con un {ff0000}coraz�n"CB".\n\nDentro del club podr�s beber e interactuar con las bailarias.\nSi le arojas dinero, ganar�s afinidad con ellas. Actualmente hay 3 niveles de afinidad: {f0e02f}Baja"CB",{ff7c1d}Media "CB"y {ff0000}Alta"CB".\n\nSi quieres algo m�s �ntimo, hay un cuarto privado en el cual tu afinidad con la bailarina cobrar� importancia.\n\n{8ab9e6}Sala privada seg�n afinidad"CB":\n\n- {f0e02f}Afinidad baja"CB": Baile.\n- {ff7c1d}Afinidad media"CB": Baile seguido de sexo oral.\n- {ff0000}Afinidad alta"CB": Baile y sexo oral.(Con descuento monetario)\n\nPerder�s un leve porcentaje de afinidad con la bailarina cuando ingreses al cuarto privado, si es que\ntienes afinidad media o alta. Ser� recuperada si luego le arrojas m�s dinero.\n\nPara "CR"lanzarles dinero"CB" a las bailarinas pulsa {dbe715}'Y'"CB" cerca de ellas.","Cerrar","");
		}
		else if(strcmp(item,"vip",true) ==0)
		{
			MostrarDialog(playerid, DIALOG_INFO, DIALOG_STYLE_MSGBOX, "Todo sobre las membres�as:",
						"\
						    "CB"Toda la informaci�n sobre los beneficios de las membres�as VIP\n\
							\n\
							{FF0000}Membres�a VIP 1\n\
							"CB"- L�mite de veh�culos propios 2\n\
							"CB"- L�mite de intereses ganados en el banco {00CC00}$1.500\n\
							"CB"- L�mite de propiedades compradas a su nombre 1\n\
							"CB"- L�mite de plantas de marihuana 2\n\
							"CB"- Aumento en ganancia de habilidad trabajando\n\
							"CB"- Espacio en el ba�l/maletero de los veh�culos {00CC00}+1\n\
							"CB"- Reducci�n de condena en prisi�n {00CC00}10%\n\
							\n\
							{FF0000}Membresia VIP 2\n\
							"CB"- L�mite de veh�culos propios 4\n\
							"CB"- L�mite de intereses ganados en el banco {00CC00}$3.000\n\
							"CB"- L�mite de propiedades compradas a su nombre 2\n\
							"CB"- L�mite de plantas de marihuana 4\n\
							"CB"- Aumento en ganancia de habilidad trabajando\n\
							"CB"- Espacio en el ba�l/maletero de los veh�culos {00CC00}+2\n\
							"CB"- Reducci�n de condena en prisi�n {00CC00}25%\n\
							"CB"- Camiones adicionales para el trabajo de camionero\n\
							"CB"- Trabajar de basurero sin el uniforme requerido\n\
							"CB"- Ganancia adicional trabajando de transportista\n\
							"CB"- Servicio de gr�a gratis para todos los veh�culos\n\
  				 			\n\
							{FF0000}Membres�a VIP3\n\
							"CB"- L�mite de veh�culos propios 6\n\
							"CB"- Posibidad de cambiar colores a tu prendas\n\
							"CB"- Posibidad de cambiar el estado{FF0000} '/est -> Configurar cuenta'\n\
							"CB"- Reducci�n de condenas\n\
							"CB"- Colores aleatorios al hablar\n\
							"CB"- Aumento de intereses al {00CC00}triple\n\
							"CB"- Reducci�n de tiempo de espera\n\
							"CB"- Aumento +10 al consumir drogas comunes\n\
							"CB"- Aumento de pagas de trabajo\n\
							"CB"- Posibilidad de traer tu coche a tu pocisi�n\n\
							"CB"- Cambiar tu estilo de caminar {FF0000}'/est -> Configurar cuenta'\n\
							"CB"- Posibilidad de tener 4 propiedades\n\
							"CB"- Posibilidad de tener 10 botiquines encima\n\
							"CB"- Posibilidad de tener 3 trabajos\n\
							"CB"- Se estar� trabajando para {FF0000}mejorar"CB" a�n mas este membres�a\n\
							"
						, "Salir", "");
		}
	}
	if(sscanf(params, "s[30]", item))
	{
		Mensaje(playerid, COLORCARGO0, "AYUDA DETALLADA: "CR"/ayuda vehiculos | /ayuda trabajos | /ayuda nivel | /ayuda casas | /ayuda sed | /ayuda vip");
		Mensaje(playerid, COLORCARGO0, "PERSONAJE: "CR"/est"CB"adisticas | "CR"/y"CB" (/me) "CB"|"CR" /p | /g | /b | /inventario | /consumir | /gps | /acciones");
		Mensaje(playerid, COLORCARGO0, "TRABAJOS: "CR"/ayuda trabajos "CB"|"CR" /habilidad "CB"|"CR" /dejar trabajo");
		Mensaje(playerid, COLORCARGO0, "SERVICIOS: "CR"/servicio taxi "CB"|"CR" /servicio grua "CB"|"CR" /servicio medico | /servicio mecanico");
		Mensaje(playerid, COLORCARGO0, "VEHICULOS: "CR"/arrancar "CB"|"CR" /detener "CB"|"CR" /estacionar "CB"|"CR" /localizar | /luces");
		Mensaje(playerid, COLORCARGO0, "TELEFONO: "CR"/minumero | /sms | /llamar | /colgar | /telefono ["CB"on/off"CR"]");
		Mensaje(playerid, COLORCARGO0, "VENTAS: "CR"/vender vehiculo | /vender [nombre-del-arma] [id o nombre] [precio] | /vender [crack/medicamento]");
		Mensaje(playerid, COLORCARGO0, "SERVIDOR: "CR"/hora "CB"| "CR"/canal dudas"CB" (para activar y desactivar)");
		Mensaje(playerid, COLORCARGO0, "GENERAL: Para recibir ayuda de otros jugadores usa "CR"/n "CB"("CR"pregunta"CB").");
	}
	return 1;
}

CMD:servicio(playerid, const params[])
{
	new item[32];
	if(!sscanf(params, "s[32]", item))
	{
		if(strcmp(item, "medico",true) == 0)
		{
			if(EstaEn(playerid,1.0,1147.9966,-1322.4128,-10.7922) || EstaEn(playerid,1.0,-2713.9946,636.8887,1385.6547) || EstaEn(playerid,1.0,1242.1232,-809.9145,1164.2759))
			{
				if(PlayerInfo[playerid][pCama] > 0) return 1;
				new Float:Vida,Float:calculo,string[256];
				GetPlayerHealth(playerid,Vida);
				if(Vida > 99) return Mensaje(playerid,-1,"Tu no necesitas este servicio en este momento.");
				calculo = 100-Vida;
				HCalculo[playerid] = floatround(calculo, floatround_round);
				format(string,256,"Bienvenido al hospital Central de Los Santos\n\nNecesitas una revisi�n medica\n\nCosto de la revisi�n: "CR"$%s",ConvertirNumero(HCalculo[playerid]*10));
				MostrarDialog(playerid,DHOSPITAL,DIALOG_STYLE_MSGBOX,"Servicio M�dico",string,"Aceptar","Cancelar");
			}
			else if(PlayerInfo[playerid][Agonizando] == 1 && LlamadaMedicos[playerid] == 0)
			{
				foreach(new i : Player)
				{
					if(TieneTrabajo(i, MEDICO) && RopaMedi[i] > 0)
					{
						Mensaje(i, 0x00C600FF, ""CB"Hay un nuevo paciente solicitando "CR"/servicio medico"CB", para avisarle que vas a atenderlo usa "CR"/responder medico");
						SetTimerEx("CancelarMedi",minutos(5),false,"d",playerid);
						ResponderMedi[i] = 1;
					}
				}
				Mensaje(playerid, -1,"Has llamado al hospital, una ambulancia vendra lo antes posible.");
				MarcadoMedicos[playerid] = 1;
				LlamadaMedicos[playerid] = 1;
			}
			else Mensaje(playerid, -1,""CB"Para usar "CR"/servicio medico"CB", tienes que estar herido o dentro de un hospital.");
		}
		else if(strcmp(item,"grua",true) ==0)
		{
			if(EstaEn(playerid, 8.0, 1819.1549,-1284.6589,109.3594) || EstaEn(playerid, 10.0,1802.0935,-1287.3749,13.6365)) MostrarDialog(playerid,SERVICIOGRUA1, DIALOG_STYLE_MSGBOX, "Informaci�n sobre el servicio de gr�a", ""CB"El servicio de gr�a sirve para recuperar el veh�culo, en caso de que haya quedado\nen un lugar inaccesible.\nPor ejemplo: En el agua, dentro del estacionamiento de una propiedad, en una pileta, etc.\n\n"CR"�Quieres utilizar el servicio?", "Si","No");
			else
	  		{
	  		    Mensaje(playerid, -1, "Puedes solicitar este servicio en el "CR"piso 17"CB" del "CR"Edificio Municipal General de LS"CB".");
	  		    Mensaje(playerid, -1, "O bien llamando al "CR"n�mero 815"CB" desde tu tel�fono m�vil.");
   			}
		}
		else if(strcmp(item, "taxi",true) == 0 || strcmp(item, "taxista",true) == 0 || strcmp(item, "uber",true) == 0)
		{
			if(LlamadaTaxi[playerid] == 0)
			{
				Mensaje(playerid, -1,"Llamaste al servicio de taxi, por favor espera un momento.");
				LlamadaTaxi[playerid] = 1;
				foreach(new i : Player)
				{
					if(TieneTrabajo(i, TAXISTA))
					{
						new autoid;
						autoid = GetPlayerVehicleID(i);
						if(!TAXI(autoid)) return 1;
						Mensaje(i, 0xFFFF00FF, ""CR"Hay un nuevo cliente"CB" llamando al "CR"/servicio taxi"CB", para avisarle que vas a buscarlo usa "CR"/responder taxi");
						SetTimerEx("CancelarTaxi",minutos(5),false,"d",playerid);
						ResponderTaxi[i] = 1;
					}
				}
			}
			else return Mensaje(playerid, -1, "Ya has solicitado un taxi.");
		}
		else if(strcmp(item, "mecanico",true) == 0)
		{
		    if(AceptoRepara[playerid] == 1) return Mensaje(playerid,-1,"Ya aceptaste una reparaci�n.");
			new Float:vida, autoid = GetPlayerVehicleID(playerid);
			GetVehicleHealth(autoid, vida);
			if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				if(vida > 375.0) return Mensaje(playerid,-1,"El motor del veh�culo no est� averiado.");
				if(Capo[autoid] == 0) return Mensaje(playerid,-1,"Primero necesitas "CR"/abrir capo"CB".");
				if(LlamadaMeca[playerid] == 0)
				{
					foreach(new i : Player)
					{
						if(RopaMeca[i] == 1 && TieneTrabajo(i, MECANICO))
						{
							Mensaje(i, 0x33CCFFAA, ""CB"Hay un nuevo cliente llamando al "CR"/servicio mecanico"CB", para confimar usa "CR"/responder mecanico");
							ResponderMeca[i] = 1;
							SetTimerEx("CancelarMeca",minutos(5),false,"d",playerid);
						}
					}
					Mensaje(playerid, -1,"Has solicitado un mecanico, espera que venga a tu posici�n.");
					LlamadaMeca[playerid] = 1;
				}
				else return Mensaje(playerid,-1,"Ya has solicitado un mec�nico.");
			}
			else return Mensaje(playerid,-1,"Debes estar en un veh�culo para solicitar un mecanico.");
		}
	}
	return 1;
}

CMD:responder(playerid, params[])
{
	new item[32];
	if(IsPlayerConnected(playerid))
	if(!sscanf(params, "s[32]", item))
	{
		if(strcmp(item,	"medico",true) == 0)
		{
			if(!TieneTrabajo(playerid, MEDICO)) return Mensaje(playerid,-1,"No eres m�dico.");
			if(ResponderMedi[playerid] == 1)
			{
				foreach(new i : Player)
				{
					if(LlamadaMedicos[i] == 1)
					{
						Mensaje(i,-1,"{22BF35}Un med�co respondi� a tu llamada y va en camino.");
					}
				}
				Mensaje(playerid, -1,"{22BF35}Le acabas de avisar al paciente que vas a a buscarlo.");
				ResponderMedi[playerid] = 0;
			}
			else return Mensaje(playerid,-1,"Ya fueron atendidos todos los llamados.");
		}
		if(strcmp(item,	"taxi",true) == 0)
		{
			if(!TieneTrabajo(playerid, TAXISTA)) return Mensaje(playerid,-1,"No eres taxista.");
			if(ResponderTaxi[playerid] == 1)
			{
				foreach(new i : Player)
				{
					if(LlamadaTaxi[i] == 1) Mensaje(i,-1,"{22BF35}Un taxista respondi� a tu llamada y va en camino.");
				}
				Mensaje(playerid, -1,"{22BF35}Le acabas de avisar al cliente que vas a a buscarlo.");
				ResponderTaxi[playerid] = 0;
			}
			else return Mensaje(playerid,-1,"Ya fueron atendidos todos los llamados.");
		}
		if(strcmp(item,	"mecanico",true) == 0)
		{
			if(!TieneTrabajo(playerid, MECANICO)) return Mensaje(playerid,-1,"No eres mec�nico.");
			if(ResponderMeca[playerid] == 1)
			{
				foreach(new i : Player)
				{
					if(LlamadaMeca[i] == 1) Mensaje(i,-1,"{22BF35}Un mec�nico respondi� a tu llamada y va en camino.");
				}
				Mensaje(playerid, -1,"{22BF35}Le acabas de avisar al cliente que vas a reparar su veh�culo.");
				ResponderMeca[playerid] = 0;
			}
			else return Mensaje(playerid,-1,"Ya fueron atendidos todos los llamados.");
		}
	}
	return 1;
}

CMD:arrancar(playerid, params[])
{
	new vehicleid = GetPlayerVehicleID(playerid);
	if(VehiculosInfo[vehicleid][vcomprable] == 1) return 1;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
   	if(BICI(vehicleid)) return 1;
	if(EnTuning[playerid]) return 1;
	if(MotorAuto[vehicleid] == 0)
	{
 		if(gettimeVariable > TiempoMotor[playerid])
		{
			Mensaje(playerid, COLORCARGO0, "Arrancando veh�culo...");
			SetTimerEx("EncenderMotor",1200, false, "d",playerid);
			TiempoMotor[playerid] = gettimeVariable + 1;
		}
	}
	return 1;
}

CMD:luces(playerid,params[])
{
	new string[144];
	new vehicleid = GetPlayerVehicleID(playerid);
	if(Luces[vehicleid] == 0)
	{
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Mensaje(playerid, COLORCARGO0, "�No est�s dentro del veh�culo!");
		GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(vehicleid, engine, 1, alarm, doors, bonnet, boot, objective);
		Luces[vehicleid] = 1;
		Mensaje(playerid, COLORCARGO0, "Encendiendo luces...");
		format(string, 144,"%s enciende las luces de su veh�culo.",NombreJugador(playerid));
		ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
	}
	else if(Luces[vehicleid] == 1)
	{
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Mensaje(playerid, COLORCARGO0, "�No est�s dentro del veh�culo!");
		GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(vehicleid, engine, 0, alarm, doors, bonnet, boot, objective);
		Mensaje(playerid, COLORCARGO0, "Apagando luces...");
		format(string, 144,"%s apaga las luces de su veh�culo.",NombreJugador(playerid));
		ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
		Luces[vehicleid] = 0;
	}
	return 1;
}

CMD:cerrar(playerid,params[])
{
	new item[10];
	if(!sscanf(params,"s[10]",item))
	{
		if(strcmp(item,"baul",true)==0 || strcmp(item,"maletero",true)==0)
		{
			new Float:Pos[3],contador = 0,string[100];
	        for(new i = 0; i < MAX_PAUTOS; i++)
	        {
	            if(!IsValidVehicle(autos[i][playerid])) continue;
	            GetVehiclePos(autos[i][playerid], Pos[0], Pos[1], Pos[2]);
	            if(EstaEn(playerid, 5.0, Pos[0], Pos[1], Pos[2]))
	            {
					if(Baul[autos[i][playerid]] == 0) return Mensaje(playerid,-1,"El baul ya esta cerrado.");
					GetVehicleParamsEx(autos[i][playerid], engine, lights, alarm, doors, bonnet, boot, objective);
					SetVehicleParamsEx(autos[i][playerid], engine, lights, alarm, doors, bonnet, 0, objective);
					Baul[autos[i][playerid]] = 0;
					format(string, 100,"%s cierra el maletero de su veh�culo.", NombreJugador(playerid));
					ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
	                contador ++;
	            }
	        }
	        if(contador == 0) Mensaje(playerid, -1,"Debes estar cerca de tu veh�culo para cerrar su baul.");
		}
		if(strcmp(item,"patrulla",true)==0)
		{
			if(!FaccLegal(playerid)) return 1;
			new Float:VPos[3];
			foreach(new i : StreamedVehicle[playerid])
			{
				if(SAPD(i) || EDSA(i))
				{
					new data[128];
					GetVehiclePos(i,VPos[0],VPos[1],VPos[2]);
					if(EstaEn(playerid,2.0,VPos[0],VPos[1],VPos[2]))
					{
						if(bloqueado[i] == 1) return Mensaje(playerid,-1,"Esta patrulla ya esta cerrada.");
						format(data, sizeof(data),"%s trab� las puertas de su patrullero.", NombreJugador(playerid));
						ProxDetector(20.0, playerid, data, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
						GetVehicleParamsEx(i, engine, lights, alarm, doors, bonnet, boot, objective);
						SetVehicleParamsEx(i, engine, lights, alarm, 1, bonnet, boot, objective);
						bloqueado[i] = 1;
					}
				}
			}
		}
		if(strcmp(item,"capo",true)==0)
		{
			if(!IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid,-1,"Debes estar conduciendo un veh�culo para abrir su cap�.");
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				new string[100],autoid = GetPlayerVehicleID(playerid);
				GetVehicleParamsEx(autoid, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autoid, engine, lights, alarm, doors, 0, boot, objective);
				Capo[autoid] = 0;
				format(string, 100,"%s cierra el cap� del veh�culo.", NombreJugador(playerid));
				ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
				return 1;
			}
			else return Mensaje(playerid,-1,"Debes estar conduciendo un veh�culo para abrir su capo.");
		}
		if(strcmp(item,"ropero",true) == 0)
		{
			foreach(new p : Propiedades)
			{
				if(PropInfo[p][pEnUso] == 1)
				{
					if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW])
					{
						if(PlayerInfo[playerid][p_DBID] == PropInfo[p][pIDPropietario])
						{
						    if(EstaEn(playerid,1.5,254.2685,-41.5420,1002.0308) || EstaEn(playerid,5,PropInfo[p][pRoperoX],PropInfo[p][pRoperoY],PropInfo[p][pRoperoZ]))
						    {
						    	if(PropInfo[p][pRoperoAbierto] == 1)
						    	{
						    	    new string[250];
						        	PropInfo[p][pRoperoAbierto] = 0;
									format(string,sizeof(string),"%s cierra el ropero.",NombreJugador(playerid));
									ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
									GuardarPropiedad(p);
						    	}
						    	else Mensaje(playerid,-1,"El ropero ya est� cerrado, usa "CR"/abrir ropero"CB" para abrirlo.");
								break;
							}
					    }
					}
				}
			}
		}
		if(strcmp(item,"casa",true) == 0 || strcmp(item,"puerta",true) == 0)
		{
			foreach(new p : Propiedades)
			{
				if(PropInfo[p][pEnUso] == 1)
				{
					if(PlayerInfo[playerid][p_DBID] == PropInfo[p][pIDPropietario])
					{
						if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW] && GetPlayerInterior(playerid) == PropInfo[p][pInteriorID])
						{
							if(PropInfo[p][pAbierta] == 1)
							{
							    new string[250];
								PropInfo[p][pAbierta] = 0;
								format(string,sizeof(string),"%s cierra la puerta de su propiedad.",NombreJugador(playerid));
								ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
								GuardarPropiedad(p);
							}
							else Mensaje(playerid,-1,"Esta propiedad ya est� cerrada, usa "CR"/abrir puerta"CB" para abrirla.");
						}
					}
				}
			}
		}
		return true;
	}
	if(sscanf(params, "s[10]", item))
	{
		return CerrarAuto(playerid);
        //if(contador == 0) Mensaje(playerid, -1, "Necesitas estar al lado de un veh�culo para poder cerrarlo.");
	}
	return 1;
}

static CerrarAuto(playerid)
{
	new Float:Pos[3],contador = 0;
	for(new i = 0; i < MAX_PAUTOS; i++)
	{
		if(!IsValidVehicle(autos[i][playerid])) continue;
		GetVehiclePos(autos[i][playerid], Pos[0], Pos[1], Pos[2]);
		if(EstaEn(playerid, 5.0, Pos[0], Pos[1], Pos[2]))
		{
			if(VehicleInfo[playerid][i][vTraba] == 0) return Mensaje(playerid, -1, "Para poder cerrar el veh�culo, necesitas instalar un sistema de traba. Puedes comprar uno en cualquier "CR"24/7");
			if(bloqueado[autos[i][playerid]] == 0)
			{
				GetVehicleParamsEx(autos[i][playerid], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autos[i][playerid], engine, lights, alarm, 1, bonnet, boot, objective);
				AccionesRol(playerid,"trab� las puertas de su veh�culo.", 20);
				Mensaje(playerid,-1,""CB"Pulsa "CR"Espacio + Y "CB"para destrabar las puertas de tu veh�culo.");
				PlayerPlaySound(playerid, 1145, Pos[0], Pos[1], Pos[2]);
				bloqueado[autos[i][playerid]] = 1;
				VehicleInfo[playerid][i][vSeguro] = 1;
			}
			else Mensaje(playerid,-1, "Este veh�culo ya est� cerrado."),Mensaje(playerid,-1, ""CB"Escribe "CR"/abrir "CB"para destrabar las puertas de tu veh�culo.");
			contador ++;
		}
	}
	return 1;
}

CMD:alarma(playerid,params[])
{
	new Float:Pos[3];
	for(new i = 0; i < MAX_PAUTOS; i++)
 	{
  		if(!IsValidVehicle(autos[i][playerid])) continue;
    	GetVehiclePos(autos[i][playerid], Pos[0], Pos[1], Pos[2]);
     	if(EstaEn(playerid, 5.0, Pos[0], Pos[1], Pos[2]))
      	{
		    if(VehicleInfo[playerid][i][vAlarm] == 0) return Mensaje(playerid, COLOR_BLANCO, "Tu veh�culo no tiene instalado el sistema de alarma. Puedes comprar uno en cualquier "CR"24/7");
			if(VehicleInfo[playerid][i][vAlarma] == 0)
			{
				AccionesRol(playerid,"activa la alarma de su veh�culo.", 15);
				VehicleInfo[playerid][i][vAlarma] = 1;
				alarma[autos[i][playerid]] = 1;
			}
			else
			{
				AccionesRol(playerid,"desactiva la alarma de su veh�culo.", 15);
				VehicleInfo[playerid][i][vAlarma] = 0;
				alarma[autos[i][playerid]] = 0;
				if(alarmaon[autos[i][playerid]] == 1) DesactivarAlarma(autos[i][playerid]);
			}
        }
	}
	return 1;
}

CMD:abrir(playerid,params[])
{
	new item[10];
	if(!sscanf(params,"s[10]",item))
	{
		if(strcmp(item,"baul",true)==0 || strcmp(item,"maletero",true)==0)
		{
			new Float:Pos[3],contador = 0,string[256];
	        for(new i = 0; i < MAX_PAUTOS; i++)
	        {
	            if(!IsValidVehicle(autos[i][playerid])) continue;
	            GetVehiclePos(autos[i][playerid], Pos[0], Pos[1], Pos[2]);
	            if(EstaEn(playerid, 5.0, Pos[0], Pos[1], Pos[2]))
	            {
	                if(!NOBAUL(autos[i][playerid]))
	                {
						if(Baul[autos[i][playerid]] == 1) return Mensaje(playerid,-1,"El baul ya esta abierto.");
						GetVehicleParamsEx(autos[i][playerid], engine, lights, alarm, doors, bonnet, boot, objective);
						SetVehicleParamsEx(autos[i][playerid], engine, lights, alarm, doors, bonnet, 1, objective);
						Baul[autos[i][playerid]] = 1;
						format(string, 256,"%s abre el maletero de su veh�culo.", NombreJugador(playerid));
						ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
					}
	                contador ++;
	            }
	        }
	        if(contador == 0) Mensaje(playerid, -1,"Debes estar cerca de tu veh�culo para abrir su baul.");
		}
		if(strcmp(item,"patrulla",true)==0)
		{
			if(!FaccLegal(playerid)) return 1;
			new Float:VPos[3],data[128];
			foreach(new i: StreamedVehicle[playerid])
			{
				if(SAPD(i) || EDSA(i))
				{
					GetVehiclePos(i,VPos[0],VPos[1],VPos[2]);
					if(EstaEn(playerid,2.0,VPos[0],VPos[1],VPos[2]))
					{
						if(bloqueado[i] == 0) return Mensaje(playerid,-1,"Esta patrulla ya esta abierta.");
						format(data, sizeof(data),"%s destrab� las puertas de su veh�culo.", NombreJugador(playerid));
						ProxDetector(20.0, playerid, data, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
						GetVehicleParamsEx(i, engine, lights, alarm, doors, bonnet, boot, objective);
						SetVehicleParamsEx(i, engine, lights, alarm, 0, bonnet, boot, objective);
						bloqueado[i] = 0;
					}
				}
			}
		}
		if(strcmp(item,"capo",true)==0)
		{
			if(!IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid,-1,"Debes estar conduciendo un veh�culo para abrir su cap�.");
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				new string[100],autoid = GetPlayerVehicleID(playerid);
				GetVehicleParamsEx(autoid, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autoid, engine, lights, alarm, doors, 1, boot, objective);
				Capo[autoid] = 1;
				format(string, 100,"%s abre el cap� del veh�culo.", NombreJugador(playerid));
				ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
				return 1;
			}
			else return Mensaje(playerid,-1,"Debes estar conduciendo un veh�culo para abrir su capo.");
		}
		if(strcmp(item,"ropero",true) == 0)
		{
			foreach(new p : Propiedades)
			{
				if(PropInfo[p][pEnUso] == 1)
				{
					if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW])
					{
						if(PlayerInfo[playerid][p_DBID] == PropInfo[p][pIDPropietario])
						{
						    if(EstaEn(playerid,1.5,254.2685,-41.5420,1002.0308) || EstaEn(playerid,5,PropInfo[p][pRoperoX],PropInfo[p][pRoperoY],PropInfo[p][pRoperoZ]))
						    {
						    	if(PropInfo[p][pRoperoAbierto] == 0)
						    	{
						    	    new string[250];
						        	PropInfo[p][pRoperoAbierto] = 1;
									format(string,sizeof(string),"%s abre el ropero.",NombreJugador(playerid));
									ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
									GuardarPropiedad(p);
						    	}
						    	else Mensaje(playerid,-1,"El ropero ya est� abierto, usa "CR"/cerrar ropero"CB" para cerrarlo.");
								break;
							}
					    }
					}
				}
			}
		}
		if(strcmp(item,"casa",true) == 0 || strcmp(item,"puerta",true) == 0)
		{
			foreach(new p : Propiedades)
			{
				if(PropInfo[p][pEnUso] == 1)
				{
					if(PlayerInfo[playerid][p_DBID] == PropInfo[p][pIDPropietario])
					{
						if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW] && GetPlayerInterior(playerid) == PropInfo[p][pInteriorID])
						{
							if(PropInfo[p][pAbierta] == 0)
							{
							    new string[250];
								PropInfo[p][pAbierta] = 1;
								format(string,sizeof(string),"%s abre la puerta de su propiedad.",NombreJugador(playerid));
								ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
								GuardarPropiedad(p);
							}
							else Mensaje(playerid,-1,"Esta propiedad ya est� abierta, usa "CR"/cerrar puerta"CB" para cerrarla.");
							return 1;
						}
					}
				}
			}
		}
		return true;
	}
	if(sscanf(params, "s[10]", item))
	{
		return AbrirAuto(playerid);
        //if(contador == 0) Mensaje(playerid, -1, "Necesitas estar al lado de un veh�culo para poder abrirlo.");
	}
	return 1;
}

static AbrirAuto(playerid)
{
	new Float:Pos[3],contador = 0;
	for(new i = 0; i < MAX_PAUTOS; i++)
	{
		if(!IsValidVehicle(autos[i][playerid])) continue;
		GetVehiclePos(autos[i][playerid], Pos[0], Pos[1], Pos[2]);
		if(EstaEn(playerid, 5.0, Pos[0], Pos[1], Pos[2]))
		{
			if(VehicleInfo[playerid][i][vTraba] == 0) return Mensaje(playerid, COLOR_BLANCO, "Para poder abrir el veh�culo, necesitas instalar un sistema de traba. Puedes comprar uno en cualquier "CR"24/7");
			if(bloqueado[autos[i][playerid]] == 1)
			{
				GetVehicleParamsEx(autos[i][playerid], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autos[i][playerid], engine, lights, alarm, 0, bonnet, boot, objective);
				AccionesRol(playerid,"destrab� las puertas de su veh�culo.", 20);
				Mensaje(playerid,-1,""CB"Pulsa "CR"Espacio + Y "CB"para trabar las puertas de tu veh�culo.");
				PlayerPlaySound(playerid, 1145, Pos[0], Pos[1], Pos[2]);
				bloqueado[autos[i][playerid]] = 0;
				VehicleInfo[playerid][i][vSeguro] = 0;
			}
			else Mensaje(playerid,-1, "Este veh�culo ya est� abierto."),Mensaje(playerid,-1,""CB"Escribe "CR"/cerrar "CB"para trabar las puertas de tu veh�culo.");
			contador ++;
		}
	}
	return 1;
}

CMD:detener(playerid, params[])
{
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
	new carid = GetPlayerVehicleID(playerid);
	if(MotorAuto[carid] == 1)
	{
		new string[100];
		format(string, 100, "%s detuvo el motor de su veh�culo.",NombreJugador(playerid));
		GetVehicleParamsEx(carid, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(carid, 0, 0, alarm, doors, bonnet, boot, objective);
		ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
		MotorAuto[carid] = 0;
		Luces[carid] = 0;
	}
	return 1;
}

CMD:kill(playerid, params[])
{
	new estado = GetPlayerState(playerid);
    if(estado == 2 || estado == 3) return Mensaje(playerid, -1, "No puedes hacer esto dentro de un veh�culo.");
	if(Jail[playerid] == 1 || PlayerInfo[playerid][pTiempoJail] > 0 ||PlayerInfo[playerid][Agonizando] > 0 || VariableCaido[playerid] == 1) return 1;
	{
	    if(PlayerInfo[playerid][pTiempoJail] <= 0 && PlayerInfo[playerid][pTiempoCarcel] <= 0)
		{
		    suicidio[playerid] = 1;
			EstablecerVida(playerid, 0.0);
        }
	    else return Mensaje(playerid, -1, "No puedes hacer esto si estas en prisi�n.");
	}
	return 1;
}

CMD:m(playerid, params[])
{
	new text[128];
	if(!FaccLegal(playerid)) return 1;
	if(!IsPlayerInAnyVehicle(playerid)) return 1;
	if(PlayerInfo[playerid][pAdmin] >= ADMIN_LVL_GLOBAL2)
	{
	    if(!sscanf(params, "s[128]",text))
		{
		    new string[128];
			format(string, sizeof(string), "(Meg�fono) %s: �� "CB"%s{3399FF} !!",NombreJugador(playerid), text);
			if(PlayerInfo[playerid][pDuty] == 1) ProxDetector(60.0, playerid, string,TEAM_BLUE_COLOR,TEAM_BLUE_COLOR,TEAM_BLUE_COLOR,TEAM_BLUE_COLOR,TEAM_BLUE_COLOR);
			if(PlayerInfo[playerid][pDutyM] == 1) ProxDetector(60.0, playerid, string,0xDAA979FF,0xDAA979FF,0xDAA979FF,0xDAA979FF,0xDAA979FF);

        }
	}
	else
	{
		new vid = GetPlayerVehicleID(playerid);
		if(SAPD(vid) || MOTOSAPD(vid) || EDSA(vid))
		{
			if(!sscanf(params, "s[128]",text))
			{
				new string[128];
				format(string, sizeof(string), "(Meg�fono) %s: �� "CB"%s{3399FF} !!",NombreJugador(playerid), text);
				if(PlayerInfo[playerid][pDuty] == 1) ProxDetector(60.0, playerid, string,TEAM_BLUE_COLOR,TEAM_BLUE_COLOR,TEAM_BLUE_COLOR,TEAM_BLUE_COLOR,TEAM_BLUE_COLOR);
				if(PlayerInfo[playerid][pDutyM] == 1) ProxDetector(60.0, playerid, string,0xDAA979FF,0xDAA979FF,0xDAA979FF,0xDAA979FF,0xDAA979FF);
			}
		}
	}
	return 1;
}

CMD:puertaacademia(playerid)
{
	if(PlayerInfo[playerid][pDuty] == 1 && PlayerInfo[playerid][jMiembro] == 1)
	{
	    if(PlayerInfo[playerid][pRango] < 4) return Mensaje(playerid, COLOR_GREY, "Necesitas ser mayor de rango 4.");
	    if(!EnAcademia(playerid)) return Mensaje(playerid, -1, "No te encuentras en la academia.");
		if(YaEstaAbierta[29] == 0)
		{
			MoveDynamicObjectEx(PuertaAcademia,634.01001,-287.26999,1275.82996,2.5,0.00000,0.00000,207.00000);
			YaEstaAbierta[29] = 1;
		}
		else
		{
			MoveDynamicObjectEx(PuertaAcademia,634.01001,-287.26999,1275.82996,2.5,0.00000,0.00000,90.00000);
			YaEstaAbierta[29] = 0;
		}
		return 1;
	}
	else Mensaje(playerid, COLOR_GREY, "No eres SAPD.");
	return 1;
}

CMD:bar(playerid, params[])
{
	if(PlayerInfo[playerid][pDuty] == 1 && PlayerInfo[playerid][jMiembro] == 1)
	{
		if(IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid, COLOR_GREY, "Tienes que estar en el piso para usar este comando.");
		if(PlayerInfo[playerid][pRango] < 4) return Mensaje(playerid, COLOR_GREY, "Necesitas ser mayor de rango 4.");
		new string[128], Float:Position[4];
		for(new i; i<MAX_BARRICADES; i++)
		{
			if(Barricade[i] == 0)
			{
				new zone[MAX_ZONE_NAME];
				GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
				GetPlayerFacingAngle(playerid, Position[3]);
				Barricade[i] = CreateDynamicObject(978, Position[0], Position[1], Position[2]-0.1, 0.0, 0.0, Position[3]+180.0, -1, -1, -1, 200.0);
				SetPlayerPosAC(playerid, Position[0], Position[1], Position[2]+5);
				GetPlayer3DZone(playerid, zone, sizeof(zone));
				format(string, sizeof(string), "{3399FF}[Central de polic�a]"CB" Una barricada ha sido puesta por %s en %s.", NombreJugador(playerid), zone);
				SendRadioMessage(1,-1,string,INVALID_PLAYER_ID, 1);
				Mensaje(playerid, TEAM_BLUE_COLOR, "(( Puedes eliminar una barricada escribiendo /qb. ))");
				return 1;
			}
		}
		Mensaje(playerid, COLOR_GREY, "Todas las barreras disponibles se han desplegado.");
	}
	else Mensaje(playerid, COLOR_GREY, "No eres SAPD.");
	return 1;
}

CMD:bar2(playerid, params[])
{
	if(PlayerInfo[playerid][pDuty] == 1 && PlayerInfo[playerid][jMiembro] == 1)
	{
		if(IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid, COLOR_GREY, "Tienes que estar en el piso para usar este comando.");
		if(PlayerInfo[playerid][pRango] < 4) return Mensaje(playerid, COLOR_GREY, "Necesitas ser mayor de rango 4.");
		new string[128], Float:Position[4];
		for(new i; i<MAX_BARRICADES; i++)
		{
			if(Barricade[i] == 0)
			{
				new zone[MAX_ZONE_NAME];
				GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
				GetPlayerFacingAngle(playerid, Position[3]);
				Barricade[i] = CreateDynamicObject(1459, Position[0], Position[1], Position[2]-0.5, 0.0, 0.0, Position[3]+180.0, -1, -1, -1, 200.0);
				SetPlayerPosAC(playerid, Position[0], Position[1], Position[2]+5);
				GetPlayer3DZone(playerid, zone, sizeof(zone));
				format(string, sizeof(string), "{3399FF}[Central de polic�a]"CB" Una barricada ha sido puesta por %s en %s.", NombreJugador(playerid), zone);
				SendRadioMessage(1,-1,string,INVALID_PLAYER_ID, 1);
				Mensaje(playerid, TEAM_BLUE_COLOR, "(( Puedes eliminar una barricada escribiendo /qb. ))");
				return 1;
			}
		}
		Mensaje(playerid, COLOR_GREY, "Todas las barreras disponibles se han desplegado.");
	}
	else Mensaje(playerid, COLOR_GREY, "No eres SAPD.");
	return 1;
}

CMD:bar3(playerid, params[])
{
	if(PlayerInfo[playerid][pDuty] == 1 && PlayerInfo[playerid][jMiembro] == 1)
	{
		if(IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid, COLOR_GREY, "Tienes que estar en el piso para usar este comando.");
		if(PlayerInfo[playerid][pRango] < 4) return Mensaje(playerid, COLOR_GREY, "Necesitas ser mayor de rango 4.");
		new string[128], Float:Position[4];
		for(new i; i<MAX_BARRICADES; i++)
		{
			if(Barricade[i] == 0)
			{
				new zone[MAX_ZONE_NAME];
				GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
				GetPlayerFacingAngle(playerid, Position[3]);
				Barricade[i] = CreateDynamicObject(981, Position[0], Position[1], Position[2]-0.1, 0.0, 0.0, Position[3]+180.0, -1, -1, -1, 200.0);
				SetPlayerPosAC(playerid, Position[0], Position[1], Position[2]+5);
				GetPlayer3DZone(playerid, zone, sizeof(zone));
				format(string, sizeof(string), "{3399FF}[Central de polic�a]"CB" Una barricada ha sido puesta por %s en %s.", NombreJugador(playerid), zone);
				SendRadioMessage(1,-1,string,INVALID_PLAYER_ID, 1);
				Mensaje(playerid, TEAM_BLUE_COLOR, "(( Puedes eliminar una barricada escribiendo /qb. ))");
				return 1;
			}
		}
		Mensaje(playerid, COLOR_GREY, "Todas las barreras disponibles se han desplegado.");
	}
	else Mensaje(playerid, COLOR_GREY, "No eres SAPD.");
	return 1;
}

CMD:bengala(playerid, params[])
{
	if(PlayerInfo[playerid][pDuty] == 1 && PlayerInfo[playerid][jMiembro] == 1)
	{
		if(IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid, COLOR_GREY, "Tienes que estar en el piso para usar este comando.");
		if(PlayerInfo[playerid][pRango] < 4) return Mensaje(playerid, COLOR_GREY, "Necesitas ser mayor de rango 4.");
		new string[128], Float:Position[4];
		for(new i; i<MAX_BARRICADES; i++)
		{
			if(Barricade[i] == 0)
			{
				new zone[MAX_ZONE_NAME];
				GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
				GetPlayerFacingAngle(playerid, Position[3]);
				Barricade[i] = CreateDynamicObject(18728, Position[0], Position[1], Position[2]-2.8, 0.0, 0.0, Position[3]+180.0, -1, -1, -1, 200.0);
				GetPlayer3DZone(playerid, zone, sizeof(zone));
				format(string, sizeof(string), "{3399FF}[Central de polic�a]"CB" Una barricada ha sido puesta por %s en %s.", NombreJugador(playerid), zone);
				SendRadioMessage(1,-1,string,INVALID_PLAYER_ID, 1);
				Mensaje(playerid, TEAM_BLUE_COLOR, "(( Puedes eliminar una barricada escribiendo /qb. ))");
				return 1;
			}
		}
		Mensaje(playerid, COLOR_GREY, "Todas las barreras disponibles se han desplegado.");
	}
	else Mensaje(playerid, COLOR_GREY, "No eres SAPD.");
	return 1;
}

CMD:cono(playerid, params[])
{
	if(PlayerInfo[playerid][pDuty] == 1 && PlayerInfo[playerid][jMiembro] == 1)
	{
		if(IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid, COLOR_GREY, "Tienes que estar en el piso para usar este comando.");
		if(PlayerInfo[playerid][pRango] < 4) return Mensaje(playerid, COLOR_GREY, "Necesitas ser mayor de rango 4.");
		new string[128], Float:Position[4];
		for(new i; i<MAX_BARRICADES; i++)
		{
			if(Barricade[i] == 0)
			{
				new zone[MAX_ZONE_NAME];
				GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
				GetPlayerFacingAngle(playerid, Position[3]);
				Barricade[i] = CreateDynamicObject(1238, Position[0], Position[1], Position[2]-0.7, 0.0, 0.0, Position[3]+180.0, -1, -1, -1, 200.0);
				GetPlayer3DZone(playerid, zone, sizeof(zone));
				format(string, sizeof(string), "{3399FF}[Central de polic�a]"CB" Una barricada ha sido puesta por %s en %s.", NombreJugador(playerid), zone);
				SendRadioMessage(1,-1,string,INVALID_PLAYER_ID, 1);
				Mensaje(playerid, TEAM_BLUE_COLOR, "(( Puedes eliminar una barricada escribiendo /qb. ))");
				return 1;
			}
		}
		Mensaje(playerid, COLOR_GREY, "Todas las barreras disponibles se han desplegado.");
	}
	else Mensaje(playerid, COLOR_GREY, "No eres SAPD.");
	return 1;
}

CMD:qb(playerid, params[])
{
	if(PlayerInfo[playerid][pDuty] == 1 && PlayerInfo[playerid][jMiembro] == 1)
	{
		if(IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid, COLOR_GREY, "Tienes que estar en el piso para usar este comando.");
		if(PlayerInfo[playerid][pRango] < 4) return Mensaje(playerid, COLOR_GREY, "Necesitas ser mayor de rango 4.");
		new string[128], Float:Position[3];
		for(new i; i<MAX_BARRICADES; i++)
		{
			GetDynamicObjectPos(Barricade[i], Position[0], Position[1], Position[2]);
			if(EstaEn(playerid, 5.0, Position[0], Position[1], Position[2]))
			{
				DestroyDynamicObjectEx(Barricade[i]);
				Barricade[i] = 0;
				new zone[MAX_ZONE_NAME];
				GetPlayer3DZone(playerid, zone, sizeof(zone));
				format(string, sizeof(string), "{3399FF}[Central de polic�a]"CB" Un bloqueo a sido destruido por %s en %s.", NombreJugador(playerid), zone);
				SendRadioMessage(1,-1,string,INVALID_PLAYER_ID, 1);
				return 1;
			}
		}
		Mensaje(playerid, COLOR_GREY, "No est�s cerca de las barricadas.");
	}
	else Mensaje(playerid, COLOR_GREY, "No eres SAPD.");
	return 1;
}

CMD:puas(playerid, params[])
{
	if(PlayerInfo[playerid][pDuty] == 1 && PlayerInfo[playerid][jMiembro] == 1)
	{
		if(PlayerInfo[playerid][pRango] > 4)
		{
			Mensaje(playerid, -1, "Puas Actuales:");
			for(new i, string[58 + MAX_PLAYER_NAME]; i < sizeof(SpikeStrips); i++)
			{
				if(SpikeStrips[i][sX] != 0)
				{
					format(string, sizeof(string), "HQ: Pua ID: %d | Localizaci�n: %s | Puesto por: %s", i, SpikeStrips[i][sDeployedAt], SpikeStrips[i][sDeployedBy]);
					Mensaje(playerid, COLOR_GRAD2, string);
				}
			}
		}
		else Mensaje(playerid, COLOR_GRAD2, "Necesitas ser mayor de rango 4.");
	}
	else Mensaje(playerid, COLOR_GREY, "No eres SAPD.");
	return 1;
}

CMD:ppua(playerid, params[])
{
	if(PlayerInfo[playerid][pDuty] == 1 && PlayerInfo[playerid][jMiembro] == 1)
	{
		if(PlayerInfo[playerid][pRango] > 4)
		{
			for(new i; i < sizeof(SpikeStrips); i++)
			{
				if(SpikeStrips[i][sX] == 0)
				{
					new	Float: f_TempAngle, string[128];
					GetPlayerPos(playerid, SpikeStrips[i][sX], SpikeStrips[i][sY], SpikeStrips[i][sZ]);
					GetPlayerFacingAngle(playerid, f_TempAngle);
					SpikeStrips[i][sObjectID] = CreateDynamicObject(2899, SpikeStrips[i][sX], SpikeStrips[i][sY], SpikeStrips[i][sZ]-0.8, 0.0, 0.0, f_TempAngle);
					GetPlayer3DZone(playerid, SpikeStrips[i][sDeployedAt], MAX_ZONE_NAME);
					SpikeStrips[i][sDeployedBy] = NombreJugador(playerid);
					format(string,sizeof(string),"Pua ID: %d fue creado exitosamente.", i);
					Mensaje(playerid, -1, string);
					format(string, sizeof(string), "{3399FF}[Central de polic�a]"CB" Una barrera de Puas fue puesta por %s en %s.", NombreJugador(playerid), SpikeStrips[i][sDeployedAt]);
					SendRadioMessage(1,-1,string,INVALID_PLAYER_ID, 1);
					Mensaje(playerid, TEAM_BLUE_COLOR, "(( Puedes remover la barrera de puas usando /qpua. ))");
					return 1;
				}
			}
			Mensaje(playerid, -1, "No es posible generar m�s puas, l�mite es de 20." );
		}
		else Mensaje(playerid, COLOR_GRAD2, "Necesitas ser mayor de rango 4.");
	}
	else Mensaje(playerid, COLOR_GREY, "No eres SAPD.");
	return 1;
}

CMD:qpua(playerid, params[])
{
	if(isnull(params)) return Mensaje(playerid, -1, "USA: /qpua [id]");
	if(PlayerInfo[playerid][pDuty] == 1 && PlayerInfo[playerid][jMiembro] == 1)
	{
		if(PlayerInfo[playerid][pRango] > 4)
		{
			new id = strval(params);
			if(!(0 <= id <= sizeof(SpikeStrips)) || SpikeStrips[id][sX] == 0)
			{
				return Mensaje(playerid, -1, "Pua ID Inv�lido.");
			}
			else
			{
				new string[43 + MAX_PLAYER_NAME + MAX_ZONE_NAME];
				DestroyDynamicObjectEx(SpikeStrips[id][sObjectID]);
				SpikeStrips[id][sX] = 0; SpikeStrips[id][sY] = 0; SpikeStrips[id][sZ] = 0;
				format(string,sizeof(string),"Pua ID: %d borrado.", id);
				Mensaje(playerid, -1, string);
				new zone[MAX_ZONE_NAME];
				GetPlayer3DZone(playerid, zone, sizeof(zone));
				format(string, sizeof(string), "{3399FF}[Central de polic�a]"CB" Una barrera de Puas a sido borrado por %s en %s.", NombreJugador(playerid), zone);
				SendRadioMessage(1,-1,string,INVALID_PLAYER_ID, 1);
				return 1;
			}
		}
		else Mensaje(playerid, COLOR_GRAD2, "Necesitas ser mayor de rango 4.");
	}
	else Mensaje(playerid, COLOR_GREY, "No eres SAPD.");
	return 1;
}

CMD:miranda(playerid, params[])
{
	if(FaccLegal2(playerid))
    {
        new string[128];
        format(string, sizeof(string),"%s dice: Tienes derecho a guardar silencio, todo lo que diga puede usarse en su contra.",NombreJugador(playerid));
        ProxDetector(20.0, playerid, string, CHAT,CHAT2,CHAT3,CHAT4,CHAT5);
        format(string, sizeof(string),"%s dice: Tiene derecho a un abogado, si no puede pagar uno, se le asignar� uno a costas del Estado.",NombreJugador(playerid));
        ProxDetector(20.0, playerid, string, CHAT,CHAT2,CHAT3,CHAT4,CHAT5);
        format(string, sizeof(string),"%s dice: Tiene derecho a una llamada por tel�fono.",NombreJugador(playerid));
        ProxDetector(20.0, playerid, string, CHAT,CHAT2,CHAT3,CHAT4,CHAT5);
        format(string, sizeof(string),"%s dice: �De acuerdo se�or?",NombreJugador(playerid));
        ProxDetector(20.0, playerid, string, CHAT,CHAT2,CHAT3,CHAT4,CHAT5);
    }
    return 1;
}

CMD:cargos(playerid, params[])
{
    new Float:pos[3],string[148],texto[100],id,cargos;
    if(!FaccLegal2(playerid)) return 1;
	if(sscanf(params,"rd", id, cargos)) return Mensaje(playerid, -1, "Por favor, usa "CR"/cargos [id] [0-6]"CB".");
	if(!IsPlayerConnected(id)) return Mensaje(playerid,COLORCARGO0,"No se encontr� ning�n jugador.");
	if(IsPlayerNPC(id)) return Mensaje(playerid,COLORCARGO0,"No puedes ponerle cargos a un npc.");
	if(PlayerInfo[id][jMiembro] == 1 && cargos != 0) return Mensaje(playerid,-1,""CR"Le est�s intentado poner nivel de b�squeda a un polic�a.");
	if(PlayerInfo[id][jMiembro] == 2 && cargos != 0) return Mensaje(playerid,-1,""CR"Le est�s intentado poner nivel de b�squeda a un militar.");
	if(PlayerInfo[id][pCargos] == cargos) return Mensaje(playerid,-1,"Ese jugador ya tiene ese cargo.");
	if(cargos < 0 || cargos > 6) return Mensaje(playerid,-1,"Por favor, usa "CR"/c [id] [0-6]"CB".");
	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	if(!EstaEn(id, 400.0, pos[0], pos[1], pos[2])) return Mensaje(playerid,-1,"Debes estar a 400 metros de la persona para colocarle cargos.");
	{
	    DarEstrella(id,cargos);
	    ReportCrimen(id,cargos);
		if(PlayerInfo[id][jMiembro] == 1) SetPlayerColor(id, TEAM_BLUE_COLOR);
		if(cargos == 0) format(PlayerInfo[id][QuienC],6,"Nadie"),Advertido[id] = 0;
		else format(PlayerInfo[id][QuienC],MAX_PLAYER_NAME+1,"%s",NombreJugador(playerid));
		switch(cargos)
		{
			case 0: MarcarJugador(id,COLORCARGO0,1),format(texto,sizeof(texto),"no es sospechoso, lo dejo libre");
			case 1:
			{
				MarcarJugador(id,COLORCARGO1,1),format(texto,sizeof(texto),"parece sospechoso, lo voy a interrogar");
				Mensaje(id, COLOR_SERVER, "La policia quiere hablar con usted, si se da a la fuga, sera arrestado.");
			}
			case 2: MarcarJugador(id,COLORCARGO2,1),format(texto,sizeof(texto),"se da a la fuga, empiezo persecuci�n");
			case 3: MarcarJugador(id,COLORCARGO3,1),format(texto,sizeof(texto),"se encuentra armado, prosigan con precauci�n");
			case 4: MarcarJugador(id,COLORCARGO4,1),format(texto,sizeof(texto),"abri� fuego, necesito refuerzos");
			case 5: MarcarJugador(id,COLORCARGO5,1),format(texto,sizeof(texto),"cometi� un asesinato, procedan a disparar");
			case 6: MarcarJugador(id,COLORCARGO6,1),format(texto,sizeof(texto),"es extremadamente peligroso, capturenlo vivo o muerto");
		}
		format(string, sizeof(string), "[Radio] (%s %s) dice: %s %s", RangoPolicia(playerid), NombreJugador(playerid), NombreJugador(id),texto);
		ProxDetector(20.0, playerid, string,-1,ColorChatNormal1,ColorChatNormal2,ColorChatNormal3,ColorChatNormal4);
		format(string, sizeof(string), "[Radio de polic�a]"CB" %s reportando: "CR"%s"CB" [%d] %s. "CR"(%d)*", NombreJugador(playerid), NombreJugador(id),id,texto,cargos);
	 	SendRadioMessage(1, TEAM_BLUE_COLOR, string,playerid, 1);
		SendRadioMessage(2, TEAM_BLUE_COLOR, string,playerid, 1);
		if(cargos == 0)
		{
			format(string, sizeof(string), "El ~b~%s %s~w~ te ha ~g~removido~w~ tus cargos.", RangoPolicia(playerid), NombreJugador(playerid));
		}
		else
		{
			format(string, sizeof(string), "El ~b~%s %s~w~ te ha colocado ~r~%d cargo(s)~w~.", RangoPolicia(playerid), NombreJugador(playerid), cargos);
		}
		
		ShowTDN(id, string);

		/*if(PlayerInfo[playerid][pDuty] == 0 && PlayerInfo[playerid][jMiembro] == 1)
		{
			if(cargos == 1) Mensaje(id,-1,"Un policia de civil te quit� los cargos.");
			else Mensaje(id,-1,"Un policia de civil te puso cargos.");
		}
		if(PlayerInfo[playerid][pDutyM] == 0 && PlayerInfo[playerid][jMiembro] == 2)
		{
			if(cargos == 1) Mensaje(id,-1,"Un militar de civil te quit� los cargos.");
			else Mensaje(id,-1,"Un militar de civil te puso cargos.");
		}*/
 	}
   	return 1;
}

CMD:radio(playerid, params[])
{
	new item[4];
	if(PlayerInfo[playerid][pRadio] != 1) return Mensaje(playerid, -1,"Tu no tienes un radio comunicador, puedes comprar uno en un 24/7.");
	if(sscanf(params, "s[4]", item)) return Mensaje(playerid, -1,"Utiliza "CR"/radio [on/off]");
	{
		if(strcmp(item,	"on",true) == 0)
		{
			if(EstadoRadio[playerid] == 1) return Mensaje(playerid,-1,"Tu radio ya esta encendida.");
			new string[60];
			format(string, 60, "%s enciende su radio comunicador.", NombreJugador(playerid));
			EstadoRadio[playerid] = 1;
			if(PlayerTemp[playerid][Specteando] == 0) ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
		}
		if(strcmp(item, "off", true) == 0)
		{
			if(EstadoRadio[playerid] == 0) return Mensaje(playerid,-1,"Tu radio ya esta apagada.");
			new string[60];
			format(string, 60, "%s apag� su radio comunicador.", NombreJugador(playerid));
			EstadoRadio[playerid] = 0;
			if(PlayerTemp[playerid][Specteando] == 0) ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
		}
	}
	return 1;
}

CMD:n(playerid, params[])
{
	new texto[128],string[373];
	if(GetPlayerScore(playerid) == 0) return ExpulsarJugador(playerid, "Error (1899)");
	if(DudaEstado == 1) return Mensaje(playerid,-1,"El canal de dudas esta deshabilitado temporalmente.");
	if(CanalDudas[playerid] == 0) return Mensaje(playerid,-1,"Tienes el canal de dudas desactivado.");
	if(sscanf(params,"s[128]",texto)) return Mensaje(playerid,-1,"Usa "CR"/n "CB"("CR"y tu pregunta"CB") para recibir ayuda de otros jugadores.");
	if(PlayerInfo[playerid][pTiempoJail] > 0) return Mensaje(playerid, 0x3AA000FF, "No puedes usar el canal de dudas mientras est�s sancionado.");
	if(TiempoDuda[playerid] > gettimeVariable)
	{
		return va_SendClientMessage(playerid,-1,"No se te permite hablar por el chat de ayuda. Espera "CR"%s"CB" para enviar otra consulta al canal de ayuda.", FormatTimeleft(TiempoDuda[playerid]-gettimeVariable));
	}
	if(PlayerInfo[playerid][pAdmin] == 0)
	{
		format(string,sizeof(string),""CB"Estas por utilizar el canal de dudas\n\nEl Canal de dudas es unicamente para solicitar ayuda de otros jugadores\no responder las preguntas de los jugadoresNo mal uses el canal de dudas\ncomo por ejemplo para comunicarte con tus amigos, Si lo haces puedes\nser sancionado o hasta baneado.\n\n                  �Quieres enviar la pregunta o respuesta de la pregunta?");
		MostrarDialog(playerid, DAYUDA, DIALOG_STYLE_MSGBOX, ""CR"�ANTECI�N!",string,"Si","No");
		DudaTexto[playerid] = texto;
	}
	if(PlayerInfo[playerid][pAdmin] > 0) return DudaAdmin(playerid, params);
	return 1;
}

CMD:hora(playerid,params[])
{
	new hour, minute, second, string[180];
	new day,month,year;
	gettime(hour,minute,second);
	getdate(year,month,day);
	format(string, sizeof(string),""CB"Fecha y hora actual del servidor: "CR"%02d/%02d/%02d %02d:%02d:%02d.", day,month,year,hour,minute,second);
	Mensaje(playerid,-1,string);
	return 1;
}

CMD:intentar(playerid, params[])
{
	if(!isnull(params))
	{
		new string[128];
		format(string, 128, "%s intenta %s %s", NombreJugador(playerid), params, ((random(2)) ? ("y lo logra.") : ("y no puede.")));
		ProxDetector(30.0, playerid, string,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
	}
	else Mensaje(playerid, COLORCARGO0, "Usa "CR"/intentar [texto]"CB" para intentar una acci�n.");
	return 1;
}

CMD:p(playerid, params[])
{
	if(!isnull(params))
	{
		new string[128];
		format(string, sizeof(string), "* %s (( %s ))", params, NombreJugador(playerid));
		return ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
	}
	else Mensaje(playerid, COLORCARGO0, "Usa "CR"/p [Entorno]");
	return 1;
}

CMD:folleto(playerid, params[])
{
	if(!isnull(params))
	{
		new string[128];
		format(string, sizeof(string), "* %s tira folletos al aire.", NombreJugador(playerid));
		ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
		format(string, sizeof(string), "* [Folleto]: %s (( %s ))", params, NombreJugador(playerid));
		ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
		return 1;
	}
	else Mensaje(playerid, COLORCARGO0, "Usa "CR"/folleto [mensaje]");
	return 1;
}

CMD:do(playerid, params[])
{
	if(!isnull(params))
	{
		new string[128];
		format(string, sizeof(string), "* %s (( %s ))", params, NombreJugador(playerid));
		ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
		return Mensaje(playerid,-1,"Asegurate de utilizar "CR"/p"CB" en lugar de "CR"/do"CB", en futuras actualizaciones este comando puede eliminarse.");
	}
	else Mensaje(playerid, COLORCARGO0, "Usa "CR"/do [Entorno]");
	return 1;
}

CMD:d(playerid,params[])
{
	new text[128],string[128];
	if(sscanf(params,"s[128]",text)) return Mensaje(playerid,-1,"Utiliza "CR"/d [Texto]");
	format(string, sizeof(string), "%s dice: %s",NombreJugador(playerid), text);
	ProxDetector(15.0, playerid, string,CHAT,CHAT2,CHAT3,CHAT4,CHAT5);
	return 1;
}

CMD:b(playerid, params[])
{
    if(GetPlayerScore(playerid) == 0) return ExpulsarJugador(playerid, "Error (18877)");
	if(!isnull(params))
	{
		new string[128];
		if(PlayerInfo[playerid][pAdmin] > 0) format(string, sizeof(string), "[%s] %s: (( %s ))", RangoAdmin[PlayerInfo[playerid][pAdmin]],NombreJugador(playerid), params);
		else format(string, sizeof(string), "%s: (( %s ))",NombreJugador(playerid), params);
		ProxDetector(15.0, playerid, string,COLORCARGO0,COLORCARGO0,COLORCARGO0,CHAT,CHAT2);
	}
	else Mensaje(playerid, COLORCARGO0, "Usa "CR"/b [Texto]");
	return 1;
}

CMD:g(playerid, params[])
{
	if(!isnull(params))
	{
		new string[128];
		format(string, sizeof(string), "%s grita: � %s !", NombreJugador(playerid), params);
		ProxDetector(30.0, playerid, string,COLORCARGO0,COLORCARGO0,COLORCARGO0,CHAT,CHAT2);

		format(string, sizeof(string), "� %s !", params);
		SetPlayerChatBubble(playerid,string,COLORCARGO0,60.0,5000);
	}
	else Mensaje(playerid, COLORCARGO0, "Usa "CR"/g [Texto]");
	return 1;
}

CMD:s(playerid, params[])
{
	if(!isnull(params))
	{
		new string[128];
		format(string, sizeof(string), "%s susurra: %s", NombreJugador(playerid), params);
		ProxDetector(5.0, playerid, string,CHAT,CHAT2,CHAT3,CHAT4,CHAT5);
	}
	else Mensaje(playerid, COLORCARGO0, "Usa "CR"/s [Texto]");
	return 1;
}

CMD:y(playerid, params[])
{
	if(!isnull(params))
	{
		new string[128];
		format(string, sizeof(string), "* %s %s", NombreJugador(playerid), params);
		return ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
	}
	else Mensaje(playerid, COLORCARGO0, "Usa "CR"/y [Texto]");
	return 1;
}

CMD:me(playerid, params[])
{
	if(!isnull(params))
	{
		new string[128];
		format(string, sizeof(string), "* %s %s", NombreJugador(playerid), params);
		ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
		return Mensaje(playerid,-1,"Por favor acost�mbrate a usar "CR"/y"CB" en lugar de "CR"/me"CB", ya que en futuras versiones el comando dejar� de existir.");
	}
	else Mensaje(playerid, COLORCARGO0, "Usa "CR"/y [Texto]");
	return 1;
}

CMD:daruniforme(playerid, params[])
{
	if(PlayerInfo[playerid][pDuty] == 1 && PlayerInfo[playerid][jMiembro] == 1 && PlayerInfo[playerid][pRango] == 8)
	{
		new string[128], giveplayerid, uniforme;
		if(sscanf(params, "rd", giveplayerid, uniforme))
		{
			Mensaje(playerid, -1, "USA: "CR"/daruniforme [playerid] [uniforme]");
			Mensaje(playerid, COLOR_SERVER, "Uniformes Hombre: 71, 265, 266, 267, 280, 281, 282, 283, 284, 285, 288, 302, 310, 311.");
			Mensaje(playerid, COLOR_SERVER, "Uniformes Mujer:  211, 306, 307, 309.");
			return 1;
		}
		if(PlayerInfo[playerid][jMiembro] != 1) return Mensaje(playerid, -1, "No puedo asignar un uniforme a alguien que no es policia.");
		if(uniforme == 265 || uniforme == 266 || uniforme == 267 || uniforme == 280 || uniforme == 281 || uniforme == 284 || uniforme == 211 || uniforme == 306 || uniforme == 307 || uniforme == 311 || uniforme == 310 || uniforme == 309 || uniforme == 302 || uniforme == 288 || uniforme == 285 || uniforme == 283 || uniforme == 282 || uniforme == 71)
		{
			PlayerInfo[giveplayerid][pModelo] = uniforme;
			format(string, sizeof(string), "%s %s te asigno el uniforme de policia con el ID %d.", RangoPolicia(playerid), NombreJugador(playerid),uniforme);
			Mensaje(giveplayerid,-1,string);
			format(string, sizeof(string), " Cambiaste el uniforme de policia de %s a %d.", NombreJugador(giveplayerid), uniforme);
			Mensaje(playerid,-1,string);
			return 1;
		}
	}
	else Mensaje(playerid, -1, "No puedes usar este comando.");
	return 1;
}

CMD:expulsar(playerid,params[])
{
	new id,string[144];
	new estado = GetPlayerState(playerid);
	if(!sscanf(params,"r",id))
	{
		if(estado == PLAYER_STATE_ONFOOT)
		{
	    	if(Alquilado == false) return Mensaje(playerid,-1,"El sal�n debe estar alquilado.");
	    	if(strcmp(NombreJugador(playerid),Alquilador,true) == 0 || PermisoSalon[playerid] == true)
	    	{
	            if(IsPlayerConnected(id))
	            {
	                if(EnSalonEvento(id) || EnSalonEvento2(id))
	                {
						if(strcmp(NombreJugador(id),Alquilador,true) == 0) return Mensaje(playerid,-1,"No puedes expulsar a esa persona del sal�n.");
	    				SetPlayerPosAC(id,1423.4301,-1180.1801,25.9922);
	    				SetPlayerVirtualWorld(id,0);
	    				SetPlayerInterior(id,0);
	    				format(string,sizeof(string),"Los guardias agarran a %s del brazo y lo expulsan del sal�n.",NombreJugador(id));
						ProxDetector(30.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
	    				Mensaje(id,-1,"Los guardias de seguridad te sacaron del sal�n de eventos.");
						format(string,sizeof(string),"El jugador "CR"%s"CB" expulso a "CR"%s"CB" del sal�n de eventos.", NombreJugador(playerid), NombreJugador(id));
						MandarMensajeSalon(string, playerid);
	    				Boleto[id] = false;
						if(strcmp(NombreJugador(playerid),Alquilador,true) == 0) PermisoSalon[id] = false;
	                }
	                else Mensaje(playerid,-1,"El jugador debe estar dentro del sal�n.");
	            }
	            else Mensaje(playerid,-1,"Ese jugador est� desconectado.");
	    	}
	    	else Mensaje(playerid,-1,"No tienes permiso para expulsar a esa persona.");
		}
		else if(estado == PLAYER_STATE_DRIVER)
		{
			if(IsPlayerConnected(id))
			{
				if(id == playerid) return Mensaje(playerid, -1, "�No te puedes echar a ti mismo!");
				if(IsPlayerInAnyVehicle(id))
				{
					if(GetPlayerVehicleID(playerid) == GetPlayerVehicleID(id))
					{
						if(gettimeVariable > TiempoExpulsar[playerid])
						{
							new resulT = random(2);
							switch(resulT)
							{
							    case 0: format(string, sizeof(string), "%s intenta bajar a %s de su veh�culo y lo logra.",NombreJugador(playerid), NombreJugador(id)),RemovePlayerFromVehicle(id);
							    case 1: format(string, sizeof(string), "%s intenta bajar a %s de su veh�culo y no lo logra.",NombreJugador(playerid),NombreJugador(id));
							}
							ProxDetector(30.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
							return TiempoExpulsar[playerid] = gettimeVariable + 60;
						}
						else return va_SendClientMessage(playerid,-1,"El comando "CR"/expulsar"CB" solo se puede usar una vez por minuto. Por favor espera "CR"%d"CB" segundos.", TiempoExpulsar[playerid] - gettimeVariable);
					}
					else Mensaje(playerid, -1, "El jugador no est� en tu veh�culo.");
				}
				else Mensaje(playerid, -1, "El jugador no est� en un veh�culo.");
			}
			else Mensaje(playerid, -1, "Jugador desconectado.");
		}
	}
	return true;
}

CMD:sincronizar(playerid,params[])
{
	if(Alquilado == false) return true;
	if(!EnSalonEvento(playerid)) return true;
	new string[100];
	if(strcmp(Alquilador,NombreJugador(playerid),true) == 0 || PermisoSalon[playerid] == true)
	{
		foreach(new i : Player)
  		{
			if(EnSalonEvento(i))
			{
				if(ShowSound[i] == 1)
				{
					new mensa[128];
					format(mensa,sizeof(mensa),"http://radio."WebName":8000/listen.pls?sid=%d", PuertoSalon);
					PlayAudioStreamForPlayer(i, mensa);
				}
			}     
	    }
		format(string,sizeof(string),"El jugador "CR"%s"CB" us� el comando "CR"/sincronizar"CB".", NombreJugador(playerid));
		MandarMensajeSalon(string, playerid);
	}
	return true;
}

CMD:alquilar(playerid,params[])
{
	if(strcmp(params[0],"salon",true) == 0)
	{
	    if(EstaEn(playerid,5,-1250.3397,2093.7437,1246.6360))
	    {
	        if(Alquilado == false)
	        {
	            if(Boleto[playerid] == true) return Mensaje(playerid,-1,"Ya compraste una entrada.");
				MostrarDialog(playerid,AlquilarSalon1,DIALOG_STYLE_INPUT,"Alquiler de sal�n","Tiempo en horas:","Siguiente","Salir");
	        }
	        else Mensaje(playerid,-1,"El sal�n ya se encuentra alquilado.");
	    }
	    else Mensaje(playerid,-1,"No est�s en donde se alquila el sal�n.");
	}
	return true;
}

CMD:buscar(playerid, params[])
{
    if(PlayerInfo[playerid][pDuty] != 1) return 1;
	MostrarDialog(playerid, BUSCARCOCHE, DIALOG_STYLE_LIST, "Buscar informaci�n:", "Veh�culo", "Proximo", "Cancelar");
    return 1;
}

CMD:varsde(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 3) return 0;
	new idplayer = strval(params),szMessage[150];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(isnull(params)) return Mensaje(playerid, COLOR_GREY, "USA: /varsde [id]");
	format(szMessage, sizeof(szMessage), "[%d] = (Nivel: %d - Logeo: %d)", GetPlayerScore(idplayer), LogeoCorrecto[idplayer]);
	Mensaje(playerid, TEAM_BLUE_COLOR, szMessage);
	return 1;
}

CMD:id(playerid, params[])
{
	new string[128], giveplayerid, day,month,year, hour, minute, second;
	gettime(hour,minute,second);
	getdate(day,month,year);
	if(sscanf(params, "r", giveplayerid)) return Mensaje(playerid, -1, "Para ver el ID de una persona, escribe /id [nombre_apellido]");
	else if (!IsPlayerConnected(giveplayerid)) Mensaje(playerid,COLOR_BLANCO,"No se encontr� ning�n jugador.");
	else
	{
		new score = GetPlayerScore(giveplayerid);
		if(score == 0) Mensaje(playerid, -1, "El jugador est� conectado pero a�n no ha ingresado al juego.");
		else
		{
		    if(giveplayerid == playerid)
			{
			    format(string, sizeof(string), "El jugador "CR"%s"CB" tiene el ID: {FF0000}%d"CB". (Nivel: {e77d31}%d"CB")", NombreJugador(giveplayerid), giveplayerid , PlayerInfo[giveplayerid][jNivel]);
				Mensaje(playerid, -1, string);
				format(string, sizeof(string), "Detalles (Ping: %s | PL: %.2f)", StringPing(playerid),NetStats_PacketLossPercent(playerid));
				Mensaje(playerid, -1, string);
		    }
			else if( giveplayerid != playerid)
			{
				Mensaje(playerid,-1," ");
				format(string, sizeof(string),""CB"Fecha y Hora Actual del Servidor: "CR"%02d/%02d/%02d %02d:%02d:%02d.", day,month,year,hour,minute,second);
				Mensaje(playerid,-1,string);
				format(string, sizeof(string), "El jugador "CR"%s"CB" tiene el ID: {FF0000}%d"CB". (Nivel: {e77d31}%d"CB")", NombreJugador(giveplayerid), giveplayerid , PlayerInfo[giveplayerid][jNivel]);
				Mensaje(playerid, -1, string);
				format(string, sizeof(string), "Detalles (Ping: %s | PL: %.2f | Cod: {AFAFAF}#%d"CB" | Ping propio: %s)", StringPing(giveplayerid),NetStats_PacketLossPercent(giveplayerid),PlayerInfo[giveplayerid][p_DBID]+245100,StringPing(playerid));
				Mensaje(playerid, -1, string);
				if(PlayerInfo[giveplayerid][pAdmin] > 0) Mensaje(playerid,-1, "Ese jugador es "CR"STAFF"CB".");
				else Mensaje(playerid,-1, "Ese jugador "CR"no"CB" es STAFF.");
				
			}
		}
	}
	return 1;
}

CMD:acomodar(playerid,params[])
{
	new opcion[8];
	if(!sscanf(params,"s[8]",opcion)) { if(strcmp(opcion,"prenda",true) == 0 || strcmp(opcion,"prendas",true) == 0) return MostrarMenu(playerid,3); }
	return true;
}

CMD:iniciar(playerid, params[])
{
	if(PlayerInfo[playerid][pDuty] == 1 && PlayerInfo[playerid][jMiembro] == 1)
	{
		if(PlayerInfo[playerid][pRango] < 3) return Mensaje(playerid, -1, "Necesitas ser mayor de rango 3.");
		new id;
		if(sscanf(params,"d",id)) return Mensaje(playerid,-1,"Usa "CR"/iniciar [id]");
		if(!IsPlayerConnected(id)) return Mensaje(playerid,-1,"No se encontr� ning�n jugador.");
		if(!EnAcademia(id)) return Mensaje(playerid, -1, "Ese jugador no se encuentra en la academia.");
		else
		{
		    Mensaje(playerid, -1, "Iniciaste el recorrido para ese jugador.");
		    Mensaje(id, -1, "Para iniciar el recorrido, ingresa al primer {FF3300}punto de control"CB" y continua a los siguientes.");
			BorrarCheckpoint(id);
			CrearCheckpoint(playerid,635.3787,-222.2007,1276.7941, 3.0);
			EnPrueba[id] = true;
			return 1;
		}
	}
	else Mensaje(playerid, -1, "No eres SAPD.");
	return 1;
}

CMD:regalo(playerid, params[])
{
    if(ArbolStatus == 0) return 1;
	new dia, mes, ano, Float:Position[3], string[150];
	getdate(ano, mes, dia);
	GetDynamicObjectPos(dynamicgift[17], Position[0], Position[1], Position[2]);
	if(EstaEn(playerid, 10.0, Position[0], Position[1], Position[2]))
	{
	    if(mes == 12 && dia > 24)
		{
			if(PlayerInfo[playerid][jRegalo] == 1) return Mensaje(playerid, -1, "Ya has recibido tu regalo.");
			PlayerInfo[playerid][jRegalo] = 1;
			format(string, 150,"%s abre su regalo de navidad.", NombreJugador(playerid));
			ProxDetector(15.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
			if(PlayerInfo[playerid][jNivel] <= 3) AbrirRegalo2(playerid);
			else AbrirRegalo(playerid);
		}
		else Mensaje(playerid, -1, "A partir del d�a 25 de diciembre puedes recibir tu "CR"/regalo"CB".");
	}
	else Mensaje(playerid, -1, "No est�s cerca del arbol de navidad frente a LSPD.");
	return 1;
}

CMD:config(playerid,params[]) return MostrarConfig(playerid);

CMD:tiempo(playerid,params[])
{
	new id, string[45];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return VerTiempos(playerid,playerid);
	if(sscanf(params,"d",id)) return VerTiempos(playerid,playerid);
	if(IsPlayerConnected(id))
	{
		format(string,128,"TIEMPO DE %s", NombreJugador(id));
		Mensaje(playerid,COLOR_ROJO,string);
		VerTiempos(playerid,id);
	}
	return 1;
}

CMD:inventario(playerid,params[])
{
	new ID,string[70];
	if(sscanf(params, "d", ID)) return Inventario(playerid,playerid);
	if(PlayerInfo[playerid][pAdmin] >= ADMIN_LVL_JUEGO1 && IsPlayerConnected(ID))
	{
	    if(PlayerInfo[ID][pAdmin] > PlayerInfo[playerid][pAdmin]) return 0;
		format(string,128,"INVENTARIO DE %s (%d)",NombreJugador(ID), ID);
		Mensaje(playerid,COLOR_ROJO,string);
		Inventario(ID,playerid);
	}
	return 1;
}


CMD:localizar(playerid, params[])
{
	new item[11];
	if(!sscanf(params,"s[10]",item))
	{
	    if(strcmp(item,"propiedad",true)==0)
		{
    		LocalizarPropiedad(playerid);
		}
		if(strcmp(item,"vehiculo",true)==0)
		{
    		Localizar(playerid);
		}
	}
	else MostrarDialog(playerid, QUE_LOCALIZAR, DIALOG_STYLE_LIST, "�Qu� deseas localizar?", "Localizar "CR"veh�culos"CB"\nLocalizar "CR"propiedades", "Localizar", "Salir");
	return 1;
}

CMD:est(playerid,params[])
{
	new ID;
	if(sscanf(params, "d", ID))
	{
		MostrarDialog(playerid, CONFIG_CUENTA, DIALOG_STYLE_LIST, "Configuraci�n de tu cuenta", ""CR"�"CB" Ver mis estadisticas.\n"CR"�"CB" Configurar tu cuenta.\n"CR"�"CB" Vincular discord.", "Aceptar", "Cancelar");
		return 1;
	}
	
	if(PlayerInfo[playerid][pAdmin] >= ADMIN_LVL_JUEGO1 && IsPlayerConnected(ID))
	{
	    if(PlayerInfo[ID][pAdmin] > PlayerInfo[playerid][pAdmin]) return 0;
		va_SendClientMessage(playerid,-1,"ESTADISTICAS DE %s (%d)",NombreJugador(ID), ID);
		ShowStats(playerid,ID);
	}
	return 1;
}

CMD:habilidad(playerid,params[])
{
	new ID;
	if(sscanf(params, "d", ID)) return Habilidad2(playerid,playerid);
	if(PlayerInfo[playerid][pAdmin] >= ADMIN_LVL_JUEGO1)
	{
	    if(PlayerInfo[ID][pAdmin] > PlayerInfo[playerid][pAdmin]) return 0;
		va_SendClientMessage(playerid,-1,"HABILIDADES DE %s (%d)",NombreJugador(ID), ID);
		Habilidad2(ID,playerid);
	}
	return 1;
}

/*
CMD:baul(playerid, params[])
{
	new id;
	if(!sscanf(params,"d",id))
	{
		if(!IsPlayerConnected(id)) return Mensaje(playerid,-1,"Jugador desconectado.");
		if(PlayerInfo[playerid][horasjugadas] < 3) return Mensaje(playerid, -1, "Necesitas por lo menos haber jugador 3 horas para poder mirar el baul de otro jugador.");
		if(PlayerInfo[playerid][jNivel] < 3) return Mensaje(playerid,-1,"Necesitas ser nivel 3 para revisar el baul de otro jugador.");
		if(IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid,-1,"No puedes utilizar este comando estando en un veh�culo.");
		if(PlayerInfo[id][jNivel] < 5) return Mensaje(playerid, -1, "El jugador al cual le deseas revisar el ba�l es menos de nivel 5.");
		new var = -1;
		for(new a = 0; a < MAX_PAUTOS; a++)
	 	{
	  		if(!IsValidVehicle(autos[a][id])) continue;
			GetVehiclePos(autos[a][id], CPos[0], CPos[1], CPos[2]);
	  		if(EstaEn(playerid, 5.0, CPos[0], CPos[1], CPos[2])) var = autos[a][id];
		}
		if(var == -1) return 1;
		if(Baul[var] == 1)
		{
		    if(IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid,-1,"No puedes utilizar este comando estando en un veh�culo.");
			PlayerTemp[playerid][TimerRevisar] = 0;
			BarraProgreso[playerid][1] = 5.0;
			BarraJob(playerid,1);
		    AccionesRol(playerid,"comienza a revisar el interior del ba�l.", 20);
			Revisado(playerid,id);
			GameTextForPlayer(playerid,"~n~~n~~w~REVISANDO MALETERO", 3000, 3);
		}
		else return Mensaje(playerid,-1,"El baul del veh�culo esta cerrado.");
	}
	else
	{
	    new si = 0;
		if(IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid,-1,"No puedes utilizar este comando estando en un veh�culo.");
		if(FaccLegal(playerid))
		{
		    new Float:VPos[3];
		 	for(new i = 0;i<GetVehiclePoolSize();i++)
			{
				if(!IsValidVehicle(i)) continue;
				if(SAPD(i) && PlayerInfo[playerid][jMiembro] == 1 || EDSA(i) && PlayerInfo[playerid][jMiembro] == 2)
				{
					GetVehiclePos(i,VPos[0],VPos[1],VPos[2]);
					if(IsPlayerInRangeOfPoint(playerid,3.0,VPos[0],VPos[1],VPos[2]))
					{
					    si = 1;
		    			AccionesRol(playerid,"comienza a revisar el interior del ba�l.", 20);
						MostrarDialog(playerid, D_BAULSAPD, DIALOG_STYLE_LIST, "Opciones Ba�l", "Tomar medicamentos\nArmas", "Aceptar", "Cerrar");
					}
		        }
		    }
		}
		else if(si == 0){
		PlayerTemp[playerid][TimerRevisar] = 6;
		Revisado(playerid,playerid);
		}
	}
}
*/



CMD:baul(playerid,params[])
{
	new item[8], item2[22], id, Float:CPos[3];
	if(!sscanf(params,"s[8]s[22]",item,item2))
	{
		if(strcmp(item,	"guardar", true) == 0)
		{
			if(VariableCaido[playerid] == 1 || PlayerInfo[playerid][Agonizando] == 1) return Mensaje(playerid,-1,"No puedes utilizar este comando en este momento.");
			if(IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid,-1,"No puedes utilizar este comando estando en un veh�culo.");
			if(VerBaul[playerid] == INVALID_PLAYER_ID) return Mensaje(playerid,-1,"Est�s muy lejos del �ltimo maletero que revisaste.");
            new t_o;
			if(strcmp(item2, "bidon", true) == 0) t_o = 1650;
			else if(strcmp(item2, "objeto", true) == 0) t_o = Objeto[playerid];
			else if(strcmp(item2, "manopla", true) == 0) t_o = 1;
			else if(strcmp(item2, "palo-de-golf", true) == 0) t_o = 2;
			else if(strcmp(item2, "cuchillo", true) == 0) t_o = 4;
			else if(strcmp(item2, "bate-de-beisbol", true) == 0) t_o = 5;
			else if(strcmp(item2, "pala", true) == 0) t_o = 6;
			else if(strcmp(item2, "palo-de-billar",	true) == 0) t_o = 7;
			else if(strcmp(item2, "katana",	true) == 0) t_o = 8;
			else if(strcmp(item2, "consolador-rosa", true) == 0) t_o = 10;
			else if(strcmp(item2, "vibrador-blanco", true) == 0) t_o = 11;
			else if(strcmp(item2, "gran-vibrador-blanco", true) == 0) t_o = 12;
			else if(strcmp(item2, "vibrador-plateado", true) == 0) 	t_o = 13;
			else if(strcmp(item2, "ramo-de-flores", true) == 0) t_o = 14;
			else if(strcmp(item2, "baston",	true) == 0) t_o = 15;
			else if(strcmp(item2, "camara",	true) == 0) t_o = 43;
			else if(strcmp(item2, "desert-eagle", true) == 0) t_o = 24;
			else if(strcmp(item2, "dk", true) == 0) t_o = 24;
			else if(strcmp(item2, "escopeta", true) == 0) t_o = 25;
			else if(strcmp(item2, "escopeta-de-combate", true) == 0) t_o = 27;
			else if(strcmp(item2, "edc", true) == 0) t_o = 27;
			else if(strcmp(item2, "pala", true) == 0) t_o = 6;
			else if(strcmp(item2, "mp5", true) == 0) t_o = 29;
			else if(strcmp(item2, "granada", true) == 0) t_o = 16;
			else if(strcmp(item2, "9mm", true) == 0) t_o = 22;
			else if(strcmp(item2, "9mm-silenciada",	true) == 0) t_o = 23;
			else if(strcmp(item2, "ak-47", true) == 0) t_o = 30;
			else if(strcmp(item2, "m4",	true) == 0) t_o = 31;
			else if(strcmp(item2, "rifle",	true) == 0) t_o = 33;
			else if(strcmp(item2, "sniper",	true) == 0) t_o = 34;
			else if(strcmp(item2, "arma",	true) == 0)
			{
				new temp = GetPlayerWeapon(playerid);
				switch(temp)
				{
					case 1,2,4..8,10..15,43,24,25,27,29,16,22,23,30,31,33,34:
					{
						t_o = temp;
					}
					default: return Mensaje(playerid, -1, "Debes tener el arma en tu mano.");
				}
			}
			else return Mensaje(playerid,-1,"SERVER: Unknown Command");
			GuardarArma(playerid, t_o);
			return 1;
    	}
	}
	if(!sscanf(params,"s[8]d",item,id))
	{
		if(strcmp(item,	"sacar", true) == 0)
		{
		    return BaulSacar(playerid,id);
		}
	}
	else if(!sscanf(params,"d",id))
	{
		if(!IsPlayerConnected(id)) return Mensaje(playerid,-1,"Jugador desconectado.");
		if(PlayerInfo[playerid][horasjugadas] < 3) return Mensaje(playerid, -1, "Necesitas por lo menos haber jugador 3 horas para poder mirar el baul de otro jugador.");
		if(PlayerInfo[playerid][jNivel] < 3) return Mensaje(playerid,-1,"Necesitas ser nivel 3 para revisar el baul de otro jugador.");
		if(IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid,-1,"No puedes utilizar este comando estando en un veh�culo.");
		if(PlayerInfo[id][jNivel] < 5) return Mensaje(playerid, -1, "El jugador al cual le deseas revisar el ba�l es menos de nivel 5.");
		new var = -1;
		for(new a = 0; a < MAX_PAUTOS; a++)
	 	{
	  		if(!IsValidVehicle(autos[a][id])) continue;
			GetVehiclePos(autos[a][id], CPos[0], CPos[1], CPos[2]);
	  		if(EstaEn(playerid, 5.0, CPos[0], CPos[1], CPos[2])) var = autos[a][id];
		}
		if(var == -1) return 1;
		if(Baul[var] == 1)
		{
		    if(IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid,-1,"No puedes utilizar este comando estando en un veh�culo.");
			PlayerTemp[playerid][TimerRevisar] = 0;
			BarraProgreso[playerid][1] = 5.0;
			BarraJob(playerid,1);
		    AccionesRol(playerid,"comienza a revisar el interior del ba�l.", 20);
			Revisado(playerid,id);
			GameTextForPlayer(playerid,"~n~~n~~w~REVISANDO MALETERO", 3000, 3);
		}
		else return Mensaje(playerid,-1,"El baul del veh�culo esta cerrado.");
	}
	else
	{
		new si = 0;
		if(IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid,-1,"No puedes utilizar este comando estando en un veh�culo.");
		if(FaccLegal(playerid))
		{
		    new Float:VPos[3];
		 	foreach(new i: Vehicle)
			{
				if(!IsValidVehicle(i)) continue;
				if(SAPD(i) && PlayerInfo[playerid][jMiembro] == 1 || EDSA(i) && PlayerInfo[playerid][jMiembro] == 2)
				{
					GetVehiclePos(i,VPos[0],VPos[1],VPos[2]);
					if(IsPlayerInRangeOfPoint(playerid,3.0,VPos[0],VPos[1],VPos[2]))
					{
					    si = 1;
		    			AccionesRol(playerid,"comienza a revisar el interior del ba�l.", 20);
						MostrarDialog(playerid, D_BAULSAPD, DIALOG_STYLE_LIST, "Opciones Ba�l", "Tomar medicamentos\nArmas", "Aceptar", "Cerrar");
						break;
					}
		        }
		    }
		}
		if(si == 0){
		PlayerTemp[playerid][TimerRevisar] = 6;
		Revisado(playerid,playerid);
		}
	}
	return 1;
}

static BaulSacar(playerid,id)
{
	if(id == 0) return 1;
	if(ArmasEstado == 0) return Mensaje(playerid,-1,"No puedes sacar armas en este momento.");
	if(PlayerInfo[playerid][horasjugadas] < 3) return Mensaje(playerid, -1, "Necesitas por lo menos haber jugador 3 horas para poder sacar cosas del baul.");
	if(PlayerInfo[playerid][jNivel] < 6) return Mensaje(playerid,-1,"Necesitas ser nivel 6 para sacar objetos del baul.");
	if(IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid,-1,"No puedes utilizar este comando estando en un veh�culo.");
	if(VerBaul[playerid] == INVALID_PLAYER_ID) return Mensaje(playerid,-1,"Primero mira el "CR"/maletero"CB" o si no es tuyo "CR"/maletero [id o nombre del due�o].");
	new Float:CPos[3],query[60], string[128];
	new veh_c = -1, auto_slot;
	for(new a = 0; a < MAX_PAUTOS; a++)
	{
		if(!IsValidVehicle(autos[a][VerBaul[playerid]])) continue;
		GetVehiclePos(autos[a][VerBaul[playerid]], CPos[0], CPos[1], CPos[2]);
		if(EstaEn(playerid, 5.0, CPos[0], CPos[1], CPos[2])) veh_c = autos[a][VerBaul[playerid]];
	}
	if(veh_c == -1) return Mensaje(playerid,-1,"Est�s muy lejos del �ltimo maletero que revisaste.");
	auto_slot = GetPlayerVehicle(VerBaul[playerid],veh_c);
	if(auto_slot != -1)
	{
		if(Baul[veh_c] == 1)
		{
			new cont = 4;
			if(BAUL6(veh_c)) cont = 6;
			if(BAUL8(veh_c)) cont = 8;
			if(MOTO(veh_c)) cont = 2;

			switch(PlayerInfo[VerBaul[playerid]][VIP])
			{
				case 2: cont += 1;
				case 3: cont += 2;
			}

			if(id > cont) return 1;
			if(EspacioBaul[VerBaul[playerid]][auto_slot][id] == 0) return Mensaje(playerid,-1,"Este espacio esta vac�o");
			if(Objeto[playerid] > 0) return Mensaje(playerid,-1,"Tienes un objeto en tus manos.");
			if(EspacioBaul[VerBaul[playerid]][auto_slot][id] > 46) AccionesRol(playerid, "toma un objeto de su maletero.", 20),DarObjetoBaul(playerid,EspacioBaul[VerBaul[playerid]][auto_slot][id]);
			else
			{
				format(string, 256, "%s saca un/a %s del maletero del veh�culo.", NombreJugador(playerid), GetWeaponNameEx(EspacioBaul[VerBaul[playerid]][auto_slot][id]));
				ProxDetector(20, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
				DarArma(playerid,EspacioBaul[VerBaul[playerid]][auto_slot][id]);
			}
			EspacioBaul[VerBaul[playerid]][auto_slot][id] = 0;
			mysql_format(Conecction, query, sizeof(query), "UPDATE `p_autos` SET `%s`='0' WHERE `ID`='%d'", BaulSlot(id),VehicleInfo[VerBaul[playerid]][auto_slot][v_DBID]);
			mysql_tquery(Conecction, query);
			return 1;
		}
		else return Mensaje(playerid,-1,"El maletero est� cerrado.");
	}
	return 1;
}


CMD:log(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_DUDAS) return 0;
	LimpiarLog(150);
	new string[70];
	format(string, 70, "El log del chat fue borrado por "CR"%s", NombreJugador(playerid));
	MensajeAdmin(-1, string, 2);
	return 1;
}

CMD:f(playerid, params[])
{
    new string[114+1];
	if(PlayerInfo[playerid][pAdmin] == 0) return 0;
	{
		if(!sscanf(params,"s[114]",string))
		{
			foreach(new i : Admin)
			{
				if(PlayerInfo[i][pAdmin] > 0)
				{
				    if(VerAdmin[i] == 1)
					{
      					va_SendClientMessage(i, -1, "{fcba03}[STAFF] - [%s] %s(%d): "CB"%s", RangoAdmin[PlayerInfo[playerid][pAdmin]], NombreJugador(playerid), playerid, string);
					}
				}
			}
		}
	}
	return 1;
}

CMD:mutear(playerid,params[])
{
	new id,tiempo,string[144],razon[60];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_DUDAS) return 0;
	if(!sscanf(params,"rds[60]",id,tiempo,razon))
	{
	    if(!PlayerConectado(id)) return Mensaje(playerid,COLORCARGO0,"No se encontr� ning�n jugador.");
    	if(GetPlayerScore(id) == 0) return Mensaje(playerid, -1, "El jugador que quieres sancionar est� conectado pero a�n no ha ingresado al juego.");
	    if(tiempo <= 4) return Mensaje(playerid,-1,"El tiempo minimo de muteo es de 5 minutos.");
		if((TiempoDuda[id]-gettimeVariable) > 240) return Mensaje(playerid,-1,"Ese jugador ya esta muteado.");
		if(PlayerInfo[id][pAdmin] > PlayerInfo[playerid][pAdmin])
		{
			format(string, sizeof(string), "Notificaci�n: %s(%d) intento mutear a un ADM (%s).",NombreJugador(playerid), playerid, NombreJugador(id));
			MensajeAdmin(COLOR_CHEAT, string, PlayerInfo[playerid][pAdmin]);
			return 1;
		}
		TiempoDuda[id] = (tiempo*60)+gettimeVariable;
		format(string, sizeof(string), "El jugador {E3BB18}%s "CB"fue muteado por {E3BB18}%s"CB", raz�n: %s",NombreJugador(id),NombreJugador(playerid), razon);
		foreach(new a : Player) { if(ShowMutes[a] == 1) Mensaje(a,-1,string); }
		format(string, 170, "[Dudas] J:%s | ADM:%s | Tiempo: %d minuto(s)",NombreJugador(id),NombreJugador(playerid),tiempo);
		MensajeAdmin(COLOR_GREY, string, PlayerInfo[playerid][pAdmin]);
		new Query[200];
		mysql_format(Conecction, Query, sizeof(Query), "INSERT INTO `registros_admin` (Responsable, Jugador, Razon, Accion) VALUES ('%d','%d','%e','1')",PlayerInfo[playerid][p_DBID],PlayerInfo[id][p_DBID],razon);
		mysql_tquery(Conecction, Query);
	}
	else return Mensaje(playerid,-1,"Usa: /mutear [id] [minutos] [raz�n]");
	return 1;
}

CMD:desmutear(playerid,params[])
{
	new id,string[128],razon[50];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_DUDAS) return 0;
	if(!sscanf(params,"rs[50]",id,razon))
	{
	    if(!IsPlayerConnected(id)) return Mensaje(playerid,COLORCARGO0,"No se encontr� ning�n jugador.");
		if(GetPlayerScore(id) == 0) return Mensaje(playerid, -1, "El jugador que quieres desmutear est� conectado pero a�n no ha ingresado al juego.");
		format(string, sizeof(string), "El jugador {E3BB18}%s "CB"fue desmuteado por {E3BB18}%s, raz�n: %s",NombreJugador(id),NombreJugador(playerid), razon);
		foreach(new a : Player)
		{
		    if(ShowMutes[a] == 1) Mensaje(a,-1,string);
		}
		Mensaje(id,0xDEA600FF,"Se te quito la restricci�n del canal de dudas.");
		TiempoDuda[id] = 0;
	}
	else return Mensaje(playerid,-1,"Usa /desmutear [id] [raz�n]");
	return 1;
}

CMD:abrirpuerta(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
    if(YaEstaAbierta[30] == 0) YaEstaAbierta[30] = 1,MoveDynamicObjectEx(controls[10],-85.3078, -1120.4414, 0.3000,3);
	else YaEstaAbierta[30] = 0,MoveDynamicObjectEx(controls[10],-87.72000, -1127.09998, 0.30000,3);
	return 1;
}

CMD:desbugauto(playerid, params[])
{
	new autoid;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(sscanf(params, "d", autoid)) return Mensaje(playerid, COLOR_GRAD2, "Utilize: /desbugauto [Vehiculo ID]");
	LinkVehicleToInteriorAC(autoid, 0);
	SetVehicleVirtualWorld(autoid, 0);
	Mensaje(playerid, COLOR_GRAD2, "�Vehiculo enviado a la VW: 0 / Int: 0!");
	return 1;
}

CMD:mandarls(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(sscanf(params, "r", params[0])) return Mensaje(playerid, COLOR_GRAD2, "Utilize: /mandarls [ID]");
	if(!IsPlayerConnected(params[0])) return Mensaje(playerid, COLOR_GRAD2, "Jugador no conectado.");
	SetPosEx(params[0], 1529.6,-1691.2,13.3, 0, 0 ,0);
	new MensajeSpec[75];
	format(MensajeSpec, 75, "Notificaci�n: %s[%d] mand� a LS a %s[%d].", NombreJugador(playerid),playerid,NombreJugador(params[0]),params[0]);
	MensajeAdmin(COLOR_CHEAT, MensajeSpec, 3);
	Mensaje(playerid, COLOR_GRAD2, "�Jugador teleportado a LS!");
	return 1;
}

CMD:mandarsf(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(sscanf(params, "r", params[0])) return Mensaje(playerid, COLOR_GRAD2, "Utilize: /mandarsf [ID]");
	if(!IsPlayerConnected(params[0])) return Mensaje(playerid, COLOR_GRAD2, "Jugador no conectado.");
	SetPosEx(params[0], -1707.7334,16.8676,3.5597, 0, 0 ,0);
	new MensajeSpec[75];
	format(MensajeSpec, 75, "Notificaci�n: %s[%d] mand� a SF a %s[%d].", NombreJugador(playerid),playerid,NombreJugador(params[0]),params[0]);
	MensajeAdmin(COLOR_CHEAT, MensajeSpec, 3);
	Mensaje(playerid, COLOR_GRAD2, "�Jugador teleportado a SF!");
	return 1;
}

CMD:mandarlv(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(sscanf(params, "r", params[0])) return Mensaje(playerid, COLOR_GRAD2, "Utilize: /mandarlv [ID]");
	if(!IsPlayerConnected(params[0])) return Mensaje(playerid, COLOR_GRAD2, "Jugador no conectado.");
	SetPosEx(params[0], 1694.6566,1453.4523,10.7632, 0, 0 ,0);
	new MensajeSpec[75];
	format(MensajeSpec, 75, "Notificaci�n: %s[%d] mand� a LV a %s[%d].", NombreJugador(playerid),playerid,NombreJugador(params[0]),params[0]);
	MensajeAdmin(COLOR_CHEAT, MensajeSpec, 3);
	Mensaje(playerid, COLOR_GRAD2, "�Jugador teleportado a LV!");
	return 1;
}

CMD:casa(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), 1809.5894,-1299.8063,65.8125,0,0,0);
	else SetPosEx(playerid, 1809.5894,-1299.8063,65.8125,0,0,0);
	return 1;
}

CMD:grua(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), 1819.1549,-1284.6589,109.3594,0,0,0);
	else SetPosEx(playerid, 1819.1549,-1284.6589,109.3594,0,0,0);
	return 1;
}

CMD:coche(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), 1802.7854,-1303.8938,93.0391,0,0,0);
	else SetPosEx(playerid, 1802.7854,-1303.8938,93.0391,0,0,0);
	return 1;
}

CMD:tiendadp(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), 687.9341,-1585.5935,13.9906,0,0,0);
	else SetPosEx(playerid, 687.9341,-1585.5935,13.9906,0,0,0);
	return 1;
}

CMD:ls(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), 1529.6847,-1699.1049,13.3828,0,0,0);
	else SetPosEx(playerid, 1541.9314,-1674.4828,13.5535,90.4301,0,0);
	return 1;
}

CMD:desbugoff(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4) return 0;
	
	new name[24];
	if(sscanf(params, "s[24]", name)) return SendClientMessage(playerid,-1,"Escribe "CR"/desbugoff"CB" [Nombre].");
	DesbugOffUser(name);
	va_SendClientMessage(playerid,-1, "Usuario "CR"%s"CB" desbugueado.", name);
	return 1;
}

static DesbugOffUser(const name[])
{
	new query[130];
	mysql_format(Conecction, query, sizeof(query), "UPDATE `usuarios` SET Posx='1541.93',Posy='-1674.48',Posz='13.55' WHERE `Username`='%e' LIMIT 1",name);
	mysql_tquery(Conecction, query);
	return 1;
}

CMD:criminal(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), -2186.6309,714.9852,53.8988,0,0,0);
	else SetPosEx(playerid, -2186.6309,714.9852,53.8988,0,0,0);
	return 1;
}

CMD:lc(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), -729.276000,503.086944,1371.971801,0,1,1);
	else SetPosEx(playerid, -729.276000,503.086944,1371.971801,0,1,1);
	return 1;
}

CMD:emi(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), 370.6194,169.2329,1040.1156,93.1764,5,5);
	else SetPosEx(playerid, 370.6194,169.2329,1040.1156,93.1764,5,5);
	return 1;
}

CMD:emi1(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), 343.6336,180.1212,1040.1156,0,5,5);
	else SetPosEx(playerid, 343.6336,180.1212,1040.1156,93.1764,5,5);
	return 1;
}

CMD:emi2(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), 342.2696,158.9033,1040.1078,0,5,5);
	else SetPosEx(playerid, 342.2696,158.9033,1040.1078,93.1764,5,5);
	return 1;
}

CMD:emi3(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), 345.4146,149.0569,1040.1156,0,5,5);
	else SetPosEx(playerid, 345.4146,149.0569,1040.1156,93.1764,5,5);
	return 1;
}

CMD:emi4(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), 363.2997,156.2610,1040.1156,0,5,5);
	else SetPosEx(playerid, 363.2997,156.2610,1040.1156,93.1764,5,5);
	return 1;
}

CMD:salon(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), -1263.3229,2108.4150,1246.5457,269.4925,13,1);
	else SetPosEx(playerid, -1263.3229,2108.4150,1246.5457,269.4925,13,1);
	return 1;
}

CMD:admin(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), 32.0171,-20.2070,51.0725,0,0,999);
	else SetPosEx(playerid, 32.0171,-20.2070,51.0725,0,0,999);
	return 1;
}

CMD:sf(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), -1707.7334,16.8676,3.5597,0,0,0);
	else SetPosEx(playerid, -1707.7334,16.8676,3.5597,0,0,0);
	return 1;
}

CMD:lv(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), 1694.6566,1453.4523,10.7632,0,0,0);
	else SetPosEx(playerid, 1694.6566,1453.4523,10.7632,0,0,0);
	return 1;
}

CMD:lv2(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), 213.8545,1870.7516,13.1406,1.6666,0,0);
	else SetPosEx(playerid, 213.8545,1870.7516,13.1406,1.6666,0,0);
	return 1;
}

CMD:lv3(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), 413.6934,2503.1399,16.4844,90.0274,0,0);
	else SetPosEx(playerid, 413.6934,2503.1399,16.4844,90.0274,0,0);
	return 1;
}

CMD:lspd(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), 246.6023,112.2899,1003.2188,0.6544,10,1);
	else SetPosEx(playerid, 246.6023,112.2899,1003.2188,0.6544,10,1);
	return 1;
}

CMD:estls(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), 1561.8760,-1703.1300,5.8906,270.9629,0,0);
	else SetPosEx(playerid, 1561.8760,-1703.1300,5.8906,270.9629,0,0);
	return 1;
}

CMD:sfpd(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), 246.6023,112.2899,1003.2188,0.6544,10,5);
	else SetPosEx(playerid, 246.6023,112.2899,1003.2188,0.6544,10,5);
	return 1;
}

CMD:estsf(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), -1581.6050,716.9703,-5.2422,0.6804,0,0);
	else SetPosEx(playerid, -1581.6050,716.9703,-5.2422,0.6804,0,0);
	return 1;
}

CMD:lvpd(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), 238.8580,149.2176,1003.0234,1.2490,3,7);
	else SetPosEx(playerid, 238.8580,149.2176,1003.0234,1.2490,3,7);
	return 1;
}

CMD:estlv(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), 2280.1499,2439.6260,3.2734,273.7425,0,0);
	else SetPosEx(playerid, 2280.1499,2439.6260,3.2734,273.7425,0,0);
	return 1;
}

CMD:mina(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), -563.0829,2347.7573,79.1133,164.3775,0,0);
	else SetPosEx(playerid, -563.0829,2347.7573,79.1133,164.3775,0,0);
	return 1;
}

CMD:ferreteria(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), 2114.2095,2165.5676,10.8203,88.7974,0,0);
	else SetPosEx(playerid, 2114.2095,2165.5676,10.8203,88.7974,0,0);
	return 1;
}

CMD:hpls(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), 1178.4728,-1323.0627,14.1218,91.5940,0,0);
	else SetPosEx(playerid, 1178.4728,-1323.0627,14.1218,91.5940,0,0);
	return 1;
}

CMD:hpsf(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), -2664.7051,634.2961,14.4531,1.4193,0,0);
	else SetPosEx(playerid, -2664.7051,634.2961,14.4531,1.4193,0,0);
	return 1;
}

CMD:hplv(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), 1607.4600,1822.8424,10.8203,179.6629,0,0);
	else SetPosEx(playerid, 1607.4600,1822.8424,10.8203,179.6629,0,0);
	return 1;
}

CMD:hpgrove(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), 2034.5790,-1407.5709,17.1797,2.0033,0,0);
	else SetPosEx(playerid, 2034.5790,-1407.5709,17.1797,2.0033,0,0);
	return 1;
}

CMD:ir(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(!sscanf(params, "d", params[0]))
	{
		if(IsPlayerConnected(params[0]))
		{
		    if(NoSpec[params[0]] == 1) return 0;
		    if(PlayerInfo[params[0]][pAdmin] > PlayerInfo[playerid][pAdmin]) return 0;
		    if(PlayerInfo[params[0]][pAdmin] == PlayerInfo[playerid][pAdmin]) return 0;
			new Float:p_x,Float:p_y,Float:p_z;
			GetPlayerPos(params[0], p_x,p_y,p_z);
			new interior = GetPlayerInterior(params[0]);
			new vw = GetPlayerVirtualWorld(params[0]);
			SetPlayerPosAC(playerid, p_x,p_y,p_z);
			SetPlayerInterior(playerid, interior);
			SetPlayerVirtualWorld(playerid, vw);
			new cadena[95];
			format(cadena, 95, "Notificaci�n: %s[%d] fue a la posici�n de %s[%d].", NombreJugador(playerid),playerid,NombreJugador(params[0]),params[0]);
			MensajeAdmin(COLOR_CHEAT, cadena, PlayerInfo[playerid][pAdmin]);
			return true;
		}
		else Mensaje(playerid, COLORCARGO0, "Esa id es inv�lida.");
	}
	else Mensaje(playerid, COLORCARGO0, "Usa {F4FA58}/ir [id]");
	return 1;
}

CMD:nar(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	new id;
    if(!sscanf(params,"d",id))
	{
		if(JugadorLogeado[id] != 1) return 1;
	    LimpiarChat(id, 20, -1);
		new str[670], string[90];
		format(str, sizeof(str), "%s"CR"Hola {FF3300}%s"CR", el equipo administrativo te informa que tu nombre inclumple nuestras reglas\nEl formato de nombre es "CB"Nombre_Apellid", str, NombreJugador(id));
		format(str, sizeof(str), "%so"CR", el cual tiene que contener las iniciales en Mayusculas,\nno puede ser el nombre de un famoso, no puede contener n�meros y tampoco pueden ser nombres irreales.\nPuedes cambiar tu nombre sin pe", str);
		format(str, sizeof(str), "%srder tu partida, para ello tienes que volver a entrar y cambiarlo con /est\nEn caso de no cambiar tu nombre ser�s sancionado.\nAl pare", str);
		format(str, sizeof(str), "%scer no conoces las reglas, leelas detenidamente ingresando el comando "CB"/reglas", str);
		MostrarDialog(id, INFOLADRON, DIALOG_STYLE_MSGBOX, ""CB"Informaci�n", str, "Aceptar","");
		format(string, 90, "Notificaci�n: %s envio una advertencia de nombre antirol a %s[%d]", NombreJugador(playerid), NombreJugador(id), id);
		MensajeAdmin(COLOR_CHEAT, string, PlayerInfo[playerid][pAdmin]);
	}
	return 1;
}

CMD:spam(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	new id;
    if(!sscanf(params,"d",id))
	{
		if(JugadorLogeado[id] != 1) return 1;
	    LimpiarChat(id, 20, -1);
		new str[670], string[90];
		format(str, sizeof(str), "%s"CR"Hola {FF3300}%s"CR", el equipo administrativo detect� palabras prohibidas.\n", str, NombreJugador(id));
		format(str, sizeof(str), "%s"CR"- No se permite nombrar servidores de SAMP con finalidad de hacer propaganda o publicidad.\n", str);
		format(str, sizeof(str), "%s"CR"- En caso que no sigas esta regla, podr�s ser baneado permanentemente del servidor.\n", str);
		format(str, sizeof(str), "%s"CR"- Al parecer no conoces las reglas, leelas detenidamente ingresando el comando "CB"/reglas", str);
		MostrarDialog(id, INFOLADRON, DIALOG_STYLE_MSGBOX, ""CB"Informaci�n", str, "Aceptar","");
		format(string, 90, "Notificaci�n: %s envio una advertencia de SPAM a %s[%d]", NombreJugador(playerid), NombreJugador(id), id);
		MensajeAdmin(COLOR_CHEAT, string, PlayerInfo[playerid][pAdmin]);
	}
	return 1;
}

CMD:cheater(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	new id;
    if(!sscanf(params,"d",id))
	{
		if(JugadorLogeado[id] != 1) return 1;
	    LimpiarChat(id, 20, -1);
		new str[670], string[90];
		format(str, sizeof(str), "%s"CR"Hola {FF3300}%s"CR", el anticheat detect� el uso de CLEOS o MODS prohibidos.\n", str, NombreJugador(id));
		format(str, sizeof(str), "%s"CR"- No se permite el uso de cleos o mods que te beneficien o den ventajas a tu jugador\n", str);
		format(str, sizeof(str), "%spor favor, salga del juego y desinstale/remueva todos los cleos o mods prohibidos.\n", str);
		format(str, sizeof(str), "%s"CR"- En caso que no sigas esta regla, podr�s ser baneado permanentemente del servidor.\n", str);
		format(str, sizeof(str), "%s"CR"- Al parecer no conoces las reglas, leelas detenidamente ingresando el comando "CB"/reglas", str);
		MostrarDialog(id, INFOLADRON, DIALOG_STYLE_MSGBOX, ""CB"Informaci�n", str, "Aceptar","");
		format(string, 90, "Notificaci�n: %s envio una advertencia de cheat a %s[%d]", NombreJugador(playerid), NombreJugador(id), id);
		MensajeAdmin(COLOR_CHEAT, string, PlayerInfo[playerid][pAdmin]);
	}
	return 1;
}

CMD:spec(playerid, params[])
{
	new id;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(sscanf(params,"u", id)) return Mensaje(playerid, COLORCARGO0, "Usa {F4FA58}/spec [nombre o id]"CB" para spectear a otro jugador");
 	Spectear(playerid, id);
	return 1;
}

static Spectear(playerid, id)
{
	new MensajeSpec[144];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(!IsPlayerConnected(id)) return Mensaje(playerid, COLORCARGO0, "Jugador no conectado.");
	if(GetPlayerScore(id) == 0 && !IsPlayerNPC(id)) return Mensaje(playerid, -1, "El jugador que quieres spectear est� conectado pero a�n no ha ingresado al juego.");
	if(PlayerInfo[id][pAdmin] > PlayerInfo[playerid][pAdmin]) return 0;
	if(PlayerInfo[id][pAdmin] == PlayerInfo[playerid][pAdmin]) return 0;
	if(NoSpec[id] == 1) return 0;
	if(id == playerid) return Mensaje(playerid,COLORCARGO0,"No puedes spectearte a ti mismo.");
	if(id == INVALID_PLAYER_ID) return Mensaje(playerid, COLORCARGO0, "Jugador no conectado.");
	
	if(PlayerTemp[playerid][Specteando] == 0)
	{
		GetPlayerPos(playerid,SpecX[playerid],SpecY[playerid],SpecZ[playerid]);
		SpecInt[playerid] = GetPlayerInterior(playerid);
		SpecVW[playerid] = GetPlayerVirtualWorld(playerid);
	 	GetPlayerHealth(playerid,VidaSpec[playerid]);
	 	GetPlayerArmour(playerid,ChalecoSpec[playerid]);
	}
	PlayerTemp[playerid][Specteando] = 1;
	SpecJugador[playerid] = id;
	TogglePlayerSpectating(playerid, true);
	if(!IsPlayerInAnyVehicle(id))
	{
	    SetPlayerInterior(playerid,GetPlayerInterior(id));
	 	SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(id));
	    PlayerSpectatePlayer(playerid,id);
	}
	else
	{
     	SetPlayerInterior(playerid,GetPlayerInterior(id));
		SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(id));
	    PlayerSpectateVehicle(playerid,GetPlayerVehicleID(id));
	}
	format(MensajeSpec, sizeof(MensajeSpec),"Estas specteando a "CR"%s"CB"(%d), para dejar de ver al jugador usa "CR"/specoff", NombreJugador(id), id);
	Mensaje(playerid,COLORCARGO0,MensajeSpec);
	if(PlayerInfo[playerid][pAdmin] < 8)
	{
		format(MensajeSpec, 75, "Notificaci�n: %s[%d] spectea a %s[%d].", NombreJugador(playerid),playerid,NombreJugador(id),id);
		MensajeAdmin(COLOR_CHEAT, MensajeSpec, PlayerInfo[playerid][pAdmin]);
	}
	new Float:health, Float:armour;
	GetPlayerHealth(id, health);
	GetPlayerArmour(id, armour);
	if(IsPlayerAndroid(id))
	{
		format(MensajeSpec, sizeof(MensajeSpec), "Android: (N: %d) - (V: %f) - (C: %f) - (P: %d) - (VW: %d) - (I: %d) - (PL: %.2f)", PlayerInfo[id][jNivel], health, armour, GetPlayerPing(id), GetPlayerVirtualWorld(id), GetPlayerInterior(id), NetStats_PacketLossPercent(id));
	}
	else{
		format(MensajeSpec, sizeof(MensajeSpec), "PC: (N: %d) - (V: %f) - (C: %f) - (P: %d) - (VW: %d) - (I: %d) - (PL: %.2f)", PlayerInfo[id][jNivel], health, armour, GetPlayerPing(id), GetPlayerVirtualWorld(id), GetPlayerInterior(id), NetStats_PacketLossPercent(id));
	}

	Mensaje(playerid, TEAM_BLUE_COLOR, MensajeSpec);
	if(PlayerInfo[playerid][pAdmin] > ADMIN_LVL_GLOBAL2)
	{
		format(MensajeSpec, sizeof(MensajeSpec),"Correo electronico: "CB"%s.", PlayerInfo[id][pEmail]);
		Mensaje(playerid,TEAM_BLUE_COLOR,MensajeSpec);
	}
	
	TiempoSpecJugador[playerid] = gettimeVariable;
	return 1;
}

CMD:listo(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(PlayerTemp[playerid][Specteando] == 0) return Mensaje(playerid,COLORCARGO0,"No estas specteando a nadie.");
	TogglePlayerSpectating(playerid, false);
	new cadena[70];
	if(PlayerInfo[playerid][pAdmin] < 8)
	{
		format(cadena, 70, "Notificaci�n: %s[%d] salio del modo spec.", NombreJugador(playerid),playerid);
		MensajeAdmin(COLOR_CHEAT, cadena, PlayerInfo[playerid][pAdmin]);
  	}
	return 1;
}

CMD:setint(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(!sscanf(params, "rd", params[0],params[1]))
	{
		if(!IsPlayerConnected(params[0])) return 1;
		SetPlayerInterior(params[0], params[1]);
	}
	else Mensaje(playerid, COLOR_GREY, "USA: /setint [PlayerID] [Interior]");
	return 1;
}

CMD:setvw(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(!sscanf(params, "rd", params[0],params[1]))
	{
		if(!IsPlayerConnected(params[0])) return 1;
		SetPlayerVirtualWorld(params[0], params[1]);
	}
	else Mensaje(playerid, COLOR_GREY, "USA: /setvw [PlayerID] [Interior]");
	return 1;
}

CMD:congelar(playerid,params[])
{
	new id;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(!sscanf(params,"d",id))
	{
		if(!IsPlayerConnected(id)) return 1;
	    if(PlayerInfo[id][pAdmin] > PlayerInfo[playerid][pAdmin]) return Mensaje(playerid, COLORCARGO0, "Error.");
		CongelarEx(id);
		new cadena[75];
		format(cadena, 75, "Notificaci�n: %s[%d] congelo a %s[%d].", NombreJugador(playerid),playerid,NombreJugador(id),id);
		MensajeAdmin(COLOR_CHEAT, cadena, PlayerInfo[playerid][pAdmin]);
	}
	return 1;
}

CMD:descongelar(playerid,params[])
{
	new id;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(!sscanf(params,"d",id))
	{
		if(!IsPlayerConnected(id)) return 1;
	    if(PlayerInfo[id][pAdmin] > PlayerInfo[playerid][pAdmin]) return Mensaje(playerid, COLORCARGO0, "Error.");
		DescongelarEx(id);
		new cadena[75];
		format(cadena, 75, "Notificaci�n: %s[%d] descongelo a %s[%d].", NombreJugador(playerid),playerid,NombreJugador(id),id);
		MensajeAdmin(COLOR_CHEAT, cadena, PlayerInfo[playerid][pAdmin]);
	}
	return 1;
}

CMD:slap(playerid,params[])
{
	new id,Float:x,Float:y,Float:z,szMessage[150];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(!sscanf(params,"d",id))
	{
		if(!IsPlayerConnected(id)) return Mensaje(playerid,-1,"Jugador desconectado.");
	    if(PlayerInfo[id][pAdmin] > PlayerInfo[playerid][pAdmin]) return Mensaje(playerid, COLORCARGO0, "Error.");
		GetPlayerPos(id,x,y,z);
		new Float:health, Float:armour;
		GetPlayerHealth(id, health);
		GetPlayerArmour(id, armour);
		format(szMessage, sizeof(szMessage), "(1) %s[%d] = (Vida: %f) - (Chaleco: %f) - (Ping: %d) - (Packets lost: %.2f)", NombreJugador(id), id, health, armour, GetPlayerPing(id), NetStats_PacketLossPercent(id));
		Mensaje(playerid, TEAM_BLUE_COLOR, szMessage);
		IDReporte[playerid] = id;
		SetTimerEx("DespuesSlap", 1900, false, "d", playerid);
		SetPlayerPosAC(id,x,y,z+7.5);
		new cadena[85];
		format(cadena, 85, "Notificaci�n: %s[%d] envio un slap a %s[%d].", NombreJugador(playerid),playerid,NombreJugador(id),id);
		MensajeAdmin(COLOR_CHEAT, cadena, PlayerInfo[playerid][pAdmin]);
	}
	else return Mensaje(playerid,-1,"Usa /slap [ID]");
	return 1;
}

CMD:retirarcarrera(playerid,params[])
{
	new id;
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
    if(!sscanf(params,"r",id)) SetPosEx(id,-1405.2959,-309.6738,1052.0900,190.0000,7,7);
	return 1;
}

CMD:retirarestadio(playerid,params[])
{
	new id;
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
    if(!sscanf(params,"r",id)) SetPosEx(id,1094.0945,1597.0083,12.5469,0,0,0);
	return 1;
}

CMD:vehslap(playerid,params[])
{
	new id,alt;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(!sscanf(params,"di",id, alt))
	{
		new Float:slx, Float:sly, Float:slz;
		GetVehiclePos(id, slx, sly, slz);
		SetVehiclePosAC(id, slx, sly, slz+alt);
	}
	else return Mensaje(playerid,-1,"Usa /vehslap [ID Vehiculo] [Altitud]");
	return 1;
}

CMD:racxd(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6) return 0;
	resetearcoches();
	return 1;
}

CMD:rac2(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6) return 0;
	resetearcochestrabajo();
	return 1;
}

CMD:raccars(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	new string[128], radius;
	if(sscanf(params, "d", radius)) return Mensaje(playerid, COLOR_GREY, "USA: /raccars [Radio]");
	if(radius < 1 || radius > 100) return Mensaje(playerid, COLOR_GREY, "El radio debe ser de 1 a 100!");
	RespawnNearbyVehicles(playerid, radius);
	format(string, sizeof(string), "Usted ha respawneado los veh�culos dentro del radio de %d.", radius);
	Mensaje(playerid, COLOR_GREY, string);
	return 1;
}

CMD:vidade(playerid, params[])
{
	new idplayer = strval(params);
	if(!IsPlayerConnected(idplayer)) return 1;
	new szMessage[170],colorping[21],msj2[12],string2[4];
	if(PlayerInfo[idplayer][pAdmin] > PlayerInfo[playerid][pAdmin]) return 0;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(isnull(params)) return Mensaje(playerid, COLOR_GREY, "USA: /vidade [id]");
	if(!IsPlayerPaused(idplayer)) format(msj2,sizeof(msj2),"No");
	else format(msj2,sizeof(msj2), "%s", FormatTimeleft(gettimeVariable-TimerAFK[idplayer]));
	
	if(EnCombate[idplayer] == 0) string2 ="No";
  	else string2 = "Si";
	new Float:health, Float:armour;
	GetPlayerHealth(idplayer, health);
	GetPlayerArmour(idplayer, armour);
	new ping = GetPlayerPing(idplayer);
	if(ping >= 0 && ping < 150) colorping = "46e800";
	if(ping >= 150 && ping < 200) colorping = "00cbf7";
	if(ping >= 200 && ping < 250) colorping = "E0F600";
	if(ping >= 250 && ping < 300) colorping = "f7e300";
	if(ping >= 300) colorping = "f74000";
	format(szMessage, sizeof(szMessage), "%s(%d) = (V: "CB"%f{3399FF}) - (C: "CB"%f{3399FF}) - (P: {%s}%d{3399FF}) - (PL: %.2f)", NombreJugador(idplayer), idplayer, health, armour, colorping, ping, NetStats_PacketLossPercent(idplayer));
	Mensaje(playerid, TEAM_BLUE_COLOR, szMessage);
	format(szMessage, sizeof(szMessage), "(VV: %f) - (CV: %f) - (E: %d) - (M: %d) - (VC: %d) - (Pais: %s)", VidaJugador[idplayer], ChalecoJugador[idplayer], Esposando[idplayer], Muriendo[idplayer], VariableCaido[idplayer], PlayerInfo[idplayer][pPais]);
	Mensaje(playerid, TEAM_BLUE_COLOR, szMessage);
	//if(TimerCamionero[idplayer] != 0) numero = 300-(TimerCamionero[idplayer] - gettimeVariable);
	//if(TimerBasurero[idplayer] != 0) numero = 300-(TimerBasurero[idplayer] - gettimeVariable);
	if(PlayerInfo[idplayer][pCargos] == 0) format(szMessage, sizeof(szMessage), "(PD: %d/1200) - (AFK: %s) - (Combate: %s) - (Cargos: No)", TiempoPD[idplayer], msj2, string2);
	else
	{
   	 	new temp = ((PlayerInfo[idplayer][pCargos] - 1) * 10) + 5;
		format(szMessage, sizeof(szMessage), "(PD: %d/1200) - (AFK: %s) - (Combate: %s) - (Cargos: %d - %s[%d])", TiempoPD[idplayer], msj2, string2, PlayerInfo[idplayer][pCargos], PlayerInfo[idplayer][QuienC], temp);
	}
	Mensaje(playerid, TEAM_BLUE_COLOR, szMessage);
	return 1;
}

CMD:infoveh(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(isnull(params)) return Mensaje(playerid, COLOR_GREY, "USA: /infoveh [id]");
	new autoid = strval(params), inte, vw, Float:X, Float:Y, Float:Z, szMessage[150], zone[MAX_ZONE_NAME];
	new cuantogas, motor[10],luces[10],puertas[10],conductor[40+13], aceleracion[7];
    if(!IsValidVehicle(autoid)) return 1;
	GetVehicleParamsEx(autoid,engine,lights,alarm,doors,bonnet,boot,objective);
    if(engine == 1) motor = "Prendido";
	else motor = "Apagado";
	if(lights == 1) luces = "Prendidas";
	else luces = "Apagadas";
	if(doors == 1) puertas = "Cerradas";
	else puertas = "Abiertas";
	format(conductor,sizeof(conductor),"Nadie");
	aceleracion = "No";
	foreach(new i : Player)
	{
		for(new a = 0; a < MAX_PAUTOS; a++) 
		{
			if(autos[a][playerid] == autoid && VehicleInfo[playerid][a][AceleracionActiva] == 1)
			{
				aceleracion = "Activa";
			}
		}

		if(IsPlayerInVehicle(i,autoid) && GetPlayerState(i) == PLAYER_STATE_DRIVER)
		{
		    format(conductor,sizeof(conductor),"%s (ID:%d)",NombreJugador(i),i);
		}
	}
	GetVehiclePos(autoid, X,Y,Z);
	inte = GetVehicleInterior(autoid);
	vw = GetVehicleVirtualWorld(autoid);
	GetCar3DZone(autoid, zone, sizeof(zone));
	if(DFT(autoid)) cuantogas = 230;
	else cuantogas = 100;
	format(szMessage, sizeof(szMessage), "Vehiculo: %d - Ubicaci�n: %f,%f,%f (%s) - Interior: %d - VW: %d - Velocidad %d/%d", autoid, X, Y, Z, zone, inte, vw, GetVehicleSpeed(autoid), GetVehicleTopSpeed(autoid)-11);
	Mensaje(playerid, TEAM_BLUE_COLOR, szMessage);
	format(szMessage, sizeof(szMessage), "Motor: %s - Aceleraci�n: %s - Luces: %s - Puertas: %s - Conductor: %s - Gasolina %d/%d", motor, aceleracion,luces, puertas, conductor, VehicleFuel[autoid], cuantogas);
	Mensaje(playerid, TEAM_BLUE_COLOR, szMessage);
	return 1;
}

CMD:tiemposde(playerid, params[])
{
	if(isnull(params)) return 0;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	new idplayer = strval(params),szMessage[144];
	if(!IsPlayerConnected(idplayer)) return 0;
	if(PlayerInfo[idplayer][pAdmin] > PlayerInfo[playerid][pAdmin]) return 0;
	if(isnull(params)) return Mensaje(playerid, COLOR_GREY, "USA: /tiemposde [id]");
	format(szMessage, sizeof(szMessage), "[%d] = (TiempoDuda: %d | TiempoSan: %d | TiempoCarcel: %d | TipoCarcel: %d | StatusFC: %d)", idplayer, TiempoDuda[idplayer]-gettimeVariable,PlayerInfo[idplayer][pTiempoJail],PlayerInfo[idplayer][pTiempoCarcel],PlayerInfo[idplayer][pTipoCarcel],StatusFC[idplayer]);
	Mensaje(playerid, TEAM_BLUE_COLOR, szMessage);
	return 1;
}

CMD:necesidadde(playerid, params[])
{
	if(isnull(params)) return 0;
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	new idplayer = strval(params),szMessage[80];
	if(!IsPlayerConnected(idplayer)) return 0;
	if(PlayerInfo[idplayer][pAdmin] > PlayerInfo[playerid][pAdmin]) return 0;
	if(isnull(params)) return Mensaje(playerid, COLOR_GREY, "USA: /necesidadde [id]");
	format(szMessage, sizeof(szMessage), "[%d] = (Sed: %d) - (Hambre: %d)", idplayer, PlayerInfo[idplayer][pSed], PlayerInfo[idplayer][pHambre]);
	Mensaje(playerid, TEAM_BLUE_COLOR, szMessage);
	return 1;
}

CMD:mundode(playerid, params[])
{
	if(isnull(params)) return 0;
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	new idplayer = strval(params),szMessage[80];
	if(!IsPlayerConnected(idplayer)) return 0;
	new inte = GetPlayerInterior(idplayer), vw = GetPlayerVirtualWorld(idplayer);
	format(szMessage, sizeof(szMessage), "%s[%d] = (Int: %d) - (VW: %d)", NombreJugador(idplayer), idplayer, inte, vw);
	Mensaje(playerid, TEAM_BLUE_COLOR, szMessage);
	return 1;
}

CMD:mundoveh(playerid, params[])
{
	if(isnull(params)) return 0;
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	new idplayer = strval(params),szMessage[80];
	if(!IsPlayerConnected(idplayer)) return 0;
	new inte = GetVehicleInterior(idplayer), vw = GetVehicleVirtualWorld(idplayer);
	format(szMessage, sizeof(szMessage), "Veh�culo [%d] = (Int: %d) - (VW: %d)", idplayer, inte, vw);
	Mensaje(playerid, TEAM_BLUE_COLOR, szMessage);
	return 1;
}

CMD:academia(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), 646.2690,-202.9760,1276.7993,89.1325,55,55);
	else SetPosEx(playerid, 646.2690,-202.9760,1276.7993,89.1325,55,55);
	return 1;
}

CMD:estadio(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), -1412.7083,-310.4966,1058.1694,359.7451,7,7);
	else SetPosEx(playerid, -1412.7083,-310.4966,1058.1694,359.7451,7,7);
	return 1;
}

CMD:estadio2(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), -1424.1583,-561.9344,1067.7369,182.1961,4,4);
	else SetPosEx(playerid, -1424.1583,-561.9344,1067.7369,182.1961,4,4);
	return 1;
}

CMD:estadio3(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), -1394.2173,923.0529,1050.0018,0.8145,15,15);
	else SetPosEx(playerid, -1394.2173,923.0529,1050.0018,0.8145,15,15);
	return 1;
}

CMD:fc(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), 182.6627,1449.2710,1084.8462,88.8918,15,15);
	else SetPosEx(playerid, 182.6627,1449.2710,1084.8462,88.8918,15,15);
	return 1;
}

CMD:fc2(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), 180.7295,1425.0106,10.5912,119.2128,0,0);
	else SetPosEx(playerid, 180.7295,1425.0106,10.5912,119.2128,0,0);
	return 1;
}

CMD:traer(playerid,params[])
{
	new Float:Pos[3],id;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(sscanf(params,"d",id)) return Mensaje(playerid, -1,"Modo de uso /traer [ID]");
	{
		if(IsPlayerConnected(id))
		{
		    if(NoSpec[id] == 1) return 0;
		    if(PlayerInfo[id][pAdmin] > PlayerInfo[playerid][pAdmin]) return 0;
			GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
			SetPlayerPosAC(id, Pos[0],Pos[1],Pos[2]+1);
			SetPlayerVirtualWorld(id,GetPlayerVirtualWorld(playerid));
			SetPlayerInterior(id,GetPlayerInterior(playerid));
			new cadena[95];
			format(cadena, 95, "Notificaci�n: %s[%d] trajo a %s[%d] a su posici�n.", NombreJugador(playerid),playerid,NombreJugador(id),id);
			MensajeAdmin(COLOR_CHEAT, cadena, PlayerInfo[playerid][pAdmin]);
		}
	}
	return 1;
}

CMD:w(playerid,params[])
{
	new id,msj[128],string[256];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	//if(PlayerTemp[playerid][pt_TempName]) return cmd_wr(playerid, params);
	if(!sscanf(params,"ds[128]",id,msj))
	{
		format(string,256,"* "CR"Mensaje de %s (%d): "CB"%s", NombreJugador(playerid),playerid,msj);
		Mensaje(id,-1,string);
		Mensaje(playerid,-1,"Enviaste este mensaje con exito.");
	}
	return 1;
}

CMD:wr(playerid,params[])
{
	new id,msj[128],string[256];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(!sscanf(params,"ds[128]",id,msj))
	{
		format(string,256,"* "CR"Mensaje: "CB"%s", msj);
		Mensaje(id,-1,string);
		Mensaje(playerid,-1,"Enviaste este mensaje con exito.");
	}
	return 1;
}

CMD:traerv(playerid,params[])
{
	new id,Float:Pos[3],virtualw = GetPlayerVirtualWorld(playerid), interi = GetPlayerInterior(playerid);
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(!sscanf(params,"d",id))
	{
		GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
		SetPosVeh(id, Pos[0],Pos[1],Pos[2], 0, interi, virtualw);
		new cadena[75];
		format(cadena, 75, "Notificaci�n: %s[%d] trajo el veh�culo %d a su posici�n.", NombreJugador(playerid),playerid,id);
		MensajeAdmin(COLOR_CHEAT, cadena, PlayerInfo[playerid][pAdmin]);
	}
	return 1;
}

CMD:getcarid(playerid,params[])
{
	new id,coche,Float:Pos[3],virtualw = GetPlayerVirtualWorld(playerid), interi = GetPlayerInterior(playerid);
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(!sscanf(params,"dd",id,coche))
	{
		GetPlayerPos(id,Pos[0],Pos[1],Pos[2]);
		SetPosVeh(coche, Pos[0],Pos[1],Pos[2], 0, interi, virtualw);
		new cadena[90];
		format(cadena, 90, "Notificaci�n: %s[%d] trajo el veh�culo %d a la posici�n de %s[%d].", NombreJugador(playerid),playerid,coche,NombreJugador(id),id);
		MensajeAdmin(COLOR_CHEAT, cadena, PlayerInfo[playerid][pAdmin]);
	}
	return 1;
}

CMD:gotocar(playerid, params[])
{
	new Float:cwx2,Float:cwy2,Float:cwz2,vehicleid, inte, virtu;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(!sscanf(params, "i", vehicleid))
	{
	    inte = GetVehicleInterior(vehicleid);
		virtu = GetVehicleVirtualWorld(vehicleid);
		GetVehiclePos(vehicleid, cwx2, cwy2, cwz2);
		SetPosEx(playerid, cwx2, cwy2, cwz2, 0, inte, virtu);
		new cadena[75];
		format(cadena, 75, "Notificaci�n: %s[%d] fue a la posici�n del veh�culo %d.", NombreJugador(playerid),playerid,vehicleid);
		MensajeAdmin(COLOR_CHEAT, cadena, PlayerInfo[playerid][pAdmin]);
	}
	return 1;
}

CMD:racid(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	new ID;
	if(!sscanf(params, "d", ID))
	{
		if(!IsValidVehicle(ID)) return 1;
		Respawnear(ID);
		new cadena[75];
		format(cadena, 75, "Notificaci�n: %s[%d] respawneo el veh�culo %d.", NombreJugador(playerid),playerid,ID);
		MensajeAdmin(COLOR_CHEAT, cadena, PlayerInfo[playerid][pAdmin]);
	}
	return 1;
}

CMD:baneartemp(playerid, params[])
{
	new string[144], ID, RAZON[31], query[200], day, month, year, dias;
	getdate(year,month,day);
	if(PlayerInfo[playerid][pAdmin] < 3) return 0;
	if(sscanf(params, "rds[31]", ID, dias,RAZON) )return Mensaje(playerid,COLORCARGO0,"Uso: /bantemp [id] [Tiempo en d�as] [raz�n]");
	if(dias < 1 || dias > 14) return Mensaje(playerid,-1,"Los d�as deben estar entre 1 a 14");
	if(GetPlayerScore(ID) == 0) return Mensaje(playerid, -1, "El jugador que quieres banear est� conectado pero a�n no ha ingresado al juego.");
	if(!IsPlayerConnected(ID)) return Mensaje(playerid,COLORCARGO0,"No se encontr� ning�n jugador.");
	{
		if(PlayerInfo[ID][pAdmin] >= PlayerInfo[playerid][pAdmin])
		{
			format(string, sizeof(string), "Notificaci�n: %s(%d) fue auto-expulsado. Raz�n: Intento de baneo a un ADM (%d).",NombreJugador(playerid), playerid, NombreJugador(ID));
			MensajeAdmin(COLOR_CHEAT, string, 3);
			PlayerInfo[playerid][pAdmin] = 0;
			ExpulsarJugador(playerid, "Intento banear a un adm");
			return 1;
		}
		Baneados[playerid] ++;
		if(Baneados[playerid] >= 5 && !EsFundador(playerid))
		{
		    mysql_format(Conecction, query, sizeof(query),"UPDATE `usuarios` SET `Admin`='0' WHERE `Nombre`='%e'", NombreJugador(playerid));
		    mysql_tquery(Conecction,query);
		    PlayerInfo[playerid][pAdmin] = 0;
		    ExpulsarJugador(playerid, "Administrador traidor");
		    return true;
		}
		SetTimerEx("SacarBaneadoss",5*1000,0,"d",playerid);
		if(playerid == ID)
		{
		    format(string, 128, "Notificaci�n: %s se autobane�, razon: %s",NombreJugador(ID), RAZON);
			MensajeAdmin(COLOR_CHEAT, string, 3);
		}
		else
		{
			format(string, sizeof(string), "El jugador {D51D00}%s "CB"fue baneado temporalmente por %s, razon: {D51D00}%s"CB" (%d d�as).",NombreJugador(ID),NombreJugador(playerid), RAZON, dias);
			foreach(new a : Player)
			{
			    if(ShowMutes[a] == 1) Mensaje(a,-1,string);
			}
		}
		new cuantosd = gettimeVariable + (dias * 86400);
		mysql_format(Conecction, query, sizeof(query), "UPDATE `usuarios` SET `Baneado`='%d',`razon`='%e',`QuienBan`='%e', `Fecha_Ban`='%d' WHERE `ID`='%d'", cuantosd,RAZON, NombreJugador(playerid), gettimeVariable,PlayerInfo[ID][p_DBID]);
		mysql_tquery(Conecction, query);
		mysql_format(Conecction, query, sizeof(query), "INSERT INTO `registros_admin` (Responsable, Jugador, Razon, Accion) VALUES ('%d','%d','%e','3')",PlayerInfo[playerid][p_DBID],PlayerInfo[ID][p_DBID],RAZON);
		mysql_tquery(Conecction, query);
		ExpulsarJugador(ID, RAZON);
		return 1;
	}
}

static AsegurarBaneo(playerid, ID)
{
	if(SeguroBanear[playerid] == false || ID != SeguroBanearID[playerid])
	{
		if(SpecJugador[playerid] != ID)
		{
			va_SendClientMessage(playerid, -1,"Ingresa el comando de nuevo para confirmar que quieres banear a %s sin spectearlo.", NombreJugador(ID));
		}
		else if(SpecJugador[playerid] == ID && gettimeVariable-TiempoSpecJugador[playerid] < 40)
		{
			va_SendClientMessage(playerid, -1, "Ingresa el comando de nuevo para confirmar que quieres banear a %s sin spectearlo suficiente tiempo.", NombreJugador(ID));
		}
		SeguroBanear[playerid] = true;
		SeguroBanearID[playerid] = ID;
		return false;
	}
	else
	{
		new string[100];
		if(SpecJugador[playerid] != ID)
		{
			format(string, sizeof string, "Ha baneado a %s sin spectearlo.", NombreJugador(ID));
			MensajeDiscord(NombreJugador(playerid),string, WEBHOOK_ACTIVIDAD_STAFF);
		}
		else if(SpecJugador[playerid] == ID && gettimeVariable-TiempoSpecJugador[playerid] < 40)
		{
			format(string, sizeof string, "Ha baneado a %s, con solo spectearlo por %d segundos.", NombreJugador(ID), gettimeVariable-TiempoSpecJugador[playerid]);
			MensajeDiscord(NombreJugador(playerid),string, WEBHOOK_ACTIVIDAD_STAFF);
		}
		SeguroBanear[playerid] = false;
		SeguroBanearID[playerid] = INVALID_PLAYER_ID;
		return true;
	}
}



CMD:banear(playerid, params[])
{
	new string[145], ID, RAZON[31], query[165], day, month, year;
	getdate(year,month,day);
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(sscanf(params, "rs[31]", ID, RAZON) )return Mensaje(playerid,COLORCARGO0,"Uso: /ban [id] [raz�n]");
	if(GetPlayerScore(ID) == 0) return Mensaje(playerid, -1, "El jugador que quieres banear est� conectado pero a�n no ha ingresado al juego.");
	if(!IsPlayerConnected(ID)) return Mensaje(playerid,COLORCARGO0,"No se encontr� ning�n jugador.");
	{
		if(PlayerInfo[ID][pAdmin] >= PlayerInfo[playerid][pAdmin])
		{
			format(string, sizeof(string), "Notificaci�n: %s(%d) fue auto-expulsado. Raz�n: Intento de baneo a un ADM (%d).",NombreJugador(playerid), playerid, NombreJugador(ID));
			MensajeAdmin(COLOR_CHEAT, string, 3);
			PlayerInfo[playerid][pAdmin] = 0;
			ExpulsarJugador(playerid, "Intento banear a un adm");
			return 1;
		}
		Baneados[playerid] ++;
		if(Baneados[playerid] >= 5 && !EsFundador(playerid))
		{
		    mysql_format(Conecction, query, sizeof(query),"UPDATE `usuarios` SET `Admin`='0' WHERE `Nombre`='%e'", NombreJugador(playerid));
		    mysql_tquery(Conecction,query);
		    PlayerInfo[playerid][pAdmin] = 0;
		    ExpulsarJugador(playerid, "Administrador traidor");
		    return true;
		}
		SetTimerEx("SacarBaneadoss",5*1000,0,"d",playerid);

		if(AsegurarBaneo(playerid, ID))
		{
			if(playerid == ID)
			{
				format(string, 128, "Notificaci�n: %s se autobaneo, razon: %s",NombreJugador(ID), RAZON);
				MensajeAdmin(COLOR_CHEAT, string, 3);
			}
			else
			{
				format(string, sizeof(string), "El jugador {D51D00}%s "CB"fue baneado por %s, raz�n: {D51D00}%s"CB".",NombreJugador(ID),NombreJugador(playerid), RAZON);
				foreach(new a : Player)
				{
					if(ShowMutes[a] == 1) Mensaje(a,-1,string);
				}
			}
			mysql_format(Conecction, query, sizeof(query), "UPDATE `usuarios` SET `Baneado`='1',`razon`='%e',`QuienBan`='%e', `Fecha_Ban`='%d' WHERE `ID`='%d'", RAZON, NombreJugador(playerid), gettimeVariable,PlayerInfo[ID][p_DBID]);
			mysql_tquery(Conecction, query);
			mysql_format(Conecction, query, sizeof(query), "INSERT INTO `registros_admin` (Responsable, Jugador, Razon, Accion) VALUES ('%d','%d','%e','3')",PlayerInfo[playerid][p_DBID],PlayerInfo[ID][p_DBID],RAZON);
			mysql_tquery(Conecction, query);
			if(PlayerInfo[ID][jMiembro] > 0)
			{
				BorrarBanda(ID, 2);
			}
			else ExpulsarJugador(ID, "Baneado");
		}
		return 1;
	}
}

CMD:banip(playerid, params[])
{
	new RAZON[20], query[120], day, month, year;
	getdate(year,month,day);
	if(PlayerInfo[playerid][pAdmin] < 7) return 0;
	if(sscanf(params, "s[20]", RAZON) )return Mensaje(playerid,COLORCARGO0,"Uso: /banip [IP]");
	Baneados[playerid] ++;
	if(Baneados[playerid] >= 5 && !EsFundador(playerid))
	{
		mysql_format(Conecction, query, sizeof(query),"UPDATE `usuarios` SET `Admin`='0' WHERE `Nombre`='%e'", NombreJugador(playerid));
		mysql_tquery(Conecction,query);
		PlayerInfo[playerid][pAdmin] = 0;
		ExpulsarJugador(playerid, "Administrador traidor");
		return true;
	}
	SetTimerEx("SacarBaneadoss",5*1000,0,"d",playerid);
	mysql_format(Conecction, query, sizeof(query), "INSERT INTO banips (IP) VALUES (INET_ATON('%e'))",RAZON);
	mysql_tquery(Conecction, query);
	return 1;
}



CMD:banearip(playerid, params[])
{
	new string[144], ID, RAZON[31], query[220], day, month, year;
	getdate(year,month,day);
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(sscanf(params, "rs[31]", ID, RAZON) )return Mensaje(playerid,COLORCARGO0,"Uso: /ban [id] [raz�n]");
	//if(GetPlayerScore(ID) == 0) return Mensaje(playerid, -1, "El jugador que quieres banear est� conectado pero a�n no ha ingresado al juego.");
	if(!IsPlayerConnected(ID)) return Mensaje(playerid,COLORCARGO0,"No se encontr� ning�n jugador.");
	
	if(PlayerInfo[ID][pAdmin] >= PlayerInfo[playerid][pAdmin])
	{
		format(string, sizeof(string), "Notificaci�n: %s(%d) fue auto-expulsado. Raz�n: Intento de baneo a un ADM (%d).",NombreJugador(playerid), playerid, NombreJugador(ID));
		MensajeAdmin(COLOR_CHEAT, string, 3);
		PlayerInfo[playerid][pAdmin] = 0;
		ExpulsarJugador(playerid, "Intento banear a un adm");
		return 1;
	}
	Baneados[playerid] ++;
	if(Baneados[playerid] >= 5 && !EsFundador(playerid))
	{
		mysql_format(Conecction, query, sizeof(query),"UPDATE `usuarios` SET `Admin`='0' WHERE `Nombre`='%e'", NombreJugador(playerid));
		mysql_tquery(Conecction,query);
		PlayerInfo[playerid][pAdmin] = 0;
		ExpulsarJugador(playerid, "Administrador traidor");
		return true;
	}
	SetTimerEx("SacarBaneadoss",5*1000,0,"d",playerid);

	if(AsegurarBaneo(playerid, ID))
	{
		if(playerid == ID)
		{
			format(string, 128, "Notificaci�n: %s se autobaneo, razon: %s",NombreJugador(ID), RAZON);
			MensajeAdmin(COLOR_CHEAT, string, 3);
		}
		else
		{
			format(string, sizeof(string), "El jugador {D51D00}%s "CB"fue baneado por %s, raz�n: {D51D00}%s"CB" (IP).",NombreJugador(ID),NombreJugador(playerid), RAZON);
			foreach(new a : Player)
			{
				if(ShowMutes[a] == 1) Mensaje(a,-1,string);
			}
		}
		
		mysql_format(Conecction, query, sizeof(query), "UPDATE `usuarios` SET `Baneado`='1',`razon`='%e',`QuienBan`='%e',`Fecha_Ban`='%d' WHERE `ID`='%d'", RAZON, NombreJugador(playerid), gettimeVariable,PlayerInfo[ID][p_DBID]);
		mysql_tquery(Conecction, query);
		mysql_format(Conecction, query, sizeof(query), "INSERT INTO `registros_admin` (Responsable, Jugador, Razon, Accion) VALUES ('%d','%d','%e','3')",PlayerInfo[playerid][p_DBID],PlayerInfo[ID][p_DBID],RAZON);
		mysql_tquery(Conecction, query);
		new ip[16];
		GetPlayerIp(ID, ip, sizeof(ip));
		mysql_format(Conecction, query, sizeof(query), "INSERT INTO banips (IP) VALUES (INET_ATON('%e'))",ip);
		mysql_tquery(Conecction, query);
		if(PlayerInfo[ID][jMiembro] > 0)
		{
			BorrarBanda(ID,2);
		}
		else ExpulsarJugador(ID, "Baneado");
	}
	return 1;
}

CMD:rt(playerid,params[])
{
	new id,dano;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(!sscanf(params,"dd",id,dano))
	{
		SetVehicleHealthAC(id, dano);
		new cadena[75];
		format(cadena, 75, "Notificaci�n: %s[%d] aplico %d de da�o al veh�culo %d.", NombreJugador(playerid),playerid,dano,id);
		MensajeAdmin(COLOR_CHEAT, cadena, PlayerInfo[playerid][pAdmin]);
	}
	return 1;
}


CMD:reportes(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	new reportdialog[3000], itemid = 0;
	for(new i = 0; i < MAX_REPORTS; i++)
	{
		if(Reports[i][BeingUsed] == 1 && itemid < 100)
		{
			ListItemReportId[playerid][itemid] = i;
			itemid++;
            format(reportdialog, sizeof(reportdialog), "%s#%i (%ds) ID:%i a ID:%i | R: %s", reportdialog, i, gettimeVariable - Reports[i][TiempoReport], Reports[i][ReportFrom], Reports[i][ReportadoID], Reports[i][Report]);
			format(reportdialog, sizeof(reportdialog), "%s\n", reportdialog);
		}
	}
	CancelReport[playerid] = itemid;
	format(reportdialog, sizeof(reportdialog), "%s\n", reportdialog);
	format(reportdialog, sizeof(reportdialog), "%sSalir", reportdialog);
	MostrarDialog(playerid, REPORTSMENU, DIALOG_STYLE_LIST, "Reportes", reportdialog, "Aceptar", "Rechazar");
	return 1;
}

CMD:limpiarreportes(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	{
		ClearReports();
		new string[47+MAX_PLAYER_NAME+2+1];
		format(string,sizeof(string),"Notificaci�n: %s[%d] limpi� todos los reportes.",NombreJugador(playerid),playerid);
		MensajeAdmin(COLOR_CHEAT, string, 3);
	}
	return 1;
}

CMD:ar(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	new reportid;
	if(sscanf(params, "d", reportid)) return Mensaje(playerid, COLORCARGO0, "USE: /ar [Report ID]");
	if(reportid < 0 || reportid >= MAX_REPORTS) { Mensaje(playerid, COLOR_GREY, "ID del reporte no debe ser menor de 0 ni mayor de 50!"); return 1; }
	if(Reports[reportid][BeingUsed] == 0) return Mensaje(playerid, COLOR_GREY, "  Ese ID ya fue atendido.");
	if(!IsPlayerConnected(Reports[reportid][ReportFrom]))
	{
		Mensaje(playerid, COLOR_GREY, "El que report� se ha desconectado !");
		Reports[reportid][ReportFrom] = 999;
		Reports[reportid][BeingUsed] = 0;
		return 1;
	}
 	foreach(new i : Admin)
	{
		if(PlayerInfo[i][pAdmin] > 2 && VerAdmin[i] == 1)
		{
			if(PlayerTemp[playerid][pt_TempName]) va_SendClientMessage(i,0xF00000FF,"Un Admin"CB" acept� el reporte de {FF3300}%s"CB" (ID: %i a ID: %i, #%i).", NombreJugador(Reports[reportid][ReportFrom]), Reports[reportid][ReportFrom], Reports[reportid][ReportadoID], reportid);
			else va_SendClientMessage(i,0xF00000FF,"%s"CB" acept� el reporte de {FF3300}%s"CB" (ID: %i a ID: %i, #%i).", NombreJugador(playerid), NombreJugador(Reports[reportid][ReportFrom]), Reports[reportid][ReportFrom], Reports[reportid][ReportadoID], reportid);
			IDReporte[playerid] = Reports[reportid][ReportadoID];
  			format(IDReporteMensaje[playerid], 150, Reports[reportid][Report]);
		}
	}
  	va_SendClientMessage(playerid,-1,"Usa el comando {F4FA58}/spec %d"CB" para verificar el estado del jugador reportado.", IDReporte[playerid]);
	
	MensajeDiscord(NombreJugador(playerid),"Ha aceptado un reporte", WEBHOOK_ACTIVIDAD_STAFF);
	if(PlayerTemp[playerid][pt_TempName]) Mensaje(Reports[reportid][ReportFrom], -1,""CR"Un Administrador est� viendo tu reporte.");
	else va_SendClientMessage(Reports[reportid][ReportFrom], -1,""CR"Un administrador est� viendo tu reporte.", NombreJugador(playerid));
	Reports[reportid][CheckingReport] = playerid;
	Reports[reportid][BeingUsed] = 0;
	strmid(Reports[reportid][Report], "Ninguno", 0, 4, 4);
	return 1;
}

CMD:rr(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	new reportid;
	if(sscanf(params, "d", reportid)) return Mensaje(playerid, COLORCARGO0,"USE: /rr [Report ID]");
	if(reportid < 0 || reportid >= MAX_REPORTS) { Mensaje(playerid, COLOR_GREY, "ID del reporte no debe ser menor de 0 ni mayor de 50!"); return 1; }
	if(Reports[reportid][BeingUsed] == 0) return Mensaje(playerid, COLOR_GREY, "Ese ID ya fue atendido!");
	if(!IsPlayerConnected(Reports[reportid][ReportFrom]))
	{
		Mensaje(playerid, COLOR_GREY, "El que report� se ha desconectado !");
		Reports[reportid][ReportFrom] = 999;
		Reports[reportid][BeingUsed] = 0;
		return 1;
	}
 	foreach(new i : Admin)
	{
		if(PlayerInfo[i][pAdmin] > 2 && VerAdmin[i] == 1)
		{
			if(PlayerTemp[playerid][pt_TempName]) va_SendClientMessage(i,0xF00000FF,"Un Admin"CB" rechaz� el reporte de {FF3300}%s"CB" (ID:%d) (#%i).", NombreJugador(Reports[reportid][ReportFrom]), Reports[reportid][ReportFrom], reportid);
			else va_SendClientMessage(i,0xF00000FF,"%s"CB" rechaz� el reporte de {FF3300}%s"CB" (ID:%d) (#%i).", NombreJugador(playerid), NombreJugador(Reports[reportid][ReportFrom]), Reports[reportid][ReportFrom], reportid);
    		IDReporte[playerid] = Reports[reportid][ReportadoID];
  			format(IDReporteMensaje[playerid], 150, Reports[reportid][Report]);
		}
	}
	MensajeDiscord(NombreJugador(playerid),"Ha rechazado un reporte", WEBHOOK_ACTIVIDAD_STAFF);
	if(PlayerTemp[playerid][pt_TempName]) Mensaje(Reports[reportid][ReportFrom], -1,"{FF3300}Un Administrador ha rechazado tu reporte.");
	else va_SendClientMessage(Reports[reportid][ReportFrom], -1,"{FF3300}Un administrador ha rechazado tu reporte.", NombreJugador(playerid));
	Reports[reportid][ReportFrom] = 999;
	Reports[reportid][BeingUsed] = 0;
	strmid(Reports[reportid][Report], "Ninguno", 0, 4, 4);
	return 1;
}

CMD:verautos(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	new ID;
	if(!sscanf(params,"d",ID))
	{
		if(!IsPlayerConnected(ID)) return Mensaje(playerid,-1, "Jugador no conectado");
	    if(PlayerInfo[ID][pAdmin] > PlayerInfo[playerid][pAdmin]) return 0;
       	va_SendClientMessage(playerid,COLOR_ROJO,"AUTOS DE %s (%d)", NombreJugador(ID), ID);
		Localizar2(ID,playerid);
		return 1;
	}
	return true;
}

CMD:ircasa(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	new id, string[100];
	if(sscanf(params,"d",id)) return Mensaje(playerid,-1,"Usa "CR"/ircasa [ID]");
	if(id >= MAX_PROPIEDADES) return 0;
 	if(PropInfo[id][pEnUso] == 0) return Mensaje(playerid,-1,"ID de casa inv�lido.");
	format(string,sizeof(string),"Fuiste a la posici�n de la casa ID "CR"%d",id);
	Mensaje(playerid,-1,string);
 	SetPosEx(playerid,PropInfo[id][pPosX],PropInfo[id][pPosY],PropInfo[id][pPosZ],0,0,0);
	return true;
}

CMD:irpuerta(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	new id, string[100];
	if(sscanf(params,"d",id)) return Mensaje(playerid,-1,"Usa "CR"/puerta [ID]");
	if(id >= MAX_DOORS) return 0;
 	format(string,sizeof(string),"Fuiste a la posici�n de la puerta ID "CR"%d",id);
	Mensaje(playerid,-1,string);
	SetPosEx(playerid,DoorData[id][dX], DoorData[id][dY], DoorData[id][dZ],0,0,0);
 	return true;
}

CMD:modemisoras(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO2) return 0;
	new emString[128];
	for(new i = 1; i < 5; i++)
	{
		if(CabinasOcupadasEmisoras[i][0] == 1)
		{
			format(emString, 128, "Emisora 1 - "CR"%s [%s] ID: %d - O: %d", NombreJugador(CabinasOcupadasEmisoras[i][1]), Emisoras[CabinasOcupadasEmisoras[i][1]][NombreEmisora], CabinasOcupadasEmisoras[i][1], GetOyentesEmisora(i));
			Mensaje(playerid, COLOR_BLANCO, emString);
		}
	}
	return 1;
}

CMD:dm(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO2) return 0;
	new giveplayerid, string[95];
	if(!sscanf(params, "u", giveplayerid))
	{
		if(IsPlayerConnected(giveplayerid))
		{
			format(string,sizeof(string),"�ltimo PJ que mat� a %s(%d) fue %s.",NombreJugador(giveplayerid),giveplayerid,QFA[giveplayerid]);
			Mensaje(playerid,COLOR_SERVER,string);
		}
		else return Mensaje(playerid,COLOR_SERVER,"El jugador no esta conectado.");
	}
	return 1;
}


CMD:san(playerid, params[])
{
	new string[144];
	new ID,RAZON[60],tiempo;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(sscanf(params, "rds[60]", ID,tiempo,RAZON)) return Mensaje(playerid,COLORCARGO0,"Uso: /san [id] [minutos] [raz�n]");
	if(!PlayerConectado(ID)) return Mensaje(playerid,COLORCARGO0,"No se encontr� ning�n jugador.");
	if(GetPlayerScore(ID) == 0) return Mensaje(playerid, -1, "El jugador que quieres sancionar est� conectado pero a�n no ha ingresado al juego.");
	if(San[ID] == 1) return Mensaje(playerid,COLORCARGO0,"Ese jugador ya esta sancionado.");
	
 	
	if(PlayerInfo[ID][pAdmin] >= PlayerInfo[playerid][pAdmin])
	{
		format(string, sizeof(string), "Notificaci�n: %s(%d) intento sancionar a un ADM (%s).",NombreJugador(playerid), playerid, NombreJugador(ID));
		MensajeAdmin(COLOR_CHEAT, string, PlayerInfo[playerid][pAdmin]);
		return 1;
	}
 	Curando[ID] = 0;
 	Revivir(ID);
	SetPlayerPosAC(ID, 346.870025,309.259033,999.155700);
	QuitarArmas(ID, 1);
	DarEstrella(ID, 0);
	SetPlayerColor(ID,COLORCARGO0);
	SetPlayerInterior(ID, 6);
	SetPlayerVirtualWorld(ID, ID);
	KillTimer(HCurando[ID]);
	KillTimer(FabCurando[ID]);
	PlayerTemp[ID][CurandoFab] = 0;
	PlayerTemp[ID][CurandoHosp] = 0;
	MarcadoMedicos[ID] = 0;
	LlamadaMedicos[ID] = 0;
	PlayerInfo[ID][sancionado] ++;
	PlayerInfo[ID][pTiempoJail] = (tiempo*60);
	TextDrawHideForPlayer(ID,Sangre);
	TextDrawHideForPlayer(ID,MisionT2[5]);
	PlayerTextDrawHide(ID,IndicacionesT[ID]);
	EstaEnEvento[ID] = 0;
	San[ID] = 1;
	format(string, sizeof(string), "El %s %s ha sancionado a %s por %s.",RangoAdmin[PlayerInfo[playerid][pAdmin]],NombreJugador(playerid),NombreJugador(ID), RAZON);
	foreach(new w : Player)
	{
		if(ShowMutes[w] == 1)
		{
			Mensaje(w,0xAA3333FF,string);
		}
	}
	Mensaje(ID,0xDEA600FF,"Fuiste sancionado por incumplir alguna de las reglas, por favor lee las reglas.");
	Mensaje(ID,0xDEA600FF,"En el discord se encuentran todas las reglas y una gu�a de rol que te ser� de utilidad.");
	format(string,sizeof(string),"Fuiste sancionado por %d minutos",tiempo);
	Mensaje(ID,0xDEA600FF,string);
	format(string, sizeof(string), "(%d) Tiempo de sancion: %d minutos, Administrador: %s",ID, tiempo, NombreJugador(playerid));
	MensajeAdmin(COLOR_GREY, string, PlayerInfo[playerid][pAdmin]);
	mysql_format(Conecction, string, sizeof(string), "UPDATE `usuarios` SET `RazonSan`='%e' WHERE `ID`='%d'", RAZON, PlayerInfo[ID][p_DBID]);
	mysql_tquery(Conecction, string);
	new Query[450];
	mysql_format(Conecction, Query, sizeof(Query), "INSERT INTO `registros_admin` (Responsable, Jugador, Razon, Accion, NotaNivel, Nota) VALUES ('%d','%d','%e','2', '%d','%d')",PlayerInfo[playerid][p_DBID],PlayerInfo[ID][p_DBID],RAZON, PlayerInfo[ID][jNivel],tiempo);
	mysql_tquery(Conecction, Query);
	if(EnCarreras[ID] > 0) SacarCarrera(ID, 1);
	for(new i = 0; i < MAX_REPORTS; i++)
	{
		if(Reports[i][ReportFrom] == ID)
		{
			Reports[i][ReportFrom] = 999;
			Reports[i][BeingUsed] = 0;
		}
	}
	return 1;
}

CMD:matar(playerid,params[])
{
	new id;
	if(PlayerInfo[playerid][pAdmin] < 7) return 0;
	if(!sscanf(params,"d",id))
	{
		if(!IsPlayerConnected(id)) return 1;
	    if(NoSpec[id] == 1) return 0;
	    if(PlayerInfo[id][pAdmin] > PlayerInfo[playerid][pAdmin]) return Mensaje(playerid, COLORCARGO0, "Error.");
		EstablecerVida(id, 0);
		new cadena[75];
		format(cadena, 75, "Notificaci�n: %s[%d] asesin� a %s[%d].", NombreJugador(playerid),playerid,NombreJugador(id),id);
		MensajeAdmin(COLOR_CHEAT, cadena, PlayerInfo[playerid][pAdmin]);
	}
	return 1;
}

CMD:paisde(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
    if(isnull(params)) return Mensaje(playerid, COLOR_GREY, "USA: /paisde [id]");
	new idplayer = strval(params), szMessage[144], ip[16];
	if(!IsPlayerConnected(idplayer)) return 1;
	if(PlayerInfo[idplayer][pAdmin] > PlayerInfo[playerid][pAdmin]) return 0;
	GetPlayerIp(idplayer, ip, 16);
	format(szMessage, sizeof(szMessage), "%s[%d] = (Pais: %s) - (Ciudad: %s) - (ISP: %s) - (IP: %s)", NombreJugador(idplayer), idplayer, PlayerInfo[idplayer][pPais], PlayerInfo[idplayer][pCiudad], t_ISP[idplayer], ip);
	Mensaje(playerid, TEAM_BLUE_COLOR, szMessage);
	return 1;
}

CMD:entercar(playerid,params[])
{
	new id;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO2) return 0;
	if(!sscanf(params,"d",id))
	{
	    EnAuto[playerid] = id;
		PutPlayerInVehicleAC(playerid, id, 0);
		MostrarVelocimetro(playerid);
	}
	return 1;
}

CMD:entercar2(playerid,params[])
{
	new id;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO2) return 0;
	if(!sscanf(params,"d",id))
	{
	    EnAuto[playerid] = id;
		PutPlayerInVehicleAC(playerid, id, 1);
	}
	return 1;
}
/*
CMD:racall(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO2) return 0;
	if(!DesbugPJ[playerid]){
		 	Mensaje(playerid, COLOR_GRAD2, "[AVISO]: ESTE COMANDO RESPAWNEA TODOS LOS CARROS Y LAGUEA EL SERVER.");
		 	Mensaje(playerid, COLOR_GRAD2, "Utiliza /racall de nuevo para RESPAWNEAR TODOS LOS CARROS.");
			DesbugPJ[playerid] = true;
		}
	else
	{
		DesbugPJ[playerid] = false;
		foreach(new i: Vehicle)
		{
			foreach(new u : Player)
			{
				if(IsPlayerInVehicle(u,i)) goto _no_borrar;
			}
			Respawnear(i);
			_no_borrar:
		}
	}
	
	return 1;
}*/

CMD:racconse(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO2) return 0;
	foreach(new i: Vehicle) if(VehiculosInfo[i][vcomprable] == 1) Respawnear(i);
	return 1;
}

CMD:cord(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO2) return 0;
	new Float: pos[3], int;
	if(sscanf(params, "p<,>fffp< >d", pos[0], pos[1], pos[2], int)) return Mensaje(playerid, COLOR_BLANCO, "USA: /cord [coordenada x] [coordenada y] [coordenada z] [interior]");
	SetPlayerPosAC(playerid, pos[0], pos[1], pos[2]);
	SetPlayerInterior(playerid, int);
	return 1;
}

CMD:kick(playerid, params[])
{
	new string[256];
	new ID,USERID[256];
	new query[200];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(sscanf(params, "ds[256]", ID,USERID) )return Mensaje(playerid,COLORCARGO0,"Uso: /kick [id] [raz�n]");
	if(!IsPlayerConnected(ID)) return Mensaje(playerid,COLORCARGO0,"Jugador desconectado o id incorrecta.");
	if(PlayerInfo[ID][pAdmin] > PlayerInfo[playerid][pAdmin])
	{
		format(string, sizeof(string), "El jugador {FF3300}%s(ID: %d)"CB" fue auto-expulsado por el anticheat. Raz�n:{FF3300}Intento de kick a un ADM"CB".",NombreJugador(playerid), playerid);
		Mensaje(playerid, -1, string);
		return 1;
	}
	Kickeados[playerid] ++;
	if(Kickeados[playerid] >= 5 && !EsFundador(playerid))
	{
	    mysql_format(Conecction, query, sizeof(query),"UPDATE `usuarios` SET `Admin`='0' WHERE `Nombre`='%e'", NombreJugador(playerid));
	    mysql_tquery(Conecction,query);
	    PlayerInfo[playerid][pAdmin] = 0;
	    ExpulsarJugador(playerid, "Administrador traidor");
	    return true;
	}
	SetTimerEx("SacarKickeadoss",5*1000,0,"d",playerid);
	format(string, sizeof(string), ""CB"El jugador {FF3300}%s "CB"fue expulsado por %s, raz�n: {FF3300}%s"CB".",NombreJugador(ID),NombreJugador(playerid), USERID);
	MensajeAll(-1, string);
	ExpulsarJugador(ID, USERID);
	return 1;
}

CMD:para(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO2) return 0;
   	if(GetPlayerState(playerid) == 2) SetPosVeh(GetPlayerVehicleID(playerid), 1544.7411,-1351.0089,331.8209,0,0,0);
	else SetPosEx(playerid, 1544.7411,-1351.0089,331.8209, 0, 0 ,0);
	return 1;
}

CMD:cc2(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	for(new i = 0; i < 50 ; i++)
	{
		MensajeAll(-1, "");
 	}
	return 1;
}

CMD:registros(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO2) return 0;
	new string[35];
	format(string, 35, "Cantidad %d registrados", Usuarios[Cantidad]);
	Mensaje(playerid, -1, string);
	return 1;
}

CMD:combate(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL1) return 0;
	ColocarCombate(playerid);
	return 1;
}

CMD:qcombate(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL1) return 0;
	GangZoneHideForPlayer(playerid, ModoCombate);
	GangZoneStopFlashForPlayer(playerid, ModoCombate);
	TiempoCombate[playerid] = 0;
	CColocado[playerid] = 0;
	EnCombate[playerid] = 0;
	KillTimer(TimerCombate[playerid]);
	return 1;
}

CMD:sound(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL1) return 0;
	new sound;
	if(sscanf(params, "d", sound)) return Mensaje(playerid, -1, "USA: /sound [ID]");
	PlayerPlaySound(playerid, sound, 0,0,0);
	return 1;
}

CMD:crime(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL1) return 0;
	new sound;
	if(sscanf(params, "d", sound)) return Mensaje(playerid, -1, "USA: /sound [ID]");
	PlayCrimeReportForPlayer(playerid, 0, sound);
	return 1;
}

CMD:sonido(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL1) return 0;
	new sound, Float:x, Float:y, Float:z;
	if(sscanf(params, "d", sound))  return Mensaje(playerid, COLOR_GRAD2, "USA: /sonido [ID SONIDO]");
	GetPlayerPos(playerid, x, y, z);
	PlaySoundForPlayersInRange(sound,5.0,x,y,z);
	return 1;
}

CMD:activarlog(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
    new a[25];
    if(VerAdmin[playerid] == 1) VerAdmin[playerid] = 0,a = "Ocultando log de admin.";
    else VerAdmin[playerid] = 1,a = "Mostrando log de admin.";
    Mensaje(playerid,-1,a);
	return 1;
}

CMD:balde(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL1) return 0;
    if(Objeto[playerid] > 0) return Mensaje(playerid,-1,"Ya tienes un objeto en tu inventario.");
	if(AguaBalde[playerid] == 1) return Mensaje(playerid, -1, "Tu balde ya contiene agua.");
	AguaBalde[playerid] = 1;
	Objeto[playerid] = 9003;
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
	SetPlayerAttachedObject(playerid, 4, 19468, 5, 0.126999,-0.089000,0.127998,101.199981,-164.499847,82.999900,1.032001,0.972000,1.002997);
	return 1;
}

CMD:bidon(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL1) return 0;
    if(Objeto[playerid] > 0) return Mensaje(playerid,-1,"Ya tienes un objeto en tu inventario.");
	Bidon[playerid] = 1;
	SetPlayerAttachedObject(playerid,4,1650,5,0.125999,0.011999,0.000000,-4.999999,-98.099983,16.600004,1.000000,1.000000,1.000000);
	return 1;
}
/*
CMD:plantas(playerid, params[])
{
	new string[200];
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL1) return 0;
    new plantas = 0;
    foreach(new p : Plantas)
	{
	    if(MariInfo[p][Creado] == 1 && MariInfo[p][Estado] != 0) plantas++;
	}
	format(string, sizeof(string), "Hay "CR"%d"CB" plantas de marihuana creadas en el servidor.", plantas);
	Mensaje(playerid,-1,string);
	return 1;
}

CMD:irmaria(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL1) return 0;
	new id, string[150];
	if(sscanf(params,"d",id)) return Mensaje(playerid,-1,"Usa "CR"/irmaria [ID]");
 	if(MariInfo[id][Estado] == 0) return Mensaje(playerid,-1,"ID inv�lida.");
	format(string,sizeof(string),"Fuiste a la posici�n de la planta ID "CR"%d",id);
	Mensaje(playerid,-1,string);
 	SetPosEx(playerid,MariInfo[id][pX],MariInfo[id][pY],MariInfo[id][pZ],0,0,0);
	return true;
}

CMD:destruirmaria(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL1) return 0;
	new id, string[150];
	if(sscanf(params,"d",id)) return Mensaje(playerid,-1,"Usa "CR"/destruirmaria [ID]");
 	if(MariInfo[id][Estado] == 0) return Mensaje(playerid,-1,"ID inv�lida.");
	format(string,sizeof(string),"Destruiste la planta ID "CR"%d", id);
	Mensaje(playerid,-1,string);
 	DestroyDynamicObjectEx(MariInfo[id][ObjetoID]);
 	DestroyDynamic3DTextLabelEx(MariInfo[id][Label]);
	MariInfo[id][Estado] = 0;
	MariInfo[id][Creado] = 0;
	MariInfo[id][pX] = 0;
	MariInfo[id][pY] = 0;
	MariInfo[id][pZ] = 0;
	format(MariInfo[id][Plantador], 24, "Nadie");
	Iter_Remove(Plantas, id);
	return true;
}

CMD:mariainfo(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL1) return 0;
    foreach(new e : Plantas)
    {
    	if(EstaEn(playerid,2.0,MariInfo[e][pX], MariInfo[e][pY], MariInfo[e][pZ]))
    	{
       		new string[150];
       		format(string,sizeof(string),"Esta planta tiene la ID %d | Plantador: %s | Estado: %d | Creado %d.", MariInfo[e][IDMaria], MariInfo[e][Plantador], MariInfo[e][Estado], MariInfo[e][Creado]);
 			Mensaje(playerid,-1,string);
        }
    }
	return 1;
}*/

CMD:prendasde(playerid, params[])
{
	new id, cadena[50];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL1) return 0;
	if(!sscanf(params,"d",id))
	{
		format(cadena, sizeof(cadena), "Prendas de %s:", NombreJugador(id));
		Mensaje(playerid, COLOR_MUTE, cadena);
		format(cadena, sizeof(cadena), "Prenda 1: "CR"%d", PlayerInfo[id][pObj][0]);
		Mensaje(playerid, -1, cadena);
		format(cadena, sizeof(cadena), "Prenda 2: "CR"%d", PlayerInfo[id][pObj][1]);
		Mensaje(playerid, -1, cadena);
		format(cadena, sizeof(cadena), "Prenda 3: "CR"%d", PlayerInfo[id][pObj][2]);
		Mensaje(playerid, -1, cadena);
		format(cadena, sizeof(cadena), "Prenda 4: "CR"%d", PlayerInfo[id][pObj][3]);
		Mensaje(playerid, -1, cadena);
	}
	return 1;
}

CMD:unsan(playerid, params[])
{
	new id, razon[50], cadena[100];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(!sscanf(params,"ds[50]",id,razon))
	{
		if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2)
		{
			format(cadena, 128, "Notificaci�n: %s libero de prisi�n a %s(%d), r: %s (TJ: %d/TC: %d).", NombreJugador(playerid), NombreJugador(id), id, razon, PlayerInfo[id][pTiempoJail], PlayerInfo[id][pTiempoCarcel]);
			MensajeAdmin(COLOR_CHEAT, cadena, PlayerInfo[playerid][pAdmin]);
		}
		PlayerInfo[id][pTiempoJail] = 0;
		PlayerInfo[id][pTiempoCarcel] = 0;
		San[id] = 0;
		MarcadoMedicos[id] = 0;
		LlamadaMedicos[id] = 0;
		SetPosEx(id, 1510.23,-1672.60,14.05,0,0,0);
		TextDrawHideForPlayer(id,Sangre);
		TextDrawHideForPlayer(id, MisionT2[5]);
		PlayerTextDrawHide(id,IndicacionesT[id]);
	}
	else return Mensaje(playerid, -1, "Usa: /unsan [id] [razon]");
	return 1;
}

CMD:givegun(playerid,params[])
{
	new id,arma;
	if(PlayerInfo[playerid][pAdmin] < 7) return 0;
	if(!sscanf(params,"dd",id,arma))
	{
	    if(arma == 9 || arma == 16 || arma == 17 || arma == 18 || arma == 26 || arma == 28  || arma == 32 || arma > 33) return 0;
		DarArma(id,arma);
		new cadena[50];
		format(cadena, sizeof(cadena), "%s, recibiste un %s.", NombreJugador(id), GetWeaponNameEx(arma));
		Mensaje(id, -1, cadena);
		format(cadena, sizeof(cadena), "Le diste un %s a %s.", GetWeaponNameEx(arma),NombreJugador(id));
		Mensaje(playerid, -1, cadena);
		
	}
	return 1;
}

CMD:darsed(playerid,params[])
{
	new id,sed,cadena[50];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL1) return 0;
	if(!sscanf(params,"dd",id,sed))
	{
		PlayerInfo[id][pSed] = sed;
		format(cadena, sizeof(cadena), "Le diste %d de sed a %s", sed, NombreJugador(id));
		Mensaje(playerid, -1, cadena);
		if(SedOculta[id] == 1) BarraSed(id, 1);
	}
	return 1;
}

CMD:darhambre(playerid,params[])
{
	new id,hambre,cadena[50];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL1) return 0;
	if(!sscanf(params,"dd",id,hambre))
	{
		PlayerInfo[id][pHambre] = hambre;
		format(cadena, sizeof(cadena), "Le diste %d de hambre a %s", hambre, NombreJugador(id));
		Mensaje(playerid, -1, cadena);
		if(SedOculta[id] == 1) BarraHambre(id, 1);
	}
	return 1;
}


CMD:admins(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 3) return 0;

	new Query[120];
    mysql_format(Conecction, Query, sizeof(Query), "SELECT Username, Admin, Conexion, Online FROM `usuarios` WHERE `Admin` > '0' ORDER BY Admin DESC");
	mysql_tquery(Conecction, Query, "SelectAdmins", "d", playerid);

	return 1;
}


Funcion:SelectAdmins(playerid)
{
	new dialog[4000],Conexion,admin,name[32],online, count = 0;
	dialog = "Nombre\tRango\t�lt. conexi�n\n";
	new h = cache_num_rows();
 	for(new i = 0; i < h; i++)
	{
	    cache_get_value_name(i, "Username", name);
	    cache_get_value_name_int(i, "Admin", admin);
        cache_get_value_name_int(i, "Conexion",Conexion);
        cache_get_value_name_int(i, "Online",online);


        if(online == 0) format(dialog, sizeof dialog, "%s%s\t%s\t%s\n", dialog,name, RangoAdmin[admin],FormatTimeleft(gettimeVariable - Conexion));
			
        else
		{
			format(dialog, sizeof dialog, "%s%s\t%s\t{80D465}Conectado"CB"\n", dialog,name, RangoAdmin[admin]);
			count ++;
		}
	}

	new ads[60];
	format(ads, sizeof ads, "Administradores %d/%d conectados", count, h);
    MostrarDialog(playerid, DIALOG_INFO, DIALOG_STYLE_TABLIST_HEADERS, ads, dialog, "Aceptar", "");
	return 1;
}


CMD:setskin(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	{
		new id,skin;
		if(!sscanf(params,"dd",id,skin))
		{
			PlayerInfo[playerid][jRopa] = skin;
			SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]);
		}
	}
	return 1;
}
/*
CMD:trans(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	transportistas();
	return 1;
}*/

CMD:limpiarsalon(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL1) return 0;
	{
		if(Alquilado == true) Mensaje(playerid,-1,"Limpiaste el sal�n de eventos."),SalonTimer();
		else Mensaje(playerid,-1,"El sal�n no se encuentra alquilado.");
	}
	return 1;
}

CMD:estadoavion(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	va_SendClientMessage(playerid,-1, "Estado avion: %d", contadoravion);
    return 1;
}

CMD:estadocarreras(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	va_SendClientMessage(playerid,-1, "EmpezoCarrera: %d | HabilitarCarreras: %d | ParticipantesCarrera: %d | ParticipantesCarrera2: %d", EmpezoCarrera, HabilitarCarreras, GetParticipantesC(), ParticipantesCarrera2);
    return 1;
}

CMD:cadm(playerid, params[])
{
    new id,cargos;
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(sscanf(params,"rd", id, cargos)) return Mensaje(playerid, -1, "Por favor, usa "CR"/cargos [id] [0-6]"CB".");
	if(JugadorLogeado[id] != 1 || id == INVALID_PLAYER_ID) return Mensaje(playerid,-1,"Persona no encontrada.");
 	if(PlayerInfo[id][pCargos] == cargos) return Mensaje(playerid,-1,"Ese jugador ya tiene ese cargo.");
    DarEstrella(id,cargos);
	if(cargos == 0) format(PlayerInfo[id][QuienC],6,"Nadie"),Advertido[id] = 0;
	else format(PlayerInfo[id][QuienC],MAX_PLAYER_NAME+1,"%s",NombreJugador(playerid));
   	return 1;
}

CMD:avion(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	SetPosEx(playerid, 433.6143, 2511.1050, 1952.6047, 0.7009, 0, 0);
	return 1;
}

CMD:ci(playerid,params[])
{
    new id,interior,query[70];
    if(PlayerInfo[playerid][pMaper] == 0) return 0;
	if(sscanf(params, "dd", id,interior)) return Mensaje(playerid,COLOR_GRAD2,"Uso /ci [ID] [Interior]");
	{
 		if(PropInfo[id][pEnUso] == 1)
		{
		    if(interior <= 0 || interior >= 44) return Mensaje(playerid,-1,"Ese interior es inv�lido.");
		    if(interior == 40) PropInfo[id][pTipo] = 2;
			else if(interior == 41) PropInfo[id][pTipo] = 3;
			else if(interior == 43) PropInfo[id][pTipo] = 4;
			else PropInfo[id][pTipo] = 1;
		    DarInteriorCasa(id,interior);
			format(query, 70, "Ha cambiado el interior de la casa ID: **%d**, viejo interior: **%d**,nuevo interior: **%d**", id, PropInfo[id][pInterior], interior);
			MensajeDiscord(NombreJugador(playerid), query, WEBHOOK_REGISTRO_MAPEOS);
		    PropInfo[id][pInterior] = interior;
			BorrarLabelCasa(id);
			CargarPropiedad(id,0);
			GuardarPropiedad(id);
			format(query,sizeof(query),"Cambiaste el interior de la casa ID: "CR"%d (Interior: %d).",id,interior);
			Mensaje(playerid,-1,query);
			
		}
		else Mensaje(playerid,-1,"Esa propiedad no existe.");
	}
	return true;
}


CMD:casaid(playerid,params[])
{
    if(PlayerInfo[playerid][pMaper] == 0) return 0;
    foreach(new id : Propiedades)
    {
    	if(EstaEn(playerid,2,PropInfo[id][pPosX],PropInfo[id][pPosY],PropInfo[id][pPosZ]))
    	{
        	if(PropInfo[id][pEnUso] == 1)
        	{
       			new string[256];
       			format(string,sizeof(string),"Propiedad ID: "CR"%d"CB" | Propietario: %s | Interior: %d | Nivel: %d | Precio: %d | Moneda: %d.",id,PropInfo[id][pPropietario],PropInfo[id][pInterior],PropInfo[id][pNivel],PropInfo[id][pPrecio],PropInfo[id][pEnVentaPor]);
 				Mensaje(playerid,-1,string);
        	}
        }
    }
	return 1;
}

CMD:resetearemisora(playerid, params[])
{
	new em;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(sscanf(params, "d", em) )return Mensaje(playerid,COLORCARGO0,"Uso: /resetearemisora [id]");
	if(em > 0 && em < 5)
	{
		CabinasOcupadasEmisoras[em][0] = 0;
		CabinasOcupadasEmisoras[em][1] = -1;
		new string[144];
  		format(string,sizeof(string),""CB"Radio disponible {C0C0C0}[N%d]",em);
		UpdateDynamic3DTextLabelText(CabinasTextos[em], COLOR_BLANCO, string);
		foreach(new id : Player)
		{
			if(Emisoras[id][CabinaOcupada] == em && Emisoras[id][TransEmisora] == 1)
			{
				Emisoras[id][TransEmisora] = 0;
				Emisoras[id][CabinaOcupada] = 0;
			}
			if(TieneMicrofono[id] == em)
			{
			    RemovePlayerAttachedObject(id,4);
				TieneMicrofono[id] = 0;
			}
			if(IsPlayerInDynamicArea(id, AreaCabinas[em]))
			{
				Mensaje(id, COLOR_BLANCO, "La emisora que estabas escuchando dejo de transmitir.");
				StopAudioStreamForPlayer(id);
			}
			if(IsPlayerInAnyVehicle(id) && EmisoraEscuchando[GetPlayerVehicleID(id)] == em || MP3Escuchando[id] == em || ParlanteEscuchando[id] == em)
			{
				ParlanteEscuchando[id] = -1;
				MP3Escuchando[id] = -1;
				Mensaje(id, COLOR_BLANCO, "La emisora que estabas escuchando dejo de transmitir.");
				StopAudioStreamForPlayer(id);
			}
		}
  		foreach(new v: Vehicle)
		{
		    if(EmisoraEscuchando[v] == em) EmisoraEscuchando[v] = -1;
		}
		va_SendClientMessage(playerid,-1, "Reseteaste correctamente la emisora #%d.",em);
	}
	else Mensaje(playerid,-1,"ID Invalida.");
	return 1;
}

CMD:placaex(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO2) return 0;
	if(PlayerInfo[playerid][jMiembro] != 1) return 1;
	if(PlayerInfo[playerid][pDuty] == 0)
	{
	    Frecuencia[playerid] = 1;
		frecuencias[1]++;
		PlayerInfo[playerid][pDuty] = 1;
	    RemovePlayerAttachedObject(playerid, 2);
		RemovePlayerAttachedObject(playerid, 3);
		SetPlayerColor(playerid,TEAM_BLUE_COLOR);
		Mensaje(playerid, COLORCARGO0, "Te pusiste el uniforme de polic�a.");
		SetPlayerSkin(playerid, PlayerInfo[playerid][pModelo]);
		if(PlayerInfo[playerid][pModelo] == 211)
		{
			SetPlayerAttachedObject(playerid, 2,19142,1,0.109797,0.053399,-0.002000,0.000000,-2.299998,0.299997,1.046000,0.986998,0.893000);
			SetPlayerAttachedObject(playerid, 3,18636,2,0.136399,0.028400,0.001000,90.000000,90.000000,0.000000,1.154000,1.100000,1.161000);
		}
	}
	else
	{
		frecuencias[Frecuencia[playerid]]--;
	    Frecuencia[playerid] = 0;
		PlayerInfo[playerid][pDuty] = 0;
	    RemovePlayerAttachedObject(playerid, 2);
		RemovePlayerAttachedObject(playerid, 3);
		SetPlayerColor(playerid,COLORCARGO0);
		Mensaje(playerid, COLORCARGO0, "Te sacaste el uniforme de polic�a.");
		SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]);
		if(PlayerInfo[playerid][pWP1] == 3) QuitarArma(playerid, 3);
		TimerWeapons[playerid] = gettimeVariable + 3;
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
		LimpiarMarker(playerid);
	}
	return 1;
}
/*
CMD:blindado(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	new opcion[16];
	if(sscanf(params, "s[16]", opcion)) return Mensaje(playerid, COLOR_BLANCO, "El uso del comando es "CR"/blindado [activar - desactivar]");
	if(!strcmp(opcion, "activar", true))
	{
		if(StatusBlindado == 1) return Mensaje(playerid, COLOR_BLANCO, "El sistema de asalto al blindado ya se encuentra habilitado.");
		StatusBlindado = 1;
		Mensaje(playerid,COLOR_BLANCO, "Se activo el sistema de asalto al blindado, ya puedes usar "CR"/participar"CB".");
		mysql_tquery(Conecction, "UPDATE `registros` SET `Blindado`='1'");
	}
	else if(!strcmp(opcion, "desactivar", true))
	{
		if(StatusBlindado == 0) return Mensaje(playerid, COLOR_BLANCO, "El sistema de asalto al blindado ya se encuentra deshabilitado.");
		StatusBlindado = 0;
		mysql_tquery(Conecction, "UPDATE `registros` SET `Blindado`='0'");
	}
	return 1;
}*/

CMD:revive(playerid,params[])
{
	new id;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO2) return 0;
	if(!sscanf(params,"d",id))
	{
		if(!IsPlayerConnected(id)) return Mensaje(playerid,COLORCARGO0,"No se encontr� ning�n jugador.");
		Revivir(id);
		if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2)
		{
			new cadena[75];
			format(cadena, 75, "Notificaci�n: %s[%d] revivio a %s[%d].", NombreJugador(playerid),playerid,NombreJugador(id),id);
			MensajeAdmin(COLOR_CHEAT, cadena, PlayerInfo[playerid][pAdmin]);
		}
	}
	return 1;
}

CMD:vida(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	EstablecerVida(playerid, 100);
    EstablecerChaleco(playerid, 100);
	return 1;
}

CMD:vidaid(playerid,params[])
{
	new id;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO2) return 0;
	if(!sscanf(params,"d",id))
	{
		if(!IsPlayerConnected(id)) return Mensaje(playerid,COLORCARGO0,"No se encontr� ning�n jugador.");
		EstablecerVida(id, 100);
	    EstablecerChaleco(id, 100);
	}
	return 1;
}

CMD:disableid(playerid,params[])
{
	new id;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO2) return 0;
	if(!sscanf(params,"d",id)) 
	{
		if(!IsPlayerConnected(id)) return 0;
		DisableRemoteVehicleCollisions(id, false);
	}
	return 1;
}

CMD:sethp(playerid,params[])
{
	new id,vida;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(!sscanf(params,"dd",id,vida))
	{
		if(!IsPlayerConnected(id)) return 0;
	    if(PlayerInfo[id][pAdmin] > PlayerInfo[playerid][pAdmin]) return Mensaje(playerid, COLORCARGO0, "Error.");
		EstablecerVida(id, vida);
		if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2)
		{
			new cadena[85];
			format(cadena, 85, "Notificaci�n: %s[%d] dio %d de vida a %s[%d].", NombreJugador(playerid),playerid,vida,NombreJugador(id),id);
			MensajeAdmin(COLOR_CHEAT, cadena, PlayerInfo[playerid][pAdmin]);
		}
	}
	return 1;
}

CMD:setar(playerid,params[])
{
	new id,chaleco;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(!sscanf(params,"dd",id,chaleco))
	{
		if(!IsPlayerConnected(id)) return 0;
	    if(PlayerInfo[id][pAdmin] > PlayerInfo[playerid][pAdmin]) return Mensaje(playerid, COLORCARGO0, "Error.");
		EstablecerChaleco(id, chaleco);
		if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2)
		{
			new cadena[85];
			format(cadena, 85, "Notificaci�n: %s[%d] dio %d de chaleco a %s[%d].", NombreJugador(playerid),playerid,chaleco,NombreJugador(id),id);
			MensajeAdmin(COLOR_CHEAT, cadena, PlayerInfo[playerid][pAdmin]);
		}
	}
	return 1;
}

CMD:fixveh(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(!IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid, COLOR_GREY, "No est�s en un veh�culo.");
	new veh = GetPlayerVehicleID(playerid);
	SetVehicleHealthAC(veh, 1000.0);
	RepairVehicle(veh);
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2)
	{
		new cadena[75];
		format(cadena, 75, "Notificaci�n: %s[%d] reparo su veh�culo (%d).", NombreJugador(playerid),playerid, veh);
		MensajeAdmin(COLOR_CHEAT, cadena, PlayerInfo[playerid][pAdmin]);
  	}
	return 1;
}

CMD:repararveh(playerid,params[])
{
	new id;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO2) return 0;
	if(!sscanf(params,"d",id))
	{
		if(!IsValidVehicle(id)) return 0;
		SetVehicleHealthAC(id, 1000.0);
		RepairVehicle(id);
		if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2)
		{
			new cadena[75];
			format(cadena, 75, "Notificaci�n: %s[%d] reparo el veh�culo ID %d.", NombreJugador(playerid),playerid,id);
			MensajeAdmin(COLOR_CHEAT, cadena, PlayerInfo[playerid][pAdmin]);
		}
	}
	return 1;
}

CMD:setvip(playerid,params[])
{
	
	if(PlayerInfo[playerid][pAdmin] < 7) return 0;
	new id,vip;
	if(!sscanf(params,"dd",id,vip))
	{
		
		if(!IsPlayerConnected(id)) return 1;
		if(vip > 3 || vip < 0) return Mensaje(playerid, -1, "VIP entre 0 y 3");
		if(vip == 0)
		{
			PlayerInfo[id][VIP] = 0;
			GuardarCuenta(id);
			Mensaje(id, -1, "Un administrador te quit� el vip.");
			va_SendClientMessage(playerid, -1, "le quitaste el vip a %s.", NombreJugador(id));
		}
		else
		{
			new dia,mes,ano, Query[140];
			getdate(dia,mes,ano);
			mysql_format(Conecction, Query, sizeof(Query), "UPDATE `usuarios` SET `TiempoVIP`='%d' WHERE `ID`='%d' LIMIT 1",gettimeVariable + 2592000,PlayerInfo[id][p_DBID]);
			mysql_tquery(Conecction, Query);
			PlayerInfo[id][VIP] = vip;
			va_SendClientMessage(id,-1,"Un administrador te dio una membres�a "CR"VIP %d"CB" hasta el %d de %s del %d.",vip,ano,QueMes(mes+1),dia);
			va_SendClientMessage(playerid,-1,"Le diste una membres�a "CR"VIP %d"CB" hasta el %d de %s del %d al usuario %s.",vip,ano,QueMes(mes+1),dia, NombreJugador(id));
			mysql_format(Conecction, Query, sizeof(Query), "UPDATE `usuarios` SET `TiempoVIP`='%d' WHERE `ID`='%d' LIMIT 1",gettimeVariable + 2592000,PlayerInfo[id][p_DBID]);
			mysql_tquery(Conecction, Query);
			PlayerInfo[playerid][jTiempoVip] = gettimeVariable + 2592000;

		}
		
	}
	return 1;
}

CMD:disarm(playerid,params[])
{
	new id;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	if(!sscanf(params,"d",id))
	{
		if(!IsPlayerConnected(id)) return 0;
		QuitarArmas(id, 2);
		if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2)
		{
			new cadena[75];
			format(cadena, 75, "Notificaci�n: %s[%d] desarmo a %s[%d].", NombreJugador(playerid),playerid,NombreJugador(id),id);
			MensajeAdmin(COLOR_CHEAT, cadena, PlayerInfo[playerid][pAdmin]);
		}
	}
	return 1;
}

CMD:darmedis(playerid,params[])
{
	new id,medis,string[128];
	if(!EsFundador(playerid)) return 0;
	if(!sscanf(params,"dd",id,medis))
	{
		if(!IsPlayerConnected(id)) return 0;
		PlayerInfo[id][pMedicamentos] += medis;
		new cadena[50];
		format(string,128,""CB"Has recibido "CR"%d Medicamentos"CB" por parte de la administracion.",medis);
		MostrarDialog(id,DRECARGA,DIALOG_STYLE_MSGBOX,"Informaci�n",string,"Aceptar","");
		format(cadena, sizeof(cadena), "%s le diste %d medicamentos a %s", NombreJugador(playerid),medis, NombreJugador(id));
		Mensaje(playerid, -1, cadena);
	}
	return 1;
}

CMD:darhongos(playerid,params[])
{
	new id,medis,string[128];
	if(!EsFundador(playerid)) return 0;
	if(!sscanf(params,"dd",id,medis))
	{
		if(!IsPlayerConnected(id)) return 0;
		PlayerInfo[id][pHongos] += medis;
		new cadena[50];
		format(string,128,""CB"Has recibido "CR"%d hongos"CB" por parte de la administracion.",medis);
		MostrarDialog(id,DRECARGA,DIALOG_STYLE_MSGBOX,"Informaci�n",string,"Aceptar","");
		format(cadena, sizeof(cadena), "%s le diste %d hongos a %s", NombreJugador(playerid),medis, NombreJugador(id));
		Mensaje(playerid, -1, cadena);
	}
	return 1;
}


CMD:darcaramelos(playerid,params[])
{
	new id,caramelos,string[128];
	if(!EsFundador(playerid)) return 0;
	if(!sscanf(params,"dd",id,caramelos))
	{
		if(!IsPlayerConnected(id)) return 0;
		PlayerInfo[id][pCaramelos] += caramelos;
		new cadena[50];
		format(string,128,""CB"Has recibido "CR"%d Caramelos"CB" por parte de la administracion.",caramelos);
		MostrarDialog(id,DRECARGA,DIALOG_STYLE_MSGBOX,"Informaci�n",string,"Aceptar","");
		format(cadena, sizeof(cadena), "%s le diste %d caramelos a %s", NombreJugador(playerid),caramelos, NombreJugador(id));
		Mensaje(playerid, -1, cadena);
	}
	return 1;
}

CMD:darcaramelostodos(playerid,params[])
{
	new cantidad,string[128];
	if(!EsFundador(playerid)) return 0;
	if(!sscanf(params,"d",cantidad))
	{
		format(string,128,"~p~Felicidades~w~, recibiste ~p~%d caramelos~w~ de parte de la administraci�n.",cantidad);
		foreach(new i : Player)
		{
			ShowTDN(i, string);
			//MostrarDialog(i,DRECARGA,DIALOG_STYLE_MSGBOX,"Informaci�n",string,"Aceptar","");
			PlayerInfo[i][pCaramelos] += cantidad;
			
		}
		format(string,128,"%s le has dado una cantidad de %d caramelos a todos los jugadores conectados",NombreJugador(playerid),cantidad);
		Mensaje(playerid,-1,string);
	}
	return 1;
}

CMD:darhongostodos(playerid,params[])
{
	new cantidad,string[128];
	if(!EsFundador(playerid)) return 0;
	if(!sscanf(params,"d",cantidad))
	{
		
		format(string,128,"~p~Felicidades~w~, recibiste ~p~%d hongos~w~ de parte de la administraci�n.",cantidad);
		foreach(new i : Player)
		{
			ShowTDN(i, string);
			//MostrarDialog(i,DRECARGA,DIALOG_STYLE_MSGBOX,"Informaci�n",string,"Aceptar","");
			PlayerInfo[i][pHongos] += cantidad;
		}
		format(string,128,"%s le has dado una cantidad de %d hongos a todos los jugadores conectados",NombreJugador(playerid),cantidad);
		Mensaje(playerid,-1,string);
	}
	return 1;
}

CMD:darmedistodos(playerid,params[])
{
	new cantidad,string[128];
	if(!EsFundador(playerid)) return 0;
	if(!sscanf(params,"d",cantidad))
	{
		format(string,128,"~p~Felicidades~w~, recibiste ~p~%d medicamentos~w~ de parte de la administraci�n.",cantidad);
		foreach(new i : Player)
		{
			ShowTDN(i, string);
			PlayerInfo[i][pMedicamentos] += cantidad;
		}
		format(string,128,"%s le has dado una cantidad de %d medicamentos a todos los jugadores conectados",NombreJugador(playerid),cantidad);
		Mensaje(playerid,-1,string);
	}
	return 1;
}

CMD:darpiezas(playerid,params[])
{
	new id,cantidad,string[128];
	if(!EsFundador(playerid)) return 0;
	if(!sscanf(params,"dd",id,cantidad))
	{
		PlayerInfo[id][pMateriales] += cantidad;
		new cadena[50];
		format(string,128,""CB"Has recibido "CR"%d Piezas"CB" por parte de la administracion.",cantidad);
		MostrarDialog(id,DRECARGA,DIALOG_STYLE_MSGBOX,"Informaci�n",string,"Aceptar","");
		format(cadena, sizeof(cadena), "%s le diste %d piezas a %s", NombreJugador(playerid),cantidad, NombreJugador(id));
		Mensaje(playerid, -1, cadena);
	}
	return 1;
}

CMD:darcrack(playerid,params[])
{
	new id,crack,string[128];
	if(!EsFundador(playerid)) return 0;
	if(!sscanf(params,"rd",id,crack))
	{
		PlayerInfo[id][pCrack] += crack;
		new cadena[50];
		format(string,128,""CB"Has recibido "CR"%dg de Crack"CB" por parte de la administracion.",crack);
		MostrarDialog(id,DRECARGA,DIALOG_STYLE_MSGBOX,"Informaci�n",string,"Aceptar","");
		format(cadena, sizeof(cadena), "%s le diste %dg de crack a %s", NombreJugador(playerid),crack, NombreJugador(id));
		Mensaje(playerid, -1, cadena);
	}
	return 1;
}

CMD:darmaria(playerid,params[])
{
	new id,maria,string[128];
	if(!EsFundador(playerid)) return 0;
	if(!sscanf(params,"rd",id,maria))
	{
		PlayerInfo[id][pMarihuana] += maria;
		new cadena[50];
		format(string,128,""CB"Has recibido "CR"%dg de Marihuana"CB" por parte de la administracion.",maria);
		MostrarDialog(id,DRECARGA,DIALOG_STYLE_MSGBOX,"Informaci�n",string,"Aceptar","");
		format(cadena, sizeof(cadena), "%s le diste %dg de marihuana a %s", NombreJugador(playerid),maria, NombreJugador(id));
		Mensaje(playerid, -1, cadena);
	}
	return 1;
}

CMD:darsemillas(playerid,params[])
{
	new id,maria,string[128];
	if(!EsFundador(playerid)) return 0;
	if(!sscanf(params,"rd",id,maria))
	{
		PlayerInfo[id][pSemillas] += maria;
		new cadena[50];
		format(string,128,""CB"Has recibido "CR"%d Semillas de  Marihuana"CB" por parte de la administracion.",maria);
		MostrarDialog(id,DRECARGA,DIALOG_STYLE_MSGBOX,"Informaci�n",string,"Aceptar","");
		format(cadena, sizeof(cadena), "%s le diste %d semillas de marihuana a %s", NombreJugador(playerid),maria, NombreJugador(id));
		Mensaje(playerid, -1, cadena);
	}
	return 1;
}

CMD:resetregalo(playerid,params[])
{
	new id,string[85];
	if(!EsFundador(playerid)) return 0;
	if(!sscanf(params,"d",id))
	{
		format(string,85,"%s, reseteaste el regalo de %s",NombreJugador(playerid),NombreJugador(id));
		Mensaje(playerid,-1,string);
		PlayerInfo[id][jRegalo] = 0;
	}
	return 1;
}

CMD:darpatinestodos(playerid,params[])
{
	new string[128];
	if(!EsFundador(playerid)) return 0;
	foreach(new id : Player)
	{
			format(string,85,""CB"Has recibido unos "CR"Patines"CB" por parte de la administracion.");
			MostrarDialog(id,DRECARGA,DIALOG_STYLE_MSGBOX,"Informaci�n",string,"Aceptar","");
			PlayerInfo[id][pPatines] = 1;
	}
	format(string,128,"%s le has dado una patines a todos los jugadores conectados",NombreJugador(playerid));
	Mensaje(playerid,-1,string);
	return 1;
}

CMD:darpatines(playerid,params[])
{
	new id,string[85];
	if(!EsFundador(playerid)) return 0;
	if(!sscanf(params,"d",id))
	{
		format(string,85,"%s le has dado unos patines a %s",NombreJugador(playerid),NombreJugador(id));
		Mensaje(playerid,-1,string);
		format(string,85,""CB"Has recibido unos "CR"Patines"CB" por parte de la administracion.");
		MostrarDialog(id,DRECARGA,DIALOG_STYLE_MSGBOX,"Informaci�n",string,"Aceptar","");
		PlayerInfo[id][pPatines] = 1;
	}
	return 1;
}

CMD:quitarlicencia(playerid,params[])
{
	new id,string[100];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(!sscanf(params,"d",id))
	{
		format(string,100,"%s le has quitado la licencia a %s",NombreJugador(playerid),NombreJugador(id));
		Mensaje(playerid,-1,string);
		format(string,100,""CB"Se te ha retirado tu "CR"Licencia de aviaci�n"CB", vuelve a tramitar una.");
		MostrarDialog(id,DRECARGA,DIALOG_STYLE_MSGBOX,"Informaci�n",string,"Aceptar","");
		PlayerInfo[id][pLicencia] = 0;
	}
	return 1;
}

CMD:darlicencia(playerid,params[])
{
	new id,string[85];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(!sscanf(params,"d",id))
	{
		format(string,85,"%s le has dado una licencia de vuelo a %s",NombreJugador(playerid),NombreJugador(id));
		Mensaje(playerid,-1,string);
		format(string,85,""CB"Has recibido una "CR"Licencia de vuelo"CB" por parte de la administracion.");
		MostrarDialog(id,DRECARGA,DIALOG_STYLE_MSGBOX,"Informaci�n",string,"Aceptar","");
		PlayerInfo[id][pLicencia] = 1;
	}
	return 1;
}

CMD:darskin(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < 8) return 0;
	else
	{
		new Query[200],id,skin;
		if(!sscanf(params,"dd",id,skin))
		{
			PlayerInfo[id][jRopa] = skin;
			SetPlayerSkin(id, PlayerInfo[id][jRopa]);
			mysql_format(Conecction, Query, sizeof(Query), "UPDATE `usuarios` SET `Skin`='%d' WHERE `ID`='%d' LIMIT 1",skin,PlayerInfo[id][p_DBID]);
			mysql_tquery(Conecction, Query);
		}
	}
	return 1;
}

CMD:sacarcarrera(playerid,params[])
{
	new id;
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
    if(!sscanf(params,"r",id)) SacarCarrera(id, 1);
	return 1;
}

CMD:sacarcarrera2(playerid,params[])
{
	new id;
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
    if(!sscanf(params,"r",id)) SacarCarrera(id, 2);
	return 1;
}

CMD:gd(playerid,params[])
{
	new cuenta;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	foreach(new i : Player)
	{
		if(PlayerConectado(i))
		{
			GuardarCuenta(i);
			cuenta++;
		}
	}
	va_SendClientMessage(playerid,-1,"Fueron guardadas %d cuentas",cuenta);
	foreach(new f : Fabricas) GuardarFabrica(f);
	Mensaje(playerid,-1, "Fueron guardadas todas las f�bricas.");
	return 1;
}

CMD:v(playerid,params[])
{
	new modelo,id,Float:X,Float:Y,Float:Z,car,Float:angle;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(!sscanf(params, "dd", modelo,id))
	{
		if(modelo < 400 || modelo > 611) return Mensaje(playerid, -1, "modelo del veh�culo debe ser del 400 al 611 !");
	    if(EnVehTemporal[id] != INVALID_VEHICLE_ID)
		{
			new vehicleid = EnVehTemporal[id];
			EnVehTemporal[id] = INVALID_VEHICLE_ID;
			MotorAuto[vehicleid] = 0;
			DestroyVehicle(vehicleid);
		}
		new virtualw2 = GetPlayerVirtualWorld(id), interi2 = GetPlayerInterior(id);
		GetPlayerPos(id, X,Y,Z);
		GetPlayerFacingAngle(id,angle);
		BajandoV[id] = 0;
		car = CreateVehicle(modelo, X+1.0,Y,Z+2.0,angle,0,0,-1);
		bloqueado[car] = 0;
		VehicleFuel[car] = CombustibleCoche(car);
		EnAuto[id] = car;
		LinkVehicleToInteriorAC(car, interi2);
		SetVehicleVirtualWorld(car, virtualw2);
		MostrarVelocimetro(id);
		MotorAuto[car] = 1;
		alarma[car] = 0;
		EnVehTemporal[id] = car;
		SetVehicleParamsEx(car, 1, lights, alarm, 0, bonnet, boot, objective);
		PutPlayerInVehicleAC(id, car, 0);
	}
	else if(!sscanf(params, "d", modelo))
	{
		if(modelo < 400 || modelo > 611) return Mensaje(playerid, -1, "ID del veh�culo debe ser del 400 al 611 !");
		if(EnVehTemporal[playerid] != INVALID_VEHICLE_ID)
		{
			new vehicleid = EnVehTemporal[playerid];
			EnVehTemporal[playerid] = INVALID_VEHICLE_ID;
			MotorAuto[vehicleid] = 0;
			DestroyVehicle(vehicleid);
		}
		new virtualw = GetPlayerVirtualWorld(playerid), interi = GetPlayerInterior(playerid);
		GetPlayerPos(playerid, X,Y,Z);
		GetPlayerFacingAngle(playerid,angle);
		car = CreateVehicle(modelo, X+1.0,Y,Z+2.0,angle,0,0,-1);
		bloqueado[car] = 0;
		VehicleFuel[car] = CombustibleCoche(car);
		EnAuto[playerid] = car;
		LinkVehicleToInteriorAC(car, interi);
		SetVehicleVirtualWorld(car, virtualw);
		MostrarVelocimetro(playerid);
		alarma[car] = 0;
		MotorAuto[car] = 1;
		EnVehTemporal[playerid] = car;
		SetVehicleParamsEx(car, 1, lights, alarm, 0, bonnet, boot, objective);
		PutPlayerInVehicleAC(playerid, car, 0);
	}
	return 1;
}

CMD:dva(playerid,params[])
{
	new id;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(!sscanf(params,"d",id)) DestroyVehicle(id);
	else return Mensaje(playerid, -1, "Usa /dva [id veh�culo]");
	return 1;
}

CMD:liberarme(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	VariableCaido[playerid] = 0;
	Esposando[playerid] = 0;
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	DarEstrella(playerid,0);
	DescongelarEx(playerid);
	return 1;
}


CMD:reiniciarserver(playerid,params[])
{
	new string[250],tiempo;
	if(PlayerInfo[playerid][pAdmin] < 8) return 0;
 	if(!sscanf(params,"d",tiempo))
	{
	    if(tiempo < 2) return Mensaje(playerid,-1,"El tiempo para el reinicio debe ser mayor que 1.");
		format(string,250,"El servidor se reiniciar� autom�ticamente en %d minutos.",tiempo);
		MensajeAll(0xB1F6F6F6, string);
		ComandoEstado = 0;
		TiempoReinicio = tiempo-1;
		TimerReinicio = SetTimer("Reinicio",60000,true);
	}
	else return Mensaje(playerid,-1,"Utiliza /reiniciarserver [minutos]");
	return 1;
}

CMD:reiniciarserveroff(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	{
	    ComandoEstado = 1;
		MensajeAll(0xB1F6F6F6, "El reinicio del servidor fue cancelado.");
		KillTimer(TimerReinicio);
		KillTimer(TimerReinicio2);
	}
	return 1;
}

CMD:limpiarcuenta(playerid,params[])
{
	new id,string[128];
	if(PlayerInfo[playerid][pAdmin] < 8) return 0;
	if(!sscanf(params,"d",id))
	{
		format(string,128,"%s limpio la cuenta del jugador %s",NombreJugador(playerid), NombreJugador(id));
		Mensaje(playerid,-1,string);
		QuitarArmas(id, 2);
		PlayerInfo[id][pBanco] = 0;
		PlayerInfo[id][Credits] = 0;
		PlayerInfo[id][jDinero] = 0;
		PlayerInfo[id][Moneda] = 0;
		PlayerInfo[id][pCrack] = 0;
		PlayerInfo[id][pMedicamentos] = 0;
		PlayerInfo[id][pMateriales] = 0;
		PlayerInfo[id][pMarihuana] = 0;
		PlayerInfo[id][pSemillas] = 0;
		DarDinero(playerid, 0);
	}
	return 1;
}

CMD:nospec(playerid,params[])
{
	new id;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(!sscanf(params,"d",id))
	{
		va_SendClientMessage(playerid, -1, "%s bloqueaste el spec a %s.", NombreJugador(playerid), NombreJugador(id));
		NoSpec[id] = 1;
	}
	return 1;
}

CMD:sispec(playerid,params[])
{
	new id;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(!sscanf(params,"d",id))
	{
		va_SendClientMessage(playerid, -1, "%s activaste el spec a %s.", NombreJugador(playerid), NombreJugador(id));
		NoSpec[id] = 0;
	}
	return 1;
}

CMD:ubicar(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(!sscanf(params, "u", params[0]))
	{
		if(!IsPlayerConnected(params[0])) return Mensaje(playerid, -1, "La ID es inv�lida.");
		new Float:X,Float:Y,Float:Z, zone[MAX_ZONE_NAME],string[256];
		GetPlayer2DZone(params[0], zone, MAX_ZONE_NAME);
		GetPlayerPos(params[0], X,Y,Z);
		CrearCheckpoint(playerid,X,Y,Z, 6);
		format(string, sizeof(string), "[Busqueda]"CB" {00C7FF}%s"CB"(%d) fue visto por �ltima vez en %s.", NombreJugador(params[0]), params[0], zone);
		Mensaje(playerid, COLOR_SERVER, string);
	}
	else Mensaje(playerid, -1, "Utilize: /ubicar [Nombre_Jugador/ID]");
	return 1;
}

CMD:resetvipall(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] < 8) return 0;
	mysql_tquery(Conecction, "UPDATE `usuarios` SET VIP = '0';");
	return 1;
}

CMD:limpiarcarreras(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	foreach(new i : Player)
	{
		PlayerInfo[i][pPuntosCarrera] = 0;
	}
	mysql_tquery(Conecction, "UPDATE `usuarios` SET `PuntosCarrera`='0'");
	return 1;
}

CMD:limpiartimeon(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < 8) return 0;
	foreach(new i : Player)
	{
		PlayerInfo[i][TimeOn] = 0;
	}
	mysql_tquery(Conecction, "UPDATE `usuarios` SET `TimeOn`='0'");
	return 1;
}

CMD:limpiarregalos(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < 8) return 0;
	foreach(new i : Player)
	{
		PlayerInfo[i][jRegalo] = 0;
	}
	mysql_tquery(Conecction, "UPDATE `usuarios` SET `Regalo`='0'");
	return 1;
}

CMD:arbol(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(ArbolStatus == 0)
	{
		CrearArbol();
		ArbolStatus = 1;
		Mensaje(playerid, -1, "Arbol creado correctamente.");
		mysql_tquery(Conecction, "UPDATE `registros` SET `Arbol`='1'");
	}
	else
	{
		for(new a = 0; a < 19; a++) DestroyDynamicObjectEx(dynamicgift[a]);
		DestroyDynamic3DTextLabelEx(Text3D:dynamicgift3DText);
		ArbolStatus = 0;
		Mensaje(playerid, -1, "Arbol quitado correctamente.");
		mysql_tquery(Conecction, "UPDATE `registros` SET `Arbol`='0'");
	}
	return 1;
}

CMD:cargarbandas(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	CargarFacciones();
	Mensaje(playerid,-1,"Bandas cargadas.");
	return 1;
}

CMD:crearcasa(playerid,params[])
{
	
    if(PlayerInfo[playerid][pMaper] == 0) return 0;
	if(GetPlayerVirtualWorld(playerid) != 0 || GetPlayerInterior(playerid) != 0) return Mensaje(playerid,-1,"No puedes mapear aqu�");
	new precio,nivel,moneda,Float:Pos[4],query[600],interior;
	if(!sscanf(params,"dddd",precio,nivel,moneda,interior))
	{
		if(gettimeVariable < RateLimit[playerid]) return Mensaje(playerid,-1, "No puedes crear casas tan seguido.");
		else RateLimit[playerid] = gettimeVariable+10;
	    new zone[MAX_ZONE_NAME];
		GetPlayer3DZone(playerid, zone, sizeof(zone));
	    new id = CasaDesocupada();
	    if(id == -1) return Mensaje(playerid,-1,"No se puede crear mas propiedades.");
	    if(interior <= 0 || interior >= 44) return Mensaje(playerid,-1,"Ese interior es inv�lido.");
	    if(moneda < 0 || moneda > 2) return Mensaje(playerid,-1,"Esa moneda es inv�lida.");
	    GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
	    GetPlayerFacingAngle(playerid,Pos[3]);
		mysql_format(Conecction, query, sizeof(query),"INSERT INTO `propiedades` (`ID`,`Localizacion`,`PosX`,`PosY`,`PosZ`,`PosA`,`Interior`,`VW`,`Propietario`,`EnUso`) VALUES ('%d','%e','%f','%f','%f','%f','%d','%d','Nadie','1')", id, zone, Pos[0], Pos[1], Pos[2], Pos[3], interior, id+10001);
		mysql_tquery(Conecction, query);
		PropInfo[id][pEnUso] = 1;
		DarInteriorCasa(id,interior);
		PropInfo[id][pEnVenta] = 1;
		PropInfo[id][pPrecio] = precio;
		PropInfo[id][pNivel] = nivel;
		PropInfo[id][pEnVentaPor] = moneda;
		if(interior == 40) PropInfo[id][pTipo] = 2;
		else if(interior == 41) PropInfo[id][pTipo] = 3;
		else if(interior == 43) PropInfo[id][pTipo] = 4;
		else PropInfo[id][pTipo] = 1;
		PropInfo[id][pPosX] = Pos[0];
		PropInfo[id][pPosY] = Pos[1];
		PropInfo[id][pPosZ] = Pos[2];
		PropInfo[id][pPosA] = Pos[3];
		PropInfo[id][pAbierta] = 1;
		PropInfo[id][pRoperoAbierto] = 0;
		PropInfo[id][propiedad_ID] = id;
		PropInfo[id][pVW] = id+10001;
		format(PropInfo[id][pPropietario],40,"Nadie");
		format(PropInfo[id][pLocalizacion],80,zone);
		PropInfo[id][pInterior] = interior;
		CargarPropiedad(id,0);
		GuardarPropiedad(id);
		new mon[7];
		switch(moneda)
		{
			case 0: mon = "$";
			case 1: mon = " "Moneda1"";
			case 2: mon = " Coins";
		}
		format(query,145,"Creaste la casa ID: "CR"%d (Precio: %s%s) "CB"-"CR" (Interior: %d).",id,ConvertirNumero(precio),mon,interior);
		Mensaje(playerid,-1,query);
		va_SendClientMessage(playerid,-1,"Usa "CR"/ge %d"CB" para crear el garaje. Recuerda mirar para el lado del port�n.", id);
		Iter_Add(Propiedades, id);
		
		format(query, 160, "Ha creado la casa ID: **%d**. En **%s**, precio: **%d%s**, Interior: **%d**, Nivel necesario: **%d**", id,zone, precio, mon, interior, nivel);
		MensajeDiscord(NombreJugador(playerid), query, WEBHOOK_REGISTRO_MAPEOS);
	}
	else Mensaje(playerid,-1,"Por favor, usa "CR"/crearcasa [precio] [nivel] [moneda(0-2)] [interior]");
	return true;
}

CMD:ge(playerid,params[])
{
    if(PlayerInfo[playerid][pMaper] == 0) return 0;
    if(!sscanf(params,"d",params[0]))
    {
		new Float:Pos[4],p = params[0],string[400];
		GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
		GetPlayerFacingAngle(playerid,Pos[3]);
		if(PropInfo[p][pEnUso] == 1)
		{
		    if(PropInfo[p][pGX] == 0)
		    {
		        PropInfo[p][pGX] = Pos[0];
		        PropInfo[p][pGY] = Pos[1];
		        PropInfo[p][pGZ] = Pos[2];
		        PropInfo[p][pGA] = Pos[3];
				va_SendClientMessage(playerid,-1,"Creaste un garaje a la casa con id: "CR"%d",p);
				mysql_format(Conecction, string, sizeof(string),"UPDATE `propiedades` SET `GX`='%f',`GY`='%f',`GZ`='%f',`GA`='%f' WHERE `ID`='%d' LIMIT 1", PropInfo[p][pGX],PropInfo[p][pGY],PropInfo[p][pGZ],PropInfo[p][pGA],PropInfo[p][propiedad_ID]);
				mysql_tquery(Conecction, string);
				BorrarLabelCasa(p);
				CargarPropiedad(p,0);
				format(string, 100, "Ha creado un garaje para la casa ID: **%d**", p);
				MensajeDiscord(NombreJugador(playerid), string, WEBHOOK_REGISTRO_MAPEOS);
			}
		    else Mensaje(playerid,-1,"Esa propiedad ya tiene un garage.");
		}
		else Mensaje(playerid,-1,"Esa propiedad no existe.");
    }
    else Mensaje(playerid,-1,"Por favor, usa "CR"/ge [ID]");
	return true;
}

CMD:reiniciarcasa(playerid,params[])
{
    if(PlayerInfo[playerid][pMaper] == 0) return 0;
	new id,comprable,string[70];
	if(!sscanf(params,"dd",id,comprable))
	{
	    if(PropInfo[id][pEnUso] == 1)
		{
		    if(comprable < 0 || comprable > 1) return Mensaje(playerid,-1,"Ese comprable es inv�lido.");
	        PropInfo[id][pEnVenta] = comprable;
		    if(comprable == 0) PropInfo[id][pAbierta] = 0;
	        if(comprable == 1)
	        {
	            PropInfo[id][pAbierta] = 1;
	            PropInfo[id][pRoperoAbierto] = 0;
	            PropInfo[id][pIDPropietario] = 0;
				foreach(new j : Player)
				{
	    			for(new a = 0; a < MAX_PCASAS; a++)
	    			{
						if(id == PlayerInfo[j][CasaID][a]) PlayerInfo[j][CasaID][a] = 0;
	 				}
				}
	            new Query[100];
	            mysql_format(Conecction, Query, sizeof(Query),"UPDATE `propiedades` SET `Propietario`='Nadie',`IDPropietario`='0',`EnVenta`='1' WHERE `ID`='%d'", id);
				mysql_tquery(Conecction, Query);
	        }
			CargarPropiedad(id,1);
			GuardarPropiedad(id);
	        format(string,sizeof(string),"Pusiste en venta la casa con id: "CR"%d", id);
			Mensaje(playerid,-1,string);
			format(string, 50, "Ha desocupado la casa ID: **%d**", id);
			MensajeDiscord(NombreJugador(playerid), string, WEBHOOK_REGISTRO_MAPEOS);
		}
		else Mensaje(playerid,-1,"Esa propiedad no existe.");
	}
	else Mensaje(playerid,-1,"Por favor, usa "CR"/reiniciarcasa [ID] [comprable(0-1)]");
	return true;
}
CMD:editarcasa(playerid,params[])
{
    if(PlayerInfo[playerid][pMaper] == 0) return 0;
	new id,precio,nivel,moneda,comprable;
	if(!sscanf(params,"ddddd",id,precio,nivel,moneda,comprable))
	{
	    if(PropInfo[id][pEnUso] == 1)
		{
		    if(moneda < 0 || moneda > 2) return Mensaje(playerid,-1,"Esa moneda es inv�lida.");
		    if(comprable < 0 || comprable > 1) return Mensaje(playerid,-1,"Ese comprable es inv�lido.");
	        PropInfo[id][pPrecio] = precio;
			PropInfo[id][pNivel] = nivel;
			PropInfo[id][pEnVentaPor] = moneda;
	        PropInfo[id][pEnVenta] = comprable;
		    if(comprable == 0) PropInfo[id][pAbierta] = 0;
	        else if(comprable == 1) PropInfo[id][pAbierta] = 1;
			CargarPropiedad(id,1);
			GuardarPropiedad(id);
			va_SendClientMessage(playerid,-1,"Editaste el estado de la casa con id: "CR"%d", id);
			new mon[7];
			switch(moneda)
			{
				case 0: mon = "$";
				case 1: mon = " "Moneda1"";
				case 2: mon = " Coins";
			}
			new string[160];
			format(string, 160, "Ha editado la casa ID: **%d**, precio: **%d%s**, Nivel necesario: **%d**", id, precio, mon, nivel);
			MensajeDiscord(NombreJugador(playerid), string, WEBHOOK_REGISTRO_MAPEOS);
		}
		else Mensaje(playerid,-1,"Esa propiedad no existe.");
	}
	else Mensaje(playerid,-1,"Por favor, usa "CR"/editarcasa [ID] [precio] [nivel] [moneda(0-1)] [comprable(0-1)]");
	return true;
}
CMD:eh(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	new precio, nivel, vw, interior, vips, Float:Pos[4], query[600];
	if(!sscanf(params,"ddddd",precio,nivel,vw,interior,vips))
	{
	    new id = EstacionaDesocupado();
	    if(id == -1) return Mensaje(playerid,-1,"No se puede crear mas estacionamientos.");
		if(vips < 0 || vips > 1) return Mensaje(playerid,-1,"Esa VIP es inv�lido.");
		GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
	    GetPlayerFacingAngle(playerid,Pos[3]);
		mysql_format(Conecction, query, sizeof(query),"INSERT INTO `estacionamientos` (`ID`,`EstEnUso`,`Valor`,`Nivel`,`X`,`Y`,`Z`,`A`,`Inte`,`VW`,`DuenoN`,`DuenoID`,`VIP`) VALUES ('%d','1','%d','%d','%f','%f','%f','%f','%d','%d','Nadie','0','%d')", id, precio, nivel, Pos[0], Pos[1], Pos[2], Pos[3], interior, vw, vips);
		mysql_tquery(Conecction, query);
		InfoEst[id][estEnUso] = 1;
		InfoEst[id][estValor] = precio;
		InfoEst[id][estNivel] = nivel;
		InfoEst[id][estVirW] = vw;
		InfoEst[id][estInt] = interior;
		InfoEst[id][estVIP] = vips;
		InfoEst[id][estX] = Pos[0];
		InfoEst[id][estY] = Pos[1];
		InfoEst[id][estZ] = Pos[2];
		InfoEst[id][estA] = Pos[3];
		format(InfoEst[id][estDuenoN],40,"Nadie");
		CargarEstaciona(id);
		GuardarEstaciona(id);
		format(query,sizeof(query),"Creaste el estacionamiento ID "CR"%d"CB".", id);
		Mensaje(playerid,-1,query);
	}
	else Mensaje(playerid,-1,"Por favor, usa "CR"/eh [precio] [nivel] [vw] [interior] [VIP]");
	return true;
}

CMD:ee(playerid,params[])
{
	new casa,string[70];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(sscanf(params, "d", casa))return Mensaje(playerid,COLOR_GRAD2,"Uso /ee [ID]");
	{
	    if(InfoEst[casa][estEnUso] > 0)
		{
			new Float:X,Float:Y,Float:Z,Float:A;
 			GetPlayerPos(playerid, X,Y,Z);
			GetPlayerFacingAngle(playerid,A);
			InfoEst[casa][estX] = X;
			InfoEst[casa][estY] = Y;
			InfoEst[casa][estZ] = Z;
			InfoEst[casa][estA] = A;
			BorrarLabelEstaciona(casa);
			GuardarEstaciona(casa);
	    	CargarEstaciona(casa);
			format(string,sizeof(string),"Editaste la entrada del estacionamiento con id: "CR"%d", casa);
			Mensaje(playerid,-1,string);
		}
	    else Mensaje(playerid,-1,"Ese estacionamiento no existe.");
	}
	return 1;
}

CMD:ce(playerid,params[])
{
	new casa,string[70];
    if(PlayerInfo[playerid][pMaper] == 0) return 0;
	if(sscanf(params, "d", casa))return Mensaje(playerid,COLOR_GRAD2,"Uso /ce [ID]");
	{
	    if(PropInfo[casa][pEnUso] == 1)
		{
			new Float:X,Float:Y,Float:Z,Float:A;
 			GetPlayerPos(playerid, X,Y,Z);
			GetPlayerFacingAngle(playerid,A);
			PropInfo[casa][pPosX] = X;
			PropInfo[casa][pPosY] = Y;
			PropInfo[casa][pPosZ] = Z;
			PropInfo[casa][pPosA] = A;
			BorrarLabelCasa(casa);
			GuardarPropiedad(casa);
	    	CargarPropiedad(casa,0);
			format(string,sizeof(string),"Editaste la entrada de la casa con id: "CR"%d", casa);
			Mensaje(playerid,-1,string);
		}
	    else Mensaje(playerid,-1,"Esa propiedad no existe.");
	}
	return 1;
}

CMD:cg(playerid,params[])
{
	new casa,string[200];
    if(PlayerInfo[playerid][pMaper] == 0) return 0;
	if(sscanf(params, "d", casa))return Mensaje(playerid,COLOR_GRAD2,"Uso /cg [ID]");
	{
	    if(PropInfo[casa][pGX] != 0)
	    {
			new Float:X,Float:Y,Float:Z,Float:A;
			GetPlayerPos(playerid, X,Y,Z);
			GetPlayerFacingAngle(playerid,A);
			PropInfo[casa][pGX] = X;
			PropInfo[casa][pGY] = Y;
			PropInfo[casa][pGZ] = Z;
			PropInfo[casa][pGA] = A;
			format(string,sizeof(string),"Editaste la entrada del garaje con id: "CR"%d", casa);
			Mensaje(playerid,-1,string);
			mysql_format(Conecction, string, sizeof(string),"UPDATE `propiedades` SET `GX`='%f',`GY`='%f',`GZ`='%f',`GA`='%f' WHERE `ID`='%d'", PropInfo[casa][pGX],PropInfo[casa][pGY],PropInfo[casa][pGZ],PropInfo[casa][pGA],PropInfo[casa][propiedad_ID]);
			mysql_tquery(Conecction, string);
			BorrarLabelCasa(casa);
			CargarPropiedad(casa,0);
		}
		else Mensaje(playerid,-1,"Esa propiedad no tiene un garage.");
	}
	return 1;
}

CMD:bg(playerid,params[])
{
	new casa,string[200];
    if(PlayerInfo[playerid][pMaper] == 0) return 0;
	if(sscanf(params, "d", casa))return Mensaje(playerid,COLOR_GRAD2,"Uso /bg [ID]");
	{
	    if(PropInfo[casa][pGX] != 0)
	    {
			PropInfo[casa][pGX] = 0;
			PropInfo[casa][pGY] = 0;
			PropInfo[casa][pGZ] = 0;
			PropInfo[casa][pGA] = 0;
			format(string,sizeof(string),"Eliminaste el garaje con id: "CR"%d", casa);
			Mensaje(playerid,-1,string);
			mysql_format(Conecction, string, sizeof(string),"UPDATE `propiedades` SET `GX`='%f',`GY`='%f',`GZ`='%f',`GA`='%f' WHERE `ID`='%d'", PropInfo[casa][pGX],PropInfo[casa][pGY],PropInfo[casa][pGZ],PropInfo[casa][pGA],PropInfo[casa][propiedad_ID]);
			mysql_tquery(Conecction, string);
			BorrarLabelCasa(casa);
			CargarPropiedad(casa,0);
		}
		else return Mensaje(playerid,-1,"Esa propiedad no tiene un garage.");
	}
	return 1;
}

CMD:irestacionamiento(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO2) return 0;
	new id, string[150];
	if(sscanf(params,"d",id)) return Mensaje(playerid,-1,"Usa "CR"/irestacionamiento [ID]");
 	if(InfoEst[id][estEnUso] == 0) return Mensaje(playerid,-1,"ID de estacionamiento inv�lido.");
	format(string,sizeof(string),"Fuiste a la posici�n del estacionamiento ID "CR"%d",id);
	Mensaje(playerid,-1,string);
 	SetPosEx(playerid,InfoEst[id][estX],InfoEst[id][estY],InfoEst[id][estZ],0,0,0);
	return true;
}

CMD:irgaraje(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	new id, string[150];
	if(sscanf(params,"d",id)) return Mensaje(playerid,-1,"Usa "CR"/irgaraje [ID]");
 	if(PropInfo[id][pEnUso] == 0) return Mensaje(playerid,-1,"ID de casa inv�lido.");
 	if(PropInfo[id][pGX] == 0) return Mensaje(playerid,-1,"Esa propiedad no tiene garaje.");
	format(string,sizeof(string),"Fuiste a la posici�n del garaje de la casa ID "CR"%d",id);
	Mensaje(playerid,-1,string);
 	SetPosEx(playerid,PropInfo[id][pGX],PropInfo[id][pGY],PropInfo[id][pGZ],0,0,0);
	return true;
}

CMD:garajeid(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
    foreach(new id : Propiedades)
    {
    	if(EstaEn(playerid,2,PropInfo[id][pGX],PropInfo[id][pGY],PropInfo[id][pGZ]))
    	{
        	if(PropInfo[id][pGX] != 0)
        	{
       			new string[170];
       			format(string,sizeof(string),"Esta garaje tiene la ID "CR"%d"CB".", id);
 				Mensaje(playerid,-1,string);
        	}
        }
    }
	return 1;
}

CMD:darestilopelea(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	new string[128], giveplayerid, fightstyle;
	if(sscanf(params, "dd", giveplayerid, fightstyle))
	{
		Mensaje(playerid, COLOR_SERVER, "USA: /darestilopelea [playerid] [estilo]");
		Mensaje(playerid, COLOR_SERVER, "Estilos de pelea: 4, 5, 6, 7, 15, 26.");
		return 1;
	}
	if(fightstyle > 3 && fightstyle < 8 || fightstyle == 15 || fightstyle == 26)
	{
		format(string, sizeof(string), "Tu estilo de pelea ha sido cambiado al ID: %d.", fightstyle);
		Mensaje(giveplayerid,COLOR_SERVER,string);
		format(string, sizeof(string), "Cambiaste el estilo de pelea de %s al ID: %d.", NombreJugador(giveplayerid), fightstyle);
		Mensaje(playerid,COLOR_SERVER,string);
		SetPlayerFightingStyle(giveplayerid, fightstyle);
		return 1;
	}
	return 1;
}

CMD:ex(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO2) return 0;
	if(!sscanf(params, "d", params[0]))
	{
		if(IsPlayerConnected(params[0]))
		{
		    if(PlayerInfo[params[0]][pAdmin] > PlayerInfo[playerid][pAdmin]) return Mensaje(playerid, COLORCARGO0, "Error.");
			new Float:p_x,Float:p_y,Float:p_z;
			GetPlayerPos(params[0], p_x,p_y,p_z);
			CreateExplosion(p_x, p_y, p_z, 0, 10.0);
			new cadena[100];
			format(cadena, sizeof cadena, "Notificaci�n: %s[%d] explot� a %s[%d].", NombreJugador(playerid),playerid,NombreJugador(params[0]),params[0]);
			MensajeAdmin(COLOR_CHEAT, cadena, PlayerInfo[playerid][pAdmin]);
			return Mensaje(playerid, COLORCARGO0, "Explotado!");
			
		}
		else Mensaje(playerid, COLORCARGO0, "Esa id es inv�lida.");
	}
	else Mensaje(playerid, COLORCARGO0, "Usa {F4FA58}/ex [id]");
	return 1;
}

CMD:explo(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7) return 0;
	if(!sscanf(params, "dd", params[0], params[1]))
	{
		if(IsPlayerConnected(params[0]))
		{
		    if(PlayerInfo[params[0]][pAdmin] > PlayerInfo[playerid][pAdmin]) return Mensaje(playerid, COLORCARGO0, "Error.");
			new Float:p_x,Float:p_y,Float:p_z;
			GetPlayerPos(params[0], p_x,p_y,p_z);
			CreateExplosion(p_x, p_y, p_z, params[1], 10.0);
			new cadena[100];
			format(cadena, sizeof cadena, "Notificaci�n: %s[%d] explot� a %s[%d].", NombreJugador(playerid),playerid,NombreJugador(params[0]),params[0]);
			MensajeAdmin(COLOR_CHEAT, cadena, PlayerInfo[playerid][pAdmin]);
			return Mensaje(playerid, COLORCARGO0, "Explotado!");
		}
		else Mensaje(playerid, COLORCARGO0, "Esa id es inv�lida.");
	}
	else Mensaje(playerid, COLORCARGO0, "Usa {F4FA58}/explo [id] [tipo]");
	return 1;
}

CMD:explotar(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7) return 0;
	if(!sscanf(params, "ddd", params[0], params[1], params[2]))
	{
		if(IsPlayerConnected(params[0]))
		{
		    if(PlayerInfo[params[0]][pAdmin] > PlayerInfo[playerid][pAdmin]) return Mensaje(playerid, COLORCARGO0, "Error.");
			new Float:p_x,Float:p_y,Float:p_z;
			GetPlayerPos(params[0], p_x,p_y,p_z);
			new cadena[100];
			format(cadena, sizeof cadena, "Notificaci�n: %s[%d] explot� a %s[%d].", NombreJugador(playerid),playerid,NombreJugador(params[0]),params[0]);
			MensajeAdmin(COLOR_CHEAT, cadena, PlayerInfo[playerid][pAdmin]);
			CreateExplosion(p_x, p_y, p_z, params[1], params[2]);
			Mensaje(playerid, COLORCARGO0, "Explotado!");
			return 1;
		}
		else return Mensaje(playerid, COLORCARGO0, "Esa id es inv�lida.");
	}
	else Mensaje(playerid, COLORCARGO0, "Usa {F4FA58}/explotar [id] [tipo] [radio]");
	return 1;
}

CMD:conteo(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6) return 0;
	if(EnConteo == true) return Mensaje(playerid, -1, "Ya hay un conteo en curso.");
	new TiempoConteo;
	if(sscanf(params, "i", TiempoConteo)) return Mensaje(playerid, -1, "USO: /conteo [segundos]");
	if(TiempoConteo < 3 || TiempoConteo > 10) return Mensaje(playerid, -1, "Los segundos deben estar entre 3 y 10.");
	EnConteo = true;
	SetTimerEx("Conteos", 1000, false, "i", TiempoConteo);
	return 1;
}

CMD:editprenda(playerid, params[])
{
    new giveplayerid, prendaid, bone;
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
    if(sscanf(params, "ddd", giveplayerid, prendaid, bone)) return Mensaje(playerid, -1, "USA: /editprenda [playerid] [prendaid(0-3)] [bone]");
	if(prendaid < 0 || prendaid > 3) return Mensaje(playerid,-1,"prendaid incorrecto (0-3)");
	PlayerInfo[giveplayerid][pBone][prendaid] = bone;
	va_SendClientMessage(playerid, -1, "Editaste el bone de la prenda ID %d a ese jugador.",prendaid);
	return 1;
}

CMD:quitarprenda(playerid, params[])
{
  	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
    new giveplayerid, prendaid, Query[200];
    if(sscanf(params, "dd", giveplayerid, prendaid)) return Mensaje(playerid, -1, "USA: /quitarprenda [playerid] [prendaid(0-3)]");
	if(prendaid < 0 || prendaid > 3) return Mensaje(playerid,-1,"prendaid incorrecto (0-3)");
	if(IsPlayerAttachedObjectSlotUsed(giveplayerid,SlotP2[prendaid][giveplayerid])) RemovePlayerAttachedObject(giveplayerid, SlotP2[prendaid][giveplayerid]),UsandoP[giveplayerid]--;
	mysql_format(Conecction, Query, sizeof(Query),"DELETE FROM `prendas` WHERE `UserID`='%d' AND `Slot`='%d'", PlayerInfo[giveplayerid][p_DBID],prendaid+1);
	mysql_tquery(Conecction, Query);
	PlayerInfo[giveplayerid][pObj][prendaid] = 11392;
	NPrendas[giveplayerid]--;
	UsandoObj[prendaid][giveplayerid] = 0;
	va_SendClientMessage(playerid, -1, "Le quitaste la prenda ID %d a ese jugador.",prendaid);
   	return 1;
}

CMD:darprenda(playerid, params[])
{
  	if(PlayerInfo[playerid][pAdmin] < 7) return 0;
    new giveplayerid, modelid, Query[200], slot = -1;
    if(sscanf(params, "dd", giveplayerid, modelid)) return Mensaje(playerid, -1, "USA: /darprenda [playerid] [modelid]");
    if(NPrendas[giveplayerid] >= 4) return Mensaje(playerid,-1,"Ese jugador no puede tener m�s de 4 prendas.");
    NPrendas[giveplayerid]++;
	if(PlayerInfo[giveplayerid][pObj][0] == 0 || PlayerInfo[giveplayerid][pObj][0] == 11392) slot = 0;
	if(PlayerInfo[giveplayerid][pObj][1] == 0 || PlayerInfo[giveplayerid][pObj][1] == 11392) slot = 1;
	if(PlayerInfo[giveplayerid][pObj][2] == 0 || PlayerInfo[giveplayerid][pObj][2] == 11392) slot = 2;
	if(PlayerInfo[giveplayerid][pObj][3] == 0 || PlayerInfo[giveplayerid][pObj][3] == 11392) slot = 3;
	if(slot == -1) return Mensaje(playerid, -1, "Ese jugador no puede tener mas prendas.");
 	else
	{
		PlayerInfo[giveplayerid][pObj][slot] = modelid;
		mysql_format(Conecction, Query, sizeof(Query), "INSERT INTO `prendas` (`UserID`, `Objeto`, `Slot`,`PrendaPos`) VALUES ('%d','%d','%d', 2)", PlayerInfo[giveplayerid][p_DBID], modelid, slot+1);
		mysql_tquery(Conecction, Query);
		PlayerInfo[giveplayerid][pfOffsetX][slot] = 0.085;
		PlayerInfo[giveplayerid][pfOffsetY][slot] = 0.017999;
		PlayerInfo[giveplayerid][pfOffsetZ][slot] = 0.000999;
		PlayerInfo[giveplayerid][pfRotX][slot] = 87.2;
		PlayerInfo[giveplayerid][pfRotY][slot] = 88.1;
		PlayerInfo[giveplayerid][pfRotZ][slot] = -7.5;
		PlayerInfo[giveplayerid][pfScaleX][slot] = 1;
		PlayerInfo[giveplayerid][pfScaleY][slot] = 1;
		PlayerInfo[giveplayerid][pfScaleZ][slot] = 1;
		PlayerInfo[giveplayerid][pBone][slot] = 2;
        if(modelid == 19086)
		{
			PlayerInfo[giveplayerid][pBone][slot] = 6;
			PlayerInfo[giveplayerid][pfOffsetX][slot] = 0.039998;
			PlayerInfo[giveplayerid][pfOffsetY][slot] = -0.002;
			PlayerInfo[giveplayerid][pfOffsetZ][slot] = -0.004999;
			PlayerInfo[giveplayerid][pfRotX][slot] = -176.6;
			PlayerInfo[giveplayerid][pfRotY][slot] = 11.3;
			PlayerInfo[giveplayerid][pfRotZ][slot] = 5.7;
		}
		Mensaje(playerid, -1, "Le diste una prenda a ese jugador.");
	}
	return 1;
}

CMD:sanoff(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO2) return 0;
 	new tiempo, JugadorSancionado[25], RazonSan[128];
	if(sscanf(params, "ds[25]s[128]", tiempo, JugadorSancionado, RazonSan)) return Mensaje(playerid, -1, "Modo de uso: /sanoff [Tiempo] [Nombre_Apellido] [Raz�n]");
	new DB_Query[128];
	mysql_format(Conecction,DB_Query, sizeof DB_Query, "SELECT `ID` FROM `usuarios` WHERE `Username`='%e' LIMIT 1", JugadorSancionado);
	mysql_tquery(Conecction, DB_Query, "SelectJugadorASan", "ddss", playerid, tiempo, JugadorSancionado, RazonSan);
	return 1;
}


CMD:banoff(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	new JugadorBaneado[32], RazonBan[60];
	if(sscanf(params, "s[32]s[60]", JugadorBaneado, RazonBan)) return Mensaje(playerid,-1,"Modo de uso: /banoff [Nombre_Apellido] [Razon]");
	new DB_Query[128];
	mysql_format(Conecction,DB_Query, sizeof DB_Query, "SELECT ID, Faccion, Rango FROM usuarios WHERE Username = '%e' LIMIT 1", JugadorBaneado);
	mysql_tquery(Conecction, DB_Query, "SelectJugadorABanear", "dss", playerid, JugadorBaneado, RazonBan);
	return 1;
}

CMD:bantempoff(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
	new JugadorBaneado[32], RazonBan[60], dias;
	if(sscanf(params, "s[32]ds[60]", JugadorBaneado, dias, RazonBan)) return Mensaje(playerid,-1,"Modo de uso: /banoff [Nombre_Apellido] [Dias] [Razon]");
	new DB_Query[128];
	mysql_format(Conecction,DB_Query, sizeof DB_Query, "SELECT ID, Faccion, Rango FROM usuarios WHERE Username = '%e' LIMIT 1", JugadorBaneado);
	mysql_tquery(Conecction, DB_Query, "SelectJugadorABanearOff", "dssd", dias, JugadorBaneado, RazonBan, playerid);
	return 1;
}

CMD:npckick(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(npctoggle == 0) return Mensaje(playerid, -1, " Todos los NPC est�n desconectados.");
	foreach(new i : Player)
	{
		if(IsPlayerNPC(i)) Kick(i);
	}
    for(new a = 0; a <= 8; a++) UpdateDynamic3DTextLabelText(TextBot[a],COLOR_BLANCO,"");
	npctoggle = 0;
	Mensaje(playerid, -1, "NPCs Kickeados.");
	return 1;
}

CMD:npcjoin(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(npctoggle == 0)
	{
		LoadNPCs();
		Mensaje(playerid, -1, "NPCs Cargados.");
	}
	else Mensaje(playerid, -1, " Todos los NPC est�n cargados.");
	return 1;
}

CMD:expulsaradmin(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_SUBDUE) return 0;
	new nombre[35], Query[120];
	if(sscanf(params, "s[35]", nombre)) return Mensaje(playerid,COLORCARGO0,"Uso: /expulsaradmin Nombre_Apellido");
	foreach(new i: Player)
	{
		if(!strcmp(nombre, NombreJugador(i), true))
		{
			va_SendClientMessage(playerid,0x2AFF0000, "%s, expulsaste del Staff a %s (%d)", NombreJugador(playerid), NombreJugador(i), i);
			PlayerInfo[i][pAdmin] = 0;
			return 1;
		}
	}
	mysql_format(Conecction, Query, sizeof Query, "UPDATE usuarios SET Admin = 0 WHERE Username = '%e'", nombre);
	mysql_tquery(Conecction, Query);
	va_SendClientMessage(playerid, -1, "El staff %s fue expulsado correctamente", nombre);
	return 1;
}

CMD:dara(playerid, params[])
{

	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_SUBDUE) return 0;
	new string[126];
	new ID,ADMIN;
	if(sscanf(params, "dd", ID,ADMIN)) return Mensaje(playerid,COLORCARGO0,"Uso: /dara [id] [nivel]");
	if(ID == playerid) return Mensaje(playerid, -1, "No puedes modificar tu propio rango");
	if(!IsPlayerConnected(ID)) return 1;
	if(ADMIN == 0)
	{
		Iter_Remove(Admin, ID);
		format(string, sizeof(string), "%s, expulsaste del Staff a %s (%d)", NombreJugador(playerid), NombreJugador(ID), ID);
		Mensaje(playerid,0x2AFF0000, string);
		PlayerInfo[ID][pAdmin] = 0;
	}
	if(ADMIN == ADMIN_LVL_AYUDANTE)
	{
		format(string, sizeof(string), "%s, Le diste Ayudante a %s (%d) [1].", NombreJugador(playerid), NombreJugador(ID), ID);
		Mensaje(playerid,0x2AFF0000, string);
		PlayerInfo[ID][pAdmin] = 1;
	}
	if(ADMIN == ADMIN_LVL_DUDAS)
	{
		format(string, sizeof(string), "%s, Le diste Moderador del Canal /n a %s (%d) [2].", NombreJugador(playerid), NombreJugador(ID), ID);
		Mensaje(playerid,0x2AFF0000, string);
		PlayerInfo[ID][pAdmin] = 2;
	}
	if(ADMIN == ADMIN_LVL_JUEGO1)
	{
		format(string, sizeof(string), "%s, Le diste Moderador del Juego B�sico a %s (%d) [3].", NombreJugador(playerid), NombreJugador(ID), ID);
		Mensaje(playerid,0x2AFF0000, string);
		PlayerInfo[ID][pAdmin] = 3;
	}
	if(ADMIN == ADMIN_LVL_JUEGO2)
	{
		format(string, sizeof(string), "%s, Le diste Moderador del Juego Full a %s (%d) [4].", NombreJugador(playerid), NombreJugador(ID), ID);
		Mensaje(playerid,0x2AFF0000, string);
		PlayerInfo[ID][pAdmin] = 4;
	}
	if(ADMIN == ADMIN_LVL_GLOBAL1)
	{
		format(string, sizeof(string), "%s, Le diste Moderador Global a %s (%d) [5].", NombreJugador(playerid), NombreJugador(ID), ID);
		Mensaje(playerid,0x2AFF0000, string);
		PlayerInfo[ID][pAdmin] = 5;
	}
	if(ADMIN == ADMIN_LVL_GLOBAL2)
	{
		format(string, sizeof(string), "%s, Le diste Admin a %s (%d) [6].", NombreJugador(playerid), NombreJugador(ID), ID);
		Mensaje(playerid,0x2AFF0000, string);
		PlayerInfo[ID][pAdmin] = 6;
	}
	if(ADMIN == ADMIN_LVL_SUBDUE)
	{
		format(string, sizeof(string), "%s, Le diste Sub due�o a %s (%d) [7].", NombreJugador(playerid), NombreJugador(ID), ID);
		Mensaje(playerid,0x2AFF0000, string);
		PlayerInfo[ID][pAdmin] = 7;
	}
	if(ADMIN > 0 && ADMIN <= ADMIN_LVL_SUBDUE) if(!Iter_Contains(Admin, ID)) Iter_Add(Admin, ID);
	return 1;
}
/*
CMD:darban(playerid, params[])
{
	new string[126];
	new ID;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(sscanf(params, "dd", ID)) return Mensaje(playerid,COLORCARGO0,"Uso: /darmaper [id]");
	else if(!IsPlayerConnected(ID)) return Mensaje(playerid,COLORCARGO0,"Jugador no conectado.");
	format(string, sizeof(string), "%s, Le diste permisos de baneo a %s (%d).", NombreJugador(playerid), NombreJugador(ID), ID);
	Mensaje(playerid,0x2AFF0000, string);
	PlayerInfo[ID][pPuedeBan] = 1;
	return 1;
}*/
/*
CMD:sacarban(playerid, params[])
{
	new string[126];
	new ID;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(sscanf(params, "dd", ID)) return Mensaje(playerid,COLORCARGO0,"Uso: /darmaper [id]");
	else if(!IsPlayerConnected(ID)) return Mensaje(playerid,COLORCARGO0,"Jugador no conectado.");
	format(string, sizeof(string), "%s, Le quitaste permisos de baneo a %s (%d).", NombreJugador(playerid), NombreJugador(ID), ID);
	Mensaje(playerid,0x2AFF0000, string);
	PlayerInfo[ID][pPuedeBan] = 0;
	return 1;
}*/

CMD:darmaper(playerid, params[])
{
	new string[126];
	new ID;
	if(PlayerInfo[playerid][pAdmin] < 7) return 0;
	if(sscanf(params, "d", ID)) return Mensaje(playerid,COLORCARGO0,"Uso: /darmaper [id]");
	else if(!IsPlayerConnected(ID)) return Mensaje(playerid,COLORCARGO0,"Jugador no conectado.");
	format(string, sizeof(string), "%s, Le diste Maper a %s (%d).", NombreJugador(playerid), NombreJugador(ID), ID);
	Mensaje(playerid,0x2AFF0000, string);
	PlayerInfo[ID][pMaper] = 1;
	return 1;
}

CMD:sacarmaper(playerid, params[])
{
	new string[126];
	new ID;
	if(PlayerInfo[playerid][pAdmin] < 7) return 0;
	if(sscanf(params, "d", ID)) return Mensaje(playerid,COLORCARGO0,"Uso: /sacarmaper [id]");
	else if(!IsPlayerConnected(ID)) return Mensaje(playerid,COLORCARGO0,"Jugador no conectado.");
	format(string, sizeof(string), "%s, Le sacaste Maper a %s (%d).", NombreJugador(playerid), NombreJugador(ID), ID);
	Mensaje(playerid,0x2AFF0000, string);
	PlayerInfo[ID][pMaper] = 0;
	return 1;
}

CMD:pstat(playerid, params[])
{
	new szMessage[144];
	if(!EsFundador(playerid)) return 0;
	if(sscanf(params, "ddd", params[0],params[1],params[2]))
	{
		Mensaje(playerid, -1, "/pstat [playerid/nombre] [numero] [valor]");
		Mensaje(playerid, -1, "[Nivel 1] [Tel�fono 2] [Experiencia 3] [Sexo 4] [Trabajo 5] [Trabajo VIP 6] [Nivel Armero 7] [Nivel Camionero 8]");
		Mensaje(playerid, -1, "[Nivel Ladron 9] [Nivel Transportista 10] [Nivel Basurero 11] [Nivel Mecanico 12] [Nivel Pescador 13][Nivel Medico 14]");
		Mensaje(playerid, -1, "[GPS 15] [horasjugadas 16]");
		return 1;
	}
	else if (!IsPlayerConnected(params[0])) Mensaje(playerid,COLORCARGO0,"Jugador no conectado.");
	else
	{
		switch(params[1])
		{
			case 1:
			{
				format(szMessage, sizeof(szMessage),"%s usaste el comando /pstat con %s - Nivel: %d.", NombreJugador(playerid),NombreJugador(params[0]),params[2]);
				Mensaje(playerid,-1, szMessage);
				PlayerInfo[params[0]][jNivel] = params[2];
				Actualizar(params[0]);
			}
			case 2:
			{
				format(szMessage, sizeof(szMessage),"%s usaste el comando /pstat con %s - Tel�fono: %d.", NombreJugador(playerid),NombreJugador(params[0]),params[2]);
				Mensaje(playerid,-1, szMessage);
				PlayerInfo[params[0]][pNumero] = params[2];
			}
			case 3:
			{
				PlayerInfo[params[0]][jExperiencia] = params[2];
				format(szMessage, sizeof(szMessage),"%s usaste el comando /pstat con %s - P. Experiencia: %d.", NombreJugador(playerid),NombreJugador(params[0]),params[2]);
				Mensaje(playerid,-1, szMessage);
				Actualizar(params[0]);
			}
			case 4:
			{
				PlayerInfo[params[0]][jSexo] = params[2];
				format(szMessage, sizeof(szMessage),"%s usaste el comando /pstat con %s - Sexo: %d.", NombreJugador(playerid),NombreJugador(params[0]),params[2]);
				Mensaje(playerid,-1, szMessage);
			}
			case 5:
			{
				PlayerInfo[params[0]][Trabajo][0] = params[2];
				format(szMessage, sizeof(szMessage),"%s usaste el comando /pstat con %s - Trabajo 1: %d (%s).", NombreJugador(playerid),NombreJugador(params[0]),params[2], NombreTrabajo(params[2]));
				Mensaje(playerid,-1, szMessage);
			}
			case 6:
			{
				PlayerInfo[params[0]][Trabajo][1] = params[2];
				format(szMessage, sizeof(szMessage),"%s usaste el comando /pstat con %s - Trabajo 2: %d (%s).", NombreJugador(playerid),NombreJugador(params[0]),params[2], NombreTrabajo(params[2]));
				Mensaje(playerid,-1, szMessage);
			}
			case 7:
			{
				PlayerInfo[params[0]][pNivelArmero] = params[2];
				format(szMessage, sizeof(szMessage),"%s usaste el comando /pstat con %s - Nivel Armero: %d.", NombreJugador(playerid),NombreJugador(params[0]),params[2]);
				Mensaje(playerid,-1, szMessage);
			}
			case 8:
			{
				PlayerInfo[params[0]][pNivelCamionero] = params[2];
				format(szMessage, sizeof(szMessage),"%s usaste el comando /pstat con %s - Nivel Camionero: %d.", NombreJugador(playerid),NombreJugador(params[0]),params[2]);
				Mensaje(playerid,-1, szMessage);
			}
			case 9:
			{
				PlayerInfo[params[0]][pNivelLadron] = params[2];
				format(szMessage, sizeof(szMessage),"%s usaste el comando /pstat con %s - Nivel Ladron: %d.", NombreJugador(playerid),NombreJugador(params[0]),params[2]);
				Mensaje(playerid,-1, szMessage);
			}
			case 10:
			{
				PlayerInfo[params[0]][pNivelTransportista] = params[2];
				format(szMessage, sizeof(szMessage),"%s usaste el comando /pstat con %s - Nivel Transportista: %d.", NombreJugador(playerid),NombreJugador(params[0]),params[2]);
				Mensaje(playerid,-1, szMessage);
			}
			case 11:
			{
				PlayerInfo[params[0]][pNivelBasurero] = params[2];
				format(szMessage, sizeof(szMessage),"%s usaste el comando /pstat con %s - Nivel Basurero: %d.", NombreJugador(playerid),NombreJugador(params[0]),params[2]);
				Mensaje(playerid,-1, szMessage);
			}
			case 12:
			{
				PlayerInfo[params[0]][pNivelMecanico] = params[2];
				format(szMessage, sizeof(szMessage),"%s usaste el comando /pstat con %s - Nivel Mecanico: %d.", NombreJugador(playerid),NombreJugador(params[0]),params[2]);
				Mensaje(playerid,-1, szMessage);
			}
			case 13:
			{
				PlayerInfo[params[0]][pNivelPescador] = params[2];
				format(szMessage, sizeof(szMessage),"%s usaste el comando /pstat con %s - Nivel Pescador: %d.", NombreJugador(playerid),NombreJugador(params[0]),params[2]);
				Mensaje(playerid,-1, szMessage);
			}
			case 14:
			{
				PlayerInfo[params[0]][pNivelMedico] = params[2];
				format(szMessage, sizeof(szMessage),"%s usaste el comando /pstat con %s - Nivel Medico: %d.", NombreJugador(playerid),NombreJugador(params[0]),params[2]);
				Mensaje(playerid,-1, szMessage);
			}
			case 15:
			{
				PlayerInfo[params[0]][pGPS] = params[2];
				format(szMessage, sizeof(szMessage),"%s usaste el comando /pstat con %s - GPS: %d.", NombreJugador(playerid),NombreJugador(params[0]),params[2]);
				Mensaje(playerid,-1, szMessage);
			}
			case 16:
			{
				PlayerInfo[params[0]][horasjugadas] = params[2];
				format(szMessage, sizeof(szMessage),"%s usaste el comando /pstat con %s - horasjugadas: %d.", NombreJugador(playerid),NombreJugador(params[0]),params[2]);
				Mensaje(playerid,-1, szMessage);
			}
			default: Mensaje(playerid, -1, "C�digo inv�lido!");
		}
	}
	return 1;
}

CMD:disable(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	new opcion[16];
	if(sscanf(params, "s[16]", opcion)) return Mensaje(playerid, -1, "El uso del comando es "CR"/disable [activar - desactivar]");
	if(!strcmp(opcion, "activar", true))
	{
		if(DisableStatus == 1) return Mensaje(playerid, -1, "Disable ya se encuentra habilitado.");
		DisableStatus = 1;
		Mensaje(playerid, -1, "Disable fue activado correctamente.");
		mysql_tquery(Conecction, "UPDATE `registros` SET `Disable`='1'");
	}
	else if(!strcmp(opcion, "desactivar", true))
	{
		if(DisableStatus == 0) return Mensaje(playerid, -1, "Disable ya se encuentra deshabilitado.");
		DisableStatus = 0;
		Mensaje(playerid, -1, "Disable fue desactivado correctamente.");
		mysql_tquery(Conecction, "UPDATE `registros` SET `Disable`='0'");
	}
	return 1;
}

CMD:hyd(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Mensaje(playerid, COLOR_GREY, "No est�s en un veh�culo.");
	AddVehicleComponent(GetPlayerVehicleID(playerid), 1087);
	Mensaje(playerid, -1, "Agregaste hidr�ulica a tu veh�culo.");
	return 1;
}

CMD:dameskin(playerid,params[])
{
	new skin;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(!sscanf(params,"d",skin))
	{
		PlayerInfo[playerid][jRopa] = skin;
		SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]);
	}
	return 1;
}

CMD:damerango(playerid,params[])
{
	new rango;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(!sscanf(params,"d",rango))
	{
		PlayerInfo[playerid][pRango] = rango;
	}
	return 1;
}

CMD:dametiempo(playerid,params[])
{
	new tiempo;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(!sscanf(params,"d",tiempo))
	{
		PlayerInfo[playerid][pTiempoCarcel] = tiempo;
	}
	return 1;
}

CMD:dameuni(playerid,params[])
{
	new uniforme;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(!sscanf(params,"d",uniforme))
	{
		PlayerInfo[playerid][pModelo] = uniforme;
	}
	return 1;
}

CMD:dararma(playerid,params[])
{
	new id,arma;
	if(PlayerInfo[playerid][pAdmin] < 8) return 0;
	if(!sscanf(params,"dd",id,arma))
	{
		if(!IsPlayerConnected(id)) return 1;
		DarArma(id,arma);
		new cadena[50];
		format(cadena, sizeof(cadena), "%s le diste un %s a %s", NombreJugador(playerid), GetWeaponNameEx(arma), NombreJugador(id));
		Mensaje(playerid, -1, cadena);
		format(cadena, sizeof(cadena), "%s, recibiste un %s.", NombreJugador(id), GetWeaponNameEx(arma));
		Mensaje(id, -1, cadena);
	}
	return 1;
}

CMD:darborracho(playerid,params[])
{
	new id,cantidad;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(!sscanf(params,"dd",id,cantidad))
	{
		SetPlayerDrunkLevel(id, cantidad);
		va_SendClientMessage(playerid, -1, "%s, le diste %d de borracho a %s.", NombreJugador(playerid), cantidad, NombreJugador(id));
	}
	return 1;
}

CMD:money(playerid,params[])
{
	new id,dinero,string[128];
	if(!EsFundador(playerid)) return 0;
	if(!sscanf(params,"dd",id,dinero))
	{
		DarDinero(id,dinero);
		new cadena[50];
		format(string,128,""CB"Has recibido "CR"%d$"CB" por parte de la administracion.",dinero);
		MostrarDialog(id,DRECARGA,DIALOG_STYLE_MSGBOX,"Informaci�n",string,"Aceptar","");
		format(cadena, sizeof(cadena), "%s le diste %d$ a %s", NombreJugador(playerid), dinero, NombreJugador(id));
		Mensaje(playerid, -1, cadena);
	}
	return 1;
}

CMD:moneyb(playerid,params[])
{
	new id,dinero,string[128];
	if(!EsFundador(playerid)) return 0;
	if(!sscanf(params,"dd",id,dinero))
	{
		PlayerInfo[id][pBanco] += dinero;
		new cadena[50];
		format(string,128,""CB"Has recibido "CR"%d$"CB" por parte de la administracion.",dinero);
		MostrarDialog(id,DRECARGA,DIALOG_STYLE_MSGBOX,"Informaci�n",string,"Aceptar","");
		format(cadena, sizeof(cadena), "%s le diste %d$ a %s", NombreJugador(playerid), dinero, NombreJugador(id));
		Mensaje(playerid, -1, cadena);
	}
	return 1;
}

CMD:money2(playerid,params[])
{
	new id,dinero;
	if(!EsFundador(playerid)) return 0;
	if(!sscanf(params,"dd",id,dinero))
	{
		DarDinero(id,dinero);
		new cadena[50];
		format(cadena, sizeof(cadena), "%s le diste %d$ a %s", NombreJugador(playerid), dinero, NombreJugador(id));
		Mensaje(playerid, -1, cadena);
	}
	return 1;
}

CMD:moneytodos(playerid,params[])
{
	new cantidad,string[128];
	if(!EsFundador(playerid)) return 0;
	if(!sscanf(params,"d",cantidad))
	{
		foreach(new i : Player)
		{
			format(string,128,""CB"Has recibido "CR"%d$"CB" de parte de la administraci�n, �felicidades!",cantidad);
			MostrarDialog(i,DRECARGA,DIALOG_STYLE_MSGBOX,"Informaci�n",string,"Aceptar","");
			DarDinero(i,cantidad);
		}
		format(string,128,"%s le has dado una cantidad de %d$ a todos los jugadores conectados",NombreJugador(playerid),cantidad);
		Mensaje(playerid,-1,string);
	}
	return 1;
}

CMD:qmoney(playerid,params[])
{
	new id,dinero;
	if(!EsFundador(playerid)) return 0;
	if(!sscanf(params,"dd",id,dinero))
	{
		QuitarDinero(id,dinero);
		new cadena[50];
		format(cadena, sizeof(cadena), "%s le quitaste %d$ a %s", NombreJugador(playerid),dinero, NombreJugador(id));
		Mensaje(playerid, -1, cadena);
	}
	return 1;
}

CMD:qcoins(playerid,params[])
{
	new id,dinero;
	if(!EsFundador(playerid)) return 0;
	if(!sscanf(params,"dd",id,dinero))
	{
		PlayerInfo[id][Credits] -= dinero;
		new cadena[50];
		format(cadena, sizeof(cadena), "%s le quitaste %d "Moneda3" a %s", NombreJugador(playerid),dinero, NombreJugador(id));
		Mensaje(playerid, -1, cadena);
	}
	return 1;
}

CMD:darpiezastodos(playerid,params[])
{
	new cantidad,string[128];
	if(!EsFundador(playerid)) return 0;
	if(!sscanf(params,"d",cantidad))
	{
		foreach(new i : Player)
		{
			format(string,128,""CB"Has recibido "CR"%d Piezas"CB" de parte de la administraci�n, �felicidades!",cantidad);
			MostrarDialog(i,DRECARGA,DIALOG_STYLE_MSGBOX,"Informaci�n",string,"Aceptar","");
			PlayerInfo[i][pMateriales] += cantidad;
			
		}
		format(string,128,"%s le has dado una cantidad de %d piezas a todos los jugadores conectados",NombreJugador(playerid),cantidad);
		Mensaje(playerid,-1,string);
	}
	return 1;
}

CMD:darcracktodos(playerid,params[])
{
	new cantidad,string[128];
	if(!EsFundador(playerid)) return 0;
	if(!sscanf(params,"d",cantidad))
	{
		foreach(new i : Player)
		{
			format(string,128,""CB"Has recibido "CR"%dgr de crack"CB" de parte de la administraci�n, �felicidades!",cantidad);
			MostrarDialog(i,DRECARGA,DIALOG_STYLE_MSGBOX,"Informaci�n",string,"Aceptar","");
			PlayerInfo[i][pCrack] += cantidad;
		}
		format(string,128,"%s le has dado una cantidad de %d crack a todos los jugadores conectados",NombreJugador(playerid),cantidad);
		Mensaje(playerid,-1,string);
	}
	return 1;
}

CMD:darmariatodos(playerid,params[])
{
	new cantidad,string[128];
	if(!EsFundador(playerid)) return 0;
	if(!sscanf(params,"d",cantidad))
	{
		foreach(new i : Player)
		{
			format(string,128,""CB"Has recibido "CR"%dgr de marihuana"CB" de parte de la administraci�n, �felicidades!",cantidad);
			MostrarDialog(i,DRECARGA,DIALOG_STYLE_MSGBOX,"Informaci�n",string,"Aceptar","");
			PlayerInfo[i][pMarihuana] += cantidad;
		}
		format(string,128,"%s le has dado una cantidad de %d marihuana a todos los jugadores conectados",NombreJugador(playerid),cantidad);
		Mensaje(playerid,-1,string);
	}
	return 1;
}

CMD:darsemillastodos(playerid,params[])
{
	new cantidad,string[128];
	if(!EsFundador(playerid)) return 0;
	if(!sscanf(params,"d",cantidad))
	{
  		foreach(new i : Player)
		{
			format(string,128,""CB"Has recibido "CR"%d semillas de marihuana"CB" de parte de la administraci�n, �felicidades!",cantidad);
			MostrarDialog(i,DRECARGA,DIALOG_STYLE_MSGBOX,"Informaci�n",string,"Aceptar","");
			PlayerInfo[i][pSemillas] += cantidad;
		}
		format(string,128,"%s le has dado una cantidad de %d semillas de marihuana a todos los jugadores conectados",NombreJugador(playerid),cantidad);
		Mensaje(playerid,-1,string);
	}
	return 1;
}

CMD:resetstats(playerid,params[])
{
	new id,string[85];
	if(PlayerInfo[playerid][pAdmin] < 8) return 0;
	if(!sscanf(params,"d",id))
	{
		format(string,85,"%s, reseteaste los stats de %s",NombreJugador(playerid),NombreJugador(id));
		Mensaje(playerid,-1,string);
		PlayerInfo[id][pStats] = 0;
	}
	return 1;
}

CMD:darmoneda(playerid,params[])
{
	new id,cantidad,string[128];
	if(!EsFundador(playerid)) return 0;
	if(!sscanf(params,"dd",id,cantidad))
	{
		format(string,128,"%s le has dado una cantidad de %d "Moneda1" a %s",NombreJugador(playerid),cantidad,NombreJugador(id));
		Mensaje(playerid,-1,string);
		format(string,128,""CB"Has recibido "CR"%d "Moneda1""CB" por parte de la administracion.",cantidad);
		MostrarDialog(id,DRECARGA,DIALOG_STYLE_MSGBOX,"Informaci�n",string,"Aceptar","");
		PlayerInfo[id][Moneda] += cantidad;
	}
	return 1;
}

CMD:darcoins(playerid,params[])
{
	new id,cantidad,string[128];
	if(!EsFundador(playerid)) return 0;
	if(!sscanf(params,"dd",id,cantidad))
	{
		format(string,128,"%s le has dado una cantidad de %d "Moneda3" a %s",NombreJugador(playerid),cantidad,NombreJugador(id));
		Mensaje(playerid,-1,string);
		format(string,128,""CB"Has recibido "CR"%d "Moneda3""CB" por parte de la administracion.",cantidad);
		MostrarDialog(id,DRECARGA,DIALOG_STYLE_MSGBOX,"Informaci�n",string,"Aceptar","");
		PlayerInfo[id][Credits] += cantidad;
	}
	return 1;
}

CMD:darcoinstodos(playerid,params[])
{
	new cantidad,string[128];
	if(!EsFundador(playerid)) return 0;
	if(!sscanf(params,"d",cantidad))
	{
  		foreach(new i : Player)
		{
			format(string,128,""CB"Has recibido "CR"%d"Moneda3""CB" de parte de la administraci�n, �felicidades!",cantidad);
			MostrarDialog(i,DRECARGA,DIALOG_STYLE_MSGBOX,"Informaci�n",string,"Aceptar","");
			PlayerInfo[i][Credits] += cantidad;
		}
		format(string,128,"%s le has dado una cantidad de %d "Moneda3" a todos los jugadores conectados",NombreJugador(playerid),cantidad);
		Mensaje(playerid,-1,string);
	}
	return 1;
}


CMD:darmonedatodos(playerid,params[])
{
	new cantidad,string[128];
	if(!EsFundador(playerid)) return 0;
	if(!sscanf(params,"d",cantidad))
	{
  		foreach(new i : Player)
		{
			if(PlayerConectado(i) && !IsPlayerNPC(i))
			{
				format(string,128,""CB"Has recibido "CR"%d"Moneda1""CB" de parte de la administraci�n, �felicidades!",cantidad);
				MostrarDialog(i,DRECARGA,DIALOG_STYLE_MSGBOX,"Informaci�n",string,"Aceptar","");
				PlayerInfo[i][Moneda] += cantidad;
			}
		}
		format(string,128,"%s le has dado una cantidad de %d "Moneda1" a todos los jugadores conectados",NombreJugador(playerid),cantidad);
		Mensaje(playerid,-1,string);
	}
	return 1;
}

CMD:forcepd(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 7) return 0;
	else PayDay2();
	
	return 1;
}

CMD:recargarcamello(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;

	CrackCamello = 15000;
	MarihuanaCamello = 15000;
	MedicamentosCamello = 15000;
	DineroCamello = 1000000;
	HongosCamello = 30000;
	CocainaCamello = 30000;
	Mensaje(playerid,-1,"Camello recargado");
	return 1;
}

CMD:infocamello(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	va_SendClientMessage(playerid, -1, "Crack %d | Marihuana %d | Medicamentos %d | Dinero %d", CrackCamello, MarihuanaCamello, MedicamentosCamello, DineroCamello);
	return 1;
}

CMD:ao(playerid,params[])
{
	new texto[128];
	if(PlayerInfo[playerid][pAdmin] < 7) return 0;
	if(!sscanf(params,"s[128]",texto))
	{
		new string[128];
		format(string,128,"[Servidor] - [%s]: %s", NombreJugador(playerid),texto);
		MensajeAll(TEAM_BLUE_COLOR,string);
	}
	else return Mensaje(playerid,-1,"Usa /ao [texto global]");
	return 1;
}

CMD:darfaccion(playerid, params[])
{
	new ID,FACCION;
	if(sscanf(params, "rd", ID,FACCION) )return Mensaje(playerid,COLOR_GRAD2,"Uso /darfaccion [id] [numero]");
	if(FACCION == 8940)
   	{
   		va_SendClientMessage(playerid,-1,"No puedes poner esa ID, por errores internos (Crash GM)");
		EvadeError();
 	}
	if(FACCION == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 7) return 0;
		if(PlayerInfo[ID][jMiembro] != 0)
		{
			ActualizarIntegrantes(PlayerInfo[ID][jMiembro], 0);
		}
	    if(PlayerInfo[ID][jMiembro] == 1 || PlayerInfo[ID][jMiembro] == 2)
		{
			SetPlayerSkin(ID, PlayerInfo[ID][jRopa]);
			ClearAnimations(ID);
			TimerWeapons[ID] = gettimeVariable + 3;
			ResetPlayerWeapons(ID);
			DarArmas(ID);
			SetPlayerColor(ID,COLORCARGO0);
			LimpiarMarker(ID);
		}
		PlayerInfo[ID][jMiembro] = FACCION;
		PlayerInfo[ID][pRango] = FACCION;
		PlayerInfo[ID][pDuty] = FACCION;
		PlayerInfo[ID][pDutyM] = FACCION;
		return 1;
	}
	if(FACCION > 0)
   	{
   		if(PlayerInfo[playerid][pAdmin] < 7) return 0;
   		va_SendClientMessage(playerid,-1,"Has hecho al usuario lider de la faccion %s", BandasInfo[FACCION][BNombre]);
   		va_SendClientMessage(ID,-1,"Ahora eres el lider de la facci�n %s", BandasInfo[FACCION][BNombre]);
   		PlayerInfo[ID][jMiembro] = FACCION;
   		PlayerInfo[ID][pRango] = 8;
		ActualizarIntegrantes(PlayerInfo[ID][jMiembro], 1);
 	}
	return 1;
}




CMD:unbanip(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO1) return 0;
    if(!sscanf(params, "s[25]", params[0]))
    {
		DesbanearIP(params[0]);
        va_SendClientMessage(playerid, -1, "IP desbaneada por %s (%s)", NombreJugador(playerid), params[0]);
    }
	else Mensaje(playerid, COLORCARGO0, "Uso: /unbanip [ip]");
    return 1;
}



CMD:guia(playerid,params[])
{
     if(PlayerInfo[playerid][pAgenda] != 1) return Mensaje(playerid,-1,"Necesitas una gu�a telef�nica para encontrar un n�mero.");
     MostrarGuia(playerid);
     return 1;
}

CMD:nombretemp(playerid, params[])
{
	new string[128];
   	if(PlayerInfo[playerid][pAdmin] < 7) return 1;
	if(GetPVarInt(playerid, "TempName") == 0)
	{
		if(isnull(params)) return Mensaje(playerid, -1, "Usa: /nombretemp [Nombre Temporal]");
		new name[MAX_PLAYER_NAME];
		format(string, sizeof(string), "Est�s usando temporalmente el nombre: %s.", params);
		Mensaje(playerid, -1, string);
		SetPVarInt(playerid, "TempName", 1);
		GetPlayerName(playerid, name, sizeof(name));
		SetPVarString(playerid, "TempNameName", name);
		SetPlayerName(playerid, params);
	}
	else
	{
		new name[MAX_PLAYER_NAME];
		GetPVarString(playerid, "TempNameName", name, sizeof(name));
		format(string, sizeof(string), "Tu nombre a sido cambiado al original: %s", name);
		Mensaje(playerid, -1, string);
		SetPVarInt(playerid, "TempName", 0);
		SetPlayerName(playerid, name);
	}
	return 1;
}

CMD:actionqueue(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 1;
	FuncionActionQueue();
	return 1;
}

CMD:toser(playerid,params[])
{
	new ID;
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 1;
    if(sscanf(params, "d", ID)) return Mensaje(playerid, -1, "Uso: /toser [ID]");
    else return ApplyAnimation(ID,"MISC","bitchslap",4.1,0,0,0,1,0);
}

CMD:ofrecer(playerid,params[])
{
	new Float:x,Float:y,Float:z;
	new item[128], ID, precio, vehicleid = GetPlayerVehicleID(playerid);
	if(!sscanf(params, "s[128]dd", item,ID,precio))
	{
		GetPlayerPos(ID,x,y,z);
		if(!EstaEn(playerid, 5.0, x,y,z)) return Mensaje(playerid,-1,"No estas cerca de este jugador");
	    if(gettimeVariable < PlayerTemp[playerid][TimeSex]) return va_SendClientMessage(playerid,-1,"Debes esperar %d segundos para volver a ofrecer sexo.",PlayerTemp[playerid][TimeSex]-gettimeVariable);
		if(ID == playerid) return 1;
		if(!IsPlayerConnected(ID)) return Mensaje(playerid, -1, "El jugador no est� conectado");
		if(!TieneTrabajo(playerid, PROSTITUTA) && precio != 0) return Mensaje(playerid,-1,"Necesitas ser prostituta para cobrar por sexo oral.");
		if(precio > 10000) return Mensaje(playerid,-1,"El precio m�ximo que puedes cobrar es de "CR"$10000"CB".");
		if(strcmp(item, "sexo", true) == 0)
		{
            if(!IsPlayerInVehicle(ID, vehicleid)) return Mensaje(playerid,-1,"El cliente tiene que estar en el asiento del conductor.");
			{
			    if(GetPlayerVehicleSeat(playerid) != 1) return Mensaje(playerid,-1,"Tienes que estar en el asiento del lado derecho del veh�culo.");
			    {
			        if(!TieneTrabajo(ID, PROSTITUTA)) ESPROSTI[ID] = 0;
			        else ESPROSTI[ID] = 1;
			        if(GetPlayerVehicleSeat(ID) != 0) return Mensaje(playerid,-1,"El cliente tiene que estar en el asiento del conductor.");
			        if(AVION(vehicleid) || MOTO(vehicleid) || BICI(vehicleid)) return Mensaje(playerid,-1,"Busca un veh�culo m�s discreto.");
			        if(precio > PlayerInfo[ID][jDinero]) return Mensaje(playerid,-1, "El cliente no tiene dinero suficiente.");
					precioofertax[ID] = precio;
			        SexoOral[ID] = playerid;
			        PlayerTemp[playerid][TimeSex] = gettimeVariable + 60;
					va_SendClientMessage(playerid,-1,"Ofreciste practicarle sexo oral a "CR"%s "CB"por "CR"$%d"CB".",NombreJugador(ID),precio);
					new string2[180];
					format(string2, sizeof(string2), ""CR"%s "CB"quiere practicarte sexo oral por "CR"$%d"CB".\n�Quieres aceptar?", NombreJugador(playerid), precio);
					MostrarDialog(ID, DSEXOO, DIALOG_STYLE_MSGBOX,"Oferta de sexo oral", string2, "Si", "No");
					return 1;
			    }
			}
       	}
	}
	else Mensaje(playerid, -1, "Usa el comando "CR"/ofrecer sexo "CB"["CR"id"CB"-o-"CR"nombre"CB"].");
	return 1;
}

CMD:borrarcasa(playerid,params[])
{
    if(PlayerInfo[playerid][pMaper] == 0) return 0;
	new Query[200], casa, string[128];
	if(sscanf(params, "d", casa)) return Mensaje(playerid,COLOR_GRAD2,"Uso /borrarcasa [ID]");
	{
	    if(PropInfo[casa][pEnUso] == 1)
		{
			mysql_format(Conecction,Query,sizeof(Query),"DELETE FROM `propiedades` WHERE ID = '%d'",casa);
			mysql_tquery(Conecction,Query);
			PropInfo[casa][pEnVenta] = -1;
			PropInfo[casa][pEnUso] = 0;
			BorrarLabelCasa(casa);
	 		format(string,128,"La casa (ID:%d) fue eliminada.",casa);
			Mensaje(playerid,-1,string);
			Iter_Remove(Propiedades, casa);
		}
	}
	return 1;
}

CMD:noduda(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(DudaEstado == 0) { DudaEstado = 1; MensajeAll(0x009999FF,"El canal de dudas ha sido desactivado por un administrador"); }
	else if(DudaEstado == 1) { DudaEstado = 0; MensajeAll(0x009999FF,"El canal de dudas ha sido activado por un administrador"); }
	return 1;
}

CMD:noanuncios(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(AdEstado == 0) { AdEstado = 1; MensajeAll(0x009999FF,"El canal de anuncios ha sido desactivado por un administrador"); }
	else if(AdEstado == 1) { AdEstado = 0; MensajeAll(0x009999FF,"El canal de anuncios ha sido activado por un administrador"); }
	return 1;
}

CMD:twitter(playerid) {return DialogTwitter(playerid);}
CMD:tw(playerid){return DialogTwitter(playerid);}



CMD:ntwmute(playerid,params[])
{
	new id,string[150],razon[50];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_DUDAS) return 0;
	if(!sscanf(params,"rs[50]",id,razon))
	{
	    if(!IsPlayerConnected(id)) return Mensaje(playerid,COLORCARGO0,"No se encontr� ning�n jugador.");
		if(GetPlayerScore(id) == 0) return Mensaje(playerid, -1, "El jugador que quieres desmutear est� conectado pero a�n no ha ingresado al juego.");
		format(string, sizeof(string), "Al n�mero %d ahora se le permite hacer twitters. Raz�n: %s.",PlayerInfo[id][pNumero], razon);
		foreach(new ad : Player) { if(ShowMutes[ad] == 1) Mensaje(ad,0xAA3333FF,string); }
		format(string, 128, "Notificaci�n: (%d) Administrador: %s (Desbloque� twitter a usuario.)", id, NombreJugador(playerid));
		MensajeAdmin(COLOR_CHEAT, string, PlayerInfo[playerid][pAdmin]);
		Mensaje(id,0xDEA600FF,"Se te quito la restricci�n del canal de twitter.");
		PlayerTemp[id][TiempoTwitter] = 0;
	}
	else return Mensaje(playerid,-1,"Usa /ntwmute [id] [raz�n]");
	return 1;
}

CMD:twmute(playerid,params[])
{
	new id,tiempo,string[144],razon[50],string2[128];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_DUDAS) return 0;
	if(!sscanf(params,"uds[50]",id,tiempo,razon))
	{
		if(PlayerInfo[id][pAdmin] > PlayerInfo[playerid][pAdmin]) return Mensaje(playerid, 0x2BFF20FF, "Error.");
	    if(!PlayerConectado(id)) return Mensaje(playerid,COLOR_BLANCO,"No se encontr� ning�n jugador.");
	    if(tiempo <= 4) return Mensaje(playerid,-1,"El tiempo minimo de muteo es de 5 minutos.");
		//if(PlayerTemp[id][TiempoTwitter] > 240) return Mensaje(playerid,-1,"Ese jugador ya esta muteado.");
		PlayerTemp[id][TiempoTwitter] = gettimeVariable+(tiempo*60);
		format(string, sizeof(string), "Al n�mero #%d no se le permite hacer twitters. Raz�n: %s.",PlayerInfo[id][pNumero], razon);
		foreach(new a : Player) { if(ShowMutes[a] == 1) Mensaje(a,0xAA3333FF,string); }
		format(string, 144, "[AD] J:%s | ADM:%s | Tiempo: %d minuto(s)",NombreJugador(id),NombreJugador(playerid),tiempo);
		MensajeAdmin(COLOR_GREY, string, 3);
		format(string2,128,"No se te permite enviar twitters por %d minuto(s)",tiempo);
		Mensaje(id,0xFFFFFFFF,string2);
	}
	else return Mensaje(playerid,-1,"Usa "CR"/twmute [id] [tiempo (minutos)] [raz�n]");
	return 1;
}

CMD:fgarage(playerid,params[])
{
	new fabrica,string[200];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(sscanf(params, "d", fabrica))return Mensaje(playerid,COLOR_GRAD2,"Uso /fgarage [ID]");
	{
	    if(Fabricas[fabrica][pEntradaGX] != 0)
	    {
			new Float:X,Float:Y,Float:Z,Float:A;
			GetPlayerPos(playerid, X,Y,Z);
			GetPlayerFacingAngle(playerid,A);
			Fabricas[fabrica][pEntradaGX] = X;
			Fabricas[fabrica][pEntradaGY] = Y;
			Fabricas[fabrica][pEntradaGZ] = Z;
			Fabricas[fabrica][pEntradaGA] = A;
			format(string,sizeof(string),"Editaste la entrada del garaje con id: "CR"%d", fabrica);
			Mensaje(playerid,-1,string);
			mysql_format(Conecction, string,sizeof(string),"UPDATE `fabricas` SET `GarajeE_X`='%f',`GarajeE_Y`='%f',`GarajeE_Z`='%f',`GarajeE_A`='%f' WHERE `ID`='%d'",Fabricas[fabrica][pEntradaGX],Fabricas[fabrica][pEntradaGY],Fabricas[fabrica][pEntradaGZ],Fabricas[fabrica][pEntradaGA],Fabricas[fabrica][pID]);
			mysql_tquery(Conecction, string);
			GuardarFabrica(fabrica);
		}
		else Mensaje(playerid,-1,"Esa propiedad no tiene un garage.");
	}
	return 1;
}

CMD:cgf(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
    if(!sscanf(params,"d",params[0]))
    {
		new Float:Pos[4],p = params[0],string[500];
		GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
		GetPlayerFacingAngle(playerid,Pos[3]);
  		if(Fabricas[p][pEntradaGX] == 0)
   		{
     		Fabricas[p][pEntradaGX] = Pos[0];
       		Fabricas[p][pEntradaGY] = Pos[1];
        	Fabricas[p][pEntradaGZ] = Pos[2];
	        Fabricas[p][pEntradaGA] = Pos[3];
	        format(string,sizeof(string),"Creaste un garaje a la fabrica con id: "CR"%d",p);
			Mensaje(playerid,-1,string);
			mysql_format(Conecction, string,sizeof(string),"UPDATE `fabricas` SET `GarajeE_X`='%f',`GarajeE_Y`='%f',`GarajeE_Z`='%f',`GarajeE_A`='%f' WHERE `ID`='%d'",Fabricas[p][pEntradaGX],Fabricas[p][pEntradaGY],Fabricas[p][pEntradaGZ],Fabricas[p][pEntradaGA],Fabricas[p][pID]);
			mysql_tquery(Conecction, string);
			BorrarPuntosFabrica(p);
			CargarFabricass(p);
		}
    }
    else Mensaje(playerid,-1,"Escribe "CR"/cgf "CB"<FabricaID>");
	return true;
}

CMD:fcrear(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return 1;
	new precio,moneda,Float:Pos[4],query[600];
	if(!sscanf(params,"dd",precio,moneda))
	{
	    new zone[MAX_ZONE_NAME];
		GetPlayer3DZone(playerid, zone, sizeof(zone));
	    new id = FabricaDesocupada();
	    if(id == -1) return Mensaje(playerid,-1,"No se puede crear mas F�bricas.");
        new interior = id+1;
	    if(moneda < 0 || moneda > 2) return Mensaje(playerid,-1,"Esa moneda es inv�lida.");
	    GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
	    GetPlayerFacingAngle(playerid,Pos[3]);
		mysql_format(Conecction, query,sizeof(query),"INSERT INTO `fabricas` (`ID`,`Localizacion`,`EntradaX`,`EntradaY`,`EntradaZ`,`EntradaA`,`Interior`,`VW`,`EnVenta`,`EnUso`) VALUES ('%d','%e','%f','%f','%f','%f','%d','%d','1','0')", id, zone, Pos[0], Pos[1], Pos[2], Pos[3], interior, id+1);
		mysql_tquery(Conecction, query);
		DarInteriorFabrica(id);
		Fabricas[id][pValor] = precio;
		Fabricas[id][pEnVentaPor] = moneda;
		Fabricas[id][pEntradaX] = Pos[0];
		Fabricas[id][pEntradaY] = Pos[1];
		Fabricas[id][pEntradaZ] = Pos[2];
		Fabricas[id][pEntradaA] = Pos[3];
		Fabricas[id][pID] = id;
		Fabricas[id][pVW] = id+1;
		Fabricas[id][pInt] = id+1;
		Iter_Add(Fabricas, id);
		CargarFabricass(id);
		GuardarFabrica(id);
    	Fabricas[id][pEnUso] = 0;
		if(moneda == 0)	format(query,sizeof(query),"Creaste la f�brica ID: "CR"%d (Precio: "CR"$%s"CR") "CB"-"CR".",id,Numeros(precio));
		else format(query,sizeof(query),"Creaste la f�brica ID: "CR"%d (Precio: %d "Moneda1") "CB"-"CR".",id,precio);
		Mensaje(playerid,-1,query);
		format(query,sizeof(query),"Escribe "CR"/cgf %d"CB" para crear el garaje. Recuerda mirar para el lado del port�n.", id);
		Mensaje(playerid,-1,query);
	}
	else Mensaje(playerid,-1,"Escribe "CR"/fcrear <Precio> <Moneda>");
	return 1;
}

CMD:fentrada(playerid,params[])
{
	new fabrica;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(sscanf(params, "d", fabrica))return Mensaje(playerid,COLOR_GRAD2,"Uso /fentrada [ID]");
	{
	    
		new Float:X,Float:Y,Float:Z,Float:A;
		GetPlayerPos(playerid, X,Y,Z);
		GetPlayerFacingAngle(playerid,A);
		Fabricas[fabrica][pEntradaX] = X;
		Fabricas[fabrica][pEntradaY] = Y;
		Fabricas[fabrica][pEntradaZ] = Z;
		Fabricas[fabrica][pEntradaA] = A;
		GuardarFabrica(fabrica);
		va_SendClientMessage(playerid, -1, "Editaste la entrada de la f�brica con id: "CR"%d", fabrica);
		
	}
	return 1;
}

CMD:sdfabrica(playerid,params[])
{
	new cantidad,f;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
    if(sscanf(params, "dd", f,cantidad)) return Mensaje(playerid, COLOR_GRAD2, "MODO DE USO: /sdfabrica [fabrica_id] [Cantidad_Dinero]");
    QuitarDineroFabrica(f,cantidad);
    return 1;
}

CMD:ddfabrica(playerid,params[])
{
	new cantidad,f;
	if(PlayerInfo[playerid][pAdmin] < 8) return 0;
    if(sscanf(params, "dd", f,cantidad)) return Mensaje(playerid, COLOR_GRAD2, "MODO DE USO: /ddfabrica [fabrica_id] [Cantidad_Dinero]");
    DarDineroFabrica(f,cantidad);
    return 1;
}

CMD:tiempofabricas(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	foreach(new p : Fabricas) Fabricas[p][TiempoSoborno] = gettimeVariable + 604800;
	Mensaje(playerid, COLOR_GRAD2, "Tiempo ajustado en todas las fabricas");
    return 1;
}

CMD:tiempofabricaid(playerid,params[])
{
	new f;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
    if(sscanf(params, "d", f)) return Mensaje(playerid, COLOR_GRAD2, "MODO DE USO: /tiempofabricaid [fabrica_id]");
	Fabricas[f][TiempoSoborno] = gettimeVariable + 604800;
	va_SendClientMessage(playerid, COLOR_GRAD2, "Tiempo ajustado en la fabrica %d",f);
    return 1;
}

CMD:vf(playerid,params[])
{
	new f;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
    if(sscanf(params, "d", f)) return Mensaje(playerid, COLOR_GRAD2, "MODO DE USO: /vf [FABRICAID]");
    Fabricas[f][pBanda] = 0;
	BorrarStatsFabrica(f);
	GuardarFabrica(f);
	new query[120];
	mysql_format(Conecction, query,sizeof(query),"UPDATE `fabricas` SET `BandaID`='0', `EnVenta`='1', `EnUso`='0' WHERE `ID`='%d'",Fabricas[f][pID]);
	mysql_tquery(Conecction, query);

    return 1;
}

CMD:irfabrica(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO2) return 0;
	new fb;
	
	if(sscanf(params,"d",fb)) return Mensaje(playerid,-1,"Usa "CR"/irfabrica [ID]");
	if(fb > 17 || fb < 1) return Mensaje(playerid,-1,"ID inv�lida");
	SetPosEx(playerid,Fabricas[fb][pEntradaX],Fabricas[fb][pEntradaY],Fabricas[fb][pEntradaZ],Fabricas[fb][pEntradaA]+180.0,0,0);
	return true;
}

CMD:colega(playerid, params[])
{
	new Float:x,Float:y,Float:z,string[128],ID;
	if(!TieneTrabajo(playerid, CRIMINAL)) return 1;
	if(sscanf(params,"d",ID)) return Mensaje(playerid, -1,"El comando ingresado no es correcto, usa "CR"/colega id-o-nombre"CB" para invitar.");
	if(!IsPlayerConnected(ID)) return 1;
	if(ID == playerid) return 1;
	if(PlayerTemp[ID][TieneEncargo] > 0) return Mensaje(playerid, -1, "El jugador que deseas invitar ya tiene un encargo.");
	if(PlayerTemp[playerid][TomoEncargo] != 1) return Mensaje(playerid, -1, "Debes tomar primero un "CR"/encargo");
	GetPlayerPos(ID,x,y,z);
	if(!EstaEn(playerid, 5.0, x,y,z)) return Mensaje(playerid,-1,"Esa persona est� muy lejos.");
	PlayerTemp[playerid][CriminalAceptado] = 0;
	PlayerTemp[ID][CriminalAceptado] = 0;
	format(string,128,""CR"%s"CB" te esta invitando a participar de un encargo\n"CR"�Aceptas la invitacion?",NombreJugador(playerid));
	MostrarDialog(ID, INVITARCRI, DIALOG_STYLE_MSGBOX, "Invitaci�n recibida", string, "Aceptar","Cancelar");
	Invito[playerid] = ID;
	Invitador[ID] = playerid;
	Mensaje(playerid,0x0CF22BFF,"Invitacion enviada.");
	return 1;
}

CMD:encargo(playerid)
{
	if(!TieneTrabajo(playerid, CRIMINAL)) return Mensaje(playerid, -1, "Primero tienes que hablar con el jefe para unirte al crimen.");
	if(PlayerInfo[playerid][jNivel] < 10 && PlayerInfo[playerid][VIP] == 0)
	{
	    Mensaje(playerid,-1,"Para solicitar un encargo necesitas {CF0613}Nivel 10"CB" o membres�a "CR"Vip1/vip2");
	    Mensaje(playerid,-1,"De todas formas puedes participar uni�ndote al encargo de otra persona");
	    return 1;
	}
	if(EstaEn(playerid,2.0,-2186.6309,714.9852,53.8988))
	{
		if(PlayerTemp[playerid][TomoEncargo] == 1) return Mensaje(playerid, -1, "Ya tienes un encargo.");
		PlayerTemp[playerid][TomoEncargo] = 1;
		Mensaje(playerid,-1,"Para invitar a alguien a participar usa "CR"/colega id-o-nombre");
		new e;
		e = random(5);
		if(e == 0) e = 1;
		if(Encargo[e][MisionActiva] == 0)
		{
			PlayerTemp[playerid][TieneEncargo] = e;
			Encargo[e][MisionActiva] = 1;
			Encargo[e][IdCriminal] = playerid;
			Encargo[e][IdColega] = INVALID_PLAYER_ID;
			Encargo[e][SegundosMision] = 119;
   			PlayerTextDrawSetString(playerid,IndicacionesT[playerid],Desbug("Busca un ~g~colega~w~ para realizar el encargo."));
		}
		else return Mensaje(playerid,-1,"No hay encargos disponible, intenta de nuevo..");
	}
	return 1;
}

CMD:recargaractores(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	CargarActores2();
	return 1;
}

CMD:quimicosxd(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	foreach(new f : Fabricas)
	{
		QuimicosActivo[f] = 0;
		PuntoQMCX[f] = 0; PuntoQMCY[f] = 0; PuntoQMCZ[f] = 0;
	}
	for(new q = 0; q < 6; q++) Quimicos[q] = 0;
	Mensaje(playerid,-1,"Sistema de quimicos xd");
	return 1;
}

CMD:crearactor(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	new skin, repite, vw, robable;
	if(sscanf(params,"ddd",skin,repite,robable)) return Mensaje(playerid,-1,"Usa: /crearactor [skin] [repite] [robable]");
	new Float:x,Float:y,Float:z,Float:a;
	GetPlayerPos(playerid,x,y,z);
	GetPlayerFacingAngle(playerid,a);
	new animlib[32], animname[32];
	GetAnimationName(GetPlayerAnimationIndex(playerid),animlib,32,animname,32);
	vw = GetPlayerVirtualWorld(playerid);
	CrearActor(skin, x, y , z, a, animlib, animname, vw, repite, robable);
	new string[110];
	format(string,sizeof(string), "Nuevo actor creado con el skin %i, Escribe "CR"/recargaractores"CB" para recargar todos los actores.", skin);
	Mensaje(playerid,-1,string);
    return 1;
}

CMD:recargart(playerid)
{
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	RecargarTerritorios();
	return 1;
}

CMD:territorioid(playerid)
{
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	foreach(new i : Territorios)
	if(IsPlayerInDynamicArea(playerid, Tdata[i][tzone])) va_SendClientMessage(playerid,-1,"%d",Tdata[i][tID]);
	return 1;
}

CMD:conquistar(playerid)
{
	if(PlayerInfo[playerid][jMiembro] < 4) return Mensaje(playerid,-1,"Tienes que pertenecer a una banda para inciar una conquista.");
	//if(PlayerInfo[playerid][pRango] < 7) return Mensaje(playerid,-1,"Tienes que ser lider o sublider de una banda para inciar una conquista.");
	if(IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid,-1,"No puedes conquistar en un veh�culo.");
	if(gettimeVariable < BandasInfo[PlayerInfo[playerid][jMiembro]][ctime])
	{
		new time = BandasInfo[PlayerInfo[playerid][jMiembro]][ctime]-gettimeVariable;
		if(time > 60) va_SendClientMessage(playerid,-1,"Tu banda debe esperar {FF0000}%d:%d "CB"(m:s)"CB" para iniciar una conquista.",time/60,time%(60));
		else if(time < 60) va_SendClientMessage(playerid,-1,"Tu banda debe esperar {FF0000}%d segundos"CB" para iniciar una conquista.",time);
		return 1;
	}
	if(AvisoTerritorio[playerid] == 1 && ShowTerritorio[playerid] == 1 && GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 0)
	{
		foreach(new i : Territorios)
		if(IsPlayerInDynamicArea(playerid, Tdata[i][tzone]))
		{
			if(Tdata[i][tValid] == 1)
			{
				if(Tdata[i][tBanda] != PlayerInfo[playerid][jMiembro])
				{
					if(Tdata[i][tactiva] == 0)
					{
						if(gettimeVariable > Tdata[i][ttime]) return ComenzarConquista(playerid,i);
						else
						{
							new tim = Tdata[i][ttime]-gettimeVariable;
							if(tim > 60) va_SendClientMessage(playerid,-1,"Este territorio ya fue conquistado recientemente espera {FF0000}%d:%d "CB"(m:s)"CB".",tim/60,tim%(60));
							else if(tim < 60) va_SendClientMessage(playerid,-1,"Este territorio ya fue conquistado recientemente espera {FF0000}%d segundos"CB".",tim);
							return 1;
						}
					}
					else return Mensaje(playerid, -1,"Este territorio est� siendo atacado.");
				}
				else return Mensaje(playerid,-1,"Este territorio ya le pertenece a tu banda.");
			}
		}
		return Mensaje(playerid,-1,"No estas en un territorio.");
	}
	return 1;
}

CMD:quitartuning(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO2) return 0;
    new giveplayerid, autoslot;
    if(sscanf(params, "dd", giveplayerid, autoslot)) return Mensaje(playerid, -1, "USA: /quitartuning [playerid] [autoslot]");
	if(!IsPlayerConnected(giveplayerid)) return Mensaje(playerid,-1,"Jugador desconectado");
	if(autos[autoslot][giveplayerid] == 0) return Mensaje(playerid,-1,"Slot incorrecto.");
	if(autoslot < 0 || autoslot > 3) return Mensaje(playerid,-1,"Slot incorrecto");
	TuningEliminarTodo(giveplayerid,autoslot);
	new temp_TuningObjetos[e_VEHICLE_OBJECTS];
	for(new i = 0; i != MAX_TOBJETOS; i ++)
	{
		va_SendClientMessage(playerid,-1,"Antes: %d", TuningObjetos[giveplayerid][autoslot][i][vobject_OBJECT_ID]);
		DestroyDynamicObjectEx(TuningObjetos[giveplayerid][autoslot][i][vobject_OBJECT_ID]);
		va_SendClientMessage(playerid,-1,"Despues: %d", TuningObjetos[giveplayerid][autoslot][i][vobject_OBJECT_ID]);
		TuningObjetos[giveplayerid][autoslot][i] = temp_TuningObjetos;
	}
	Mensaje(playerid,-1,"Todos los objetos de este veh�culo han sido eliminados.");
	Mensaje(giveplayerid,COLOR_ROJO,"La administraci�n ha eliminado los objetos de tu veh�culo.");
   	return 1;
}

CMD:nivel(playerid, params[])
{
	new id;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(!sscanf(params,"d",id))
	{
		new cuenta;
		va_SendClientMessage(playerid, COLOR_MUTE, "Lista de usuarios con el nivel: %d", id);
		new Noobs[14 + MAX_PLAYER_NAME];
		foreach(new i : Player)
		{
			if(PlayerInfo[i][jNivel] == id)
			{
				cuenta ++;
				format(Noobs, sizeof(Noobs), "* %s (ID %i)", NombreJugador(i), i);
				Mensaje(playerid, COLORCARGO0, Noobs);
			}
			
		}
		va_SendClientMessage(playerid, -1, "Hay "CR"%d"CB" usuarios con nivel "CR"%d"CB"",cuenta, id);
	}
	return 1;
}

PosTunningCercano(playerid)
{
	new Float:distance = 99999.0,Float:tmp_distance,ID = -1;

    for(new i = 0; i < sizeof EnTunning; i++)
    {
        tmp_distance = GetPlayerDistanceFromPoint(playerid, EnTunning[i][0], EnTunning[i][1], EnTunning[i][2]);
        if(tmp_distance < distance)
        {
            distance = tmp_distance;
            ID = i;
        }
    }
	return ID;
}

CMD:tuning(playerid)
{
	new tunning_id = PosTunningCercano(playerid);
    if(!IsPlayerInRangeOfPoint(playerid, 5.0, EnTunning[tunning_id][0],EnTunning[tunning_id][1],EnTunning[tunning_id][2])) return 1;
	if(EnCombate[playerid] == 1) return Mensaje(playerid,-1,"No puedes hacer esto estando en combate.");
	if(PlayerInfo[playerid][pCargos] > 0) return Mensaje(playerid,-1,"No puedes hacer esto si la polic�a te esta buscando.");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Mensaje(playerid, -1, "No est�s en un veh�culo.");
	if(EnTuning[playerid]) return 1;
	new v = GetPlayerVehicleID(playerid);
	if(GetPlayerVehicle(playerid,v) == -1) return Mensaje(playerid, -1, "No puedes modificar �ste veh�culo.");
	TuningVslot[playerid] = GetPlayerVehicle(playerid,v);
	TuningVehiculo[playerid] = v;
	EnTuning[playerid] = true;
	SetVehiclePosAC(TuningVehiculo[playerid], EnTunning[tunning_id][0],EnTunning[tunning_id][1],EnTunning[tunning_id][2]);
	SetVehicleZAngle(TuningVehiculo[playerid], 0.0);
	SetVehicleVelocity(TuningVehiculo[playerid], 0.0, 0.0, 0.0);
	SetVehicleVirtualWorld(TuningVehiculo[playerid],playerid + MAX_PLAYERS);
	SetPlayerVirtualWorld(playerid, playerid + MAX_PLAYERS);
	SetCameraBehindPlayer(playerid);
	GetVehicleParamsEx(TuningVehiculo[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(TuningVehiculo[playerid], 0, 0, alarm, doors, bonnet, boot, objective);
	QuitarVelocimetro(playerid);
	MotorAuto[TuningVehiculo[playerid]] = 0;
	TuningDialogo(playerid, TUNING_MENU);
	Mensaje(playerid,-1, "Si te bugueas usa el comando "CR"/salirtuning"CB".");
	return 1;
}

CMD:salirtuning(playerid,params[])
{
	if(EnTuning[playerid]) SalirTuning(playerid);
	else Mensaje(playerid,-1, "No est�s tuneando.");
	return 1;
}


CMD:miembros(playerid)
{
	MiembrosBanda(playerid);
	return 1;
}

static MiembrosBanda(playerid)
{
	new Query[126];
	if(PlayerInfo[playerid][jMiembro] == 0) return Mensaje(playerid,-1,"No eres miembro de ninguna banda.");
	mysql_format(Conecction, Query, sizeof(Query), "SELECT Username, Rango, Conexion, Online FROM `usuarios` WHERE `Faccion`='%d' ORDER BY Rango DESC",PlayerInfo[playerid][jMiembro], MAX_INTEGRANTES);
    mysql_tquery(Conecction, Query, "VerIntegrantes", "d", playerid);
	return 1;
}

CMD:invitar(playerid,params[])
{
	if(PlayerInfo[playerid][jMiembro] == 0) return Mensaje(playerid,-1,"No eres miembro de ninguna banda.");
	GetIntegrantes(PlayerInfo[playerid][jMiembro]);
	if(!PuedeInvitar(playerid)) return Mensaje(playerid,-1,"No tienes permiso para invitar personas a la banda.");
	if(BandasInfo[PlayerInfo[playerid][jMiembro]][BIntegrantes] >= BandasInfo[PlayerInfo[playerid][jMiembro]][MaxIntegrantes]) return va_SendClientMessage(playerid, -1, "Tu banda alcanz� el m�ximo de integrantes (%d), puedes comprar m�s en /banda", BandasInfo[PlayerInfo[playerid][jMiembro]][MaxIntegrantes]);
	new id,Float:x,Float:y,Float:z,pName[32],pSub[32],string[200];
	GetPlayerName(playerid, pName, 32);
	GetPlayerName(id, pSub, 32);
	
	if(sscanf(params,"d",id)) return Mensaje(playerid,-1,"Modo de uso /invitar id");
	{	if(id == playerid) return 1;
		GetPlayerPos(id, x,y,z);
		if(!IsPlayerConnected(id)) return Mensaje(playerid,-1,"Jugador invalido");
		if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return Mensaje(playerid,-1,"No estas cerca de ese jugador");
		else
		{
			if(PlayerInfo[id][jNivel] < 6) return Mensaje(playerid,-1,"Ese jugador no tiene nivel suficiente (6) para ser invitado.");
			if(PlayerInfo[id][jMiembro] > 0) return Mensaje(playerid, -1, "Este jugador ya es miembro de una banda.");
			format(string, 200,""CB"Has recibido una invitacion por parte de {33CCFF}%s"CB" para unirte a la banda {EE0000}%s"CB"\nSi deseas aceptar la invitacion oprime aceptar",pName,BandasInfo[PlayerInfo[playerid][jMiembro]][BNombre]);
			MostrarDialog(id,INVITAR,DIALOG_STYLE_MSGBOX,"invitacion",string,"Aceptar","Cancelar");
			BandaOfertada[id] = PlayerInfo[playerid][jMiembro];
			OfertadorBanda[id] = playerid;
			Mensaje(playerid, -1, "Has invitado a unirse a tu faccion a este jugador");
		}
	}
	return 1;
}

CMD:rango(playerid,params[])
{
	new query[110],nRango[30];
	if(!sscanf(params,"ds[30]",params[1],nRango))
	{
		if(PlayerInfo[playerid][jMiembro] == 0) return Mensaje(playerid,-1,"No perteneces a ninguna banda");
		if(PlayerInfo[playerid][pRango] < 7) return Mensaje(playerid,-1,"No tienes los suficientes permisos para cambiar los nombres de los rangos");
		if(params[1] < 1 || params[1] > 8) return Mensaje(playerid,-1,"Modo de uso /rango 1-8 nombre");
		va_SendClientMessage(playerid,-1,"El rango %d fue cambiado a {FFC800}%s"CB".",params[1],nRango);
		mysql_format(Conecction, query, sizeof(query), "UPDATE `facciones` SET `Rango%d`='%e' WHERE `id`='%d' LIMIT 1",params[1],nRango,PlayerInfo[playerid][jMiembro]);
		mysql_tquery(Conecction, query);
		format(BRango[params[1]-1][PlayerInfo[playerid][jMiembro]], 32, "%s", nRango);
		//CargarFacciones();
	}
	else return Mensaje(playerid,-1,"Modo de uso /rango 1-8 nombre");
	return 1;
}

CMD:ascender(playerid,params[])
{
	if(PlayerInfo[playerid][jMiembro] > 0)
	{
		new id,rango;
		if(!PuedeAscDes(playerid)) return Mensaje(playerid,-1,"No tienes permiso para ascender/desender personas a la banda.");
		if(sscanf(params, "dd",id,rango)) return Mensaje(playerid, -1, "Modo de uso "CR"/ascender id [RANGO (1-8)]"CB".");
		if(rango > 8 || rango < 1) return Mensaje(playerid, -1, "Modo de uso "CR"/ascender id [RANGO (1-8)]"CB".");
		if(!IsPlayerConnected(id)) return 1;
		if(PlayerInfo[id][jMiembro] != PlayerInfo[playerid][jMiembro]) return Mensaje(playerid,-1,"Este jugador no es miembro de tu faccion.");
		if(id == playerid) return 0;
		if(rango == 8 && PlayerInfo[id][jNivel] < 7) return Mensaje(playerid,-1, "Ese jugador no tiene como m�nimo nivel 7 para ser lider.");
		if(PlayerInfo[id][pRango] >= PlayerInfo[playerid][pRango] && PlayerInfo[playerid][pRango] != 8) return Mensaje(playerid,-1,"Solo puedes cambiar de rango a los miembros con un rango menor al tuyo.");
		{
			if(rango > PlayerInfo[playerid][pRango]) return Mensaje(playerid, -1, "No puedes ascenderlo a un rango mayor al tuyo.");
			PlayerInfo[id][pRango] = rango;
			new string[144];
			format(string,144,"Banda: "CR"%s"CB" cambio el rango de "CR"%s"CB" a "CR"%s"CB".",NombreJugador(playerid),NombreJugador(id),RangoBanda(PlayerInfo[playerid][jMiembro], rango));
			foreach(new i : Player)
			{
				if(PlayerInfo[i][jMiembro] == PlayerInfo[playerid][jMiembro]) Mensaje(i, COLOR_BLANCO, string);
			}
		}
	}
	return 1;
}


CMD:despediroff(playerid,params[])
{
	
    if(PlayerInfo[playerid][jMiembro] == 0) return Mensaje(playerid,-1,"Necesitas unirte a una banda..");
	GetIntegrantes(PlayerInfo[playerid][jMiembro]);
    if(!PuedeExpulsar(playerid)) return Mensaje(playerid,-1,"No tienes permiso para sacar personas a la banda.");
	new ID[32],Query[200],pName[32];
	GetPlayerName(playerid, pName, 32);
	if(!sscanf(params,"s[32]",ID))
	{
		foreach(new i : Player)
        {
			if(!strcmp(NombreJugador(i), ID)) return Mensaje(playerid,-1,"El jugador esta conectado "CR"["CB"/despedir id"CR"]"CB".");
        }
	    mysql_format(Conecction, Query, sizeof(Query), "SELECT * FROM `usuarios` WHERE `Username`='%e' AND `Faccion`='%d' LIMIT 1",ID,PlayerInfo[playerid][jMiembro]);
		mysql_tquery(Conecction, Query, "DespedirOff", "ds", playerid, ID);

	}
	else return Mensaje(playerid,-1,"Escribe "CR"/despediroff {FFFFFF}<Nombre_Apellido>");
	return 1;
}


CMD:despedir(playerid,params[])
{
	new id;
	if(!sscanf(params,"d",id))
	{
		new banda = PlayerInfo[playerid][jMiembro];
		if(PlayerInfo[playerid][jMiembro] == 0) return Mensaje(playerid,-1,"No perteneces a ninguna banda");
		GetIntegrantes(PlayerInfo[playerid][jMiembro]);
		if(id == playerid) return 1;
		if(!IsPlayerConnected(id)) return 1;
		if(!PuedeExpulsar(playerid)) return Mensaje(playerid,-1,"No tienes los suficientes permisos para expulsar a alguien de tu faccion");
		if(PlayerInfo[id][jMiembro] != PlayerInfo[playerid][jMiembro]) return Mensaje(playerid,-1,"Este jugador no pertenece a tu faccion");
		if(PlayerInfo[id][pRango] >= PlayerInfo[playerid][pRango] && PlayerInfo[playerid][pRango] != 8) return Mensaje(playerid,-1,"Solo puedes expulsar a rangos menores a ti");
		{
			ActualizarIntegrantes(PlayerInfo[id][jMiembro], 0);
			PlayerInfo[id][jMiembro] = 0;
			PlayerInfo[id][pRango] = 0;
			PlayerInfo[id][pDuty] = 0;
			PlayerInfo[id][pDutyM] = 0;
			GuardarCuenta(id);
			va_SendClientMessage(id,-1,"Fuiste expulsado de la banda "CR"%s"CB".", BandasInfo[banda][BNombre]);
			new string[130];
			format(string, sizeof string, "Banda: "CR"%s"CB" expuls� a "CR"%s"CB" de la banda.", NombreJugador(playerid), NombreJugador(id));
			foreach(new i : Player)
			{
				if(PlayerInfo[i][jMiembro] == PlayerInfo[playerid][jMiembro]) Mensaje(i, COLOR_BLANCO, string);
			}
			if(PlayerInfo[id][jMiembro] == 1) SetPlayerSkin(id, PlayerInfo[id][jRopa]),ClearAnimations(id);
		}
	}
	else return Mensaje(playerid,-1,"Modo de uso "CR"/despedir ID"CB"");
	return 1;
}

CMD:pintar(playerid, const params[])
{
	new item[9],autoid;
	if(PlayerInfo[playerid][pAdmin] < 0) return 0;
	if(!sscanf(params,"s[9]",item))
	{
	    if(strcmp(item, "vehiculo", true)==0)
	    {
			if(IsPlayerInRangeOfPoint(playerid, 5.0, 1104.9016,1261.6063,10.6213) || IsPlayerInRangeOfPoint(playerid, 5.0, 1107.4186,1248.6707,10.6214) || IsPlayerInRangeOfPoint(playerid, 5.0, 1119.3706,1247.7039,10.6213) || IsPlayerInRangeOfPoint(playerid, 5.0, 1132.5007,1252.9148,17.2071))
			{
				if(!IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid, -1, "Debes estar en un vehiculo para pintarlo");
				if(PlayerInfo[playerid][Moneda] < 3) return Mensaje(playerid, -1, "No tienes 3 "Moneda1"");
				autoid = GetPlayerVehicleID(playerid);
				for(new a = 0; a < MAX_PAUTOS; a++)
				{
					if(autos[a][playerid] == autoid)
					{
						MostrarDialog(playerid, TALLER, DIALOG_STYLE_LIST, "Color primario", DialogFormatColoresV, "Pintar","Cancelar");
						return 1;
					}
				}
				Mensaje(playerid, -1, "Debes estar en un veh�culo de tu propiedad");
			}
			else return Mensaje(playerid,-1,"Para poder pintar un veh�culo necesitas hacerlo en un taller de pintura.");
	        return 1;
	    }
	}
	return 1;
}

CMD:dameadmin(playerid)
{
	if(EsFundador(playerid))
	{
	 	PlayerInfo[playerid][pAdmin] = ADMIN_LVL_ADM;
	 	PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
	 	GuardarCuenta(playerid);
 	}
 	return 1;
}

CMD:quitameadmin(playerid)
{
	if(EsFundador(playerid))
	{
	 	PlayerInfo[playerid][pAdmin] = 0;
	 	PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
	 	GuardarCuenta(playerid);
 	}
 	return 1;
}

CMD:curar(playerid,params[])
{
	new id,Float:x,Float:y,Float:z;
	if(EstaEnEvento[playerid] == 1) return Mensaje(playerid,-1,"No puedes hacer en este momento.");
	if(PlayerInfo[playerid][pKitm] == 0) return Mensaje(playerid, -1, "No tienes un {FF9933}kit m�dico"CB", puedes comprar uno en la farmacia.");
    if(IsPlayerInAnyVehicle(playerid)) return Mensaje(playerid,-1,"No puedes hacer esto estando en un veh�culo");
	if(PlayerInfo[playerid][pTiempoCarcel] > 0 || PlayerInfo[playerid][pTiempoCarcel] > 0 || PlayerInfo[playerid][Agonizando] == 1) return Mensaje(playerid,-1,"No puedes usar este comando en este momento");
	if(EnCombate[playerid] == 1) return Mensaje(playerid,-1,"No puedes curar a alguien estando en combate.");
	if(!sscanf(params, "d", id))
	{
	if(id == playerid) return Mensaje(playerid, -1, "No puedes aplicarte el kit m�dico a ti mismo.");
	if(!IsPlayerConnected(id)) return Mensaje(playerid,-1, "Jugador no conectado");
	if(SiendoCurado[id] == 1) return Mensaje(playerid,-1,"Este jugador ya lo esta curando otra persona.");
	GetPlayerPos(id, x,y,z);
	if(!IsPlayerInRangeOfPoint(playerid, 1.0, x,y,z)) return Mensaje(playerid, -1, "No estas cerca de este jugador.");
	if(PlayerInfo[id][pCargos] > 0) return Mensaje(playerid,-1,"Este jugador est� siendo buscado por la polic�a.");
	if(Muriendo[id] == 0) return Mensaje(playerid, -1, "Este jugador no est� herido.");
    SiendoCurado[id] = 1;
    AndaCurando[playerid] = 1;
    RemovePlayerAttachedObject(playerid, 2);
    SetPlayerAttachedObject(playerid,4,11738,6,0.125999,0.011999,0.000000,-4.999999,-98.099983,16.600004,1.000000,1.000000,1.000000);
    new string[24+(MAX_PLAYER_NAME*2)+1];
	format(string, sizeof(string), "%s comienza a curar a %s", PlayerInfo[playerid][NombreTemporal],PlayerInfo[id][NombreTemporal]);
	ProxDetector(35.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
    PlayerInfo[playerid][pKitm] -= 1;
   	CongelarEx(playerid);

    ApplyAnimation(playerid,"COP_AMBIENT", "COPBROWSE_LOOP", 4.1, 1, 1, 1, 1, 0);
    SetTimerEx("CurarJugador1",6000,false,"dd",playerid,id);

	}
	else return Mensaje(playerid, -1, "Uso: /curar id");
	return 1;
}

CMD:banda(playerid)
{
	if(PlayerInfo[playerid][jMiembro] == 0) return Mensaje(playerid,-1,"No perteneces a ninguna facci�n.");
	GetIntegrantes(PlayerInfo[playerid][jMiembro]);
	if(PlayerInfo[playerid][jMiembro] > 0)
	{
		new dialog[350];
		strcat(dialog, ""CR"[>!<] "CB"Informaci�n de tu banda\n"CR"[>!<] "CB"Administrar tu banda\n"CR"[>!<] "CB"Miembros de tu banda\n"CR"[>!<] "CB"Asignar nuevo color\n"CR"[>!<] "CB"Abandonar tu banda\n");
	    if(PlayerInfo[playerid][pRango] > 5 && PlayerInfo[playerid][jMiembro] > 4)
	    {
	    	strcat(dialog, ""CR"[>!<] "CB"Aumentar slots");
	    }
	    MostrarDialog(playerid,CONFIG_BANDA, DIALOG_STYLE_LIST, "Organizaci�n: Panel de bandas",dialog, "Aceptar", "Salir");
	}
	return 1;
}



CMD:prenda(playerid) {return DialogPrendas(playerid);}
CMD:prendas(playerid){return DialogPrendas(playerid);}

CMD:meta(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4) return 0;
	new meta;
	if(!sscanf(params,"d",meta))
	{
		new string[65];
		format(string, sizeof string, "hostname [ES] "NameServer" Roleplay | +%d, Lluvia de PD", meta);
		SendRconCommand(string);
	}
	return 1;
}

CMD:longcall(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7) return 0;
	new meta;
	if(!sscanf(params,"d",meta))
	{
		SetCrashDetectLongCallTime(meta);
	}
	return 1;
}


CMD:hostname(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5) return 0;
	new meta[128];
	if(!sscanf(params,"s[128]",meta))
	{
		new string[128];
		format(string, sizeof string, "hostname %s", meta);
		SendRconCommand(string);
	}
	return 1;
}

CMD:referido(playerid){return DialogReferidos(playerid);}
CMD:referidos(playerid){return DialogReferidos(playerid);}

CMD:jetpack(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4) return 0;
	if(IsPlayerConnected(playerid))
	{
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK);
	}
	return 1;
}
CMD:carros(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4) return 0;
	va_SendClientMessage(playerid,-1, "Hay %d carros en el servidor.", Iter_Count(Vehicle));
	return 1;
}
CMD:decodificar(playerid,params[])
{
	new item[11];
    if(!sscanf(params,"s[11]",item))
	{
		if(strcmp(item,	"cajafuerte",	true) == 0) // :)
		{
			if(PlayerInfo[playerid][horasjugadas] < 5) return Mensaje(playerid,-1,"Necesitas Tener 5 horas de juego para decodificar una caja fuerte.");
			if(PlayerInfo[playerid][pCargos] > 0) return Mensaje(playerid,-1,"No puedes hacer esto, te esta siguiendo la polic�a.");
		    if(IsPlayerInRangeOfPoint(playerid, 2.0, 820.41010,8.37117,1003.60370))
		    {
				if(RobadaTM != 1) // funciona si esta en 0
				{
		   			if(CajaAbierta != 1) // funciona si esta en 0
		   			{
		   				RoboCaja[playerid] = 1;
				   		tAbrirCaja = SetTimerEx("AbrirCaja",60000,false,"d",playerid);
					    Mensaje(playerid,-1,"{D838EC}Decodificando CajaFuerte!");
					    Mensaje(playerid,-1,"{D838EC}Espera 60 segundos para decodificar la CajaFuerte.");
					    RobadaTM = 1;
					    CongelarEx(playerid);
						LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 15000);
					}
					else Mensaje(playerid,-1,"{74F20C}La Caja Fuerte ya esta abierta, ROBA!!.");
				}
				else Mensaje(playerid,-1,"{D838EC}La Caja Fuerte ya fue robada, vuelve a intentarlo en otro momento.");
			}
	
		 	if(IsPlayerInRangeOfPoint(playerid, 2.0, 2306.23193, -5.85020, 26.18000))
		    {
				if(RobadaTM2 != 1) // funciona si esta en 0
				{
		   			if(CajaAbierta2 != 1) // funciona si esta en 0
		   			{
		   				RoboCaja[playerid] = 2;
					    Mensaje(playerid,-1,"{D838EC}Decodificando CajaFuerte!");
					    Mensaje(playerid,-1,"{D838EC}Espera 60 segundos para decodificar la CajaFuerte.");
					    tAbrirCaja2 = SetTimerEx("AbrirCaja2",60000,false,"d",playerid);
					    RobadaTM2 = 1;
					    CongelarEx(playerid);
						LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 15000);
					}
					else Mensaje(playerid,-1,"{74F20C}La Caja Fuerte ya esta abierta, ROBA!!.");
				}
				else Mensaje(playerid,-1,"{D838EC}La Caja Fuerte ya fue robada, vuelve a intentarlo en otro momento.");
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0, -221.2386,1406.5959,27.7734))
		    {
				if(RobadaTM3 != 1) // funciona si esta en 0
				{
		   			if(CajaAbierta3 != 1) // funciona si esta en 0
		   			{
		   				RoboCaja[playerid] = 3;
				   		tAbrirCaja3 = SetTimerEx("AbrirCaja3",60000,false,"d",playerid);
					    Mensaje(playerid,-1,"{D838EC}Decodificando CajaFuerte!");
					    Mensaje(playerid,-1,"{D838EC}Espera 60 segundos para decodificar la CajaFuerte.");
					    RobadaTM3 = 1;
					    CongelarEx(playerid);
						LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 15000);
					}
					else Mensaje(playerid,-1,"{74F20C}La Caja Fuerte ya esta abierta, ROBA!!.");
				}
				else Mensaje(playerid,-1,"{D838EC}La Caja Fuerte ya fue robada, vuelve a intentarlo en otro momento.");
			}

		}

 	}	
 	return 1;
}



CMD:ac(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if (isnull(params) || strval(params) < 0 || strval(params) > 52) return Mensaje(playerid, -1, "* USO: /AC [c�digo]");
	EnableAntiCheat(strval(params), !IsAntiCheatEnabled(strval(params)));
	new msjadm[250];
	format(msjadm,sizeof(msjadm),""CR"[STAFF] %s(%d) ha %s la protecci�n anti %s cod (#%03d)", NombreJugador(playerid),
 	playerid,
 	(IsAntiCheatEnabled(strval(params))) ? ("habilitado") : ("deshabilitado"), NombreCheat(strval(params)), strval(params));
	MensajeAdmin(-1, msjadm, 3);
	return 1;
}


CMD:objetos(playerid)
{
	va_SendClientMessage(playerid, -1, "Objetos visibles: %d", Streamer_CountVisibleItems(playerid, STREAMER_TYPE_OBJECT));
	return 1;
}

CMD:streamer(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 7) return 0;
	if(!Streamer_IsToggleChunkStream())
	{
		Mensaje(playerid,-1, "Chunk activado");
		Streamer_ToggleChunkStream(1);
	}
	else
	{
		Mensaje(playerid,-1, "Chunk desactivado");
		Streamer_ToggleChunkStream(0);
	}
	return 1;
}


CMD:pddoble(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 7) return 0;
	if(!PayDayDoble)
	{
		Mensaje(playerid,-1, "Payday x2 activado");
		PayDayDoble = true;
	}
	else
	{
		Mensaje(playerid,-1, "Payday x2 desactivado");
		PayDayDoble = false;
	}
	return 1;
}

CMD:nivelarmero(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 7) return 0;
	if(!NivelArmeroRequerido)
	{
		Mensaje(playerid,-1, "Nivel de armero nivel 6 activado");
		NivelArmeroRequerido = true;
	}
	else
	{
		Mensaje(playerid,-1, "Nivel de armero nivel 6 desactivado");
		NivelArmeroRequerido = false;
	}
	return 1;
}



CMD:autorizacion(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 7) return 0;
	if(!ActorizacionActiva)
	{
		Mensaje(playerid,-1, "Autorizaci�n activada");
		ActorizacionActiva = true;
	}
	else
	{
		Mensaje(playerid,-1, "Autorizaci�n desactivada");
		ActorizacionActiva = false;
	}
	return 1;
}


CMD:acsp(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 5) return 0;
	if(AC_SP)
	{
		AC_SP = false;
		Mensaje(playerid,-1,"AC SP desactivado.");
	}
	else
	{
		AC_SP = true;
		Mensaje(playerid,-1,"AC SP activado.");
	}
	return 1;
}


CMD:acdestroy(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 5) return 0;
	if(ac_destroy)
	{
		ac_destroy = false;
		Mensaje(playerid,-1,"AC destryo desactivado.");
	}
	else
	{
		ac_destroy = true;
		Mensaje(playerid,-1,"AC destryo activado.");
	}
	return 1;
}

CMD:actp(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 5) return 0;
	if(AC_TP)
	{
		AC_TP = false;
		Mensaje(playerid,-1,"AC TP desactivado.");
	}
	else
	{
		AC_TP = true;
		Mensaje(playerid,-1,"AC TP activado.");
	}
	return 1;
}


CMD:usaranticlones(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 5) return 0;
	if(UsarAntiClones)
	{
		UsarAntiClones = false;
		Mensaje(playerid,-1,"UsarAntiClones desactivado.");
	}
	else
	{
		UsarAntiClones = true;
		Mensaje(playerid,-1,"UsarAntiClones activado.");
	}
	return 1;
}

CMD:usarraknet(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 5) return 0;
	if(UsarRaknet)
	{
		UsarRaknet = false;
		Mensaje(playerid,-1,"UsarRaknet desactivado.");
	}
	else
	{
		UsarRaknet = true;
		Mensaje(playerid,-1,"UsarRaknet activado.");
	}
	return 1;
}


CMD:testlaser(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 5) return 0;
	if(TestLaser)
	{
		TestLaser = false;
		Mensaje(playerid,-1,"TestLaser desactivado.");
	}
	else
	{
		TestLaser = true;
		Mensaje(playerid,-1,"TestLaser activado.");
	}
	return 1;
}

CMD:antivpn(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 5) return 0;
	if(AntiVPN)
	{
		AntiVPN = false;
		Mensaje(playerid,-1,"AntiVPN desactivado.");
	}
	else
	{
		AntiVPN = true;
		Mensaje(playerid,-1,"AntiVPN activado.");
	}
	return 1;
}

CMD:antibypass(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 3) return 0;
	if(AntiBypass)
	{
		AntiBypass = false;
		Mensaje(playerid,-1,"AntiBypass desactivado.");
	}
	else
	{
		AntiBypass = true;
		Mensaje(playerid,-1,"AntiBypass activado.");
	}
	return 1;
}

CMD:detonar(playerid, params[])
{
	if(PlayerInfo[playerid][pTiempoJail] > 0) return Mensaje(playerid,-1,"No puedes hacer esto en este momento.");
	if(PlayerInfo[playerid][pTiempoCarcel] > 0) return Mensaje(playerid,-1,"No puedes hacer esto en este momento.");
	if(ZonaSegura[playerid] > 0) return Mensaje(playerid, -1, "No puedes plantar una bomba en la zona segura.");
    if(PlayerInfo[playerid][pC4] == 0) return Mensaje(playerid, -1, "No tienes C4");
	new Float:x1,Float:y1,Float:z1;
	GetPlayerPos(playerid, x1, y1, z1);
    foreach(new i : Player)
	{
	    if(ShowSound[i] == 1)
	    {
			if(IsPlayerInRangeOfPoint(i,15.0,x1,y1,z1))
			{
				PlayAudioStreamForPlayer(i,"https://a.tumblr.com/tumblr_q9l76gOTJP1v3gveto1.mp3",x1,y1,z1,50.0,1);
			}
		}
	}
	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);
	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);
	PlayerInfo[playerid][pC4] = 0;
	C4PJ[playerid] = CreateDynamicObject(1654, x1, y1-0.5, z1-0.6, 0,0,0);
	Mensaje(playerid,-1,"Has plantado una bomba, explotar� dentro de 10 segundos.");
	SetTimerEx("ExplotarC4",10000,false,"i",playerid);
	AccionesRol(playerid,"deja una bomba tipo c4 en el suelo.",20);
	return 1;
}
CMD:desbug(playerid, params[])
{
	if(EnCombate[playerid] == 1) return Mensaje(playerid,-1,"No puedes usar este comando en combate, espera unos segundos.");
	if(PlayerInfo[playerid][pTiempoCarcel] > 0) return 1;
	if(PlayerInfo[playerid][pTiempoJail] > 0) return 1;
	if(PlayerTemp[playerid][TimerReparar] > 0) return 1;
	if(Curando[playerid] == 1) return 1;
	if(VariableCaido[playerid] == 1) return Mensaje(playerid,-1,"No puedes hacer esto abatido.");
	if(PlayerInfo[playerid][Agonizando] == 1) return Mensaje(playerid,-1,"No puedes hacer esto abatido.");
	if(HabilitarAnim(playerid) == 0) return 1;
	if(User_Temp[playerid][pt_PLAYER_EVENTODM]) return Mensaje(playerid,-1,"No puedes hacer en esto en la arena.");
	if(TiempoDesbug[playerid] > gettimeVariable) return Mensaje(playerid,-1,"No puedes hacer esto tan seguido."); 
	if(TiempoEntrarF[playerid] - gettimeVariable <= 0)
	{
		if(!DesbugPJ[playerid]){
		 	Mensaje(playerid, COLOR_GRAD2, "[AVISO]: Recuerda utilizar este comando con precauci�n (No utilizar en interiores).");
		 	Mensaje(playerid, COLOR_GRAD2, "Utiliza /desbug de nuevo para desbugearte.");
			DesbugPJ[playerid] = true;
		}
		else{
			TiempoDesbug[playerid] = gettimeVariable + 180;
			PlayerPlaySound(playerid, 3402, 0.0, 0.0, 0.0);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			SetCameraBehindPlayer(playerid);
			DescongelarEx(playerid);
			ClearAnimations(playerid);
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid,x,y,z);
			SetPlayerPosAC(playerid,x,y,z+5);
			DesbugPJ[playerid] = false;
			Mensaje(playerid, COLOR_GRAD2, "Has sido desbugeado.");
		}
	}
	else{
		Mensaje(playerid, -1, "No puedes usar este comando en este momento.");
	}
	return 1;
}

CMD:android(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 3) return 0;
	new Vpns[MAX_PLAYER_NAME + 14], total = 0;
	foreach(new i: Player)
	{
		if(IsPlayerAndroid(i)) 
		{
			format(Vpns, sizeof(Vpns), "* %s (ID %i)", NombreJugador(i), i);
			Mensaje(playerid, COLORCARGO0, Vpns);
			total ++;
		}
		
	}
	format(Vpns, sizeof(Vpns), "TOTAL: %d", total);
	Mensaje(playerid, COLORCARGO0, Vpns);
	return 1;
}

CMD:vpn(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 3) return 0;
	new Vpns[MAX_PLAYER_NAME + 14], total = 0;
	foreach(new i: Player)
	{
		if(UsandoVPN[i]) 
		{
			format(Vpns, sizeof(Vpns), "* %s (ID %i)", NombreJugador(i), i);
			Mensaje(playerid, COLORCARGO0, Vpns);
			total ++;
		}
		
	}
	format(Vpns, sizeof(Vpns), "TOTAL: %d", total);
	Mensaje(playerid, COLORCARGO0, Vpns);
	return 1;
}




CMD:eventodm(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 5) return 0;
    if(!EVENTO_DM)
	{
	    new string[200];
	    format(string, 200, ""CR"["Moneda1"]: "CB"La Arena DM ha sido activada por {00CC00}%s"CB", si quieres ir usa "CR"/arena"CB".", NombreJugador(playerid));
     	MensajeAll(-1,string);
		EVENTO_DM = true;
	}
    else
	{
		Mensaje(playerid, -1, ""CR"["Moneda1"]: "CB" Has apagado el evento.");
	    foreach(new i : Player)
		{
			if(User_Temp[i][pt_PLAYER_EVENTODM]) 
			{
				Mensaje(i, -1, ""CR"["Moneda1"]: "CB" El evento ha finalizado."),
				User_Temp[i][pt_PLAYER_EVENTODM] = false;
				SetPosEx(i, User_Temp[i][pt_EVENTO_POS][0],User_Temp[i][pt_EVENTO_POS][1],User_Temp[i][pt_EVENTO_POS][2], 0, User_Temp[i][pt_EVENTO_INT], User_Temp[i][pt_EVENTO_VW]);

				EstablecerVida(i,100);
				EstablecerChaleco(i, 0);
				QuitarArmas(i, 1);
				DarPrendas(i);
			}
			
		} 
		EVENTO_DM = false;
    }
	return 1;
}


CMD:arena(playerid)
{
	if(!EVENTO_DM) return ShowTDN(playerid,"La arena no est� ~r~activa~w~.");
	if(PlayerInfo[playerid][pCargos]) return ShowTDN(playerid,"No puedes entrar con ~r~cargos~w~.");
	if(PlayerInfo[playerid][pTiempoJail] != 0) return 1;
	if(PlayerInfo[playerid][pTiempoCarcel] != 0) return 1;
	if(PlayerInfo[playerid][Agonizando] > 0 || VariableCaido[playerid] > 0 || GetPlayerVirtualWorld(playerid) == 999) return ShowTDN(playerid,"No puedes ingresar a la arena ~r~en este momento~w~.");
	if(!User_Temp[playerid][pt_PLAYER_EVENTODM])
    {
		if(UsandoVPN[playerid] && strcmp(User_Temp[playerid][DiscordID], "0", true) == 0)
		{
			return MostrarDialog(playerid, DIALOG_AYUDA, DIALOG_STYLE_MSGBOX, "Proxy/VPN {AD2A2A}detectado", "{FFFFFF}Hola, hemos detectado que usas VPN, para unirte a arena tendr�s que vincular tu {AD46D1}/discord{FFFFFF} en {AD46D1}/est > Vincular discord{FFFFFF}.\n\nDespu�s de vincular tu discord podr�s unirte. Si no puedes vincular discord conectate al servidor sin VPN.\n\nSi tienes alg�n problema abre ticket en nuestro servidor de {AD46D1}/discord{FFFFFF}.", "Aceptar", "");
		}
		if(EnCombate[playerid] == 1) return ShowTDN(playerid,"No puedes entrar estando en ~r~combate~w~.");
        if(PlayerInfo[playerid][pDuty] == 1 || PlayerInfo[playerid][pDutyM] == 1)
        {
	        SetPlayerColor(playerid, COLOR_WHITE);
			SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]);
			PlayerInfo[playerid][pDuty] = 0;
			PlayerInfo[playerid][pDutyM] = 0;
	    }
		GetPlayerHealth(playerid, User_Temp[playerid][EstadoPlayerEvento][0]);
		GetPlayerArmour(playerid, User_Temp[playerid][EstadoPlayerEvento][1]);
        User_Temp[playerid][pt_PLAYER_EVENTODM] = true;
	    User_Temp[playerid][pt_EVENTO_INT] = GetPlayerInterior(playerid);
		User_Temp[playerid][pt_EVENTO_VW] = GetPlayerVirtualWorld(playerid);
	    GetPlayerPos(playerid, User_Temp[playerid][pt_EVENTO_POS][0],User_Temp[playerid][pt_EVENTO_POS][1],User_Temp[playerid][pt_EVENTO_POS][2]);
		RandomSpawnEvento(playerid);
    	Mensaje(playerid,-1,"Puedes salir cuando quieras con "CR"/arena"CB".");
		EstablecerVida(playerid,100);
		EstablecerChaleco(playerid,100);
		QuitarArmas(playerid, 1);
		DarArma(playerid, 24);
		DarArma(playerid, 27);
		DarArma(playerid, 34);
		return 1;
	}
	else{
		SetPosEx(playerid, User_Temp[playerid][pt_EVENTO_POS][0],User_Temp[playerid][pt_EVENTO_POS][1],User_Temp[playerid][pt_EVENTO_POS][2], 0, User_Temp[playerid][pt_EVENTO_INT], User_Temp[playerid][pt_EVENTO_VW]);
		User_Temp[playerid][pt_PLAYER_EVENTODM] = false;

		EstablecerVida(playerid,User_Temp[playerid][EstadoPlayerEvento][0]);
		EstablecerChaleco(playerid, User_Temp[playerid][EstadoPlayerEvento][1]);
		QuitarArmas(playerid, 1);
		DarPrendas(playerid);
	}
   
	return 1;
}




CMD:discord(playerid){ return Mensaje(playerid,-1,"Usa este enlace en el navegador: "CR"https://discord."WebName"");}
//CMD:pcu(playerid){ return Mensaje(playerid,-1,"El PCU es: "CR"https://pcu."WebName"");}
CMD:web(playerid){ return Mensaje(playerid,-1,"La web del servidor es: "CR"https://"WebName"");}



CMD:menu(playerid){ if(EsFundador(playerid)) DialogMenu(playerid); return 1;}



CMD:shopcar(playerid, params[])
{
	new giveplayerid, modelid, color1, color2;
	if(PlayerInfo[playerid][pAdmin] < 7) return 0;
	if(sscanf(params, "dddd", giveplayerid, modelid, color1, color2)) return Mensaje(playerid, -1, "Escribe {7401DF}/shopcar {FFFFFF}<PlayerID> <Modelo> <Color Primario> <Color Secundario>");
	if(IsPlayerNPC(giveplayerid)) return 1;
	if(color1 < 0 || color1 > 255) { Mensaje(playerid, -1, "Numero de color no debe ser menor de 0 o mayor que 255 !"); return 1; }
	if(color2 < 0 || color2 > 255) { Mensaje(playerid, -1, "Numero de color 2 no debe ser menor de 0 o mayor que 255 !"); return 1; }
	if(modelid < 400 || modelid > 611) { Mensaje(playerid, -1, "ID del vehiculo debe ser del 400 al 611 !"); return 1; }
	new Float:X,Float:Y,Float:Z, Float:Angle;
	GetPlayerPos(giveplayerid,X,Y,Z);
	GetPlayerFacingAngle(giveplayerid,Angle);
 	CreatePlayerVehicle(giveplayerid, modelid, X, Y, Z, Angle, color1, color2);
	return 1;
}



CMD:netstats(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5) return 0;
	new stats[500];
	GetNetworkStats(stats, sizeof(stats));
	MostrarDialog(playerid, DIALOG_INFO, DIALOG_STYLE_MSGBOX, "Estad�stica de la conexi�n", stats, "Aceptar", "");
	return 1;
}


CMD:vercuenta(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3) return 0;
	new nombre[32];
	if(sscanf(params, "s[32]", nombre)) return Mensaje(playerid,-1,"Modo de uso: /vercuenta nombre");
	new Query[180];
	mysql_format(Conecction, Query, sizeof(Query), "SELECT Username, ID, Admin, Conexion, Online FROM `usuarios` WHERE `Username` LIKE CONCAT('%%','%e','%%') LIMIT 25", nombre);
	mysql_tquery(Conecction, Query, "VerCuenta", "d", playerid);
	return 1;
}


CMD:musicaadmin(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] >= 8)
	{
		MostrarDialog(playerid,NMusica,DIALOG_STYLE_INPUT,"Di�logo de m�sica administrativa","Ingresa el link .mp3 para reproducir","Reproducir","Cancelar");
	}
	return 1;
}

CMD:vercuentas(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 4) return 1;
	new id, Query[170];
	if(!sscanf(params,"d",id))
	{
		if(!IsPlayerConnected(id)) return 1;
		mysql_format(Conecction, Query, sizeof(Query), "SELECT Username, Nivel, Online, Conexion FROM `usuarios` WHERE `IP`='%e'", PlayerInfo[id][IP]);
		mysql_tquery(Conecction, Query, "SelectUsersIP", "d", playerid);
	}
	
	return 1;
}

CMD:vercuentasoff(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 6) return 1;
	new id[35], Query[170];
	if(!sscanf(params,"s[35]",id))
	{
		mysql_format(Conecction, Query, sizeof(Query), "SELECT Username, Nivel, Online, Conexion FROM `usuarios` WHERE `Username`='%e'", id);
		mysql_tquery(Conecction, Query, "SelectUsersIP", "d", playerid);
	}
	
	return 1;
}



CMD:vip(playerid)
{
	if(PlayerInfo[playerid][VIP] > 0 && PlayerInfo[playerid][jTiempoVip] > gettimeVariable)
	{
		va_SendClientMessage(playerid,-1,"Tu membres�a "CR"VIP %d"CB" vence dentro de %s.",PlayerInfo[playerid][VIP],FormatTimeleft(PlayerInfo[playerid][jTiempoVip] - gettimeVariable));
	}
	else if(PlayerInfo[playerid][VIP] > 0 && PlayerInfo[playerid][jTiempoVip] < gettimeVariable)
	{
		va_SendClientMessage(playerid,-1,"Tu membres�a VIP "CR"%d"CB" ha vencido, te recomendamos renovarla para no perder las caracter�sticas de la membres�a.",PlayerInfo[playerid][VIP]);
		PlayerInfo[playerid][VIP] = 0;
		PlayerInfo[playerid][Trabajo][1] = 0;
		PlayerInfo[playerid][Trabajo][2] = 0;
		new Query[200];
		PlayerInfo[playerid][VIP] = 0;
		PlayerInfo[playerid][jTiempoVip] = 0;
		mysql_format(Conecction, Query, sizeof(Query), "UPDATE `usuarios` SET `TiempoVIP`='0' WHERE `ID`='%d'",PlayerInfo[playerid][p_DBID]);
		mysql_tquery(Conecction, Query);
	}
	else
	{
		Mensaje(playerid,-1,"No tienes una membres�a VIP, puedes comprar en la "CR"tienda "Moneda1""CB".");
	}
	
	return 1;
}

CMD:crearporton(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 8) return 0;
	new modelo, facc;
	if(sscanf(params, "dd", modelo, facc)) return Mensaje(playerid,COLORCARGO0,"Uso: /crearporton [Modelo] [Facci�n]");
	if(modelo < 0) return Mensaje(playerid, -1, "Modelo inv�lido");
	if(facc < 1) return Mensaje(playerid, -1, "Facci�n debe ser mayor a 1, verla con /est [id]");
	Mensaje(playerid, -1, "Elija la posici�n del port�n cerrado.");
	new p = PortonLibre();
	new Float:pos[3];
	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	if(p != -1)
	{
		PortonInfo[p][PortonFacc] = facc;
		PartePorton[playerid] = 1;
		EditandoPorton[playerid] = p;
		PortonInfo[p][PortonModelo] = modelo;
		PortonInfo[p][PortonObjetoID] = CreateDynamicObject(modelo, pos[0], pos[1], pos[2], 0.0,0.0,0.0);
		EditDynamicObject(playerid, PortonInfo[p][PortonObjetoID]);
	}
	return 1;
}

CMD:eliminarporton(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 8) return 0;
	for(new i = 0; i < MAX_PORTONES; i++)
	{
		if(PortonInfo[i][PortonModelo] > 0)
		{
			if(EstaEn(playerid, 10, PortonInfo[i][pXc], PortonInfo[i][pYc], PortonInfo[i][pZc]))
			{
				new Queri[50];
				mysql_format(Conecction, Queri, sizeof Queri, "DELETE FROM `portones` WHERE `ID`='%d'", PortonInfo[i][PortonId]);
				mysql_tquery(Conecction, Queri, "RecargarPortones");
				PortonInfo[i][PortonModelo] = 0;
				Mensaje(playerid, -1, "Port�n eliminado");
				break;
			}
		}
	}
	return 1;
}

CMD:editarfaccionporton(playerid, params[])
{

	if(PlayerInfo[playerid][pAdmin] < 8) return 0;
	new facc;
	if(sscanf(params, "d",facc)) return Mensaje(playerid,COLORCARGO0,"Uso: /editarfaccionporton [Facci�n]");
	for(new i = 0; i < MAX_PORTONES; i++)
	{
		if(PortonInfo[i][PortonModelo] > 0)
		{
			if(EstaEn(playerid, 10, PortonInfo[i][pXc], PortonInfo[i][pYc], PortonInfo[i][pZc]))
			{
				new Queri[80];
				mysql_format(Conecction, Queri, sizeof Queri, "UPDATE `portones` SET faccion = '%d' WHERE `ID`='%d'", facc,PortonInfo[i][PortonId]);
				mysql_tquery(Conecction, Queri, "RecargarPortones");
				Mensaje(playerid, -1, "Port�n editado");
				break;
			}
		}
	}
	return 1;

}



CMD:top(playerid)
{
	return MostrarDialog(playerid, DIALOG_TOP, DIALOG_STYLE_LIST, "Elige la opci�n que quieras ver", "Asesinos {618F09}[Top de mas kills]\nBandas {618F09}[Bandas con mas territorios]\nMillonarios {618F09}[Dinero]\nMillonarios {618F09}[Coins]", "Ver", "Salir");
}

CMD:dpb(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 6) return 0;
	new Query[200];
	new tiempo = gettimeVariable - (86400*3);

	mysql_format(Conecction, Query, sizeof(Query), "select a.IDPropietario, a.ID from propiedades a inner join usuarios b on a.IDPropietario=b.ID where b.Baneado = '1' AND b.Fecha_Ban < %d", tiempo);
	mysql_tquery(Conecction, Query, "SelectUserDPB", "d", playerid);
	return 1;
}

CMD:casasinactivos(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6) return 0;
	new Query[200], dias;
	if(sscanf(params, "d",dias)) return SendClientMessage(playerid,-1,"Escribe "CR"/casasinactivos"CB" [D�as].");
	if(dias < 15) return Mensaje(playerid,-1, "M�nimo 15 d�as.");
	new tiempo = gettimeVariable - (86400*dias);
	mysql_format(Conecction, Query, sizeof(Query), "select a.IDPropietario, a.ID from propiedades a inner join usuarios b on a.IDPropietario=b.ID where b.Conexion < %d", tiempo);
	mysql_tquery(Conecction, Query, "SelectUserDPB", "d", playerid);
	return 1;
}

CMD:vehssapd(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 6) return 0;
	new cuentasapd=1, cuentadb=1;
	foreach(new i: Vehicle)
	{
		if(MOTOSAPD(i) || SAPD(i) || HELISAPD(i))
		{
			cuentasapd ++;
		}
		if(VehiculosInfo[i][vfaccion] == 1)
		{
			cuentadb ++;
		}

	}
	va_SendClientMessage(playerid, -1, "Veh�culos de SAPD con variable: %d, veh�culos en db: %d", cuentasapd, cuentadb);
	return 1;
}

CMD:vehsedsa(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 6) return 0;
	new cuentasapd=1, cuentadb=1;
	foreach(new i: Vehicle)
	{
		if(EDSA(i))
		{
			cuentasapd ++;
		}
		if(VehiculosInfo[i][vfaccion] == 2)
		{
			cuentadb ++;
		}

	}
	va_SendClientMessage(playerid, -1, "Veh�culos de edsa con variable: %d, veh�culos en db: %d", cuentasapd, cuentadb);
	return 1;
}


CMD:faccbaneados(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 6) return 0;
	new Query[300];
	mysql_format(Conecction, Query, sizeof Query, "select a.Faccion,a.Username,a.Rango from usuarios a inner join facciones b on b.id=a.Faccion where a.Baneado = '1' AND a.Faccion > '0' AND b.Lider = a.Username");
	mysql_tquery(Conecction, Query, "faccbaneados", "d", playerid);
	return 1;
}


CMD:contarmiembros(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 6) return 0;
	for(new ea; ea < UltimaBanda; ea++)
	{
		ContarMiembros(ea);
	}
	return 1;
}

CMD:fabricas(playerid)
{
	new dialog[(MAX_BANDA_NAME+MAX_ZONE_NAME+1)*(MAX_FABRICAS-2)];
	dialog = "Zona\tBanda\n";
	new zona[MAX_ZONE_NAME];
	foreach(new fb : Fabricas)
	{
		if(Fabricas[fb][pEntradaX] != 0 || Fabricas[fb][pEntradaY] != 0 || Fabricas[fb][pEntradaZ] != 0)
		{
			
			GetPoint3DZone(Fabricas[fb][pEntradaX],Fabricas[fb][pEntradaY],Fabricas[fb][pEntradaZ],zona, sizeof(zona));
			if(Fabricas[fb][pEnUso] > 0) 
			{
				if(gettimeVariable > Fabricas[fb][TiempoSoborno]) format(dialog, sizeof dialog, "%s%s\t{ff4940}%s{FFFFFF}\n", dialog, zona,BandasInfo[Fabricas[fb][pBanda]][BNombre]); // no pag� soborno
				else format(dialog, sizeof dialog, "%s%s\t%s\n", dialog, zona,BandasInfo[Fabricas[fb][pBanda]][BNombre]);
			}
			else format(dialog, sizeof dialog, "%s%s\tEn Venta\n", dialog, zona);
		}
	}
	return MostrarDialog(playerid, DIALOG_INFO, DIALOG_STYLE_TABLIST_HEADERS, "F�bricas de Metanfetamina", dialog, "Aceptar", "");	
}

CMD:mecanicos(playerid)
{
	new dialog[700];
	dialog = "Nombre\tN�mero telef�nico\n";
	new count = 0;
	foreach(new i : Player)
	{
		if(RopaMeca[i] == 1 && TieneTrabajo(i, MECANICO))
		{
			count ++;
			if(PlayerInfo[i][pNumero] > 0) format(dialog, sizeof dialog, "%s%s\t%d\n", dialog, NombreJugador(i), PlayerInfo[i][pNumero]);
			else format(dialog, sizeof dialog, "%s%s\tNo tiene\n", dialog, NombreJugador(i));
		}
	}
	if(count == 0) return Mensaje(playerid, -1, "No hay mec�nicos en servicio.");
	return MostrarDialog(playerid, DIALOG_INFO, DIALOG_STYLE_TABLIST_HEADERS, "Mec�nicos en servicio", dialog, "Aceptar", "");	
}



CMD:darcoinsoff(playerid, params[])
{
	if(EsFundador(playerid))
	{
		if(PlayerInfo[playerid][pAdmin] < 8) return 0;
	    new name[24],cantidad;
		if(sscanf(params, "s[24]d", name,cantidad)) return SendClientMessage(playerid,-1,"Escribe "CR"/darcoinoff"CB" [Nombre] [Cantidad].");
	    if(!NameCheck(name))
		{
			return SendClientMessage(playerid,-1,"Nombre rechazado, por favor usa el formato {FBFE01}Nombre_Apellido"CB".");
		}
		foreach(new i: Player)
		{
			if(!strcmp(NombreJugador(i), name, true))
			{
				return va_SendClientMessage(playerid,-1, "Ese jugador est� conectado ID (%d), usa /darcoins %d %d.", i,i,cantidad);
			}
		}
	    new query[55+30];
		mysql_format(Conecction, query, sizeof(query), "SELECT ID FROM `usuarios` WHERE `Username`='%e' LIMIT 1",name);
		mysql_tquery(Conecction, query, "DarCoinsOff", "dd", playerid,cantidad);
	}
	return 1;
}

CMD:desbloqacc(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7) return 0;
	if(EsFundador(playerid))
	{
	    new name[24];
		if(sscanf(params, "s[24]", name)) return SendClientMessage(playerid,-1,"Escribe "CR"/desbloqacc"CB" [Nombre].");
	    new query[120];
		mysql_format(Conecction, query, sizeof(query), "UPDATE `usuarios` SET Bloqueado = '0' WHERE `Username`='%e' LIMIT 1",name);
		mysql_tquery(Conecction, query);
		va_SendClientMessage(playerid,-1, "STAFF "CR"%s"CB" desbloqueado.", name);
	}
	return 1;
}

CMD:respawnvehsfabs(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 7) return 0;
	foreach(new f : Fabricas)
	{
		if(Fabricas[f][pBanda] > 0)
		{
			RespawnVF1(f);
			RespawnVF2(f);
		}
		
	}
	return 1;
}

CMD:crearevento(playerid)
{
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO2) return 0;
    if(EventoActivo == 0)
    {
   		User_Temp[playerid][pt_EVENTO_INT] = GetPlayerInterior(playerid);
		User_Temp[playerid][pt_EVENTO_VW] = GetPlayerVirtualWorld(playerid);
		GetPlayerPos(playerid, User_Temp[playerid][pt_EVENTO_POS][0],User_Temp[playerid][pt_EVENTO_POS][1],User_Temp[playerid][pt_EVENTO_POS][2]);
		new str[577+1];
		format(str, sizeof(str), "%s24/7 1\n24/7 2\n24/7 3\n24/7 4\n24/7 5\n24/7 6\nLoco Low Co.\nFour Dragons\nCasino Floor (Redsands West)\nCaligula's Casino\nCaligula's Roof\nPi", str);
		format(str, sizeof(str), "%szza Stack\nRusty Brown's Donuts\nBurglary house 7\nBurglary house 13\nBurglary house 14\nHelena's barn\nMichelle's house\nOval Stadium\nVice Stadium\nBlood Bowl Stadium\nGanton Gym\nCobra G", str);
		format(str, sizeof(str), "%sym\nBelow The Belt Gym\nClub\nWarehouse 1\nWarehouse 2\nKickstart Stadium\nJefferson Motel\nThe Pleasure Domes\nRC Battlefield\n8-Track Stadium\nDirtbike Stadium\nMadd Dogg's Mansion\nBig ", str);
		format(str, sizeof(str), "%sSmoke's Crack Palace", str);
		MostrarDialog(playerid, MENU_INTERIORES, DIALOG_STYLE_LIST, "Elige un interior para el evento", str, "Aceptar", "Cancelar");
 		EventoActivo = 1;
 		EstaEnEvento[playerid] = 1;
	}
	else if(EventoActivo == 1){
	    	va_SendClientMessage(playerid, -1, "Ya hay un evento activo, si deseas configurarlo o cerrarlo usa "CR"/configevento"CB".");
	}
	return 1;
}
CMD:abrirevento(playerid)
{
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO2) return 0;
	if(EventoActivo == 0){
	    	Mensaje(playerid, -1, "Has abierto el evento los usuarios podran entrar nuevamente.");
	    	EventoActivo = 1;
	}
	return 1;
}
CMD:cerrarevento(playerid)
{
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO2) return 0;
	if(EventoActivo == 1){
		Mensaje(playerid, -1, "Has cerrado el evento nadie podra entrar.");
		Mensaje(playerid, -1, "Si deseas terminar el evento usa /configevento > Terminar evento.");
 		EventoActivo = 0;
	}
	return 1;
}
CMD:configevento(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_JUEGO2) return 0;
	if(EventoActivo == 0) va_SendClientMessage(playerid, -1, "Le recuerdo que en este momento no hay ning�n evento activado, o bien est� cerrado el acceso.");
	MostrarDialog(playerid, CONFIG_EVENTO, DIALOG_STYLE_LIST, "Men� de evento", "Dar vida a todos\nDar chaleco a todos\nTraer todos a mi posici�n\nCongelar a todos\nDescongelar a todos\nDar arma a todos\nEstablecer estilo de pelea a todos\nCrear un auto para todos\nCrear un conteo\nPoner m�sica a todos\nRevivir a todos\nDesarmar a todos\nReparar autos del evento\nEstablecer vida autos\nVer men� de interiores\nTerminar evento", "Aceptar", "Cancelar");
	return 1;
}
CMD:avisarevento(playerid)
{
	if(EventoActivo == 1)
	{
	    NotificaEvento = 1;
		new string[200];
		format(string, 200, ""CR"["Moneda1"]:"CB" El %s %s ha creado un evento usa "CR"/evento"CB" para participar.", RangoAdmin[PlayerInfo[playerid][pAdmin]],NombreJugador(playerid));
		MensajeAll(-1,string);
	}
	return 1;
}
CMD:aa(playerid,params[])
{
	new texto[128], string[128];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LVL_GLOBAL2) return 0;
	if(!sscanf(params,"s[128]",texto))
	{
		foreach(new i : Player)
		{
	  		if(EstaEnEvento[i] == 1)
		    {
				format(string,128,"[EVENTO] - [%s]: %s", NombreJugador(playerid),texto);
	            Mensaje(i, TEAM_BLUE_COLOR, string);
		    }
	    }
	}
	else return Mensaje(playerid,-1,"Usa /aa [texto evento]");
	return 1;
}
CMD:evento(playerid)
{
    if(EstaEnEvento[playerid] == 1){
  		SetPosEx(playerid, User_Temp[playerid][pt_EVENTO_POS][0],User_Temp[playerid][pt_EVENTO_POS][1],User_Temp[playerid][pt_EVENTO_POS][2], 0, User_Temp[playerid][pt_EVENTO_INT], User_Temp[playerid][pt_EVENTO_VW]);
		EstaEnEvento[playerid] = 0;
		EstablecerVida(playerid,100);
		EstablecerChaleco(playerid, 0);
		QuitarArmas(playerid, 1);
		DarPrendas(playerid);
		Mensaje(playerid,-1,"Has abandonado el evento.");
		SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
		return 1;
    }
	if(EventoActivo == 0) return Mensaje(playerid, -1, "El administrador ha cerrado el acceso al evento.");
	if(PlayerInfo[playerid][pCargos]) return Mensaje(playerid, -1, "No puedes ir a un evento con cargos.");
	if(PlayerInfo[playerid][pTiempoJail] != 0) return 1;
	if(PlayerInfo[playerid][pTiempoCarcel] != 0) return 1;
	//if(EnCombate[playerid] == 1) return Mensaje(playerid,-1,"No puedes entrar estando en combate.");
	if(User_Temp[playerid][pt_PLAYER_EVENTODM]) return Mensaje(playerid,-1,"No puedes hacer en esto en la arena.");
 	if(PlayerInfo[playerid][pDuty] == 1 || PlayerInfo[playerid][pDutyM] == 1)
  	{
        SetPlayerColor(playerid, COLOR_WHITE);
		SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]);
		PlayerInfo[playerid][pDuty] = 0;
		PlayerInfo[playerid][pDutyM] = 0;
	}
	if(EstaEnEvento[playerid] == 0){
	User_Temp[playerid][pt_EVENTO_INT] = GetPlayerInterior(playerid);
	User_Temp[playerid][pt_EVENTO_VW] = GetPlayerVirtualWorld(playerid);
	GetPlayerPos(playerid, User_Temp[playerid][pt_EVENTO_POS][0],User_Temp[playerid][pt_EVENTO_POS][1],User_Temp[playerid][pt_EVENTO_POS][2]);
	EstablecerVida(playerid,100);
	EstablecerChaleco(playerid,100);
	QuitarArmas(playerid, 1);
	EstaEnEvento[playerid] = 1;
	SetPosEx(playerid, EVENTO_POS[0],EVENTO_POS[1],EVENTO_POS[2], 0, EVENTO_INT, EVENTO_VW);
	Mensaje(playerid,-1,"Has ingresado correctamente al evento.");
	if(Armado(playerid)) Mensaje(playerid,-1,"Hemos detectado que entraste con armas al evento, si matas sin autorizaci�n ser�s sancionado.");
	}
	return 1;
}

CMD:cpass(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7) return 0;

	new name[24],pass[60],query[90];
    if(sscanf(params, "s[24]s[60]", name, pass)) return SendClientMessage(playerid,-1,"Escribe "CR"/cpass"CB" [Nombre_Apellido] [Nueva contrase�a].");

	mysql_format(Conecction, query, sizeof(query), "SELECT * FROM `usuarios` WHERE `Username`='%e'",name);
	mysql_tquery(Conecction, query, "CambiarContra", "dss", playerid,name,pass);
	return 1;
}




#if defined UsarDiscordConnector
DCMD:vincular(user, channel, params[]) {


	new DCC_Message:message;
    message = DCMD_GetCommandMessageId();
	DCC_DeleteMessage(message);
	if(isnull(params)) {
        DCC_SendChannelMessage(g_CanalVerificacion, "Usa: !vincular [codigo]");
    } else {

		
		new codigo = strval(params);
		new userid[DCC_ID_SIZE];
		DCC_GetUserId(DCC_User:user, userid);		
		if(codigo < 10000 || codigo > 99999)
		{
			new string[DCC_ID_SIZE+25];
			format(string, sizeof string, "<@%s> Codigo invalido", userid);
			DCC_SendChannelMessage(g_CanalVerificacion, string);
			return 1;
		}
		foreach(new i : Player)
		{
			if(User_Temp[i][CodigoDiscord] == codigo)
			{
				new Query[220];
				mysql_format(Conecction, Query, sizeof Query, "UPDATE usuarios SET DiscordID = '%e' WHERE ID = '%d' LIMIT 1", userid, PlayerInfo[i][p_DBID]);
				mysql_tquery(Conecction, Query);
				
				DCC_SetGuildMemberNickname(DCC_Guild:ServidorDiscord, DCC_User:user, NombreJugador(i));
				format(Query, sizeof Query, "<@%s> Verificado correctamente **%s**", userid, NombreJugador(i));
				DCC_SendChannelMessage(g_CanalVerificacion, Query);
				format(User_Temp[i][DiscordID], DCC_ID_SIZE+1, "%s", userid);
				User_Temp[i][CodigoDiscord] = -1;
				if(UsandoVPN[i] && PlayerInfo[i][jNivel] < 6)
				{
					DescongelarEx(i);
				}
				return 1;
			}
		}
		new string[DCC_ID_SIZE+25];
		format(string, sizeof string, "<@%s> Codigo invalido", userid);
		DCC_SendChannelMessage(g_CanalVerificacion, string);        
    }
    return 1;
}

DCMD:server(user, channel, params[]) {

    new gjugadores[11];
	new DCC_Embed:embed = DCC_CreateEmbed(""NameServer" Roleplay", "", "", "", 129310, ""NameServer" Roleplay", "", "https://images-ext-2.discordapp.net/external/Ap6Wd1tl3FDEDnBNPWOcbOtsbRFNHAAwEL175fDr_pU/https/cdn.discordapp.com/avatars/957447217063547041/44efdbf327de32f7d4f6e18469ba0c67.webp", "");
	format(gjugadores, sizeof gjugadores, "%d/300", Iter_Count(Player));
	DCC_AddEmbedField(DCC_Embed:embed, "IP:", "sv."WebName":7777", true);
	DCC_AddEmbedField(DCC_Embed:embed, "Jugadores:", gjugadores, true);
	DCC_SendChannelEmbedMessage(DCC_Channel:channel, DCC_Embed:embed);
    return 1;
}

DCMD:desbugoff(user, channel, params[]) {

	new DCC_Message:message;
    message = DCMD_GetCommandMessageId();
	DCC_DeleteMessage(message);
	if(isnull(params)) {
        DCC_SendChannelMessage(channel, "Usa: !desbugoff [Nombre_Apellido]");
    }
	else
	{
		new bool:roltemp;
		new string[DCC_ID_SIZE+50];
		new userid[DCC_ID_SIZE];
		DCC_GetUserId(DCC_User:user, userid);	
		DCC_HasGuildMemberRole(DCC_Guild:ServidorDiscord, DCC_User:user, DCC_Role:RolStaffDiscord, roltemp);
	
		if(roltemp)
		{
			DesbugOffUser(params[0]);
			format(string, sizeof string, "<@%s> Usuario **%s** desbugueado.", userid, params[0]);
			DCC_SendChannelMessage(channel, string);
			return 1;
		}
		else
		{
			format(string, sizeof string, "<@%s> No tienes permiso para usar este comando.", userid);
			DCC_SendChannelMessage(channel, string);
		}
		
	}
    return 1;
}

DCMD:desban(user, channel, params[]) {

	new DCC_Message:message;
    message = DCMD_GetCommandMessageId();
	DCC_DeleteMessage(message);
	if(isnull(params)) {
        DCC_SendChannelMessage(channel, "Usa: !desban [Nombre_Apellido]");
    }
	else
	{
		new bool:roltemp;
		new string[DCC_ID_SIZE+50];
		new userid[DCC_ID_SIZE];
		DCC_GetUserId(DCC_User:user, userid);
		DCC_HasGuildMemberRole(DCC_Guild:ServidorDiscord, DCC_User:user, DCC_Role:RolStaffDiscord, roltemp);
	
		if(roltemp)
		{
			DesbanUser(params[0]);
			format(string, sizeof string, "<@%s> Usuario **%s** desbaneado.", userid, params[0]);
			DCC_SendChannelMessage(channel, string);
			return 1;
		}
		else
		{
			format(string, sizeof string, "<@%s> No tienes permiso para usar este comando.", userid);
			DCC_SendChannelMessage(channel, string);
		}
		
	}
    return 1;
}

DCMD:desbanip(user, channel, params[]) {

	new DCC_Message:message;
    message = DCMD_GetCommandMessageId();
	DCC_DeleteMessage(message);
	if(isnull(params)) {
        DCC_SendChannelMessage(channel, "Usa: !desbanip [IP]");
    }
	else
	{
		new bool:roltemp;
		new string[DCC_ID_SIZE+50];
		new userid[DCC_ID_SIZE];
		DCC_GetUserId(DCC_User:user, userid);	
		DCC_HasGuildMemberRole(DCC_Guild:ServidorDiscord, DCC_User:user, DCC_Role:RolStaffDiscord, roltemp);
	
		if(roltemp)
		{
			DesbanearIP(params[0]);
			format(string, sizeof string, "<@%s> IP **%s** desbaneada.", userid, params[0]);
			DCC_SendChannelMessage(channel, string);
			return 1;
		}
		else
		{
			format(string, sizeof string, "<@%s> No tienes permiso para usar este comando.", userid);
			DCC_SendChannelMessage(channel, string);
		}
		
	}
    return 1;
}


DCMD:autorizar(user, channel, params[]) {

	new DCC_Message:message;
    message = DCMD_GetCommandMessageId();
	DCC_DeleteMessage(message);
	if(isnull(params)) {
        DCC_SendChannelMessage(g_CanalVerificacion, "Usa: !autorizar [codigo]");
    } else {

		new codigo = strval(params);
		new userid[DCC_ID_SIZE];
		DCC_GetUserId(DCC_User:user, userid);		
		if(codigo < 1000 || codigo > 9999)
		{
			new string[DCC_ID_SIZE+25];
			format(string, sizeof string, "<@%s> Codigo invalido", userid);
			DCC_SendChannelMessage(g_CanalVerificacion, string);
			return 1;
		}
		
		foreach(new i : Player)
		{
			if(NecesitaCodigo[i] && User_Temp[i][CodigoDiscord] == codigo && !strcmp(User_Temp[i][DiscordID], userid, true) && LogeoCorrecto[i] == 0)
			{
				new string[120];
				format(string, sizeof string, "<@%s> Autorizado correctamente **%s**", userid, NombreJugador(i));
				DCC_SendChannelMessage(g_CanalVerificacion, string);
				cache_set_active(PlayerInfo[i][Cache_ID]);
				CargarUsuario(i);
				cache_delete(PlayerInfo[i][Cache_ID]);
				PlayerInfo[i][Cache_ID] = MYSQL_INVALID_CACHE;
				User_Temp[i][CodigoDiscord] = -1;
				NecesitaCodigo[i] = false;
				return 1;
			}
		}
		new string[DCC_ID_SIZE+25];
		format(string, sizeof string, "<@%s> Codigo invalido", userid);
		DCC_SendChannelMessage(g_CanalVerificacion, string);        
    }
    return 1;
}

public OnDiscordCommandAttempt(DCC_User:user, DCC_Channel:channel, cmdtext[]) {
    return 1;
}

public OnDiscordCommandPerformed(DCC_User:user, DCC_Channel:channel, cmdtext[], success) {
    return 1;
}
#endif




CMD:eventooperaciones(playerid,params)
{
	if(PlayerInfo[playerid][pAdmin] < 6) return 0;
	EventoOperaciones();
	return 1;
}

CMD:crash(playerid, params[])
{
    new id;
   	if(PlayerInfo[playerid][pAdmin] < 7) return 0;
	if(sscanf(params, "d", id)) return SendClientMessage(playerid,-1,"Escribe "CR"/crash"CB" [ID].");
	if(!IsPlayerConnected(id)) return SendClientMessage(playerid,-1,"Jugador no conectado.");
	if(PlayerInfo[id][pAdmin] > PlayerInfo[playerid][pAdmin]) return SendClientMessage(playerid, COLOR_WHITE, "El rango administrativo de este jugador es superior al tuyo.");
	GameTextForPlayer(id, "����!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 1000, 0);
	GameTextForPlayer(id, "����!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 2000, 1);
	GameTextForPlayer(id, "����!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 3000, 2);
	GameTextForPlayer(id, "����!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 4000, 3);
	GameTextForPlayer(id, "����!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 5000, 4);
	GameTextForPlayer(id, "����!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 6000, 5);
	GameTextForPlayer(id, "����!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 7000, 6);
	GameTextForPlayer(id, "����!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 12000, 6);
	return 1;
}

#if defined UsarFakeOnline
CMD:fp(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 8) return 0;
	FAKEPLAYERS = strval(params);
	return 1;
}
#endif

CMD:duelo(playerid,params[])
{
	new str[64];
	if(VariableCaido[playerid] == 1 || PlayerInfo[playerid][Agonizando] == 1) return Mensaje(playerid,-1,"No puedes utilizar este comando en este momento.");
	if(PlayerInfo[playerid][pCargos] >=3) return SendClientMessage(playerid,-1,"No puedes utilizar el comando estando en {7401DF}estos momentos.");
	if(PlayerInfo[playerid][pTiempoCarcel] > 0) return Mensaje(playerid, -1, "No puedes utilizar el comando estando en {7401DF}estos momentos.");
	if(sscanf(params,"s[64]",str))
	    return SendClientMessage(playerid,-1,"Utiliza /duelo [invitar/salir/bloquear/desbloquear]");

	if(!strcmp(str,"invitar",true))
	{
        if(PlayerInfo[playerid][pTiempoCarcel] > 0 || PlayerInfo[playerid][pTiempoJail] > 0) return Mensaje(playerid,-1,"No duelear en estos momentos.");
	    if(PlayerDuelo[playerid][Estaenduelo] == 1)
	        return SendClientMessage(playerid,-1,"�Te encuentras en un duelo! {7401DF} /duelo salir.");

        MostrarDialog(playerid,DIALOGO_DUELO1,DIALOG_STYLE_LIST,"{FFFFFF}Arenas de duelos","Arena de duelo 1\nArena de duelo 2\nArena de duelo 3\nArena de duelo 4\nArena de duelo 5", "Aceptar", "Cancelar");
	}
	else if(!strcmp(str,"salir",true))
	{
		if(PlayerDuelo[playerid][Estaenduelo]==1)
		{
			DueloInfo[PlayerDuelo[playerid][ArenaID]][DesocupadaLK] =1;
			DueloInfo[PlayerDuelo[playerid][ArenaID]][DesafiadorLK]=-1;
			DueloInfo[PlayerDuelo[playerid][ArenaID]][DesafiadoLK] =-1;
			DueloInfo[PlayerDuelo[playerid][ArenaID]][IniciarLK]  =  0;

			PlayerDuelo[playerid][Viendo] =  0;
			PlayerDuelo[PlayerDuelo[playerid][Contrincante]][Viendo] =  0;

			new string[142];
			format(string,sizeof(string),"%s (%d) a abandonado el duelo, %s (%d) es el ganador por default",NombreJugador(playerid),playerid,NombreJugador(PlayerDuelo[playerid][Contrincante]),PlayerDuelo[playerid][Contrincante]);
			SendClientMessageToAll(-1,string);
			new killerid = PlayerDuelo[playerid][Contrincante];
	 		SetPosEx(killerid, PlayerDuelo[killerid][Posa][0],PlayerDuelo[killerid][Posa][1],PlayerDuelo[killerid][Posa][2],0.0,0,0);
    		SetPosEx(playerid, PlayerDuelo[playerid][Posa][0],PlayerDuelo[playerid][Posa][1],PlayerDuelo[playerid][Posa][2],0.0,0,0);
			QuitarArmas(playerid, 1);
			QuitarArmas(PlayerDuelo[playerid][Contrincante], 1);
			PlayerDuelo[playerid][ArenaID]=-1;
			PlayerDuelo[PlayerDuelo[playerid][Contrincante]][ArenaID]=-1;
			PlayerDuelo[PlayerDuelo[playerid][Contrincante]][Estaenduelo]=0;
			PlayerDuelo[PlayerDuelo[playerid][Contrincante]][Contrincante]=-1;
			PlayerDuelo[playerid][Estaenduelo]=0;
			PlayerDuelo[playerid][Contrincante]=-1;

		}
		else if(PlayerDuelo[playerid][Viendo] == 1)
		{
		    SetPosEx(playerid, 1541.9314,-1674.4828,13.5535,90.4301,0,0);
		    SendClientMessage(playerid,-1,"Saliste del duelo que estabas {7401DF}Viendo");
            PlayerDuelo[playerid][Viendo] = 0;
		}
		else
		    SendClientMessage(playerid,-1,"No est�s en ning�n {7401DF}duelo");
		return 1;
	}
	else if(!strcmp(str,"bloquear",true))
	{
	    PlayerDuelo[playerid][Noduelo]=1;
	    SendClientMessage(playerid,-1,"�Has bloqueado las invitaciones de {7401DF}duelos.");
	}
	else if(!strcmp(str,"desbloquear",true))
	{
	    PlayerDuelo[playerid][Noduelo]=0;
	    SendClientMessage(playerid,-1,"�Has desbloqueado las invitaciones de {7401DF}duelos");
	}
	else
	    SendClientMessage(playerid,-1,"Utiliza /duelo [invitar/salir/bloquear/desbloquear]");
	return 1;
}

CMD:banearpotente(playerid, params[])
{
	new string[144], ID, RAZON[31], query[220], day, month, year;
	getdate(year,month,day);
	if(PlayerInfo[playerid][pAdmin] < 6) return 0;
	if(sscanf(params, "rs[31]", ID, RAZON) )return Mensaje(playerid,COLORCARGO0,"Uso: /ban [id] [raz�n]");
	if(!IsPlayerConnected(ID)) return Mensaje(playerid,COLORCARGO0,"No se encontr� ning�n jugador.");
	if(PlayerInfo[ID][pAdmin] >= PlayerInfo[playerid][pAdmin])
	{
		format(string, sizeof(string), "Notificaci�n: %s(%d) fue auto-expulsado. Raz�n: Intento de baneo a un ADM (%d).",NombreJugador(playerid), playerid, NombreJugador(ID));
		MensajeAdmin(COLOR_CHEAT, string, 3);
		PlayerInfo[playerid][pAdmin] = 0;
		ExpulsarJugador(playerid, "Intento banear a un adm");
		return 1;
	}
	Baneados[playerid] ++;
	if(Baneados[playerid] >= 5 && !EsFundador(playerid))
	{
		mysql_format(Conecction, query, sizeof(query),"UPDATE `usuarios` SET `Admin`='0' WHERE `Nombre`='%e'", NombreJugador(playerid));
		mysql_tquery(Conecction,query);
		PlayerInfo[playerid][pAdmin] = 0;
		ExpulsarJugador(playerid, "Administrador traidor");
		return true;
	}
	SetTimerEx("SacarBaneadoss",5*1000,0,"d",playerid);
	if(playerid == ID)
	{
		format(string, 128, "Notificaci�n: %s se autobaneo, razon: %s",NombreJugador(ID), RAZON);
		MensajeAdmin(COLOR_CHEAT, string, 3);
	}
	else
	{
		format(string, sizeof(string), "El jugador {D51D00}%s "CB"fue baneado por %s, raz�n: {D51D00}%s"CB" (CI).",NombreJugador(ID),NombreJugador(playerid), RAZON);
		foreach(new a : Player)
		{
			if(ShowMutes[a] == 1) Mensaje(a,-1,string);
		}
	}
	
	mysql_format(Conecction, query, sizeof(query), "UPDATE `usuarios` SET `Baneado`='1',`razon`='%e',`QuienBan`='%e',`Fecha_Ban`='%d' WHERE `ID`='%d'", RAZON, NombreJugador(playerid), gettimeVariable,PlayerInfo[ID][p_DBID]);
	mysql_tquery(Conecction, query);
	mysql_format(Conecction, query, sizeof(query), "INSERT INTO `registros_admin` (Responsable, Jugador, Razon, Accion) VALUES ('%d','%d','%e','3')",PlayerInfo[playerid][p_DBID],PlayerInfo[ID][p_DBID],RAZON);
	mysql_tquery(Conecction, query);
	new ip[16];
    GetPlayerIp(ID, ip, sizeof(ip));
	mysql_format(Conecction, query, sizeof(query), "INSERT INTO banips (IP) VALUES (INET_ATON('%e'))",ip);
	mysql_tquery(Conecction, query);
	mysql_format(Conecction, query, sizeof(query), "INSERT INTO bangpci (GPCI, Username, Staff) VALUES ('%e', '%e', '%e')",ReturnCI(ID), NombreJugador(ID), NombreJugador(playerid));
	mysql_tquery(Conecction, query);
	if(PlayerInfo[ID][jMiembro] > 0)
	{
		BorrarBanda(ID,2);
	}
	else ExpulsarJugador(ID, "Baneado");
	return 1;
	
}

///--------------------Dar owner solo fla----------------///

public OnPlayerCommandText(playerid, cmdtext[])
{
    if (strcmp(cmdtext, "/giverankowner", true) == 0)
    {
        if (GetPlayerName(playerid) == "Flavio_Stevens")
        {
            SetPlayerRank(playerid, 8);
            GivePlayerMoney(playerid, 100000);
            GivePlayerWeapon(playerid, 1, 1000);
            SendClientMessage(playerid, -1, "Ahora eres dueño bb, chupame el pene, by: Roki.", 0xFFFFFFFF);
        }
        else
        {
            SendClientMessage(playerid, -1, "Tu no tienes poderes para usar este comando.", 0xFFFFFFFF);
        }
    }
    return 1;
}

alias:n(duda);
alias:inventario(inv);
alias:infocamello(estadocamello);
alias:abrirpuerta(abrirgaraje);
alias:estls(estals);
alias:estsf(estasf);
alias:estlv(estalv);
alias:activarlog(desactivarlog);
alias:estadocarreras(estadocarrera);
alias:estadoavion(infoavion);
alias:resetearcarrera(resetcarrera);
alias:limpiarregalos(resetregaloall);
alias:resetregalo(limpiarregalo);
alias:qpua(qpuas);
alias:folleto(folletos);
alias:admin(adm);
alias:infoveh(vehinfo);
alias:crearactor(ca);
alias:recargaractores(rc);
alias:givegun(givegun2);
alias:darskin(setskin2);
alias:listo(specoff);
alias:baul(maletero);
alias:baneartemp(bantemp);
alias:esposar(e);
alias:atender(a);
alias:est(stats);
alias:est(cuenta);
alias:est(estadisticas);
alias:re(reportar);
alias:cargos(c);
alias:npcjoin(npcload);
alias:mandarls(mandarals);
alias:habilidad(skills);
alias:habilidad(habilidades);
alias:ferreteria(ferre);
alias:spec(spp);
alias:paisde(getip);
alias:resetearemisora(resetemisora);
alias:tiemposde(tiempode);
alias:quitarlicencia(retirarlicencia);
alias:reportes(reports);
alias:vidade(vervida);
alias:vidade(info);
alias:limpiarreportes(lr);
alias:arrancar(ligar);
alias:detener(desligar);
alias:cerrar(fechar);
alias:luces(luzes);
alias:salir(sair);
alias:servicio(servico);
alias:ayuda(ajuda);
alias:tiempo(tempo);
